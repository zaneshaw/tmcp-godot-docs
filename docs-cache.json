{
    "time": 1697860072685,
    "version": 2,
    "index": {
        "about": {
            "introduction": {
                "url": "https://docs.godotengine.org/en/4.1/about/introduction.html",
                "title": "Introduction",
                "blurb": "<p>Welcome to the official documentation of <strong>Godot Engine</strong>, the free and open source\ncommunity-driven 2D and 3D game engine! Behind this mouthful, you will find a\npowerful yet user-friendly tool that you can use to develop any kind of game,\nfor any platform and with no usage restriction whatsoever.</p><p>This page gives a broad overview of the engine and of this documentation,\nso that you know where to start if you are a beginner or\nwhere to look if you need information on a specific feature.</p>",
                "description": null
            },
            "faq": {
                "url": "https://docs.godotengine.org/en/4.1/about/faq.html",
                "title": "Frequently asked questions",
                "blurb": "",
                "description": null
            },
            "troubleshooting": {
                "url": "https://docs.godotengine.org/en/4.1/about/troubleshooting.html",
                "title": "Troubleshooting",
                "blurb": "<p>This page lists common issues encountered when using Godot and possible solutions.</p>",
                "description": null
            },
            "list_of_features": {
                "url": "https://docs.godotengine.org/en/4.1/about/list_of_features.html",
                "title": "List of features",
                "blurb": "<p>This page aims to list <strong>all</strong> features currently supported by Godot.</p>",
                "description": null
            },
            "docs_changelog": {
                "url": "https://docs.godotengine.org/en/4.1/about/docs_changelog.html",
                "title": "Documentation changelog",
                "blurb": "<p>The documentation is continually being improved. New releases\ninclude new pages, fixes and updates to existing pages, and many updates\nto the <a class=\"reference internal\" href=\"../classes/index.html#doc-class-reference\"><span class=\"std std-ref\">class reference</span></a>. Below is a list of new pages\nadded since version 3.0.</p>",
                "description": null
            },
            "release_policy": {
                "url": "https://docs.godotengine.org/en/4.1/about/release_policy.html",
                "title": "Godot release policy",
                "blurb": "<p>Godot's release policy is in constant evolution. The description below\nprovides a general idea of what to expect, but what will actually\nhappen depends on the choices of core contributors and the needs of the\ncommunity at a given time.</p>",
                "description": null
            },
            "complying_with_licenses": {
                "url": "https://docs.godotengine.org/en/4.1/about/complying_with_licenses.html",
                "title": "Complying with licenses",
                "blurb": "",
                "description": null
            }
        },
        "getting_started": {
            "introduction": {
                "introduction_to_godot": {
                    "url": "https://docs.godotengine.org/en/4.1/getting_started/introduction/introduction_to_godot.html",
                    "title": "Introduction to Godot",
                    "blurb": "<p>This article is here to help you figure out whether Godot might be a good fit\nfor you. We will introduce some broad features of the engine to give you a feel\nfor what you can achieve with it and answer questions such as \"what do I need to\nknow to get started?\".</p><p>This is by no means an exhaustive overview. We will introduce many more features\nin this getting started series.</p>",
                    "description": null
                },
                "key_concepts_overview": {
                    "url": "https://docs.godotengine.org/en/4.1/getting_started/introduction/key_concepts_overview.html",
                    "title": "Overview of Godot's key concepts",
                    "blurb": "<p>Every game engine revolves around abstractions you use to build your\napplications. In Godot, a game is a <strong>tree</strong> of <strong>nodes</strong> that you group\ntogether into <strong>scenes</strong>. You can then wire these nodes so they can communicate\nusing <strong>signals</strong>.</p><p>These are the four concepts you will learn here. We're going to look at them\nbriefly to give you a sense of how the engine works. In the getting started\nseries, you will get to use them in practice.</p>",
                    "description": null
                },
                "first_look_at_the_editor": {
                    "url": "https://docs.godotengine.org/en/4.1/getting_started/introduction/first_look_at_the_editor.html",
                    "title": "First look at Godot's editor",
                    "blurb": "<p>This page will give you a brief overview of Godot's interface. We're going to\nlook at the different main screens and docks to help you situate yourself.</p>",
                    "description": null
                },
                "learning_new_features": {
                    "url": "https://docs.godotengine.org/en/4.1/getting_started/introduction/learning_new_features.html",
                    "title": "Learning new features",
                    "blurb": "<p>Godot is a feature-rich game engine. There is a lot to learn about it. This page\nexplains how you can use the online manual, built-in code reference, and join\nonline communities to learn new features and techniques.</p>",
                    "description": null
                },
                "godot_design_philosophy": {
                    "url": "https://docs.godotengine.org/en/4.1/getting_started/introduction/godot_design_philosophy.html",
                    "title": "Godot's design philosophy",
                    "blurb": "<p>Now that you've gotten your feet wet, let's talk about Godot's design.</p><p><strong>Every game engine is different and fits different needs.</strong>\nNot only do they offer a range of features, but the design of each engine\nis unique. This leads to different workflows and different ways to form\nyour games' structures. This all stems from their respective design philosophies.</p><p>This page is here to help you understand how Godot works, starting\nwith some of its core pillars. It is not a list of available features, nor\nis it an engine comparison. To know if any engine can be a good fit for\nyour project, you need to try it out for yourself and\nunderstand its design and limitations.</p><p>Please watch\n<a class=\"reference external\" href=\"https://www.youtube.com/watch?v=KjX5llYZ5eQ\">Godot explained in 5 minutes</a>\nif you're looking for an overview of the engine's features.</p>",
                    "description": null
                }
            },
            "step_by_step": {
                "nodes_and_scenes": {
                    "url": "https://docs.godotengine.org/en/4.1/getting_started/step_by_step/nodes_and_scenes.html",
                    "title": "Nodes and Scenes",
                    "blurb": "<p>In <a class=\"reference internal\" href=\"../introduction/key_concepts_overview.html#doc-key-concepts-overview\"><span class=\"std std-ref\">Overview of Godot's key concepts</span></a>, we saw that a Godot game is a tree of\nscenes and that each scene is a tree of nodes. In this lesson, we explain a bit\nmore about them. You will also create your first scene.</p>",
                    "description": null
                },
                "instancing": {
                    "url": "https://docs.godotengine.org/en/4.1/getting_started/step_by_step/instancing.html",
                    "title": "Creating instances",
                    "blurb": "<p>In the previous part, we saw that a scene is a collection of nodes organized in\na tree structure, with a single node as its root. You can split your project\ninto any number of scenes. This feature helps you break down and organize your\ngame's different components.</p><p>You can create as many scenes as you'd like and save them as files with the\n<code class=\"docutils literal notranslate\"><span class=\"pre\">.tscn</span></code> extension, which stands for \"text scene\". The <code class=\"docutils literal notranslate\"><span class=\"pre\">label.tscn</span></code> file from\nthe previous lesson was an example. We call those files \"Packed Scenes\" as they\npack information about your scene's content.</p><p>Here's an example of a ball. It's composed of a <a class=\"reference internal\" href=\"../../classes/class_rigidbody2d.html#class-rigidbody2d\"><span class=\"std std-ref\">RigidBody2D</span></a> node as its root named Ball, which allows the ball to fall\nand bounce on walls, a <a class=\"reference internal\" href=\"../../classes/class_sprite2d.html#class-sprite2d\"><span class=\"std std-ref\">Sprite2D</span></a> node, and a\n<a class=\"reference internal\" href=\"../../classes/class_collisionshape2d.html#class-collisionshape2d\"><span class=\"std std-ref\">CollisionShape2D</span></a>.</p><p>Once you saved a scene, it works as a blueprint: you can reproduce it in other\nscenes as many times as you'd like. Replicating an object from a template like\nthis is called <strong>instancing</strong>.</p><p>As we mentioned in the previous part, instanced scenes behave like a node: the\neditor hides their content by default. When you instance the Ball, you only see\nthe Ball node. Notice also how each duplicate has a unique name.</p><p>Every instance of the Ball scene starts with the same structure and properties\nas <code class=\"docutils literal notranslate\"><span class=\"pre\">ball.tscn</span></code>. However, you can modify each independently, such as changing\nhow they bounce, how heavy they are, or any property exposed by the source\nscene.</p>",
                    "description": null
                },
                "scripting_languages": {
                    "url": "https://docs.godotengine.org/en/4.1/getting_started/step_by_step/scripting_languages.html",
                    "title": "Scripting languages",
                    "blurb": "<p>This lesson will give you an overview of the available scripting languages in\nGodot. You will learn the pros and cons of each option. In the next part, you\nwill write your first script using GDScript.</p><p><strong>Scripts attach to a node and extend its behavior</strong>. This means that scripts\ninherit all functions and properties of the node they attach to.</p><p>For example, take a game where a Camera2D node follows a ship. The Camera2D node\nfollows its parent by default. Imagine you want the camera to shake when the player\ntakes damage. As this feature is not built into Godot, you would attach a script\nto the Camera2D node and code the shake.</p>",
                    "description": null
                },
                "scripting_first_script": {
                    "url": "https://docs.godotengine.org/en/4.1/getting_started/step_by_step/scripting_first_script.html",
                    "title": "Creating your first script",
                    "blurb": "<p>In this lesson, you will code your first script to make the Godot icon turn in\ncircles using GDScript. As we mentioned <a class=\"reference internal\" href=\"../introduction/index.html#toc-learn-introduction\"><span class=\"std std-ref\">in the introduction</span></a>, we assume you have programming foundations.\nThe equivalent C# code has been included in another tab for convenience.</p>",
                    "description": null
                },
                "scripting_player_input": {
                    "url": "https://docs.godotengine.org/en/4.1/getting_started/step_by_step/scripting_player_input.html",
                    "title": "Listening to player input",
                    "blurb": "<p>Building upon the previous lesson <a class=\"reference internal\" href=\"scripting_first_script.html#doc-scripting-first-script\"><span class=\"std std-ref\">Creating your first script</span></a>, let's look\nat another important feature of any game: giving control to the player.\nTo add this, we need to modify our <code class=\"docutils literal notranslate\"><span class=\"pre\">sprite_2d.gd</span></code> code.</p><p>You have two main tools to process the player's input in Godot:</p><p>We're going to use the <code class=\"docutils literal notranslate\"><span class=\"pre\">Input</span></code> singleton here as we need to know if the player\nwants to turn or move every frame.</p><p>For turning, we should use a new variable: <code class=\"docutils literal notranslate\"><span class=\"pre\">direction</span></code>. In our <code class=\"docutils literal notranslate\"><span class=\"pre\">_process()</span></code>\nfunction, replace the <code class=\"docutils literal notranslate\"><span class=\"pre\">rotation</span> <span class=\"pre\">+=</span> <span class=\"pre\">angular_speed</span> <span class=\"pre\">*</span> <span class=\"pre\">delta</span></code> line with the\ncode below.</p><p>Our <code class=\"docutils literal notranslate\"><span class=\"pre\">direction</span></code> local variable is a multiplier representing the direction in\nwhich the player wants to turn. A value of <code class=\"docutils literal notranslate\"><span class=\"pre\">0</span></code> means the player isn't pressing\nthe left or the right arrow key. A value of <code class=\"docutils literal notranslate\"><span class=\"pre\">1</span></code> means the player wants to turn\nright, and <code class=\"docutils literal notranslate\"><span class=\"pre\">-1</span></code> means they want to turn left.</p><p>To produce these values, we introduce conditions and the use of <code class=\"docutils literal notranslate\"><span class=\"pre\">Input</span></code>. A\ncondition starts with the <code class=\"docutils literal notranslate\"><span class=\"pre\">if</span></code> keyword in GDScript and ends with a colon. The\ncondition is the expression between the keyword and the end of the line.</p><p>To check if a key was pressed this frame, we call <code class=\"docutils literal notranslate\"><span class=\"pre\">Input.is_action_pressed()</span></code>.\nThe method takes a text string representing an input action and returns <code class=\"docutils literal notranslate\"><span class=\"pre\">true</span></code>\nif the action is pressed, <code class=\"docutils literal notranslate\"><span class=\"pre\">false</span></code> otherwise.</p><p>The two actions we use above, \"ui_left\" and \"ui_right\", are predefined in every\nGodot project. They respectively trigger when the player presses the left and\nright arrows on the keyboard or left and right on a gamepad's D-pad.</p><p>Finally, we use the <code class=\"docutils literal notranslate\"><span class=\"pre\">direction</span></code> as a multiplier when we update the node's\n<code class=\"docutils literal notranslate\"><span class=\"pre\">rotation</span></code>: <code class=\"docutils literal notranslate\"><span class=\"pre\">rotation</span> <span class=\"pre\">+=</span> <span class=\"pre\">angular_speed</span> <span class=\"pre\">*</span> <span class=\"pre\">direction</span> <span class=\"pre\">*</span> <span class=\"pre\">delta</span></code>.</p><p>If you run the scene with this code, the icon should rotate when you press\n<kbd class=\"kbd docutils literal notranslate\">Left</kbd> and <kbd class=\"kbd docutils literal notranslate\">Right</kbd>.</p>",
                    "description": null
                },
                "signals": {
                    "url": "https://docs.godotengine.org/en/4.1/getting_started/step_by_step/signals.html",
                    "title": "Using signals",
                    "blurb": "<p>In this lesson, we will look at signals. They are messages that nodes emit when\nsomething specific happens to them, like a button being pressed. Other nodes can\nconnect to that signal and call a function when the event occurs.</p><p>Signals are a delegation mechanism built into Godot that allows one game object to\nreact to a change in another without them referencing one another. Using signals\nlimits <a class=\"reference external\" href=\"https://en.wikipedia.org/wiki/Coupling_(computer_programming)\">coupling</a> and keeps your\ncode flexible.</p><p>For example, you might have a life bar on the screen that represents the\nplayer's health. When the player takes damage or uses a healing potion, you want\nthe bar to reflect the change. To do so, in Godot, you would use signals.</p><p>We will now use a signal to make our Godot icon from the previous lesson\n(<a class=\"reference internal\" href=\"scripting_player_input.html#doc-scripting-player-input\"><span class=\"std std-ref\">Listening to player input</span></a>) move and stop by pressing a button.</p>",
                    "description": null
                }
            },
            "first_2d_game": {
                "01.project_setup": {
                    "url": "https://docs.godotengine.org/en/4.1/getting_started/first_2d_game/01.project_setup.html",
                    "title": "Setting up the project",
                    "blurb": "<p>In this short first part, we'll set up and organize the project.</p><p>Launch Godot and create a new project.</p><p>When creating the new project, you only need to choose a valid <em>Project Path</em>. You can leave the other default settings alone.</p><p>Your project folder should look like this.</p><p>This game is designed for portrait mode, so we need to adjust the size of the\ngame window. Click on <em>Project -&gt; Project Settings</em> to open the project settings\nwindow and in the left column, open the <em>Display -&gt; Window</em> tab. There, set\n\"Viewport Width\" to <code class=\"docutils literal notranslate\"><span class=\"pre\">480</span></code> and \"Viewport Height\" to <code class=\"docutils literal notranslate\"><span class=\"pre\">720</span></code>.</p><p>Also, under the <strong>Stretch</strong> options, set <strong>Mode</strong> to <code class=\"docutils literal notranslate\"><span class=\"pre\">canvas_items</span></code> and <strong>Aspect</strong> to <code class=\"docutils literal notranslate\"><span class=\"pre\">keep</span></code>.\nThis ensures that the game scales consistently on different sized screens.</p>",
                    "description": null
                },
                "02.player_scene": {
                    "url": "https://docs.godotengine.org/en/4.1/getting_started/first_2d_game/02.player_scene.html",
                    "title": "Creating the player scene",
                    "blurb": "<p>With the project settings in place, we can start working on the\nplayer-controlled character.</p><p>The first scene will define the <code class=\"docutils literal notranslate\"><span class=\"pre\">Player</span></code> object. One of the benefits of\ncreating a separate Player scene is that we can test it separately, even before\nwe've created other parts of the game.</p>",
                    "description": null
                },
                "03.coding_the_player": {
                    "url": "https://docs.godotengine.org/en/4.1/getting_started/first_2d_game/03.coding_the_player.html",
                    "title": "Coding the player",
                    "blurb": "<p>In this lesson, we'll add player movement, animation, and set it up to detect\ncollisions.</p><p>To do so, we need to add some functionality that we can't get from a built-in\nnode, so we'll add a script. Click the <code class=\"docutils literal notranslate\"><span class=\"pre\">Player</span></code> node and click the \"Attach\nScript\" button:</p><p>In the script settings window, you can leave the default settings alone. Just\nclick \"Create\":</p><p>Start by declaring the member variables this object will need:</p><p>Using the <code class=\"docutils literal notranslate\"><span class=\"pre\">export</span></code> keyword on the first variable <code class=\"docutils literal notranslate\"><span class=\"pre\">speed</span></code> allows us to set\nits value in the Inspector. This can be handy for values that you want to be\nable to adjust just like a node's built-in properties. Click on the <code class=\"docutils literal notranslate\"><span class=\"pre\">Player</span></code>\nnode and you'll see the property now appears in the \"Script Variables\" section\nof the Inspector. Remember, if you change the value here, it will override the\nvalue written in the script.</p><p>Your <code class=\"docutils literal notranslate\"><span class=\"pre\">player.gd</span></code> script should already contain\na <code class=\"docutils literal notranslate\"><span class=\"pre\">_ready()</span></code> and a <code class=\"docutils literal notranslate\"><span class=\"pre\">_process()</span></code> function.\nIf you didn't select the default template shown above,\ncreate these functions while following the lesson.</p><p>The <code class=\"docutils literal notranslate\"><span class=\"pre\">_ready()</span></code> function is called when a node enters the scene tree, which is\na good time to find the size of the game window:</p><p>Now we can use the <code class=\"docutils literal notranslate\"><span class=\"pre\">_process()</span></code> function to define what the player will do.\n<code class=\"docutils literal notranslate\"><span class=\"pre\">_process()</span></code> is called every frame, so we'll use it to update elements of our\ngame, which we expect will change often. For the player, we need to do the\nfollowing:</p><p>First, we need to check for input - is the player pressing a key? For this game,\nwe have 4 direction inputs to check. Input actions are defined in the Project\nSettings under \"Input Map\". Here, you can define custom events and assign\ndifferent keys, mouse events, or other inputs to them. For this game, we will\nmap the arrow keys to the four directions.</p><p>Click on <em>Project -&gt; Project Settings</em> to open the project settings window and\nclick on the <em>Input Map</em> tab at the top. Type \"move_right\" in the top bar and\nclick the \"Add\" button to add the <code class=\"docutils literal notranslate\"><span class=\"pre\">move_right</span></code> action.</p><p>We need to assign a key to this action. Click the \"+\" icon on the right, to\nopen the event manager window.</p><p>The \"Listening for Input...\" field should automatically be selected.\nPress the \"right\" key on your keyboard, and the menu should look like this now.</p><p>Select the \"ok\" button. The \"right\" key is now associated with the <code class=\"docutils literal notranslate\"><span class=\"pre\">move_right</span></code> action.</p><p>Repeat these steps to add three more mappings:</p><p>Your input map tab should look like this:</p><p>Click the \"Close\" button to close the project settings.</p><p>You can detect whether a key is pressed using <code class=\"docutils literal notranslate\"><span class=\"pre\">Input.is_action_pressed()</span></code>,\nwhich returns <code class=\"docutils literal notranslate\"><span class=\"pre\">true</span></code> if it's pressed or <code class=\"docutils literal notranslate\"><span class=\"pre\">false</span></code> if it isn't.</p><p>We start by setting the <code class=\"docutils literal notranslate\"><span class=\"pre\">velocity</span></code> to <code class=\"docutils literal notranslate\"><span class=\"pre\">(0,</span> <span class=\"pre\">0)</span></code> - by default, the player\nshould not be moving. Then we check each input and add/subtract from the\n<code class=\"docutils literal notranslate\"><span class=\"pre\">velocity</span></code> to obtain a total direction. For example, if you hold <code class=\"docutils literal notranslate\"><span class=\"pre\">right</span></code> and\n<code class=\"docutils literal notranslate\"><span class=\"pre\">down</span></code> at the same time, the resulting <code class=\"docutils literal notranslate\"><span class=\"pre\">velocity</span></code> vector will be <code class=\"docutils literal notranslate\"><span class=\"pre\">(1,</span> <span class=\"pre\">1)</span></code>.\nIn this case, since we're adding a horizontal and a vertical movement, the\nplayer would move <em>faster</em> diagonally than if it just moved horizontally.</p><p>We can prevent that if we <em>normalize</em> the velocity, which means we set its\n<em>length</em> to <code class=\"docutils literal notranslate\"><span class=\"pre\">1</span></code>, then multiply by the desired speed. This means no more fast\ndiagonal movement.</p><p>We also check whether the player is moving so we can call <code class=\"docutils literal notranslate\"><span class=\"pre\">play()</span></code> or\n<code class=\"docutils literal notranslate\"><span class=\"pre\">stop()</span></code> on the AnimatedSprite2D.</p><p>Now that we have a movement direction, we can update the player's position. We\ncan also use <code class=\"docutils literal notranslate\"><span class=\"pre\">clamp()</span></code> to prevent it from leaving the screen. <em>Clamping</em> a\nvalue means restricting it to a given range. Add the following to the bottom of\nthe <code class=\"docutils literal notranslate\"><span class=\"pre\">_process</span></code> function (make sure it's not indented under the <cite>else</cite>):</p><p>Click \"Play Scene\" (<kbd class=\"kbd docutils literal notranslate\">F6</kbd>, <kbd class=\"kbd compound docutils literal notranslate\"><kbd class=\"kbd docutils literal notranslate\">Cmd</kbd> <kbd class=\"kbd docutils literal notranslate\"></kbd>+<kbd class=\"kbd docutils literal notranslate\"></kbd> <kbd class=\"kbd docutils literal notranslate\">R</kbd></kbd> on macOS) and confirm you can move\nthe player around the screen in all directions.</p>",
                    "description": null
                },
                "04.creating_the_enemy": {
                    "url": "https://docs.godotengine.org/en/4.1/getting_started/first_2d_game/04.creating_the_enemy.html",
                    "title": "Creating the enemy",
                    "blurb": "<p>Now it's time to make the enemies our player will have to dodge. Their behavior\nwill not be very complex: mobs will spawn randomly at the edges of the screen,\nchoose a random direction, and move in a straight line.</p><p>We'll create a <code class=\"docutils literal notranslate\"><span class=\"pre\">Mob</span></code> scene, which we can then <em>instance</em> to create any number\nof independent mobs in the game.</p>",
                    "description": null
                },
                "05.the_main_game_scene": {
                    "url": "https://docs.godotengine.org/en/4.1/getting_started/first_2d_game/05.the_main_game_scene.html",
                    "title": "The main game scene",
                    "blurb": "<p>Now it's time to bring everything we did together into a playable game scene.</p><p>Create a new scene and add a <a class=\"reference internal\" href=\"../../classes/class_node.html#class-node\"><span class=\"std std-ref\">Node</span></a> named <code class=\"docutils literal notranslate\"><span class=\"pre\">Main</span></code>.\n(The reason we are using Node instead of Node2D is because this node will\nbe a container for handling game logic. It does not require 2D functionality itself.)</p><p>Click the <strong>Instance</strong> button (represented by a chain link icon) and select your saved\n<code class=\"docutils literal notranslate\"><span class=\"pre\">player.tscn</span></code>.</p><p>Now, add the following nodes as children of <code class=\"docutils literal notranslate\"><span class=\"pre\">Main</span></code>, and name them as shown\n(values are in seconds):</p><p>Set the <code class=\"docutils literal notranslate\"><span class=\"pre\">Wait</span> <span class=\"pre\">Time</span></code> property of each of the <code class=\"docutils literal notranslate\"><span class=\"pre\">Timer</span></code> nodes as follows:</p><p>In addition, set the <code class=\"docutils literal notranslate\"><span class=\"pre\">One</span> <span class=\"pre\">Shot</span></code> property of <code class=\"docutils literal notranslate\"><span class=\"pre\">StartTimer</span></code> to \"On\" and set\n<code class=\"docutils literal notranslate\"><span class=\"pre\">Position</span></code> of the <code class=\"docutils literal notranslate\"><span class=\"pre\">StartPosition</span></code> node to <code class=\"docutils literal notranslate\"><span class=\"pre\">(240,</span> <span class=\"pre\">450)</span></code>.</p>",
                    "description": null
                },
                "06.heads_up_display": {
                    "url": "https://docs.godotengine.org/en/4.1/getting_started/first_2d_game/06.heads_up_display.html",
                    "title": "Heads up display",
                    "blurb": "<p>The final piece our game needs is a User Interface (UI) to display things like\nscore, a \"game over\" message, and a restart button.</p><p>Create a new scene, and add a <a class=\"reference internal\" href=\"../../classes/class_canvaslayer.html#class-canvaslayer\"><span class=\"std std-ref\">CanvasLayer</span></a> node named\n<code class=\"docutils literal notranslate\"><span class=\"pre\">HUD</span></code>. \"HUD\" stands for \"heads-up display\", an informational display that\nappears as an overlay on top of the game view.</p><p>The <a class=\"reference internal\" href=\"../../classes/class_canvaslayer.html#class-canvaslayer\"><span class=\"std std-ref\">CanvasLayer</span></a> node lets us draw our UI elements on\na layer above the rest of the game, so that the information it displays isn't\ncovered up by any game elements like the player or mobs.</p><p>The HUD needs to display the following information:</p><p>The basic node for UI elements is <a class=\"reference internal\" href=\"../../classes/class_control.html#class-control\"><span class=\"std std-ref\">Control</span></a>. To create our\nUI, we'll use two types of <a class=\"reference internal\" href=\"../../classes/class_control.html#class-control\"><span class=\"std std-ref\">Control</span></a> nodes: <a class=\"reference internal\" href=\"../../classes/class_label.html#class-label\"><span class=\"std std-ref\">Label</span></a> and <a class=\"reference internal\" href=\"../../classes/class_button.html#class-button\"><span class=\"std std-ref\">Button</span></a>.</p><p>Create the following as children of the <code class=\"docutils literal notranslate\"><span class=\"pre\">HUD</span></code> node:</p><p>Click on the <code class=\"docutils literal notranslate\"><span class=\"pre\">ScoreLabel</span></code> and type a number into the <code class=\"docutils literal notranslate\"><span class=\"pre\">Text</span></code> field in the\nInspector. The default font for <code class=\"docutils literal notranslate\"><span class=\"pre\">Control</span></code> nodes is small and doesn't scale\nwell. There is a font file included in the game assets called\n\"Xolonium-Regular.ttf\". To use this font, do the following:</p><p>Under \"Theme Overrides &gt; Fonts\", choose \"Load\" and select the \"Xolonium-Regular.ttf\" file.</p><p>The font size is still too small, increase it to <code class=\"docutils literal notranslate\"><span class=\"pre\">64</span></code> under \"Theme Overrides &gt; Font Sizes\".\nOnce you've done this with the <code class=\"docutils literal notranslate\"><span class=\"pre\">ScoreLabel</span></code>, repeat the changes for the <code class=\"docutils literal notranslate\"><span class=\"pre\">Message</span></code> and <code class=\"docutils literal notranslate\"><span class=\"pre\">StartButton</span></code> nodes.</p><p>Arrange the nodes as shown below.\nYou can drag the nodes to place them manually, or for more precise placement,\nuse \"Anchor Presets\".</p>",
                    "description": null
                },
                "07.finishing-up": {
                    "url": "https://docs.godotengine.org/en/4.1/getting_started/first_2d_game/07.finishing-up.html",
                    "title": "Finishing up",
                    "blurb": "<p>We have now completed all the functionality for our game. Below are some\nremaining steps to add a bit more \"juice\" to improve the game experience.</p><p>Feel free to expand the gameplay with your own ideas.</p>",
                    "description": null
                }
            },
            "first_3d_game": {
                "01.game_setup": {
                    "url": "https://docs.godotengine.org/en/4.1/getting_started/first_3d_game/01.game_setup.html",
                    "title": "Setting up the game area",
                    "blurb": "<p>In this first part, we're going to set up the game area. Let's get started by\nimporting the start assets and setting up the game scene.</p><p>We've prepared a Godot project with the 3D models and sounds we'll use for this\ntutorial, linked in the index page. If you haven't done so yet, you can download\nthe archive here: <a class=\"reference external\" href=\"https://github.com/godotengine/godot-3d-dodge-the-creeps/releases/tag/1.1.0\">Squash the Creeps assets</a>.</p><p>Once you downloaded it, extract the .zip archive on your computer. Open the\nGodot Project Manager and click the <em>Import</em> button.</p><p>In the import popup, enter the full path to the freshly created directory\n<code class=\"docutils literal notranslate\"><span class=\"pre\">squash_the_creeps_start/</span></code>. You can click the <em>Browse</em> button on the right to\nopen a file browser and navigate to the <code class=\"docutils literal notranslate\"><span class=\"pre\">project.godot</span></code> file the folder\ncontains.</p><p>Click <em>Import &amp; Edit</em> to open the project in the editor.</p><p>The start project contains an icon and two folders: <code class=\"docutils literal notranslate\"><span class=\"pre\">art/</span></code> and <code class=\"docutils literal notranslate\"><span class=\"pre\">fonts/</span></code>.\nThere, you will find the art assets and music we'll use in the game.</p><p>There are two 3D models, <code class=\"docutils literal notranslate\"><span class=\"pre\">player.glb</span></code> and <code class=\"docutils literal notranslate\"><span class=\"pre\">mob.glb</span></code>, some materials that\nbelong to these models, and a music track.</p>",
                    "description": null
                },
                "02.player_input": {
                    "url": "https://docs.godotengine.org/en/4.1/getting_started/first_3d_game/02.player_input.html",
                    "title": "Player scene and input actions",
                    "blurb": "<p>In the next two lessons, we will design the player scene, register custom input\nactions, and code player movement. By the end, you'll have a playable character\nthat moves in eight directions.</p><p>Create a new scene by going to the Scene menu in the top-left and clicking <em>New\nScene</em>.</p><p><img alt=\"image0\" src=\"../../_images/01.new_scene.png\"></p><p>Name the <a class=\"reference internal\" href=\"../../classes/class_characterbody3d.html#class-characterbody3d\"><span class=\"std std-ref\">CharacterBody3D</span></a> to <code class=\"docutils literal notranslate\"><span class=\"pre\">Player</span></code>.\nCharacter bodies are complementary to the area and rigid bodies used in the 2D\ngame tutorial. Like rigid bodies, they can move and collide with the\nenvironment, but instead of being controlled by the physics engine, <strong>you</strong> dictate\ntheir movement. You will see how we use the node's unique features when we code\nthe jump and squash mechanics.</p><p>For now, we're going to create a basic rig for our character's 3D model. This\nwill allow us to rotate the model later via code while it plays an animation.</p><p>Add a <a class=\"reference internal\" href=\"../../classes/class_node3d.html#class-node3d\"><span class=\"std std-ref\">Node3D</span></a> node as a child of <code class=\"docutils literal notranslate\"><span class=\"pre\">Player</span></code> and name it <code class=\"docutils literal notranslate\"><span class=\"pre\">Pivot</span></code></p><p>Then, in the FileSystem dock, expand the <code class=\"docutils literal notranslate\"><span class=\"pre\">art/</span></code> folder\nby double-clicking it and drag and\ndrop <code class=\"docutils literal notranslate\"><span class=\"pre\">player.glb</span></code> onto <code class=\"docutils literal notranslate\"><span class=\"pre\">Pivot</span></code>.</p><p><img alt=\"image1\" src=\"../../_images/02.instantiating_the_model.webp\"></p><p>This should instantiate the model as a child of <code class=\"docutils literal notranslate\"><span class=\"pre\">Pivot</span></code>.\nYou can rename it to <code class=\"docutils literal notranslate\"><span class=\"pre\">Character</span></code>.</p><p><img alt=\"image2\" src=\"../../_images/03.scene_structure.png\"></p><p>As with all kinds of physics nodes, we need a collision shape for our character\nto collide with the environment. Select the <code class=\"docutils literal notranslate\"><span class=\"pre\">Player</span></code> node again and add a child node\n<a class=\"reference internal\" href=\"../../classes/class_collisionshape3d.html#class-collisionshape3d\"><span class=\"std std-ref\">CollisionShape3D</span></a>. In the <em>Inspector</em>, on the <em>Shape</em> property, add a new <a class=\"reference internal\" href=\"../../classes/class_sphereshape3d.html#class-sphereshape3d\"><span class=\"std std-ref\">SphereShape3D</span></a>.</p><p>The sphere's wireframe appears below the character.</p><p><img alt=\"image3\" src=\"../../_images/04.sphere_shape.png\"></p><p>It will be the shape the physics engine uses to collide with the environment, so\nwe want it to better fit the 3D model. Shrink it a bit by dragging the orange\ndot in the viewport. My sphere has a radius of about <code class=\"docutils literal notranslate\"><span class=\"pre\">0.8</span></code> meters.</p><p>Then, move the shape up so its bottom roughly aligns with the grid's plane.</p><p><img alt=\"image4\" src=\"../../_images/05.moving_the_sphere_up.png\"></p><p>You can toggle the model's visibility by clicking the eye icon next to the\n<code class=\"docutils literal notranslate\"><span class=\"pre\">Character</span></code> or the <code class=\"docutils literal notranslate\"><span class=\"pre\">Pivot</span></code> nodes.</p><p><img alt=\"image5\" src=\"../../_images/06.toggling_visibility.webp\"></p><p>Save the scene as <code class=\"docutils literal notranslate\"><span class=\"pre\">player.tscn</span></code></p><p>With the nodes ready, we can almost get coding. But first, we need to define\nsome input actions.</p>",
                    "description": null
                },
                "03.player_movement_code": {
                    "url": "https://docs.godotengine.org/en/4.1/getting_started/first_3d_game/03.player_movement_code.html",
                    "title": "Moving the player with code",
                    "blurb": "<p>It's time to code! We're going to use the input actions we created in the last\npart to move the character.</p><p>Right-click the <code class=\"docutils literal notranslate\"><span class=\"pre\">Player</span></code> node and select <em>Attach Script</em> to add a new script to\nit. In the popup, set the <em>Template</em> to <em>Empty</em> before pressing the <em>Create</em>\nbutton.</p><p><img alt=\"image0\" src=\"../../_images/01.attach_script_to_player.webp\"></p><p>Let's start with the class's properties. We're going to define a movement speed,\na fall acceleration representing gravity, and a velocity we'll use to move the\ncharacter.</p><p>These are common properties for a moving body. The <code class=\"docutils literal notranslate\"><span class=\"pre\">target_velocity</span></code> is a <a class=\"reference internal\" href=\"../../classes/class_vector3.html#class-vector3\"><span class=\"std std-ref\">3D vector</span></a>\ncombining a speed with a direction. Here, we define it as a property because\nwe want to update and reuse its value across frames.</p><p>Let's code the movement. We start by calculating the input direction vector\nusing the global <code class=\"docutils literal notranslate\"><span class=\"pre\">Input</span></code> object, in <code class=\"docutils literal notranslate\"><span class=\"pre\">_physics_process()</span></code>.</p><p>Here, we're going to make all calculations using the <code class=\"docutils literal notranslate\"><span class=\"pre\">_physics_process()</span></code>\nvirtual function. Like <code class=\"docutils literal notranslate\"><span class=\"pre\">_process()</span></code>, it allows you to update the node every\nframe, but it's designed specifically for physics-related code like moving a\nkinematic or rigid body.</p><p>We start by initializing a <code class=\"docutils literal notranslate\"><span class=\"pre\">direction</span></code> variable to <code class=\"docutils literal notranslate\"><span class=\"pre\">Vector3.ZERO</span></code>. Then, we\ncheck if the player is pressing one or more of the <code class=\"docutils literal notranslate\"><span class=\"pre\">move_*</span></code> inputs and update\nthe vector's <code class=\"docutils literal notranslate\"><span class=\"pre\">x</span></code> and <code class=\"docutils literal notranslate\"><span class=\"pre\">z</span></code> components accordingly. These correspond to the\nground plane's axes.</p><p>These four conditions give us eight possibilities and eight possible directions.</p><p>In case the player presses, say, both W and D simultaneously, the vector will\nhave a length of about <code class=\"docutils literal notranslate\"><span class=\"pre\">1.4</span></code>. But if they press a single key, it will have a\nlength of <code class=\"docutils literal notranslate\"><span class=\"pre\">1</span></code>. We want the vector's length to be consistent, and not move faster diagonally. To do so, we can\ncall its <code class=\"docutils literal notranslate\"><span class=\"pre\">normalize()</span></code> method.</p><p>Here, we only normalize the vector if the direction has a length greater than\nzero, which means the player is pressing a direction key.</p><p>In this case, we also get the <code class=\"docutils literal notranslate\"><span class=\"pre\">Pivot</span></code> node and call its <code class=\"docutils literal notranslate\"><span class=\"pre\">look_at()</span></code> method.\nThis method takes a position in space to look at in global coordinates and the\nup direction. In this case, we can use the <code class=\"docutils literal notranslate\"><span class=\"pre\">Vector3.UP</span></code> constant.</p><p>In 3D, the property that contains a node's position is <code class=\"docutils literal notranslate\"><span class=\"pre\">position</span></code>. By\nadding the <code class=\"docutils literal notranslate\"><span class=\"pre\">direction</span></code> to it, we get a position to look at that's one meter\naway from the <code class=\"docutils literal notranslate\"><span class=\"pre\">Player</span></code>.</p><p>Then, we update the velocity. We have to calculate the ground velocity and the\nfall speed separately. Be sure to go back one tab so the lines are inside the\n<code class=\"docutils literal notranslate\"><span class=\"pre\">_physics_process()</span></code> function but outside the condition we just wrote above.</p><p>The <code class=\"docutils literal notranslate\"><span class=\"pre\">CharacterBody3D.is_on_floor()</span></code> function returns <code class=\"docutils literal notranslate\"><span class=\"pre\">true</span></code> if the body collided with the floor in this frame. That's why\nwe apply gravity to the <code class=\"docutils literal notranslate\"><span class=\"pre\">Player</span></code> only while it is in the air.</p><p>For the vertical velocity, we subtract the fall acceleration multiplied by the\ndelta time every frame.\nThis line of code will cause our character to fall in every frame, as long it is not on or collides with the floor.</p><p>The physics engine can only detect interactions with walls, the floor, or other\nbodies during a given frame if movement and collisions happen. We will use this\nproperty later to code the jump.</p><p>On the last line, we call <code class=\"docutils literal notranslate\"><span class=\"pre\">CharacterBody3D.move_and_slide()</span></code> which is a powerful\nmethod of the <code class=\"docutils literal notranslate\"><span class=\"pre\">CharacterBody3D</span></code> class that allows you to move a character\nsmoothly. If it hits a wall midway through a motion, the engine will try to\nsmooth it out for you. It uses the <em>velocity</em> value native to the <a class=\"reference internal\" href=\"../../classes/class_characterbody3d.html#class-characterbody3d\"><span class=\"std std-ref\">CharacterBody3D</span></a></p><p>And that's all the code you need to move the character on the floor.</p><p>Here is the complete <code class=\"docutils literal notranslate\"><span class=\"pre\">Player.gd</span></code> code for reference.</p>",
                    "description": null
                },
                "04.mob_scene": {
                    "url": "https://docs.godotengine.org/en/4.1/getting_started/first_3d_game/04.mob_scene.html",
                    "title": "Designing the mob scene",
                    "blurb": "<p>In this part, you're going to code the monsters, which we'll call mobs. In the\nnext lesson, we'll spawn them randomly around the playable area.</p><p>Let's design the monsters themselves in a new scene. The node structure is going\nto be similar to the <code class=\"docutils literal notranslate\"><span class=\"pre\">player.tscn</span></code> scene.</p><p>Create a scene with, once again, a <a class=\"reference internal\" href=\"../../classes/class_characterbody3d.html#class-characterbody3d\"><span class=\"std std-ref\">CharacterBody3D</span></a> node as its root. Name it\n<code class=\"docutils literal notranslate\"><span class=\"pre\">Mob</span></code>. Add a child node <a class=\"reference internal\" href=\"../../classes/class_node3d.html#class-node3d\"><span class=\"std std-ref\">Node3D</span></a>, name it <code class=\"docutils literal notranslate\"><span class=\"pre\">Pivot</span></code>. And drag and drop\nthe file <code class=\"docutils literal notranslate\"><span class=\"pre\">mob.glb</span></code> from the <em>FileSystem</em> dock onto the <code class=\"docutils literal notranslate\"><span class=\"pre\">Pivot</span></code> to add the\nmonster's 3D model to the scene.</p><p>You can rename the newly created <code class=\"docutils literal notranslate\"><span class=\"pre\">mob</span></code> node\ninto <code class=\"docutils literal notranslate\"><span class=\"pre\">Character</span></code>.</p><p><img alt=\"image0\" src=\"../../_images/01.initial_three_nodes.png\"></p><p>We need a collision shape for our body to work. Right-click on the <code class=\"docutils literal notranslate\"><span class=\"pre\">Mob</span></code> node,\nthe scene's root, and click <em>Add Child Node</em>.</p><p><img alt=\"image1\" src=\"../../_images/02.add_child_node.png\"></p><p>Add a <a class=\"reference internal\" href=\"../../classes/class_collisionshape3d.html#class-collisionshape3d\"><span class=\"std std-ref\">CollisionShape3D</span></a>.</p><p><img alt=\"image2\" src=\"../../_images/03.scene_with_collision_shape.png\"></p><p>In the <em>Inspector</em>, assign a <em>BoxShape3D</em> to the <em>Shape</em> property.</p><p>We should change its size to fit the 3D model better. You can do so\ninteractively by clicking and dragging on the orange dots.</p><p>The box should touch the floor and be a little thinner than the model. Physics\nengines work in such a way that if the player's sphere touches even the box's\ncorner, a collision will occur. If the box is a little too big compared to the\n3D model, you may die at a distance from the monster, and the game will feel\nunfair to the players.</p><p><img alt=\"image4\" src=\"../../_images/05.box_final_size.png\"></p><p>Notice that my box is taller than the monster. It is okay in this game because\nwe're looking at the scene from above and using a fixed perspective. Collision\nshapes don't have to match the model exactly. It's the way the game feels when\nyou test it that should dictate their form and size.</p>",
                    "description": null
                },
                "05.spawning_mobs": {
                    "url": "https://docs.godotengine.org/en/4.1/getting_started/first_3d_game/05.spawning_mobs.html",
                    "title": "Spawning monsters",
                    "blurb": "<p>In this part, we're going to spawn monsters along a path randomly. By the end,\nyou will have monsters roaming the game board.</p><p><img alt=\"image0\" src=\"../../_images/01.monsters_path_preview.png\"></p><p>Double-click on <code class=\"docutils literal notranslate\"><span class=\"pre\">main.tscn</span></code> in the <em>FileSystem</em> dock to open the <code class=\"docutils literal notranslate\"><span class=\"pre\">Main</span></code> scene.</p><p>Before drawing the path, we're going to change the game resolution. Our game has\na default window size of <code class=\"docutils literal notranslate\"><span class=\"pre\">1152x648</span></code>. We're going to set it to <code class=\"docutils literal notranslate\"><span class=\"pre\">720x540</span></code>, a\nnice little box.</p><p>Go to <em>Project -&gt; Project Settings</em>.</p><p><img alt=\"image1\" src=\"../../_images/02.project_settings.png\"></p><p>In the left menu, navigate down to <em>Display -&gt; Window</em>. On the right, set the\n<em>Width</em> to <code class=\"docutils literal notranslate\"><span class=\"pre\">720</span></code> and the <em>Height</em> to <code class=\"docutils literal notranslate\"><span class=\"pre\">540</span></code>.</p><p><img alt=\"image2\" src=\"../../_images/03.window_settings.webp\"></p>",
                    "description": null
                },
                "06.jump_and_squash": {
                    "url": "https://docs.godotengine.org/en/4.1/getting_started/first_3d_game/06.jump_and_squash.html",
                    "title": "Jumping and squashing monsters",
                    "blurb": "<p>In this part, we'll add the ability to jump and squash the monsters. In the next\nlesson, we'll make the player die when a monster hits them on the ground.</p><p>First, we have to change a few settings related to physics interactions. Enter\nthe world of <a class=\"reference internal\" href=\"../../tutorials/physics/physics_introduction.html#doc-physics-introduction-collision-layers-and-masks\"><span class=\"std std-ref\">physics layers</span></a>.</p>",
                    "description": null
                },
                "07.killing_player": {
                    "url": "https://docs.godotengine.org/en/4.1/getting_started/first_3d_game/07.killing_player.html",
                    "title": "Killing the player",
                    "blurb": "<p>We can kill enemies by jumping on them, but the player still can't die.\nLet's fix this.</p><p>We want to detect being hit by an enemy differently from squashing them.\nWe want the player to die when they're moving on the floor, but not if\nthey're in the air. We could use vector math to distinguish the two\nkinds of collisions. Instead, though, we will use an <a class=\"reference internal\" href=\"../../classes/class_area3d.html#class-area3d\"><span class=\"std std-ref\">Area3D</span></a> node, which\nworks well for hitboxes.</p>",
                    "description": null
                },
                "08.score_and_replay": {
                    "url": "https://docs.godotengine.org/en/4.1/getting_started/first_3d_game/08.score_and_replay.html",
                    "title": "Score and replay",
                    "blurb": "<p>In this part, we'll add the score, music playback, and the ability to restart\nthe game.</p><p>We have to keep track of the current score in a variable and display it on\nscreen using a minimal interface. We will use a text label to do that.</p><p>In the main scene, add a new child node <a class=\"reference internal\" href=\"../../classes/class_control.html#class-control\"><span class=\"std std-ref\">Control</span></a> to <code class=\"docutils literal notranslate\"><span class=\"pre\">Main</span></code> and name it\n<code class=\"docutils literal notranslate\"><span class=\"pre\">UserInterface</span></code>. You will automatically be taken to the 2D screen, where you can\nedit your User Interface (UI).</p><p>Add a <a class=\"reference internal\" href=\"../../classes/class_label.html#class-label\"><span class=\"std std-ref\">Label</span></a> node and name it <code class=\"docutils literal notranslate\"><span class=\"pre\">ScoreLabel</span></code></p><p><img alt=\"image1\" src=\"../../_images/01_label_node.webp\"></p><p>In the <em>Inspector</em>, set the <em>Label</em>'s <em>Text</em> to a placeholder like \"Score: 0\".</p><p><img alt=\"image2\" src=\"../../_images/02_score_placeholder.webp\"></p><p>Also, the text is white by default, like our game's background. We need to\nchange its color to see it at runtime.</p><p>Scroll down to <em>Theme Overrides</em>, and expand <em>Colors</em>\nand enable <em>Font Color</em> in order to tint the text to black\n(which contrasts well with the white 3D scene)</p><p><img alt=\"image3\" src=\"../../_images/03_score_font_color.webp\"></p><p>Finally, click and drag on the text in the viewport to move it away from the\ntop-left corner.</p><p><img alt=\"image4\" src=\"../../_images/04_score_label_moved.webp\"></p><p>The <code class=\"docutils literal notranslate\"><span class=\"pre\">UserInterface</span></code> node allows us to group our UI in a branch of the scene tree\nand use a theme resource that will propagate to all its children. We'll use it\nto set our game's font.</p>",
                    "description": null
                },
                "09.adding_animations": {
                    "url": "https://docs.godotengine.org/en/4.1/getting_started/first_3d_game/09.adding_animations.html",
                    "title": "Character animation",
                    "blurb": "<p>In this final lesson, we'll use Godot's built-in animation tools to make our\ncharacters float and flap. You'll learn to design animations in the editor and\nuse code to make your game feel alive.</p><p><img alt=\"image0\" src=\"../../_images/squash-the-creeps-final.gif\"></p><p>We'll start with an introduction to using the animation editor.</p>",
                    "description": null
                },
                "going_further": {
                    "url": "https://docs.godotengine.org/en/4.1/getting_started/first_3d_game/going_further.html",
                    "title": "Going further",
                    "blurb": "<p>You can pat yourself on the back for having completed your first 3D game with\nGodot.</p><p>In this series, we went over a wide range of techniques and editor features.\nHopefully, you've witnessed how intuitive Godot's scene system can be and\nlearned a few tricks you can apply in your projects.</p><p>But we just scratched the surface: Godot has a lot more in store for you to save\ntime creating games. And you can learn all that by browsing the documentation.</p><p>Where should you begin? Below, you'll find a few pages to start exploring and\nbuild upon what you've learned so far.</p><p>But before that, here's a link to download a completed version of the project:\n<a class=\"reference external\" href=\"https://github.com/godotengine/godot-3d-dodge-the-creeps\">https://github.com/godotengine/godot-3d-dodge-the-creeps</a>.</p>",
                    "description": null
                }
            }
        },
        "tutorials": {
            "best_practices": {
                "introduction_best_practices": {
                    "url": "https://docs.godotengine.org/en/4.1/tutorials/best_practices/introduction_best_practices.html",
                    "title": "Introduction",
                    "blurb": "<p>This series is a collection of best practices to help you work efficiently with\nGodot.</p><p>Godot allows for a great amount of flexibility in how you structure a project's\ncodebase and break it down into scenes. Each approach has its pros and\ncons, and they can be hard to weigh until you've worked with the engine for long enough.</p><p>There are always many ways to structure your code and solve specific programming\nproblems. It would be impossible to cover them all here.</p><p>That is why each article starts from a real-world problem. We will break down\neach problem in fundamental questions, suggest solutions, analyze the pros and\ncons of each option, and highlight the best course of action for the problem at hand.</p><p>You should start by reading <a class=\"reference internal\" href=\"what_are_godot_classes.html#doc-what-are-godot-classes\"><span class=\"std std-ref\">Applying object-oriented principles in Godot</span></a>. It explains how\nGodot's nodes and scenes relate to classes and objects in other\nObject-Oriented programming languages. It will help you make sense of the rest of the series.</p>",
                    "description": null
                },
                "what_are_godot_classes": {
                    "url": "https://docs.godotengine.org/en/4.1/tutorials/best_practices/what_are_godot_classes.html",
                    "title": "Applying object-oriented principles in Godot",
                    "blurb": "<p>The engine offers two main ways to create reusable objects: scripts and scenes. Neither of these\ntechnically define classes under the hood.</p><p>Still, many best practices using Godot involve applying object-oriented programming principles to\nthe scripts and scenes that compose your game. That is why it's useful to understand how we can\nthink of them as classes.</p><p>This guide briefly explains how scripts and scenes work in the engine's core to help you understand\nhow they work under the hood.</p>",
                    "description": null
                },
                "scene_organization": {
                    "url": "https://docs.godotengine.org/en/4.1/tutorials/best_practices/scene_organization.html",
                    "title": "Scene organization",
                    "blurb": "<p>This article covers topics related to the effective organization of\nscene content. Which nodes should one use? Where should one place them?\nHow should they interact?</p>",
                    "description": null
                },
                "scenes_versus_scripts": {
                    "url": "https://docs.godotengine.org/en/4.1/tutorials/best_practices/scenes_versus_scripts.html",
                    "title": "When to use scenes versus scripts",
                    "blurb": "<p>We've already covered how scenes and scripts are different. Scripts\ndefine an engine class extension with imperative code, scenes with\ndeclarative code.</p><p>Each system's capabilities are different as a result.\nScenes can define how an extended class initializes, but not what its\nbehavior actually is. Scenes are often used in conjunction with a script,\nthe scene declaring a composition of nodes, and the script adding behaviour with imperative code.</p>",
                    "description": null
                },
                "autoloads_versus_internal_nodes": {
                    "url": "https://docs.godotengine.org/en/4.1/tutorials/best_practices/autoloads_versus_internal_nodes.html",
                    "title": "Autoloads versus regular nodes",
                    "blurb": "<p>Godot offers a feature to automatically load nodes at the root of your project,\nallowing you to access them globally, that can fulfill the role of a Singleton:\n<a class=\"reference internal\" href=\"../scripting/singletons_autoload.html#doc-singletons-autoload\"><span class=\"std std-ref\">Singletons (Autoload)</span></a>. These autoloaded nodes are not freed when you\nchange the scene from code with <a class=\"reference internal\" href=\"../../classes/class_scenetree.html#class-scenetree-method-change-scene-to-file\"><span class=\"std std-ref\">SceneTree.change_scene_to_file</span></a>.</p><p>In this guide, you will learn when to use the Autoload feature, and techniques\nyou can use to avoid it.</p>",
                    "description": null
                },
                "node_alternatives": {
                    "url": "https://docs.godotengine.org/en/4.1/tutorials/best_practices/node_alternatives.html",
                    "title": "When and how to avoid using nodes for everything",
                    "blurb": "<p>Nodes are cheap to produce, but even they have their limits. A project may\nhave tens of thousands of nodes all doing things. The more complex their\nbehavior though, the larger the strain each one adds to a project's\nperformance.</p><p>Godot provides more lightweight objects for creating APIs which nodes use.\nBe sure to keep these in mind as options when designing how you wish to build\nyour project's features.</p>",
                    "description": null
                },
                "godot_interfaces": {
                    "url": "https://docs.godotengine.org/en/4.1/tutorials/best_practices/godot_interfaces.html",
                    "title": "Godot interfaces",
                    "blurb": "<p>Often one needs scripts that rely on other objects for features. There\nare 2 parts to this process:</p><p>The rest of this tutorial outlines the various ways of doing all this.</p>",
                    "description": null
                },
                "godot_notifications": {
                    "url": "https://docs.godotengine.org/en/4.1/tutorials/best_practices/godot_notifications.html",
                    "title": "Godot notifications",
                    "blurb": "<p>Every Object in Godot implements a\n<a class=\"reference internal\" href=\"../../classes/class_object.html#class-object-method-notification\"><span class=\"std std-ref\">_notification</span></a> method. Its purpose is to\nallow the Object to respond to a variety of engine-level callbacks that may\nrelate to it. For example, if the engine tells a\n<a class=\"reference internal\" href=\"../../classes/class_canvasitem.html#class-canvasitem\"><span class=\"std std-ref\">CanvasItem</span></a> to \"draw\", it will call\n<code class=\"docutils literal notranslate\"><span class=\"pre\">_notification(NOTIFICATION_DRAW)</span></code>.</p><p>Some of these notifications, like draw, are useful to override in scripts. So\nmuch so that Godot exposes many of them with dedicated functions:</p><p>What users might <em>not</em> realize is that notifications exist for types other\nthan Node alone, for example:</p><p>And many of the callbacks that <em>do</em> exist in Nodes don't have any dedicated\nmethods, but are still quite useful.</p><p>One can access all these custom notifications from the universal\n<code class=\"docutils literal notranslate\"><span class=\"pre\">_notification()</span></code> method.</p><p>So, in which situation should one use each of these notifications or\nvirtual functions?</p>",
                    "description": null
                },
                "data_preferences": {
                    "url": "https://docs.godotengine.org/en/4.1/tutorials/best_practices/data_preferences.html",
                    "title": "Data preferences",
                    "blurb": "<p>Ever wondered whether one should approach problem X with data structure\nY or Z? This article covers a variety of topics related to these dilemmas.</p>",
                    "description": null
                },
                "logic_preferences": {
                    "url": "https://docs.godotengine.org/en/4.1/tutorials/best_practices/logic_preferences.html",
                    "title": "Logic preferences",
                    "blurb": "<p>Ever wondered whether one should approach problem X with strategy Y or Z?\nThis article covers a variety of topics related to these dilemmas.</p>",
                    "description": null
                },
                "project_organization": {
                    "url": "https://docs.godotengine.org/en/4.1/tutorials/best_practices/project_organization.html",
                    "title": "Project organization",
                    "blurb": "",
                    "description": null
                },
                "version_control_systems": {
                    "url": "https://docs.godotengine.org/en/4.1/tutorials/best_practices/version_control_systems.html",
                    "title": "Version control systems",
                    "blurb": "",
                    "description": null
                }
            },
            "editor": {
                "project_manager": {
                    "url": "https://docs.godotengine.org/en/4.1/tutorials/editor/project_manager.html",
                    "title": "Using the Project Manager",
                    "blurb": "<p>When you launch Godot, the first window you see is the Project Manager. It lets\nyou create, remove, import, or play game projects.</p><p>In the window's top-right corner, a drop-down menu allows you to change the\neditor's language.</p>",
                    "description": null
                },
                "inspector_dock": {
                    "url": "https://docs.godotengine.org/en/4.1/tutorials/editor/inspector_dock.html",
                    "title": "The Inspector",
                    "blurb": "<p>This page explains how the Inspector dock works in-depth. You will learn how to edit properties, fold and unfold areas, use the search bar, and more.</p>",
                    "description": null
                },
                "project_settings": {
                    "url": "https://docs.godotengine.org/en/4.1/tutorials/editor/project_settings.html",
                    "title": "Project Settings",
                    "blurb": "<p>This page explains how to use the Project Settings window. If you would like to access and modify project settings via code, see <a class=\"reference internal\" href=\"../../classes/class_projectsettings.html#class-projectsettings\"><span class=\"std std-ref\">ProjectSettings</span></a>.</p><p>Godot stores the project settings in a project.godot file, a plain text file in INI format. There are dozens of settings you can change to control a project's execution. To simplify this process, Godot provides a project settings dialog, which acts as a front-end to editing a project.godot file.</p><p>To access that dialog, select Project -&gt; Project Settings.</p><p>Once the window opens, let's select a main scene. Locate the <cite>Application/Run/Main Scene</cite> property and click on it to select 'hello.tscn'.</p><p>The project settings dialog provides a lot of options that can be saved to a project.godot file and shows their default values. If you change a value, a tick appears to the left of its name. This means that the property will be saved in the project.godot file and remembered.</p>",
                    "description": null
                },
                "default_key_mapping": {
                    "url": "https://docs.godotengine.org/en/4.1/tutorials/editor/default_key_mapping.html",
                    "title": "Default editor shortcuts",
                    "blurb": "<p>Many of Godot Editor functions can be executed with keyboard shortcuts. This page\nlists functions which have associated shortcuts by default, but many others are\navailable for customization in editor settings as well. To change keys associated\nwith these and other actions navigate to <code class=\"docutils literal notranslate\"><span class=\"pre\">Editor</span> <span class=\"pre\">-&gt;</span> <span class=\"pre\">Editor</span> <span class=\"pre\">Settings</span> <span class=\"pre\">-&gt;</span> <span class=\"pre\">Shortcuts</span></code>.</p><p>While some actions are universal, a lot of shortcuts are specific to individual\ntools. For this reason it is possible for some key combinations to be assigned\nto more than one function. The correct action will be performed depending on the\ncontext.</p>",
                    "description": null
                },
                "customizing_editor": {
                    "url": "https://docs.godotengine.org/en/4.1/tutorials/editor/customizing_editor.html",
                    "title": "Customizing the interface",
                    "blurb": "<p>Godot's interface lives in a single window by default. Since Godot 4.0, you can\nsplit several elements to separate windows to better make use of multi-monitor\nsetups.</p>",
                    "description": null
                },
                "using_the_android_editor": {
                    "url": "https://docs.godotengine.org/en/4.1/tutorials/editor/using_the_android_editor.html",
                    "title": "Using the Android editor",
                    "blurb": "<p>In 2023, <a class=\"reference external\" href=\"https://godotengine.org/article/android_godot_editor_play_store_beta_release/\">we added</a>\na <a class=\"reference external\" href=\"https://godotengine.org/download/android/\">Android port of the editor</a>\nthat can be used to work on new or existing projects on Android devices.</p>",
                    "description": null
                },
                "using_the_web_editor": {
                    "url": "https://docs.godotengine.org/en/4.1/tutorials/editor/using_the_web_editor.html",
                    "title": "Using the Web editor",
                    "blurb": "<p>Since Godot 3.3, there is a <a class=\"reference external\" href=\"https://editor.godotengine.org/\">Web editor</a>\nyou can use to work on new or existing projects.</p>",
                    "description": null
                },
                "command_line_tutorial": {
                    "url": "https://docs.godotengine.org/en/4.1/tutorials/editor/command_line_tutorial.html",
                    "title": "Command line tutorial",
                    "blurb": "<p>Some developers like using the command line extensively. Godot is\ndesigned to be friendly to them, so here are the steps for working\nentirely from the command line. Given the engine relies on almost no\nexternal libraries, initialization times are pretty fast, making it\nsuitable for this workflow.</p>",
                    "description": null
                },
                "external_editor": {
                    "url": "https://docs.godotengine.org/en/4.1/tutorials/editor/external_editor.html",
                    "title": "Using an external text editor",
                    "blurb": "<p>This page explains how to code using an external text editor.</p><p>Godot can be used with an external text editor, such as Sublime Text or Visual\nStudio Code. Browse to the relevant editor settings:\n<strong>Editor &gt; Editor Settings &gt; Text Editor &gt; External</strong></p><p>There are two text fields: the executable path and command-line flags. The flags\nallow you to integrate the editor with Godot, passing it the file path to open\nand other relevant arguments. Godot will replace the following placeholders in\nthe flags string:</p><p>Some example <strong>Exec Flags</strong> for various editors include:</p>",
                    "description": null
                },
                "managing_editor_features": {
                    "url": "https://docs.godotengine.org/en/4.1/tutorials/editor/managing_editor_features.html",
                    "title": "Managing editor features",
                    "blurb": "",
                    "description": null
                }
            },
            "migrating": {
                "upgrading_to_godot_4": {
                    "url": "https://docs.godotengine.org/en/4.1/tutorials/migrating/upgrading_to_godot_4.html",
                    "title": "Upgrading from Godot 3 to Godot 4",
                    "blurb": "",
                    "description": null
                },
                "upgrading_to_godot_4.1": {
                    "url": "https://docs.godotengine.org/en/4.1/tutorials/migrating/upgrading_to_godot_4.1.html",
                    "title": "Upgrading from Godot 4.0 to Godot 4.1",
                    "blurb": "<p>For most games and apps made with 4.0, it should be relatively safe to migrate to 4.1.\nThis page intends to cover everything you need to pay attention to when migrating\nyour project.</p>",
                    "description": null
                }
            },
            "2d": {
                "canvas_layers": {
                    "url": "https://docs.godotengine.org/en/4.1/tutorials/2d/canvas_layers.html",
                    "title": "Canvas layers",
                    "blurb": "",
                    "description": null
                },
                "2d_transforms": {
                    "url": "https://docs.godotengine.org/en/4.1/tutorials/2d/2d_transforms.html",
                    "title": "Viewport and canvas transforms",
                    "blurb": "",
                    "description": null
                },
                "2d_lights_and_shadows": {
                    "url": "https://docs.godotengine.org/en/4.1/tutorials/2d/2d_lights_and_shadows.html",
                    "title": "2D lights and shadows",
                    "blurb": "",
                    "description": null
                },
                "2d_meshes": {
                    "url": "https://docs.godotengine.org/en/4.1/tutorials/2d/2d_meshes.html",
                    "title": "2D meshes",
                    "blurb": "",
                    "description": null
                },
                "2d_sprite_animation": {
                    "url": "https://docs.godotengine.org/en/4.1/tutorials/2d/2d_sprite_animation.html",
                    "title": "2D sprite animation",
                    "blurb": "",
                    "description": null
                },
                "particle_systems_2d": {
                    "url": "https://docs.godotengine.org/en/4.1/tutorials/2d/particle_systems_2d.html",
                    "title": "2D particle systems",
                    "blurb": "",
                    "description": null
                },
                "2d_antialiasing": {
                    "url": "https://docs.godotengine.org/en/4.1/tutorials/2d/2d_antialiasing.html",
                    "title": "2D antialiasing",
                    "blurb": "",
                    "description": null
                },
                "custom_drawing_in_2d": {
                    "url": "https://docs.godotengine.org/en/4.1/tutorials/2d/custom_drawing_in_2d.html",
                    "title": "Custom drawing in 2D",
                    "blurb": "",
                    "description": null
                },
                "2d_movement": {
                    "url": "https://docs.godotengine.org/en/4.1/tutorials/2d/2d_movement.html",
                    "title": "2D movement overview",
                    "blurb": "",
                    "description": null
                },
                "using_tilesets": {
                    "url": "https://docs.godotengine.org/en/4.1/tutorials/2d/using_tilesets.html",
                    "title": "Using TileSets",
                    "blurb": "",
                    "description": null
                },
                "using_tilemaps": {
                    "url": "https://docs.godotengine.org/en/4.1/tutorials/2d/using_tilemaps.html",
                    "title": "Using TileMaps",
                    "blurb": "",
                    "description": null
                }
            },
            "3d": {
                "introduction_to_3d": {
                    "url": "https://docs.godotengine.org/en/4.1/tutorials/3d/introduction_to_3d.html",
                    "title": "Introduction to 3D",
                    "blurb": "<p>Creating a 3D game can be challenging. That extra Z coordinate makes\nmany of the common techniques that helped to make 2D games simpler no\nlonger work. To aid in this transition, it is worth mentioning that\nGodot uses similar APIs for 2D and 3D. Most nodes are the same and\nare present in both 2D and 3D versions. In fact, it is worth checking\nthe 3D platformer tutorial, or the 3D kinematic character tutorials,\nwhich are almost identical to their 2D counterparts.</p><p>In 3D, math is a little more complex than in 2D, so also checking the\n<a class=\"reference internal\" href=\"../math/vector_math.html#doc-vector-math\"><span class=\"std std-ref\">Vector math</span></a> entry in the wiki (which was especially created for game\ndevelopers, not mathematicians or engineers) will help pave the way for you\nto develop 3D games efficiently.</p>",
                    "description": null
                },
                "using_transforms": {
                    "url": "https://docs.godotengine.org/en/4.1/tutorials/3d/using_transforms.html",
                    "title": "Using 3D transforms",
                    "blurb": "",
                    "description": null
                },
                "procedural_geometry/index": {
                    "url": "https://docs.godotengine.org/en/4.1/tutorials/3d/procedural_geometry/index.html",
                    "title": "Procedural geometry",
                    "blurb": "<p>There are many ways to procedurally generate geometry in Godot. In this tutorial series,\nwe will explore a few of them. Each technique has its own benefits and drawbacks, so\nit is best to understand each one and how it can be useful in a given situation.</p>",
                    "description": null
                },
                "3d_text": {
                    "url": "https://docs.godotengine.org/en/4.1/tutorials/3d/3d_text.html",
                    "title": "3D text",
                    "blurb": "",
                    "description": null
                },
                "3d_rendering_limitations": {
                    "url": "https://docs.godotengine.org/en/4.1/tutorials/3d/3d_rendering_limitations.html",
                    "title": "3D rendering limitations",
                    "blurb": "",
                    "description": null
                },
                "standard_material_3d": {
                    "url": "https://docs.godotengine.org/en/4.1/tutorials/3d/standard_material_3d.html",
                    "title": "Standard Material 3D and ORM Material 3D",
                    "blurb": "",
                    "description": null
                },
                "lights_and_shadows": {
                    "url": "https://docs.godotengine.org/en/4.1/tutorials/3d/lights_and_shadows.html",
                    "title": "3D lights and shadows",
                    "blurb": "",
                    "description": null
                },
                "using_decals": {
                    "url": "https://docs.godotengine.org/en/4.1/tutorials/3d/using_decals.html",
                    "title": "Using decals",
                    "blurb": "<p>Decals are projected textures that apply on opaque or transparent surfaces in\n3D. This projection happens in real-time and doesn't rely on mesh generation.\nThis allows you to move decals every frame with only a small performance impact,\neven when applied on complex meshes.</p><p>While decals cannot add actual geometry detail onto the projected surface,\ndecals can still make use of physically-based rendering to provide similar\nproperties to full-blown <abbr title=\"Physically-Based Rendering\">PBR</abbr> materials.</p><p>On this page, you'll learn:</p>",
                    "description": null
                },
                "physical_light_and_camera_units": {
                    "url": "https://docs.godotengine.org/en/4.1/tutorials/3d/physical_light_and_camera_units.html",
                    "title": "Physical light and camera units",
                    "blurb": "",
                    "description": null
                },
                "particles/index": {
                    "url": "https://docs.godotengine.org/en/4.1/tutorials/3d/particles/index.html",
                    "title": "Particle systems (3D)",
                    "blurb": "<p>This section of the tutorial covers (3D) GPU-accelerated particle systems. Most of the things\ndiscussed here apply to CPU particles as well.</p>",
                    "description": null
                },
                "high_dynamic_range": {
                    "url": "https://docs.godotengine.org/en/4.1/tutorials/3d/high_dynamic_range.html",
                    "title": "High dynamic range lighting",
                    "blurb": "",
                    "description": null
                },
                "global_illumination/index": {
                    "url": "https://docs.godotengine.org/en/4.1/tutorials/3d/global_illumination/index.html",
                    "title": "Global illumination",
                    "blurb": "",
                    "description": null
                },
                "environment_and_post_processing": {
                    "url": "https://docs.godotengine.org/en/4.1/tutorials/3d/environment_and_post_processing.html",
                    "title": "Environment and post-processing",
                    "blurb": "<p>Godot 4 provides a redesigned Environment resource, as well as a new\npost-processing system with many available effects right out of the box.</p>",
                    "description": null
                },
                "volumetric_fog": {
                    "url": "https://docs.godotengine.org/en/4.1/tutorials/3d/volumetric_fog.html",
                    "title": "Volumetric fog and fog volumes",
                    "blurb": "<p>As described in <a class=\"reference internal\" href=\"environment_and_post_processing.html#doc-environment-and-post-processing\"><span class=\"std std-ref\">Environment and post-processing</span></a>, Godot supports\nvarious visual effects including two types of fog: traditional (non-volumetric)\nfog and volumetric fog. Traditional fog affects the entire scene at once and\ncannot be customized with <a class=\"reference internal\" href=\"../shaders/shader_reference/fog_shader.html#doc-fog-shader\"><span class=\"std std-ref\">Fog shaders</span></a>.</p><p>Volumetric fog can be used at the same time as non-volumetric fog if desired.</p><p>On this page, you'll learn:</p><p>Here is a comparison between traditional fog (which does not interact with lighting)\nand volumetric fog, which is able to interact with lighting:</p>",
                    "description": null
                },
                "3d_antialiasing": {
                    "url": "https://docs.godotengine.org/en/4.1/tutorials/3d/3d_antialiasing.html",
                    "title": "3D antialiasing",
                    "blurb": "",
                    "description": null
                },
                "using_multi_mesh_instance": {
                    "url": "https://docs.godotengine.org/en/4.1/tutorials/3d/using_multi_mesh_instance.html",
                    "title": "Using MultiMeshInstance3D",
                    "blurb": "",
                    "description": null
                },
                "mesh_lod": {
                    "url": "https://docs.godotengine.org/en/4.1/tutorials/3d/mesh_lod.html",
                    "title": "Mesh level of detail (LOD)",
                    "blurb": "<p>Level of detail (LOD) is one of the most important ways to optimize rendering\nperformance in a 3D project, along with <a class=\"reference internal\" href=\"occlusion_culling.html#doc-occlusion-culling\"><span class=\"std std-ref\">Occlusion culling</span></a>.</p><p>On this page, you'll learn:</p>",
                    "description": null
                },
                "visibility_ranges": {
                    "url": "https://docs.godotengine.org/en/4.1/tutorials/3d/visibility_ranges.html",
                    "title": "Visibility ranges (HLOD)",
                    "blurb": "<p>Along with <a class=\"reference internal\" href=\"mesh_lod.html#doc-mesh-lod\"><span class=\"std std-ref\">Mesh level of detail (LOD)</span></a> and <a class=\"reference internal\" href=\"occlusion_culling.html#doc-occlusion-culling\"><span class=\"std std-ref\">Occlusion culling</span></a>,\nvisibility ranges are another tool to improve performance in large,\ncomplex 3D scenes.</p><p>On this page, you'll learn:</p>",
                    "description": null
                },
                "occlusion_culling": {
                    "url": "https://docs.godotengine.org/en/4.1/tutorials/3d/occlusion_culling.html",
                    "title": "Occlusion culling",
                    "blurb": "<p>In a 3D rendering engine, <strong>occlusion culling</strong> is the process of performing\nhidden geometry removal.</p><p>On this page, you'll learn:</p>",
                    "description": null
                },
                "resolution_scaling": {
                    "url": "https://docs.godotengine.org/en/4.1/tutorials/3d/resolution_scaling.html",
                    "title": "Resolution scaling",
                    "blurb": "",
                    "description": null
                },
                "variable_rate_shading": {
                    "url": "https://docs.godotengine.org/en/4.1/tutorials/3d/variable_rate_shading.html",
                    "title": "Variable rate shading",
                    "blurb": "",
                    "description": null
                },
                "csg_tools": {
                    "url": "https://docs.godotengine.org/en/4.1/tutorials/3d/csg_tools.html",
                    "title": "Prototyping levels with CSG",
                    "blurb": "<p>CSG stands for <strong>Constructive Solid Geometry</strong>, and is a tool to combine basic\nshapes or custom meshes to create more complex shapes. In 3D modeling software,\nCSG is mostly known as \"Boolean Operators\".</p><p>Level prototyping is one of the main uses of CSG in Godot. This technique allows\nusers to create the most common shapes by combining primitives.\nInterior environments can be created by using inverted primitives.</p>",
                    "description": null
                },
                "using_gridmaps": {
                    "url": "https://docs.godotengine.org/en/4.1/tutorials/3d/using_gridmaps.html",
                    "title": "Using GridMaps",
                    "blurb": "",
                    "description": null
                }
            },
            "animation": {
                "introduction": {
                    "url": "https://docs.godotengine.org/en/4.1/tutorials/animation/introduction.html",
                    "title": "Introduction to the animation features",
                    "blurb": "<p>The <a class=\"reference internal\" href=\"../../classes/class_animationplayer.html#class-animationplayer\"><span class=\"std std-ref\">AnimationPlayer</span></a> node allows you to create anything\nfrom simple to complex animations.</p><p>In this guide you learn to:</p><p>In Godot, you can animate anything available in the Inspector, such as\nNode transforms, sprites, UI elements, particles, visibility and color\nof materials, and so on. You can also modify values of script variables\nand even call functions.</p>",
                    "description": null
                },
                "animation_track_types": {
                    "url": "https://docs.godotengine.org/en/4.1/tutorials/animation/animation_track_types.html",
                    "title": "Animation Track types",
                    "blurb": "<p>This page gives an overview of the track types available for Godot's animation\nplayer node on top of the default property tracks.</p>",
                    "description": null
                },
                "cutout_animation": {
                    "url": "https://docs.godotengine.org/en/4.1/tutorials/animation/cutout_animation.html",
                    "title": "Cutout animation",
                    "blurb": "",
                    "description": null
                },
                "2d_skeletons": {
                    "url": "https://docs.godotengine.org/en/4.1/tutorials/animation/2d_skeletons.html",
                    "title": "2D skeletons",
                    "blurb": "",
                    "description": null
                },
                "animation_tree": {
                    "url": "https://docs.godotengine.org/en/4.1/tutorials/animation/animation_tree.html",
                    "title": "Using AnimationTree",
                    "blurb": "",
                    "description": null
                },
                "playing_videos": {
                    "url": "https://docs.godotengine.org/en/4.1/tutorials/animation/playing_videos.html",
                    "title": "Playing videos",
                    "blurb": "<p>Godot supports video playback with the <a class=\"reference internal\" href=\"../../classes/class_videostreamplayer.html#class-videostreamplayer\"><span class=\"std std-ref\">VideoStreamPlayer</span></a> node.</p>",
                    "description": null
                },
                "creating_movies": {
                    "url": "https://docs.godotengine.org/en/4.1/tutorials/animation/creating_movies.html",
                    "title": "Creating movies",
                    "blurb": "<p>Godot can record <strong>non-real-time</strong> video and audio from any 2D or 3D project.\nThis kind of recording is also called <em>offline rendering</em>.\nThere are many scenarios where this is useful:</p><p>With Godot's animation features such as the AnimationPlayer node, Tweeners,\nparticles and shaders, it can effectively be used to create any kind of 2D and\n3D animations (and still images).</p><p>If you are already used to Godot's workflow, you may find yourself more\nproductive by using Godot for video rendering compared to Blender. That said,\nrenderers designed for non-real-time usage such as Cycles and Eevee can result\nin better visuals (at the cost of longer rendering times).</p><p>Compared to real-time video recording, some advantages of non-real-time recording include:</p>",
                    "description": null
                }
            },
            "assets_pipeline": {
                "import_process": {
                    "url": "https://docs.godotengine.org/en/4.1/tutorials/assets_pipeline/import_process.html",
                    "title": "Import process",
                    "blurb": "",
                    "description": null
                },
                "importing_images": {
                    "url": "https://docs.godotengine.org/en/4.1/tutorials/assets_pipeline/importing_images.html",
                    "title": "Importing images",
                    "blurb": "",
                    "description": null
                },
                "importing_audio_samples": {
                    "url": "https://docs.godotengine.org/en/4.1/tutorials/assets_pipeline/importing_audio_samples.html",
                    "title": "Importing audio samples",
                    "blurb": "",
                    "description": null
                },
                "importing_translations": {
                    "url": "https://docs.godotengine.org/en/4.1/tutorials/assets_pipeline/importing_translations.html",
                    "title": "Importing translations",
                    "blurb": "",
                    "description": null
                },
                "importing_scenes": {
                    "url": "https://docs.godotengine.org/en/4.1/tutorials/assets_pipeline/importing_scenes.html",
                    "title": "Importing 3D scenes",
                    "blurb": "",
                    "description": null
                },
                "retargeting_3d_skeletons": {
                    "url": "https://docs.godotengine.org/en/4.1/tutorials/assets_pipeline/retargeting_3d_skeletons.html",
                    "title": "Retargeting 3D Skeletons",
                    "blurb": "",
                    "description": null
                },
                "exporting_3d_scenes": {
                    "url": "https://docs.godotengine.org/en/4.1/tutorials/assets_pipeline/exporting_3d_scenes.html",
                    "title": "Exporting 3D scenes",
                    "blurb": "",
                    "description": null
                },
                "escn_exporter/index": {
                    "url": "https://docs.godotengine.org/en/4.1/tutorials/assets_pipeline/escn_exporter/index.html",
                    "title": "Blender ESCN exporter",
                    "blurb": "<p>This plugin can be used to export Blender scenes in a Godot-specific scene format\ncalled ESCN, which is similar to TSCN (text format) but will be imported as binary\nSCN for performance.</p>",
                    "description": null
                }
            },
            "audio": {
                "audio_buses": {
                    "url": "https://docs.godotengine.org/en/4.1/tutorials/audio/audio_buses.html",
                    "title": "Audio buses",
                    "blurb": "",
                    "description": null
                },
                "audio_effects": {
                    "url": "https://docs.godotengine.org/en/4.1/tutorials/audio/audio_effects.html",
                    "title": "Audio effects",
                    "blurb": "<p>Godot includes several audio effects that can be added to an audio bus to\nalter every sound file that goes through that bus.</p><p>Try them all out to get a sense of how they alter sound. Here follows a short\ndescription of the available effects:</p>",
                    "description": null
                },
                "audio_streams": {
                    "url": "https://docs.godotengine.org/en/4.1/tutorials/audio/audio_streams.html",
                    "title": "Audio streams",
                    "blurb": "",
                    "description": null
                },
                "sync_with_audio": {
                    "url": "https://docs.godotengine.org/en/4.1/tutorials/audio/sync_with_audio.html",
                    "title": "Sync the gameplay with audio and music",
                    "blurb": "",
                    "description": null
                },
                "recording_with_microphone": {
                    "url": "https://docs.godotengine.org/en/4.1/tutorials/audio/recording_with_microphone.html",
                    "title": "Recording with microphone",
                    "blurb": "<p>Godot supports in-game audio recording for Windows, macOS, Linux, Android and\niOS.</p><p>A simple demo is included in the official demo projects and will be used as\nsupport for this tutorial:\n<a class=\"reference external\" href=\"https://github.com/godotengine/godot-demo-projects/tree/master/audio/mic_record\">https://github.com/godotengine/godot-demo-projects/tree/master/audio/mic_record</a>.</p><p>You will need to enable audio input in the project settings, or you'll just get empty audio files.</p>",
                    "description": null
                },
                "text_to_speech": {
                    "url": "https://docs.godotengine.org/en/4.1/tutorials/audio/text_to_speech.html",
                    "title": "Text to speech",
                    "blurb": "",
                    "description": null
                }
            },
            "export": {
                "exporting_projects": {
                    "url": "https://docs.godotengine.org/en/4.1/tutorials/export/exporting_projects.html",
                    "title": "Exporting projects",
                    "blurb": "",
                    "description": null
                },
                "exporting_pcks": {
                    "url": "https://docs.godotengine.org/en/4.1/tutorials/export/exporting_pcks.html",
                    "title": "Exporting packs, patches, and mods",
                    "blurb": "",
                    "description": null
                },
                "feature_tags": {
                    "url": "https://docs.godotengine.org/en/4.1/tutorials/export/feature_tags.html",
                    "title": "Feature tags",
                    "blurb": "",
                    "description": null
                },
                "exporting_for_linux": {
                    "url": "https://docs.godotengine.org/en/4.1/tutorials/export/exporting_for_linux.html",
                    "title": "Exporting for Linux",
                    "blurb": "<p>The simplest way to distribute a game for PC is to copy the executable\n(<code class=\"docutils literal notranslate\"><span class=\"pre\">godot</span></code>), compress the folder and send it to someone else. However, this is\noften not desired.</p><p>Godot offers a more elegant approach for PC distribution when using the export\nsystem. When exporting for Linux, the exporter takes all the project files and\ncreates a <code class=\"docutils literal notranslate\"><span class=\"pre\">data.pck</span></code> file. This file is bundled with a specially optimized\nbinary that is smaller, faster and does not contain the editor and debugger.</p>",
                    "description": null
                },
                "exporting_for_macos": {
                    "url": "https://docs.godotengine.org/en/4.1/tutorials/export/exporting_for_macos.html",
                    "title": "Exporting for macOS",
                    "blurb": "<p>macOS apps are exported as an <code class=\"docutils literal notranslate\"><span class=\"pre\">.app</span></code> bundle, a folder with a specific structure which stores the executable, libraries and all the project files.\nThis bundle can be exported as is, packed in a ZIP archive or DMG disk image (only supported when exporting from a computer running macOS).</p>",
                    "description": null
                },
                "running_on_macos": {
                    "url": "https://docs.godotengine.org/en/4.1/tutorials/export/running_on_macos.html",
                    "title": "Running Godot apps on macOS",
                    "blurb": "<p>By default, macOS will run only applications that are signed and notarized.</p><p>Depending on the way a macOS app is signed and distributed, the following scenarios are possible:</p>",
                    "description": null
                },
                "exporting_for_windows": {
                    "url": "https://docs.godotengine.org/en/4.1/tutorials/export/exporting_for_windows.html",
                    "title": "Exporting for Windows",
                    "blurb": "<p>The simplest way to distribute a game for PC is to copy the executable\n(<code class=\"docutils literal notranslate\"><span class=\"pre\">godot.exe</span></code>), compress the folder and send it to someone else. However, this\nis often not desired.</p><p>Godot offers a more elegant approach for PC distribution when using the export\nsystem. When exporting for Windows, the exporter takes all the project files and\ncreates a <code class=\"docutils literal notranslate\"><span class=\"pre\">data.pck</span></code> file. This file is bundled with a specially optimized\nbinary that is smaller, faster and does not contain the editor and debugger.</p>",
                    "description": null
                },
                "changing_application_icon_for_windows": {
                    "url": "https://docs.godotengine.org/en/4.1/tutorials/export/changing_application_icon_for_windows.html",
                    "title": "Changing application icon for Windows",
                    "blurb": "<p>By default, the exported project's icon will be the Godot icon.\nYou will most likely want to change that for your project. There are two types\nof icons that can be changed on Windows: the file icon and the taskbar icon.</p>",
                    "description": null
                },
                "exporting_for_uwp": {
                    "url": "https://docs.godotengine.org/en/4.1/tutorials/export/exporting_for_uwp.html",
                    "title": "Exporting for Universal Windows Platform",
                    "blurb": "",
                    "description": null
                },
                "exporting_for_ios": {
                    "url": "https://docs.godotengine.org/en/4.1/tutorials/export/exporting_for_ios.html",
                    "title": "Exporting for iOS",
                    "blurb": "<p>These are the steps to load a Godot project in Xcode. This allows you to\nbuild and deploy to an iOS device, build a release for the App Store, and\ndo everything else you can normally do with Xcode.</p>",
                    "description": null
                },
                "exporting_for_android": {
                    "url": "https://docs.godotengine.org/en/4.1/tutorials/export/exporting_for_android.html",
                    "title": "Exporting for Android",
                    "blurb": "<p>Exporting for Android has fewer requirements than compiling Godot for Android.\nThe following steps detail what is needed to set up the Android SDK and the engine.</p>",
                    "description": null
                },
                "android_gradle_build": {
                    "url": "https://docs.godotengine.org/en/4.1/tutorials/export/android_gradle_build.html",
                    "title": "Gradle builds for Android",
                    "blurb": "<p>Godot provides the option to build using the gradle buildsystem. Instead of\nusing the already pre-built template that ships with Godot, an Android\nJava project gets installed into your project folder. Godot will then build it\nand use it as an export template every time you export the project.</p><p>There are some reasons why you may want to do this:</p><p>Configuring the gradle build is a fairly straightforward process. But first\nyou need to follow the steps in <a class=\"reference internal\" href=\"exporting_for_android.html#doc-exporting-for-android\"><span class=\"std std-ref\">exporting for android</span></a>\nup to <strong>Setting it up in Godot</strong>. After doing that, follow the steps below.</p>",
                    "description": null
                },
                "exporting_for_web": {
                    "url": "https://docs.godotengine.org/en/4.1/tutorials/export/exporting_for_web.html",
                    "title": "Exporting for the Web",
                    "blurb": "<p>HTML5 export allows publishing games made in Godot Engine to the browser.\nThis requires support for <a class=\"reference external\" href=\"https://webassembly.org/\">WebAssembly</a>, <a class=\"reference external\" href=\"https://www.khronos.org/webgl/\">WebGL</a> and\n<a class=\"reference external\" href=\"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/SharedArrayBuffer\">SharedArrayBuffer</a>\nin the user's browser.</p>",
                    "description": null
                },
                "exporting_for_dedicated_servers": {
                    "url": "https://docs.godotengine.org/en/4.1/tutorials/export/exporting_for_dedicated_servers.html",
                    "title": "Exporting for dedicated servers",
                    "blurb": "<p>If you want to run a dedicated server for your project on a machine that doesn't\nhave a GPU or display server available, you'll need run Godot with the <code class=\"docutils literal notranslate\"><span class=\"pre\">headless</span></code>\ndisplay server and <code class=\"docutils literal notranslate\"><span class=\"pre\">Dummy</span></code> <a class=\"reference internal\" href=\"../../classes/class_projectsettings.html#class-projectsettings-property-audio-driver-driver\"><span class=\"std std-ref\">audio driver</span></a>.</p><p>Since Godot 4.0, this can be done by running a Godot binary on any platform with\nthe <code class=\"docutils literal notranslate\"><span class=\"pre\">--headless</span></code> command line argument, or running a project exported as\ndedicated server. You do not need to use a specialized server binary anymore,\nunlike Godot 3.x.</p>",
                    "description": null
                },
                "one-click_deploy": {
                    "url": "https://docs.godotengine.org/en/4.1/tutorials/export/one-click_deploy.html",
                    "title": "One-click deploy",
                    "blurb": "",
                    "description": null
                }
            },
            "io": {
                "background_loading": {
                    "url": "https://docs.godotengine.org/en/4.1/tutorials/io/background_loading.html",
                    "title": "Background loading",
                    "blurb": "<p>Commonly, games need to load resources asynchronously.\nWhen switching the main scene of your game (e.g. going to a new\nlevel), you might want to show a loading screen with some indication\nthat progress is being made, or you may want to load additional resources\nduring gameplay.</p><p>The standard load method\n(<a class=\"reference internal\" href=\"../../classes/class_resourceloader.html#class-resourceloader-method-load\"><span class=\"std std-ref\">ResourceLoader.load</span></a> or GDScript's simpler\n<a class=\"reference internal\" href=\"../../classes/class_%40gdscript.html#class-gdscript-method-load\"><span class=\"std std-ref\">load</span></a>) blocks your\nthread, making your game appear unresponsive while the resource is being loaded.</p><p>One way around this is using <code class=\"docutils literal notranslate\"><span class=\"pre\">ResourceLoader</span></code> to load resources asynchronously\nin background threads.</p>",
                    "description": null
                },
                "data_paths": {
                    "url": "https://docs.godotengine.org/en/4.1/tutorials/io/data_paths.html",
                    "title": "File paths in Godot projects",
                    "blurb": "<p>This page explains how file paths work inside Godot projects. You will learn how\nto access paths in your projects using the <code class=\"docutils literal notranslate\"><span class=\"pre\">res://</span></code> and <code class=\"docutils literal notranslate\"><span class=\"pre\">user://</span></code> notations,\nand where Godot stores project and editor files on your and your users' systems.</p>",
                    "description": null
                },
                "saving_games": {
                    "url": "https://docs.godotengine.org/en/4.1/tutorials/io/saving_games.html",
                    "title": "Saving games",
                    "blurb": "",
                    "description": null
                },
                "binary_serialization_api": {
                    "url": "https://docs.godotengine.org/en/4.1/tutorials/io/binary_serialization_api.html",
                    "title": "Binary serialization API",
                    "blurb": "",
                    "description": null
                }
            },
            "i18n": {
                "internationalizing_games": {
                    "url": "https://docs.godotengine.org/en/4.1/tutorials/i18n/internationalizing_games.html",
                    "title": "Internationalizing games",
                    "blurb": "",
                    "description": null
                },
                "localization_using_gettext": {
                    "url": "https://docs.godotengine.org/en/4.1/tutorials/i18n/localization_using_gettext.html",
                    "title": "Localization using gettext",
                    "blurb": "<p>In addition to <a class=\"reference internal\" href=\"../assets_pipeline/importing_translations.html#doc-importing-translations\"><span class=\"std std-ref\">Importing translations</span></a> in CSV format, Godot\nalso supports loading translation files written in the GNU gettext\nformat (text-based <code class=\"docutils literal notranslate\"><span class=\"pre\">.po</span></code> and compiled <code class=\"docutils literal notranslate\"><span class=\"pre\">.mo</span></code> since Godot 4.0).</p>",
                    "description": null
                },
                "locales": {
                    "url": "https://docs.godotengine.org/en/4.1/tutorials/i18n/locales.html",
                    "title": "Locale codes",
                    "blurb": "<p>Locale code has the following format: <code class=\"docutils literal notranslate\"><span class=\"pre\">language_Script_COUNTRY_VARIANT</span></code>, where:</p>",
                    "description": null
                },
                "pseudolocalization": {
                    "url": "https://docs.godotengine.org/en/4.1/tutorials/i18n/pseudolocalization.html",
                    "title": "Pseudolocalization",
                    "blurb": "",
                    "description": null
                }
            },
            "inputs": {
                "inputevent": {
                    "url": "https://docs.godotengine.org/en/4.1/tutorials/inputs/inputevent.html",
                    "title": "Using InputEvent",
                    "blurb": "",
                    "description": null
                },
                "input_examples": {
                    "url": "https://docs.godotengine.org/en/4.1/tutorials/inputs/input_examples.html",
                    "title": "Input examples",
                    "blurb": "",
                    "description": null
                },
                "mouse_and_input_coordinates": {
                    "url": "https://docs.godotengine.org/en/4.1/tutorials/inputs/mouse_and_input_coordinates.html",
                    "title": "Mouse and input coordinates",
                    "blurb": "",
                    "description": null
                },
                "custom_mouse_cursor": {
                    "url": "https://docs.godotengine.org/en/4.1/tutorials/inputs/custom_mouse_cursor.html",
                    "title": "Customizing the mouse cursor",
                    "blurb": "<p>You might want to change the appearance of the mouse cursor in your game in\norder to suit the overall design. There are two ways to customize the mouse\ncursor:</p><p>Using project settings is a simpler (but more limited) way to customize the mouse cursor.\nThe second way is more customizable, but involves scripting:</p>",
                    "description": null
                },
                "controllers_gamepads_joysticks": {
                    "url": "https://docs.godotengine.org/en/4.1/tutorials/inputs/controllers_gamepads_joysticks.html",
                    "title": "Controllers, gamepads, and joysticks",
                    "blurb": "<p>Godot supports hundreds of controller models thanks to the community-sourced\n<a class=\"reference external\" href=\"https://github.com/gabomdq/SDL_GameControllerDB\">SDL game controller database</a>.</p><p>Controllers are supported on Windows, macOS, Linux, Android, iOS, and HTML5.</p><p>Note that more specialized devices such as steering wheels, rudder pedals and\n<a class=\"reference external\" href=\"https://en.wikipedia.org/wiki/HOTAS\">HOTAS</a> are less tested and may not\nalways work as expected. Overriding force feedback for those devices is also not\nimplemented yet. If you have access to one of those devices, don't hesitate to\n<a class=\"reference external\" href=\"https://github.com/godotengine/godot/blob/master/CONTRIBUTING.md#reporting-bugs\">report bugs on GitHub</a>.</p><p>In this guide, you will learn:</p>",
                    "description": null
                },
                "handling_quit_requests": {
                    "url": "https://docs.godotengine.org/en/4.1/tutorials/inputs/handling_quit_requests.html",
                    "title": "Handling quit requests",
                    "blurb": "",
                    "description": null
                }
            },
            "math": {
                "vector_math": {
                    "url": "https://docs.godotengine.org/en/4.1/tutorials/math/vector_math.html",
                    "title": "Vector math",
                    "blurb": "",
                    "description": null
                },
                "vectors_advanced": {
                    "url": "https://docs.godotengine.org/en/4.1/tutorials/math/vectors_advanced.html",
                    "title": "Advanced vector math",
                    "blurb": "",
                    "description": null
                },
                "matrices_and_transforms": {
                    "url": "https://docs.godotengine.org/en/4.1/tutorials/math/matrices_and_transforms.html",
                    "title": "Matrices and transforms",
                    "blurb": "",
                    "description": null
                },
                "interpolation": {
                    "url": "https://docs.godotengine.org/en/4.1/tutorials/math/interpolation.html",
                    "title": "Interpolation",
                    "blurb": "<p>Interpolation is a very basic operation in graphics programming. It's good to become familiar with it in order to expand your horizons as a graphics developer.</p><p>The basic idea is that you want to transition from A to B. A value <code class=\"docutils literal notranslate\"><span class=\"pre\">t</span></code>, represents the states in-between.</p><p>For example, if <code class=\"docutils literal notranslate\"><span class=\"pre\">t</span></code> is 0, then the state is A. If <code class=\"docutils literal notranslate\"><span class=\"pre\">t</span></code> is 1, then the state is B. Anything in-between is an <em>interpolation</em>.</p><p>Between two real (floating-point) numbers, an interpolation can be described as:</p><p>And often simplified to:</p><p>The name of this type of interpolation, which transforms a value into another at <em>constant speed</em> is <em>\"linear\"</em>. So, when you hear about <em>Linear Interpolation</em>, you know they are referring to this formula.</p><p>There are other types of interpolations, which will not be covered here. A recommended read afterwards is the <a class=\"reference internal\" href=\"beziers_and_curves.html#doc-beziers-and-curves\"><span class=\"std std-ref\">Bezier</span></a> page.</p>",
                    "description": null
                },
                "beziers_and_curves": {
                    "url": "https://docs.godotengine.org/en/4.1/tutorials/math/beziers_and_curves.html",
                    "title": "Beziers, curves and paths",
                    "blurb": "<p>Bezier curves are a mathematical approximation of natural geometric shapes. We\nuse them to represent a curve with as little information as possible and with a\nhigh level of flexibility.</p><p>Unlike more abstract mathematical concepts, Bezier curves were created for\nindustrial design. They are a popular tool in the graphics software industry.</p><p>They rely on <a class=\"reference internal\" href=\"interpolation.html#doc-interpolation\"><span class=\"std std-ref\">interpolation</span></a>, which we saw in the\nprevious article, combining multiple steps to create smooth curves. To better\nunderstand how Bezier curves work, let's start from its simplest form: Quadratic\nBezier.</p>",
                    "description": null
                },
                "random_number_generation": {
                    "url": "https://docs.godotengine.org/en/4.1/tutorials/math/random_number_generation.html",
                    "title": "Random number generation",
                    "blurb": "<p>Many games rely on randomness to implement core game mechanics. This page\nguides you through common types of randomness and how to implement them in\nGodot.</p><p>After giving you a brief overview of useful functions that generate random\nnumbers, you will learn how to get random elements from arrays, dictionaries,\nand how to use a noise generator in GDScript.</p>",
                    "description": null
                }
            },
            "navigation": {
                "navigation_introduction_2d": {
                    "url": "https://docs.godotengine.org/en/4.1/tutorials/navigation/navigation_introduction_2d.html",
                    "title": "2D Navigation Overview",
                    "blurb": "<p>Godot provides multiple objects, classes and servers to facilitate grid-based or mesh-based navigation and pathfinding for 2D and 3D games.\nThe following section provides a quick overview over all available navigation related objects in Godot for 2D scenes and their primary use.</p><p>Godot provides the following objects and classes for 2D navigation:</p><p>The following SceneTree Nodes are available as helpers to work with the NavigationServer2D API.</p><p>The 2D navigation meshes are defined with the following resources:</p>",
                    "description": null
                },
                "navigation_introduction_3d": {
                    "url": "https://docs.godotengine.org/en/4.1/tutorials/navigation/navigation_introduction_3d.html",
                    "title": "3D Navigation Overview",
                    "blurb": "<p>Godot provides multiple objects, classes and servers to facilitate grid-based or mesh-based navigation and pathfinding for 2D and 3D games.\nThe following section provides a quick overview over all available navigation related objects in Godot for 3D scenes and their primary use.</p><p>Godot provides the following objects and classes for 3D navigation:</p><p>The following SceneTree Nodes are available as helpers to work with the NavigationServer3D API.</p><p>The 3D navigation meshes are defined with the following resources:</p>",
                    "description": null
                },
                "navigation_using_navigationservers": {
                    "url": "https://docs.godotengine.org/en/4.1/tutorials/navigation/navigation_using_navigationservers.html",
                    "title": "Using NavigationServer",
                    "blurb": "<p>2D and 3D version of the NavigationServer are available as\n<a class=\"reference internal\" href=\"../../classes/class_navigationserver2d.html#class-navigationserver2d\"><span class=\"std std-ref\">NavigationServer2D</span></a> and\n<a class=\"reference internal\" href=\"../../classes/class_navigationserver3d.html#class-navigationserver3d\"><span class=\"std std-ref\">NavigationServer3D</span></a> respectively.</p><p>Both 2D and 3D use the same NavigationServer with NavigationServer3D being the primary server. The NavigationServer2D is a frontend that converts 2D positions into 3D positions and back.\nHence it is entirely possible (if not a little cumbersome) to exclusively use the NavigationServer3D API for 2D navigation.</p>",
                    "description": null
                },
                "navigation_using_navigationmaps": {
                    "url": "https://docs.godotengine.org/en/4.1/tutorials/navigation/navigation_using_navigationmaps.html",
                    "title": "Using NavigationMaps",
                    "blurb": "<p>A NavigationMap is an abstract navigation world on the NavigationServer identified by a NavigationServer <a class=\"reference internal\" href=\"../../classes/class_rid.html#class-rid\"><span class=\"std std-ref\">RID</span></a>.</p><p>A map can hold and connect a near infinite number of navigation regions with navigation meshes to build the traversable areas of a game world for pathfinding.</p><p>A map can be joined by avoidance agents to process collision avoidance between the avoidance agents.</p>",
                    "description": null
                },
                "navigation_using_navigationregions": {
                    "url": "https://docs.godotengine.org/en/4.1/tutorials/navigation/navigation_using_navigationregions.html",
                    "title": "Using NavigationRegions",
                    "blurb": "<p>NavigationRegions are the visual Node representation of a <code class=\"docutils literal notranslate\"><span class=\"pre\">region</span></code> of the navigation <code class=\"docutils literal notranslate\"><span class=\"pre\">map</span></code> on the NavigationServer.\nEach NavigationRegion node holds a resource for the navigationmesh data.</p><p>Both 2D and 3D version are available as <a class=\"reference internal\" href=\"../../classes/class_navigationregion2d.html#class-navigationregion2d\"><span class=\"std std-ref\">NavigationRegion2D</span></a>\nand <a class=\"reference internal\" href=\"../../classes/class_navigationregion3d.html#class-navigationregion3d\"><span class=\"std std-ref\">NavigationRegion3D</span></a> respectively.</p><p>Individual NavigationRegions upload their 2D NavigationPolygon or 3D NavigationMesh resource data to the NavigationServer.\nThe NavigationServer map turns this information into a combined navigation map for pathfinding.</p><p>To create a navigation region using the SceneTree add a <code class=\"docutils literal notranslate\"><span class=\"pre\">NavigationRegion2D</span></code> or <code class=\"docutils literal notranslate\"><span class=\"pre\">NavigationRegion3D</span></code> node to the scene.\nAll regions require a navigationmesh resource to function. See <a class=\"reference internal\" href=\"navigation_using_navigationmeshes.html#doc-navigation-using-navigationmeshes\"><span class=\"std std-ref\">Using NavigationMeshes</span></a> to learn how to create and apply navigationmeshes.</p><p>NavigationRegions will automatically push <code class=\"docutils literal notranslate\"><span class=\"pre\">global_transform</span></code> changes to the region on the NavigationServer which makes them suitable for moving platforms.\nThe NavigationServer will attempt to connect navmeshes of individual regions when they are close enough. For more detail see <a class=\"reference internal\" href=\"navigation_connecting_navmesh.html#doc-navigation-connecting-navmesh\"><span class=\"std std-ref\">Connecting NavigationMeshes</span></a>.\nTo connect NavigationRegions over arbitrary distances see <a class=\"reference internal\" href=\"navigation_using_navigationlinks.html#doc-navigation-using-navigationlinks\"><span class=\"std std-ref\">Using NavigationLinks</span></a> to learn how to create and use <code class=\"docutils literal notranslate\"><span class=\"pre\">NavigationLinks</span></code>.</p><p>Regions can be enabled / disabled and if disabled will not contribute to future pathfinding queries.</p>",
                    "description": null
                },
                "navigation_using_navigationmeshes": {
                    "url": "https://docs.godotengine.org/en/4.1/tutorials/navigation/navigation_using_navigationmeshes.html",
                    "title": "Using NavigationMeshes",
                    "blurb": "<p>2D and 3D version of the navigation mesh are available as\n<a class=\"reference internal\" href=\"../../classes/class_navigationpolygon.html#class-navigationpolygon\"><span class=\"std std-ref\">NavigationPolygon</span></a> and\n<a class=\"reference internal\" href=\"../../classes/class_navigationmesh.html#class-navigationmesh\"><span class=\"std std-ref\">NavigationMesh</span></a>  respectively.</p><p>Navigation works independent from other engine parts like rendering and physics. A navigation mesh is the data format to exchange information from those other systems as it describes the traversable safe area for a specific agent. All the necessary information from other engine parts need to be already factored in when creating a navigation mesh. E.g. like visuals that an agent should not clip through or physics collision shapes that an agent should not collide with. This process of factoring in all those wanted navigation restrictions from other engine parts like visuals and collision is commonly called navigation mesh baking.</p><p>If you experience clipping or collision problems while following navigation paths always remember that you need to tell the navigation system through an appropriated navigation mesh what your intentions are. By itself the navigation system will never know \"this is a tree / rock / wall collision shape or visual mesh\" because it only knows \"here I was told I can path safely cause it is on navigation mesh\".</p>",
                    "description": null
                },
                "navigation_using_navigationpaths": {
                    "url": "https://docs.godotengine.org/en/4.1/tutorials/navigation/navigation_using_navigationpaths.html",
                    "title": "Using NavigationPaths",
                    "blurb": "",
                    "description": null
                },
                "navigation_using_navigationpathqueryobjects": {
                    "url": "https://docs.godotengine.org/en/4.1/tutorials/navigation/navigation_using_navigationpathqueryobjects.html",
                    "title": "Using NavigationPathQueryObjects",
                    "blurb": "<p><code class=\"docutils literal notranslate\"><span class=\"pre\">NavigationPathQueryObjects</span></code> can be used together with <code class=\"docutils literal notranslate\"><span class=\"pre\">NavigationServer.query_path()</span></code>\nto obtain a heavily <strong>customized</strong> navigation path including optional <strong>meta data</strong> about the path.</p><p>This requires more setup compared to obtaining a normal NavigationPath but lets you tailor\nthe pathfinding and provided path data to the different needs of a project.</p><p>NavigationPathQueryObjects consist of a pair of objects, a <code class=\"docutils literal notranslate\"><span class=\"pre\">NavigationPathQueryParameters</span></code> object holding the customization options\nfor the query and a <code class=\"docutils literal notranslate\"><span class=\"pre\">NavigationPathQueryResult</span></code> that receives (regular) updates with the resulting path and meta data from the query.</p><p>2D and 3D versions of <code class=\"docutils literal notranslate\"><span class=\"pre\">NavigationPathQueryParameters</span></code> are available as\n<a class=\"reference internal\" href=\"../../classes/class_navigationpathqueryparameters2d.html#class-navigationpathqueryparameters2d\"><span class=\"std std-ref\">NavigationPathQueryParameters2D</span></a> and\n<a class=\"reference internal\" href=\"../../classes/class_navigationpathqueryparameters3d.html#class-navigationpathqueryparameters3d\"><span class=\"std std-ref\">NavigationPathQueryParameters3D</span></a> respectively.</p><p>2D and 3D versions of <code class=\"docutils literal notranslate\"><span class=\"pre\">NavigationPathQueryResult</span></code> are available as\n<a class=\"reference internal\" href=\"../../classes/class_navigationpathqueryresult2d.html#class-navigationpathqueryresult2d\"><span class=\"std std-ref\">NavigationPathQuerResult2D</span></a> and\n<a class=\"reference internal\" href=\"../../classes/class_navigationpathqueryresult3d.html#class-navigationpathqueryresult3d\"><span class=\"std std-ref\">NavigationPathQueryResult3D</span></a> respectively.</p><p>Both parameters and result are used as a pair with the <code class=\"docutils literal notranslate\"><span class=\"pre\">NavigationServer.query_path()</span></code> function.</p><p>For the available customization options and their use see the class doc of the parameters.</p><p>While not a strict requirement, both objects are intended to be created once in advance, stored in a\npersistent variable for the agent and reused for every followup path query with updated parameters.\nThis reuse avoids performance implications from frequent object creation if a project\nhas a large quantity of simultaneous agents that regularly update their paths.</p>",
                    "description": null
                },
                "navigation_using_navigationagents": {
                    "url": "https://docs.godotengine.org/en/4.1/tutorials/navigation/navigation_using_navigationagents.html",
                    "title": "Using NavigationAgents",
                    "blurb": "<p>NavigationsAgents are helper nodes that combine functionality\nfor pathfinding, path following and agent avoidance for a Node2D/3D inheriting parent node.\nThey facilitate common calls to the NavigationServer API on\nbehalf of the parent actor node in a more convenient manner for beginners.</p><p>2D and 3D version of NavigationAgents are available as\n<a class=\"reference internal\" href=\"../../classes/class_navigationagent2d.html#class-navigationagent2d\"><span class=\"std std-ref\">NavigationAgent2D</span></a> and\n<a class=\"reference internal\" href=\"../../classes/class_navigationagent3d.html#class-navigationagent3d\"><span class=\"std std-ref\">NavigationAgent3D</span></a> respectively.</p><p>New NavigationAgent nodes will automatically join the default navigation map on the World2D/World3D.</p><p>NavigationsAgent nodes are optional and not a hard requirement to use the navigation system.\nTheir entire functionality can be replaced with scripts and direct calls to the NavigationServer API.</p>",
                    "description": null
                },
                "navigation_using_navigationobstacles": {
                    "url": "https://docs.godotengine.org/en/4.1/tutorials/navigation/navigation_using_navigationobstacles.html",
                    "title": "Using NavigationObstacles",
                    "blurb": "<p>NavigationObstacles can be used either as static or dynamic obstacles to affect avoidance controlled agents.</p><p>2D and 3D versions of NavigationObstacles nodes are available as\n<a class=\"reference internal\" href=\"../../classes/class_navigationobstacle2d.html#class-navigationobstacle2d\"><span class=\"std std-ref\">NavigationObstacle2D</span></a> and\n<a class=\"reference internal\" href=\"../../classes/class_navigationobstacle3d.html#class-navigationobstacle3d\"><span class=\"std std-ref\">NavigationObstacle3D</span></a>  respectively.</p>",
                    "description": null
                },
                "navigation_using_navigationlinks": {
                    "url": "https://docs.godotengine.org/en/4.1/tutorials/navigation/navigation_using_navigationlinks.html",
                    "title": "Using NavigationLinks",
                    "blurb": "<p>NavigationLinks are used to connect navigation mesh polygons from <a class=\"reference internal\" href=\"../../classes/class_navigationregion2d.html#class-navigationregion2d\"><span class=\"std std-ref\">NavigationRegion2D</span></a>\nand <a class=\"reference internal\" href=\"../../classes/class_navigationregion3d.html#class-navigationregion3d\"><span class=\"std std-ref\">NavigationRegion3D</span></a> over arbitrary distances for pathfinding.</p><p>NavigationLinks are also used to consider movement shortcuts in pathfinding available through\ninteracting with gameplay objects e.g. ladders, jump pads or teleports.</p><p>2D and 3D versions of NavigationJumplinks nodes are available as\n<a class=\"reference internal\" href=\"../../classes/class_navigationlink2d.html#class-navigationlink2d\"><span class=\"std std-ref\">NavigationLink2D</span></a> and\n<a class=\"reference internal\" href=\"../../classes/class_navigationlink3d.html#class-navigationlink3d\"><span class=\"std std-ref\">NavigationLink3D</span></a> respectively.</p><p>Different NavigationRegions can connect their navigation meshes without the need for a NavigationLink\nas long as they are within navigation map <code class=\"docutils literal notranslate\"><span class=\"pre\">edge_connection_margin</span></code> and have compatible <code class=\"docutils literal notranslate\"><span class=\"pre\">navigation_layers</span></code>.\nAs soon as the distance becomes too large, building valid connections becomes a problem - a problem that NavigationLinks can solve.</p><p>See <a class=\"reference internal\" href=\"navigation_using_navigationregions.html#doc-navigation-using-navigationregions\"><span class=\"std std-ref\">Using NavigationRegions</span></a> to learn more about the use of navigation regions.\nSee <a class=\"reference internal\" href=\"navigation_connecting_navmesh.html#doc-navigation-connecting-navmesh\"><span class=\"std std-ref\">Connecting NavigationMeshes</span></a> to learn more about how to connect navigation meshes.</p><p>NavigationLinks share many properties with NavigationRegions like <code class=\"docutils literal notranslate\"><span class=\"pre\">navigation_layers</span></code>.\nNavigationLinks add a single connection between two positions over an arbitrary distance\ncompared to NavigationRegions that add a more local traversable area with a navigation mesh resource.</p><p>NavigationLinks have a <code class=\"docutils literal notranslate\"><span class=\"pre\">start_position</span></code> and <code class=\"docutils literal notranslate\"><span class=\"pre\">end_position</span></code> and can go in both directions when <code class=\"docutils literal notranslate\"><span class=\"pre\">bidirectional</span></code> is enabled.\nWhen placed a navigationlink connects the navigation mesh polygons closest to its <code class=\"docutils literal notranslate\"><span class=\"pre\">start_position</span></code> and <code class=\"docutils literal notranslate\"><span class=\"pre\">end_position</span></code> within search radius for pathfinding.</p><p>The polygon search radius can be configured globally in the ProjectSettings under <code class=\"docutils literal notranslate\"><span class=\"pre\">navigation/2d_or_3d/default_link_connection_radius</span></code>\nor set for each navigation <code class=\"docutils literal notranslate\"><span class=\"pre\">map</span></code> individually using the <code class=\"docutils literal notranslate\"><span class=\"pre\">NavigationServer.map_set_link_connection_radius()</span></code> function.</p><p>Both <code class=\"docutils literal notranslate\"><span class=\"pre\">start_position</span></code> and <code class=\"docutils literal notranslate\"><span class=\"pre\">end_position</span></code> have debug markers in the Editor.\nThe visible radius of a position shows the polygon search radius.\nAll navigation mesh polygons inside are compared and the closest is picked for the edge connection.\nIf no valid polygon is found within the search radius the navigation link gets disabled.</p><p>The link debug visuals can be changed in the Editor <a class=\"reference internal\" href=\"../../classes/class_projectsettings.html#class-projectsettings\"><span class=\"std std-ref\">ProjectSettings</span></a> under <code class=\"docutils literal notranslate\"><span class=\"pre\">debug/shapes/navigation</span></code>.\nThe visibility of the debug can also be controlled in the Editor 3D Viewport gizmo menu.</p><p>A navigation link does not provide any automated movement through the link. Instead, when\nan agent reaches the position of a link, game code needs to react (e.g. through area triggers) and provide means for the agent\nto move through the link to end up at the links other position (e.g. through teleport or animation) to continue along the path.</p>",
                    "description": null
                },
                "navigation_using_navigationlayers": {
                    "url": "https://docs.godotengine.org/en/4.1/tutorials/navigation/navigation_using_navigationlayers.html",
                    "title": "Using NavigationLayers",
                    "blurb": "<p>NavigationLayers are an optional feature to further control which navigation meshes are considered in a path query and which regions can be connected.\nThey work similar to how physics layers control collision between collision objects or how visual layers control what is rendered to the Viewport.</p><p>NavigationLayers can be named in the <code class=\"docutils literal notranslate\"><span class=\"pre\">ProjectSettings</span></code> the same as PhysicsLayers or VisualLayers.</p><p>If two regions have not a single compatible layer they will not be merged by the NavigationServer. See <a class=\"reference internal\" href=\"navigation_connecting_navmesh.html#doc-navigation-connecting-navmesh\"><span class=\"std std-ref\">Connecting NavigationMeshes</span></a> for more information on merging navmesh.</p><p>If a region has not a single compatible navigation layer with the <code class=\"docutils literal notranslate\"><span class=\"pre\">navigation_layers</span></code> parameter of a path query this regions navigation mesh will be skipped in pathfinding.\nSee <a class=\"reference internal\" href=\"navigation_using_navigationpaths.html#doc-navigation-using-navigationpaths\"><span class=\"std std-ref\">Using NavigationPaths</span></a> for more information on querying the NavigationServer for paths.</p><p>NavigationLayers are a single <code class=\"docutils literal notranslate\"><span class=\"pre\">int</span></code> value that is used as a <code class=\"docutils literal notranslate\"><span class=\"pre\">bitmask</span></code>.\nMany navigation related nodes have <code class=\"docutils literal notranslate\"><span class=\"pre\">set_navigation_layer_value()</span></code> and\n<code class=\"docutils literal notranslate\"><span class=\"pre\">get_navigation_layer_value()</span></code> functions to set and get a layer number directly\nwithout the need for more complex bitwise operations.</p><p>In scripts the following helper functions can be used to work with the navigation_layers bitmask.</p><p>Changing navigation layers for path queries is a performance friendly alternative to\nenabling / disabling entire navigation regions. Compared to region changes a\nnavigation path query with different navigation layers does not\ntrigger large scale updates on the NavigationServer.</p><p>Changing the navigation layers of NavigationAgent nodes will have an immediate\neffect on the next path query. Changing the navigation layers of\nregions will have an immediate effect on the region but any new region\nconnect or disconnect will only be in effect after the next physics_frame.</p>",
                    "description": null
                },
                "navigation_debug_tools": {
                    "url": "https://docs.godotengine.org/en/4.1/tutorials/navigation/navigation_debug_tools.html",
                    "title": "Navigation Debug Tools",
                    "blurb": "",
                    "description": null
                },
                "navigation_connecting_navmesh": {
                    "url": "https://docs.godotengine.org/en/4.1/tutorials/navigation/navigation_connecting_navmesh.html",
                    "title": "Connecting NavigationMeshes",
                    "blurb": "<p>Different NavigationMeshes are automatically merged by the NavigationServer\nwhen at least two vertex positions of one edge exactly overlap.</p><p>To connect over arbitrary distances see <a class=\"reference internal\" href=\"navigation_using_navigationlinks.html#doc-navigation-using-navigationlinks\"><span class=\"std std-ref\">Using NavigationLinks</span></a>.</p><p>The same is true for multiple NavigationPolygon resources. As long as their\noutline points overlap exactly the NavigationServer will merge them.\nNavigationPolygon outlines must be from different NavigationPolygon resources to connect.</p><p>Overlapping or intersecting outlines on the same NavigationPolygon\nwill fail the navigation mesh creation. Overlapping or intersecting\noutlines from different NavigationPolygons will often fail to create the\nnavigation region edge connections on the NavigationServer and should be avoided.</p><p>Alternatively <code class=\"docutils literal notranslate\"><span class=\"pre\">NavigationMesh``s</span> <span class=\"pre\">are</span> <span class=\"pre\">not</span> <span class=\"pre\">merged</span> <span class=\"pre\">but</span> <span class=\"pre\">still</span> <span class=\"pre\">considered</span> <span class=\"pre\">as</span> <span class=\"pre\">``connected</span></code> by\nthe NavigationServer when their edges are nearly parallel and within distance\nto each other. The connection distance is defined by the  <code class=\"docutils literal notranslate\"><span class=\"pre\">edge_connection_margin</span></code> for each\nnavigation map. In many cases NavigationMesh edges cannot properly connect when they partly overlap.\nBetter avoid any navigation mesh overlap at all time for a consistent merge behavior.</p><p>If navigation debug is enabled and the NavigationServer active the established navigation mesh connections will be visualized.\nSee <a class=\"reference internal\" href=\"navigation_debug_tools.html#doc-navigation-debug-tools\"><span class=\"std std-ref\">Navigation Debug Tools</span></a> for more info about navigation debug options.</p><p>The default 2D <code class=\"docutils literal notranslate\"><span class=\"pre\">edge_connection_margin</span></code> can be changed in the ProjectSettings under <code class=\"docutils literal notranslate\"><span class=\"pre\">navigation/2d/default_edge_connection_margin</span></code>.</p><p>The default 3D <code class=\"docutils literal notranslate\"><span class=\"pre\">edge_connection_margin</span></code> can be changed in the ProjectSettings under <code class=\"docutils literal notranslate\"><span class=\"pre\">navigation/3d/default_edge_connection_margin</span></code>.</p><p>The edge connection margin value of any navigation map can also be changed at runtime with the NavigationServer API.</p>",
                    "description": null
                },
                "navigation_different_actor_types": {
                    "url": "https://docs.godotengine.org/en/4.1/tutorials/navigation/navigation_different_actor_types.html",
                    "title": "Support different actor types",
                    "blurb": "<p>To support different actor types due to e.g. their sizes each type requires its own\nnavigation map and navigation mesh baked with an appropriated agent radius and height.\nThe same approach can be used to distinguish between e.g. landwalking, swimming or flying agents.</p>",
                    "description": null
                },
                "navigation_different_actor_locomotion": {
                    "url": "https://docs.godotengine.org/en/4.1/tutorials/navigation/navigation_different_actor_locomotion.html",
                    "title": "Support different actor locomotion",
                    "blurb": "<p>To support different actor locomotion like crouching and crawling, a similar\nmap setup as supporting <a class=\"reference internal\" href=\"navigation_different_actor_types.html#doc-navigation-different-actor-types\"><span class=\"std std-ref\">Support different actor types</span></a> is required.</p><p>Bake different navigation meshes with an appropriate height for crouched\nor crawling actors so they can find paths through those narrow sections in your game world.</p><p>When an actor changes locomotion state, e.g. stands up, starts\ncrouching or crawling, query the appropriate map for a path.</p><p>If the avoidance behavior should also change with the locomotion e.g. only avoid while standing or only avoid\nother agents in the same locomotion state, switch the actors's avoidance agent to another avoidance map with each locomotion change.</p>",
                    "description": null
                },
                "navigation_different_actor_area_access": {
                    "url": "https://docs.godotengine.org/en/4.1/tutorials/navigation/navigation_different_actor_area_access.html",
                    "title": "Support different actor area access",
                    "blurb": "<p>A typical example for different area access in gameplay are doors that connect rooms\nwith different navigation meshes and are not accessible by all actors all the time.</p><p>Add a NavigationRegion at the door position.\nAdd an appropriated navigationmesh the size of the door that can connect with the surrounding navigationmeshes.\nIn order to control access enable / disable navigation layer bits so path queries\nthat use the same navigation layer bits can find a path through the \"door\" navigationmesh.</p><p>The bitmask can act as a set of door keys or abilities and only actors with at least\none matching and enabled bit layer in their pathfinding query will find a path through this region.\nSee <a class=\"reference internal\" href=\"navigation_using_navigationlayers.html#doc-navigation-advanced-using-navigationlayers\"><span class=\"std std-ref\">Using NavigationLayers</span></a> for more information on how to work with navigation layers and the bitmask.</p><p>The entire \"door\" region can also be enabled / disable if required but if disabled will block access for all path queries.</p><p>Prefer working with navigation layers in path queries whenever possible as enabling or disabling\nnavigation layers on a region triggers a performance costly recalculation of the navigation map connections.</p>",
                    "description": null
                },
                "navigation_optimizing_performance": {
                    "url": "https://docs.godotengine.org/en/4.1/tutorials/navigation/navigation_optimizing_performance.html",
                    "title": "Optimizing Navigation Performance",
                    "blurb": "<p>Common Navigation related performance problems can be categorized into the following topics:</p><p>In the following sections information can be found on how to identify and fix or at least mitigate their impact on framerates.</p>",
                    "description": null
                }
            },
            "networking": {
                "high_level_multiplayer": {
                    "url": "https://docs.godotengine.org/en/4.1/tutorials/networking/high_level_multiplayer.html",
                    "title": "High-level multiplayer",
                    "blurb": "",
                    "description": null
                },
                "http_request_class": {
                    "url": "https://docs.godotengine.org/en/4.1/tutorials/networking/http_request_class.html",
                    "title": "Making HTTP requests",
                    "blurb": "",
                    "description": null
                },
                "http_client_class": {
                    "url": "https://docs.godotengine.org/en/4.1/tutorials/networking/http_client_class.html",
                    "title": "HTTP client class",
                    "blurb": "<p><a class=\"reference internal\" href=\"../../classes/class_httpclient.html#class-httpclient\"><span class=\"std std-ref\">HTTPClient</span></a> provides low-level access to HTTP communication.\nFor a higher-level interface, you may want to take a look at <a class=\"reference internal\" href=\"../../classes/class_httprequest.html#class-httprequest\"><span class=\"std std-ref\">HTTPRequest</span></a> first,\nwhich has a tutorial available <a class=\"reference internal\" href=\"http_request_class.html#doc-http-request-class\"><span class=\"std std-ref\">here</span></a>.</p><p>Here's an example of using the <a class=\"reference internal\" href=\"../../classes/class_httpclient.html#class-httpclient\"><span class=\"std std-ref\">HTTPClient</span></a>\nclass. It's just a script, so it can be run by executing:</p><p>It will connect and fetch a website.</p>",
                    "description": null
                },
                "ssl_certificates": {
                    "url": "https://docs.godotengine.org/en/4.1/tutorials/networking/ssl_certificates.html",
                    "title": "SSL certificates",
                    "blurb": "",
                    "description": null
                },
                "websocket": {
                    "url": "https://docs.godotengine.org/en/4.1/tutorials/networking/websocket.html",
                    "title": "WebSocket",
                    "blurb": "",
                    "description": null
                },
                "webrtc": {
                    "url": "https://docs.godotengine.org/en/4.1/tutorials/networking/webrtc.html",
                    "title": "WebRTC",
                    "blurb": "",
                    "description": null
                }
            },
            "performance": {
                "general_optimization": {
                    "url": "https://docs.godotengine.org/en/4.1/tutorials/performance/general_optimization.html",
                    "title": "General optimization tips",
                    "blurb": "",
                    "description": null
                },
                "using_servers": {
                    "url": "https://docs.godotengine.org/en/4.1/tutorials/performance/using_servers.html",
                    "title": "Optimization using Servers",
                    "blurb": "<p>Engines like Godot provide increased ease of use thanks to their high level constructs and features.\nMost of them are accessed and used via the <a class=\"reference internal\" href=\"../scripting/scene_tree.html#doc-scene-tree\"><span class=\"std std-ref\">Scene System</span></a>. Using nodes and\nresources simplifies project organization and asset management in complex games.</p><p>There are, of course, always drawbacks:</p><p>In many cases, this is not really a problem (Godot is very optimized, and most operations are handled\nwith signals, so no polling is required). Still, sometimes it can be. For example, dealing with\ntens of thousands of instances for something that needs to be processed every frame can be a bottleneck.</p><p>This type of situation makes programmers regret they are using a game engine and wish they could go\nback to a more handcrafted, low level implementation of game code.</p><p>Still, Godot is designed to work around this problem.</p>",
                    "description": null
                },
                "cpu_optimization": {
                    "url": "https://docs.godotengine.org/en/4.1/tutorials/performance/cpu_optimization.html",
                    "title": "CPU optimization",
                    "blurb": "",
                    "description": null
                },
                "gpu_optimization": {
                    "url": "https://docs.godotengine.org/en/4.1/tutorials/performance/gpu_optimization.html",
                    "title": "GPU optimization",
                    "blurb": "",
                    "description": null
                },
                "using_multimesh": {
                    "url": "https://docs.godotengine.org/en/4.1/tutorials/performance/using_multimesh.html",
                    "title": "Optimization using MultiMeshes",
                    "blurb": "<p>For large amount of instances (in the thousands), that need to be constantly processed\n(and certain amount of control needs to be retained),\n<a class=\"reference internal\" href=\"using_servers.html#doc-using-servers\"><span class=\"std std-ref\">using servers directly</span></a> is the recommended optimization.</p><p>When the amount of objects reach the hundreds of thousands or millions,\nnone of these approaches are efficient anymore. Still, depending on the requirements, there\nis one more optimization possible.</p>",
                    "description": null
                },
                "optimizing_3d_performance": {
                    "url": "https://docs.godotengine.org/en/4.1/tutorials/performance/optimizing_3d_performance.html",
                    "title": "Optimizing 3D performance",
                    "blurb": "",
                    "description": null
                },
                "vertex_animation/index": {
                    "url": "https://docs.godotengine.org/en/4.1/tutorials/performance/vertex_animation/index.html",
                    "title": "Animating thousands of objects",
                    "blurb": "",
                    "description": null
                },
                "using_multiple_threads": {
                    "url": "https://docs.godotengine.org/en/4.1/tutorials/performance/using_multiple_threads.html",
                    "title": "Using multiple threads",
                    "blurb": "",
                    "description": null
                },
                "thread_safe_apis": {
                    "url": "https://docs.godotengine.org/en/4.1/tutorials/performance/thread_safe_apis.html",
                    "title": "Thread-safe APIs",
                    "blurb": "",
                    "description": null
                }
            },
            "physics": {
                "physics_introduction": {
                    "url": "https://docs.godotengine.org/en/4.1/tutorials/physics/physics_introduction.html",
                    "title": "Physics introduction",
                    "blurb": "<p>In game development, you often need to know when two objects in the game\nintersect or come into contact. This is known as <strong>collision detection</strong>.\nWhen a collision is detected, you typically want something to happen. This\nis known as <strong>collision response</strong>.</p><p>Godot offers a number of collision objects in 2D and 3D to provide both collision detection\nand response. Trying to decide which one to use for your project can be confusing.\nYou can avoid problems and simplify development if you understand how each works\nand what their pros and cons are.</p><p>In this guide, you will learn:</p>",
                    "description": null
                },
                "rigid_body": {
                    "url": "https://docs.godotengine.org/en/4.1/tutorials/physics/rigid_body.html",
                    "title": "Using RigidBody",
                    "blurb": "",
                    "description": null
                },
                "using_area_2d": {
                    "url": "https://docs.godotengine.org/en/4.1/tutorials/physics/using_area_2d.html",
                    "title": "Using Area2D",
                    "blurb": "",
                    "description": null
                },
                "using_character_body_2d": {
                    "url": "https://docs.godotengine.org/en/4.1/tutorials/physics/using_character_body_2d.html",
                    "title": "Using CharacterBody2D/3D",
                    "blurb": "",
                    "description": null
                },
                "ray-casting": {
                    "url": "https://docs.godotengine.org/en/4.1/tutorials/physics/ray-casting.html",
                    "title": "Ray-casting",
                    "blurb": "",
                    "description": null
                },
                "ragdoll_system": {
                    "url": "https://docs.godotengine.org/en/4.1/tutorials/physics/ragdoll_system.html",
                    "title": "Ragdoll system",
                    "blurb": "",
                    "description": null
                },
                "kinematic_character_2d": {
                    "url": "https://docs.godotengine.org/en/4.1/tutorials/physics/kinematic_character_2d.html",
                    "title": "Kinematic character (2D)",
                    "blurb": "",
                    "description": null
                },
                "soft_body": {
                    "url": "https://docs.godotengine.org/en/4.1/tutorials/physics/soft_body.html",
                    "title": "Using SoftBody",
                    "blurb": "<p>Soft bodies (or <em>soft-body dynamics</em>) simulate movement, changing shape and other physical properties of deformable objects.\nThis can for example be used to simulate cloth or to create more realistic characters.</p>",
                    "description": null
                },
                "collision_shapes_2d": {
                    "url": "https://docs.godotengine.org/en/4.1/tutorials/physics/collision_shapes_2d.html",
                    "title": "Collision shapes (2D)",
                    "blurb": "<p>This guide explains:</p><p>Godot provides many kinds of collision shapes, with different performance and\naccuracy tradeoffs.</p><p>You can define the shape of a <a class=\"reference internal\" href=\"../../classes/class_physicsbody2d.html#class-physicsbody2d\"><span class=\"std std-ref\">PhysicsBody2D</span></a> by adding one or more\n<a class=\"reference internal\" href=\"../../classes/class_collisionshape2d.html#class-collisionshape2d\"><span class=\"std std-ref\">CollisionShape2Ds</span></a> or\n<a class=\"reference internal\" href=\"../../classes/class_collisionpolygon2d.html#class-collisionpolygon2d\"><span class=\"std std-ref\">CollisionPolygon2Ds</span></a> as child nodes.\nNote that you must add a <a class=\"reference internal\" href=\"../../classes/class_shape2d.html#class-shape2d\"><span class=\"std std-ref\">Shape2D</span></a> <em>resource</em> to collision shape\nnodes in the Inspector dock.</p>",
                    "description": null
                },
                "collision_shapes_3d": {
                    "url": "https://docs.godotengine.org/en/4.1/tutorials/physics/collision_shapes_3d.html",
                    "title": "Collision shapes (3D)",
                    "blurb": "<p>This guide explains:</p><p>Godot provides many kinds of collision shapes, with different performance and\naccuracy tradeoffs.</p><p>You can define the shape of a <a class=\"reference internal\" href=\"../../classes/class_physicsbody3d.html#class-physicsbody3d\"><span class=\"std std-ref\">PhysicsBody3D</span></a> by adding one or more\n<a class=\"reference internal\" href=\"../../classes/class_collisionshape3d.html#class-collisionshape3d\"><span class=\"std std-ref\">CollisionShape3Ds</span></a> as child nodes. Note that you must\nadd a <a class=\"reference internal\" href=\"../../classes/class_shape3d.html#class-shape3d\"><span class=\"std std-ref\">Shape3D</span></a> <em>resource</em> to collision shape nodes in the Inspector\ndock.</p>",
                    "description": null
                },
                "large_world_coordinates": {
                    "url": "https://docs.godotengine.org/en/4.1/tutorials/physics/large_world_coordinates.html",
                    "title": "Large world coordinates",
                    "blurb": "",
                    "description": null
                },
                "troubleshooting_physics_issues": {
                    "url": "https://docs.godotengine.org/en/4.1/tutorials/physics/troubleshooting_physics_issues.html",
                    "title": "Troubleshooting physics issues",
                    "blurb": "<p>When working with a physics engine, you may encounter unexpected results.</p><p>While many of these issues can be resolved through configuration, some of them\nare the result of engine bugs. For known issues related to the physics engine,\nsee\n<a class=\"reference external\" href=\"https://github.com/godotengine/godot/issues?q=is%3Aopen+is%3Aissue+label%3Atopic%3Aphysics\">open physics-related issues on GitHub</a>.\nLooking through <a class=\"reference external\" href=\"https://github.com/godotengine/godot/issues?q=+is%3Aclosed+is%3Aissue+label%3Atopic%3Aphysics\">closed issues</a>\ncan also help answer questions related to physics engine behavior.</p>",
                    "description": null
                }
            },
            "platform": {
                "android/index": {
                    "url": "https://docs.godotengine.org/en/4.1/tutorials/platform/android/index.html",
                    "title": "Android",
                    "blurb": "",
                    "description": null
                },
                "ios/index": {
                    "url": "https://docs.godotengine.org/en/4.1/tutorials/platform/ios/index.html",
                    "title": "iOS plugins",
                    "blurb": "",
                    "description": null
                },
                "web/index": {
                    "url": "https://docs.godotengine.org/en/4.1/tutorials/platform/web/index.html",
                    "title": "HTML5",
                    "blurb": "",
                    "description": null
                },
                "consoles": {
                    "url": "https://docs.godotengine.org/en/4.1/tutorials/platform/consoles.html",
                    "title": "Console support in Godot",
                    "blurb": "",
                    "description": null
                }
            },
            "plugins": {
                "editor/index": {
                    "url": "https://docs.godotengine.org/en/4.1/tutorials/plugins/editor/index.html",
                    "title": "Editor plugins",
                    "blurb": "",
                    "description": null
                },
                "running_code_in_the_editor": {
                    "url": "https://docs.godotengine.org/en/4.1/tutorials/plugins/running_code_in_the_editor.html",
                    "title": "Running code in the editor",
                    "blurb": "",
                    "description": null
                }
            },
            "rendering": {
                "viewports": {
                    "url": "https://docs.godotengine.org/en/4.1/tutorials/rendering/viewports.html",
                    "title": "Using Viewports",
                    "blurb": "",
                    "description": null
                },
                "multiple_resolutions": {
                    "url": "https://docs.godotengine.org/en/4.1/tutorials/rendering/multiple_resolutions.html",
                    "title": "Multiple resolutions",
                    "blurb": "",
                    "description": null
                },
                "jitter_stutter": {
                    "url": "https://docs.godotengine.org/en/4.1/tutorials/rendering/jitter_stutter.html",
                    "title": "Fixing jitter, stutter and input lag",
                    "blurb": "",
                    "description": null
                }
            },
            "scripting": {
                "gdscript/index": {
                    "url": "https://docs.godotengine.org/en/4.1/tutorials/scripting/gdscript/index.html",
                    "title": "GDScript",
                    "blurb": "",
                    "description": null
                },
                "c_sharp/index": {
                    "url": "https://docs.godotengine.org/en/4.1/tutorials/scripting/c_sharp/index.html",
                    "title": "C#",
                    "blurb": "",
                    "description": null
                },
                "gdextension/index": {
                    "url": "https://docs.godotengine.org/en/4.1/tutorials/scripting/gdextension/index.html",
                    "title": "GDExtension",
                    "blurb": "",
                    "description": null
                },
                "how_to_read_the_godot_api": {
                    "url": "https://docs.godotengine.org/en/4.1/tutorials/scripting/how_to_read_the_godot_api.html",
                    "title": "How to read the Godot API",
                    "blurb": "<p>On this page, you'll learn how to read the class reference for the Godot API.</p><p>The API, or Application Programming Interface, is an index of what Godot offers\nusers. It provides a brief summary of which classes exist, how they are\nrelated to each other, what features they have, and how to use them.</p>",
                    "description": "\n\n<img alt=\"../../_images/class_api_description.webp\" src=\"../../_images/class_api_description.webp\">\n<p>Next a more detailed description the class, its features, and its use case(s).</p>\n<p>Things you may find here:</p>\n<ol class=\"arabic simple\">\n<li><p>Specifics of how the class works.</p></li>\n<li><p>Code samples of common use cases.</p></li>\n<li><p>Usage details which are shared between each of the class's methods.</p></li>\n<li><p>Warnings about required dependencies or configuration.</p></li>\n<li><p>Links to other related parts of the Godot API.</p></li>\n</ol>\n"
                },
                "debug/index": {
                    "url": "https://docs.godotengine.org/en/4.1/tutorials/scripting/debug/index.html",
                    "title": "Debug",
                    "blurb": "",
                    "description": null
                },
                "idle_and_physics_processing": {
                    "url": "https://docs.godotengine.org/en/4.1/tutorials/scripting/idle_and_physics_processing.html",
                    "title": "Idle and Physics Processing",
                    "blurb": "<p>Games run in a loop. Each frame, you need to update the state of your game world\nbefore drawing it on screen. Godot provides two virtual methods in the Node\nclass to do so: <a class=\"reference internal\" href=\"../../classes/class_node.html#class-node-method-process\"><span class=\"std std-ref\">Node._process()</span></a> and\n<a class=\"reference internal\" href=\"../../classes/class_node.html#class-node-method-physics-process\"><span class=\"std std-ref\">Node._physics_process()</span></a>. If you\ndefine either or both in a script, the engine will call them automatically.</p><p>There are two types of processing available to you:</p><p>You can activate idle processing by defining the <code class=\"docutils literal notranslate\"><span class=\"pre\">_process()</span></code> method in a\nscript. You can turn it off and back on by calling <a class=\"reference internal\" href=\"../../classes/class_node.html#class-node-method-set-process\"><span class=\"std std-ref\">Node.set_process()</span></a>.</p><p>The engine calls this method every time it draws a frame:</p><p>Keep in mind that the frequency at which the engine calls <code class=\"docutils literal notranslate\"><span class=\"pre\">_process()</span></code> depends\non your application's framerate, which varies over time and across devices.</p><p>The function's <code class=\"docutils literal notranslate\"><span class=\"pre\">delta</span></code> parameter is the time elapsed in seconds since the\nprevious call to <code class=\"docutils literal notranslate\"><span class=\"pre\">_process()</span></code>. Use this parameter to make calculations\nindependent of the framerate. For example, you should always multiply a speed\nvalue by <code class=\"docutils literal notranslate\"><span class=\"pre\">delta</span></code> to animate a moving object.</p><p>Physics processing works with a similar virtual function:\n<code class=\"docutils literal notranslate\"><span class=\"pre\">_physics_process()</span></code>. Use it for calculations that must happen before each\nphysics step, like moving a character that collides with the game world. As\nmentioned above, <code class=\"docutils literal notranslate\"><span class=\"pre\">_physics_process()</span></code> runs at fixed time intervals as much as\npossible to keep the physics interactions stable. You can change the interval\nbetween physics steps in the Project Settings, under Physics -&gt; Common -&gt;\nPhysics Fps. By default, it's set to run 60 times per second.</p><p>The engine calls this method before every physics step:</p><p>The function <code class=\"docutils literal notranslate\"><span class=\"pre\">_process()</span></code> is not synchronized with physics. Its rate depends on\nhardware and game optimization. It also runs after the physics step in\nsingle-threaded games.</p><p>You can see the <code class=\"docutils literal notranslate\"><span class=\"pre\">_process()</span></code> function at work by creating a scene with a\nsingle Label node, with the following script attached to it:</p><p>When you run the scene, you should see a counter increasing each frame.</p>",
                    "description": null
                },
                "groups": {
                    "url": "https://docs.godotengine.org/en/4.1/tutorials/scripting/groups.html",
                    "title": "Groups",
                    "blurb": "<p>Groups in Godot work like tags in other software. You can add a node to as many\ngroups as you want. Then, in code, you can use the SceneTree to:</p><p>This is a useful feature to organize large scenes and decouple code.</p>",
                    "description": null
                },
                "nodes_and_scene_instances": {
                    "url": "https://docs.godotengine.org/en/4.1/tutorials/scripting/nodes_and_scene_instances.html",
                    "title": "Nodes and scene instances",
                    "blurb": "<p>This guide explains how to get nodes, create nodes, add them as a child, and\ninstantiate scenes from code.</p>",
                    "description": null
                },
                "overridable_functions": {
                    "url": "https://docs.godotengine.org/en/4.1/tutorials/scripting/overridable_functions.html",
                    "title": "Overridable functions",
                    "blurb": "<p>Godot's Node class provides virtual functions you can override to update nodes\nevery frame or on specific events, like when they enter the scene tree.</p><p>This document presents the ones you'll use most often.</p><p>Two functions allow you to initialize and get nodes, besides the class's\nconstructor: <code class=\"docutils literal notranslate\"><span class=\"pre\">_enter_tree()</span></code> and <code class=\"docutils literal notranslate\"><span class=\"pre\">_ready()</span></code>.</p><p>When the node enters the Scene Tree, it becomes active and the engine calls its\n<code class=\"docutils literal notranslate\"><span class=\"pre\">_enter_tree()</span></code> method. That node's children may not be part of the active scene yet. As\nyou can remove and re-add nodes to the scene tree, this function may be called\nmultiple times throughout a node's lifetime.</p><p>Most of the time, you'll use <code class=\"docutils literal notranslate\"><span class=\"pre\">_ready()</span></code> instead. This function is called only\nonce in a node's lifetime, after <code class=\"docutils literal notranslate\"><span class=\"pre\">_enter_tree()</span></code>. <code class=\"docutils literal notranslate\"><span class=\"pre\">_ready()</span></code> ensures that all children\nhave entered the scene tree first, so you can safely call <code class=\"docutils literal notranslate\"><span class=\"pre\">get_node()</span></code> on it.</p><p>Another related callback is <code class=\"docutils literal notranslate\"><span class=\"pre\">_exit_tree()</span></code>, which the engine calls every time\na node exits the scene tree. This can be when you call <a class=\"reference internal\" href=\"../../classes/class_node.html#class-node-method-remove-child\"><span class=\"std std-ref\">Node.remove_child()</span></a> or when you free a node.</p><p>The two virtual methods <code class=\"docutils literal notranslate\"><span class=\"pre\">_process()</span></code> and <code class=\"docutils literal notranslate\"><span class=\"pre\">_physics_process()</span></code> allow you to\nupdate the node, every frame and every physics frame respectively. For more\ninformation, read the dedicated documentation:\n<a class=\"reference internal\" href=\"idle_and_physics_processing.html#doc-idle-and-physics-processing\"><span class=\"std std-ref\">Idle and Physics Processing</span></a>.</p><p>Two more essential built-in node callback functions are\n<a class=\"reference internal\" href=\"../../classes/class_node.html#class-node-method-unhandled-input\"><span class=\"std std-ref\">Node._unhandled_input()</span></a> and\n<a class=\"reference internal\" href=\"../../classes/class_node.html#class-node-method-input\"><span class=\"std std-ref\">Node._input()</span></a>, which you use to both receive\nand process individual input events. The <code class=\"docutils literal notranslate\"><span class=\"pre\">_unhandled_input()</span></code> method receives\nevery key press, mouse click, etc. that have not been handled already in an\n<code class=\"docutils literal notranslate\"><span class=\"pre\">_input()</span></code> callback or in a user interface component. You want to use it for\ngameplay input in general. The <code class=\"docutils literal notranslate\"><span class=\"pre\">_input()</span></code> callback allows you to intercept and\nprocess input events before <code class=\"docutils literal notranslate\"><span class=\"pre\">_unhandled_input()</span></code> gets them.</p><p>To learn more about inputs in Godot, see the <a class=\"reference internal\" href=\"../inputs/index.html#toc-learn-features-inputs\"><span class=\"std std-ref\">Input section</span></a>.</p><p>There are some more overridable functions like\n<a class=\"reference internal\" href=\"../../classes/class_node.html#class-node-method-get-configuration-warnings\"><span class=\"std std-ref\">Node._get_configuration_warnings()</span></a>. Specialized node types provide\nmore callbacks like <a class=\"reference internal\" href=\"../../classes/class_canvasitem.html#class-canvasitem-method-draw\"><span class=\"std std-ref\">CanvasItem._draw()</span></a> to\ndraw programmatically or <a class=\"reference internal\" href=\"../../classes/class_control.html#class-control-method-gui-input\"><span class=\"std std-ref\">Control._gui_input()</span></a> to handle clicks and input on UI elements.</p>",
                    "description": null
                },
                "cross_language_scripting": {
                    "url": "https://docs.godotengine.org/en/4.1/tutorials/scripting/cross_language_scripting.html",
                    "title": "Cross-language scripting",
                    "blurb": "<p>Godot allows you to mix and match scripting languages to suit your needs.\nThis means a single project can define nodes in both C# and GDScript.\nThis page will go through the possible interactions between two nodes written\nin different languages.</p><p>The following two scripts will be used as references throughout this page.</p>",
                    "description": null
                },
                "creating_script_templates": {
                    "url": "https://docs.godotengine.org/en/4.1/tutorials/scripting/creating_script_templates.html",
                    "title": "Creating script templates",
                    "blurb": "<p>Godot provides a way to use script templates as seen in the\n<code class=\"docutils literal notranslate\"><span class=\"pre\">Script</span> <span class=\"pre\">Create</span> <span class=\"pre\">Dialog</span></code> while creating a new script:</p><p>A set of built-in script templates are provided with the editor, but it is\nalso possible to create new ones and set them by default, both per project\nand at editor scope.</p><p>Templates are linked to a specific node type, so when you create a script\nyou will only see the templates corresponding to that particular node, or\none of its parent types.\nFor example, if you are creating a script for a CharacterBody3D, you will\nonly see templates defined for CharacterBody3Ds, Node3Ds or Nodes.</p>",
                    "description": null
                },
                "evaluating_expressions": {
                    "url": "https://docs.godotengine.org/en/4.1/tutorials/scripting/evaluating_expressions.html",
                    "title": "Evaluating expressions",
                    "blurb": "<p>Godot provides an <a class=\"reference internal\" href=\"../../classes/class_expression.html#class-expression\"><span class=\"std std-ref\">Expression</span></a> class you can use to evaluate expressions.</p><p>An expression can be:</p>",
                    "description": null
                },
                "change_scenes_manually": {
                    "url": "https://docs.godotengine.org/en/4.1/tutorials/scripting/change_scenes_manually.html",
                    "title": "Change scenes manually",
                    "blurb": "<p>Sometimes it helps to have more control over how one swaps scenes around.\nAs mentioned above, a <a class=\"reference internal\" href=\"../../classes/class_viewport.html#class-viewport\"><span class=\"std std-ref\">Viewport</span></a>'s child nodes\nwill render to the image it generates. This holds true even for nodes outside\nof the \"current\" scene. Autoloads fall into this category, but so do\nscenes which one instances and adds to the tree at runtime:</p><p>To complete the cycle and swap out the new scene with the old one,\ndevelopers have a choice to make. Many strategies exist for removing a scene\nfrom view of the <a class=\"reference internal\" href=\"../../classes/class_viewport.html#class-viewport\"><span class=\"std std-ref\">Viewport</span></a>. The tradeoffs involve\nbalancing operation speed and memory consumption as well as balancing data\naccess and integrity.</p><p>There are also cases where one may wish to have many scenes present at the same\ntime. Perhaps one is adding their own singleton at runtime, or preserving a\na scene's data between scene changes (adding the scene to the root node).</p><p>Perhaps instead they wish to display multiple scenes at the same time using\n<a class=\"reference internal\" href=\"../../classes/class_subviewportcontainer.html#class-subviewportcontainer\"><span class=\"std std-ref\">SubViewportContainers</span></a>. This is optimal in\ncases where the intent is to render different content in different parts of the\nscreen. Minimaps and split-screen multiplayer are good examples.</p><p>Each option will have cases where it is best appropriate, so one must\nexamine the effects of each and determine what path best fits\ntheir unique situation.</p>",
                    "description": null
                },
                "instancing_with_signals": {
                    "url": "https://docs.godotengine.org/en/4.1/tutorials/scripting/instancing_with_signals.html",
                    "title": "Instancing with signals",
                    "blurb": "<p>Signals provide a way to decouple game objects, allowing you to avoid forcing a\nfixed arrangement of nodes. One sign that a signal might be called for is when\nyou find yourself using <code class=\"docutils literal notranslate\"><span class=\"pre\">get_parent()</span></code>. Referring directly to a node's parent\nmeans that you can't easily move that node to another location in the scene tree.\nThis can be especially problematic when you are instancing objects at runtime\nand may want to place them in an arbitrary location in the running scene tree.</p><p>Below we'll consider an example of such a situation: firing bullets.</p>",
                    "description": null
                },
                "pausing_games": {
                    "url": "https://docs.godotengine.org/en/4.1/tutorials/scripting/pausing_games.html",
                    "title": "Pausing games and process mode",
                    "blurb": "",
                    "description": null
                },
                "filesystem": {
                    "url": "https://docs.godotengine.org/en/4.1/tutorials/scripting/filesystem.html",
                    "title": "File system",
                    "blurb": "",
                    "description": null
                },
                "resources": {
                    "url": "https://docs.godotengine.org/en/4.1/tutorials/scripting/resources.html",
                    "title": "Resources",
                    "blurb": "",
                    "description": null
                },
                "singletons_autoload": {
                    "url": "https://docs.godotengine.org/en/4.1/tutorials/scripting/singletons_autoload.html",
                    "title": "Singletons (Autoload)",
                    "blurb": "",
                    "description": null
                },
                "scene_tree": {
                    "url": "https://docs.godotengine.org/en/4.1/tutorials/scripting/scene_tree.html",
                    "title": "Using SceneTree",
                    "blurb": "",
                    "description": null
                },
                "scene_unique_nodes": {
                    "url": "https://docs.godotengine.org/en/4.1/tutorials/scripting/scene_unique_nodes.html",
                    "title": "Scene Unique Nodes",
                    "blurb": "",
                    "description": null
                }
            },
            "shaders": {
                "introduction_to_shaders": {
                    "url": "https://docs.godotengine.org/en/4.1/tutorials/shaders/introduction_to_shaders.html",
                    "title": "Introduction to shaders",
                    "blurb": "<p>This page explains what shaders are and will give you an overview of how they\nwork in Godot. For a detailed reference of the engine's shading language, see\n<a class=\"reference internal\" href=\"shader_reference/shading_language.html#doc-shading-language\"><span class=\"std std-ref\">Shading language</span></a>.</p><p>Shaders are a special kind of program that runs on Graphics Processing Units\n(GPUs). They were initially used to shade 3D scenes but can nowadays do much\nmore. You can use them to control how the engine draws geometry and pixels on\nthe screen, allowing you to achieve all sorts of effects.</p><p>Modern rendering engines like Godot draw everything with shaders: graphics cards\ncan run thousands of instructions in parallel, leading to incredible rendering\nspeed.</p><p>Because of their parallel nature, though, shaders don't process information the\nway a typical program does. Shader code runs on each vertex or pixel in\nisolation. You cannot store data between frames either. As a result, when\nworking with shaders, you need to code and think differently from other\nprogramming languages.</p><p>Suppose you want to update all the pixels in a texture to a given color. In\nGDScript, your code would use <code class=\"docutils literal notranslate\"><span class=\"pre\">for</span></code> loops:</p><p>Your code is already part of a loop in a shader, so the corresponding code would\nlook like this.</p>",
                    "description": null
                },
                "shader_reference/index": {
                    "url": "https://docs.godotengine.org/en/4.1/tutorials/shaders/shader_reference/index.html",
                    "title": "Shading reference",
                    "blurb": "",
                    "description": null
                },
                "your_first_shader/index": {
                    "url": "https://docs.godotengine.org/en/4.1/tutorials/shaders/your_first_shader/index.html",
                    "title": "Your first shader",
                    "blurb": "<p>This tutorial series will walk you through writing your first shader. It is intended\nfor people who have very little prior experience with shaders and want to get started\nwith the basics. This tutorial will not cover advanced topics and it is not\ncomprehensive. For a comprehensive and detailed overview of shaders in Godot see the\n<a class=\"reference internal\" href=\"../shader_reference/index.html#toc-shading-reference\"><span class=\"std std-ref\">Shading Reference Page</span></a>.</p><p>The \"your first shader\" tutorials walk you through the process of writing a shader\nstep-by-step.</p><p>For a more general introduction into shaders and the OpenGL Shading Language, use\n<a class=\"reference external\" href=\"https://thebookofshaders.com\">The Book of Shaders</a>.</p>",
                    "description": null
                },
                "shader_materials": {
                    "url": "https://docs.godotengine.org/en/4.1/tutorials/shaders/shader_materials.html",
                    "title": "Shader materials",
                    "blurb": "",
                    "description": null
                },
                "visual_shaders": {
                    "url": "https://docs.godotengine.org/en/4.1/tutorials/shaders/visual_shaders.html",
                    "title": "Using VisualShaders",
                    "blurb": "<p>VisualShaders are the visual alternative for creating shaders.</p><p>As shaders are inherently linked to visuals, the graph-based approach with\npreviews of textures, materials, etc. offers a lot of additional convenience\ncompared to purely script-based shaders. On the other hand, VisualShaders do not\nexpose all features of the shader script and using both in parallel might be\nnecessary for specific effects.</p>",
                    "description": null
                },
                "compute_shaders": {
                    "url": "https://docs.godotengine.org/en/4.1/tutorials/shaders/compute_shaders.html",
                    "title": "Using compute shaders",
                    "blurb": "<p>This tutorial will walk you through the process of creating a minimal compute\nshader. But first, a bit of background on compute shaders and how they work with\nGodot.</p><p>A compute shader is a special type of shader program that is orientated towards\ngeneral purpose programming. In other words, they are more flexible than vertex\nshaders and fragment shaders as they don't have a fixed purpose (i.e.\ntransforming vertices or writing colors to an image). Unlike fragment shaders\nand vertex shaders, compute shaders have very little going on behind the scenes.\nThe code you write is what the GPU runs and very little else. This can make them\na very useful tool to offload heavy calculations to the GPU.</p><p>Now let's get started by creating a short compute shader.</p><p>First, in the <strong>external</strong> text editor of your choice, create a new file called\n<code class=\"docutils literal notranslate\"><span class=\"pre\">compute_example.glsl</span></code> in your project folder. When you write compute shaders\nin Godot, you write them in GLSL directly. The Godot shader language is based on\nGLSL. If you are familiar with normal shaders in Godot, the syntax below will\nlook somewhat familiar.</p><p>Let's take a look at this compute shader code:</p><p>This code takes an array of floats, multiplies each element by 2 and store the\nresults back in the buffer array. Now let's look at it line-by-line.</p><p>These two lines communicate two things:</p><p>You should never have to change these two lines for your custom compute shaders.</p><p>Next, we communicate the number of invocations to be used in each workgroup.\nInvocations are instances of the shader that are running within the same\nworkgroup. When we launch a compute shader from the CPU, we tell it how many\nworkgroups to run. Workgroups run in parallel to each other. While running one\nworkgroup, you cannot access information in another workgroup. However,\ninvocations in the same workgroup can have some limited access to other invocations.</p><p>Think about workgroups and invocations as a giant nested <code class=\"docutils literal notranslate\"><span class=\"pre\">for</span></code> loop.</p><p>Workgroups and invocations are an advanced topic. For now, remember that we will\nbe running two invocations per workgroup.</p><p>Here we provide information about the memory that the compute shader will have\naccess to. The <code class=\"docutils literal notranslate\"><span class=\"pre\">layout</span></code> property allows us to tell the shader where to look\nfor the buffer, we will need to match these <code class=\"docutils literal notranslate\"><span class=\"pre\">set</span></code> and <code class=\"docutils literal notranslate\"><span class=\"pre\">binding</span></code> positions\nfrom the CPU side later.</p><p>The <code class=\"docutils literal notranslate\"><span class=\"pre\">restrict</span></code> keyword tells the shader that this buffer is only going to be\naccessed from one place in this shader. In other words, we won't bind this\nbuffer in another <code class=\"docutils literal notranslate\"><span class=\"pre\">set</span></code> or <code class=\"docutils literal notranslate\"><span class=\"pre\">binding</span></code> index. This is important as it allows\nthe shader compiler to optimize the shader code. Always use <code class=\"docutils literal notranslate\"><span class=\"pre\">restrict</span></code> when\nyou can.</p><p>This is an <em>unsized</em> buffer, which means it can be any size. So we need to be\ncareful not to read from an index larger than the size of the buffer.</p><p>Finally, we write the <code class=\"docutils literal notranslate\"><span class=\"pre\">main</span></code> function which is where all the logic happens. We\naccess a position in the storage buffer using the <code class=\"docutils literal notranslate\"><span class=\"pre\">gl_GlobalInvocationID</span></code>\nbuilt in variables. <code class=\"docutils literal notranslate\"><span class=\"pre\">gl_GlobalInvocationID</span></code> gives you the global unique ID for\nthe current invocation.</p><p>To continue, write the code above into your newly created <code class=\"docutils literal notranslate\"><span class=\"pre\">compute_example.glsl</span></code>\nfile.</p>",
                    "description": null
                },
                "screen-reading_shaders": {
                    "url": "https://docs.godotengine.org/en/4.1/tutorials/shaders/screen-reading_shaders.html",
                    "title": "Screen-reading shaders",
                    "blurb": "",
                    "description": null
                },
                "converting_glsl_to_godot_shaders": {
                    "url": "https://docs.godotengine.org/en/4.1/tutorials/shaders/converting_glsl_to_godot_shaders.html",
                    "title": "Converting GLSL to Godot shaders",
                    "blurb": "<p>This document explains the differences between Godot's shading language and GLSL\nand gives practical advice on how to migrate shaders from other sources, such as\nShadertoy and The Book of Shaders, into Godot shaders.</p><p>For detailed information on Godot's shading language, please refer to the\n<a class=\"reference internal\" href=\"shader_reference/shading_language.html#doc-shading-language\"><span class=\"std std-ref\">Shading Language</span></a> reference.</p>",
                    "description": null
                },
                "shaders_style_guide": {
                    "url": "https://docs.godotengine.org/en/4.1/tutorials/shaders/shaders_style_guide.html",
                    "title": "Shaders style guide",
                    "blurb": "<p>This style guide lists conventions to write elegant shaders. The goal is to\nencourage writing clean, readable code and promote consistency across projects,\ndiscussions, and tutorials. Hopefully, this will also support the development of\nauto-formatting tools.</p><p>Since the Godot shader language is close to C-style languages and GLSL, this\nguide is inspired by Godot's own GLSL formatting. You can view an example of a\nGLSL file in Godot's source code\n<a class=\"reference external\" href=\"https://github.com/godotengine/godot/blob/master/drivers/gles3/shaders/copy.glsl\">here</a>.</p><p>Style guides aren't meant as hard rulebooks. At times, you may not be able to\napply some of the guidelines below. When that happens, use your best judgment,\nand ask fellow developers for insights.</p><p>In general, keeping your code consistent in your projects and within your team is\nmore important than following this guide to a tee.</p><p>Here is a complete shader example based on these guidelines:</p>",
                    "description": null
                },
                "advanced_postprocessing": {
                    "url": "https://docs.godotengine.org/en/4.1/tutorials/shaders/advanced_postprocessing.html",
                    "title": "Advanced post-processing",
                    "blurb": "",
                    "description": null
                },
                "using_viewport_as_texture": {
                    "url": "https://docs.godotengine.org/en/4.1/tutorials/shaders/using_viewport_as_texture.html",
                    "title": "Using a Viewport as a texture",
                    "blurb": "",
                    "description": null
                },
                "custom_postprocessing": {
                    "url": "https://docs.godotengine.org/en/4.1/tutorials/shaders/custom_postprocessing.html",
                    "title": "Custom post-processing",
                    "blurb": "",
                    "description": null
                },
                "making_trees": {
                    "url": "https://docs.godotengine.org/en/4.1/tutorials/shaders/making_trees.html",
                    "title": "Making trees",
                    "blurb": "<p>This is a short tutorial on how to make trees and other types of vegetation from scratch.</p><p>The aim is to not focus on the modeling techniques (there are plenty of tutorials about that), but how to make them look good in Godot.</p>",
                    "description": null
                }
            },
            "ui": {
                "size_and_anchors": {
                    "url": "https://docs.godotengine.org/en/4.1/tutorials/ui/size_and_anchors.html",
                    "title": "Size and anchors",
                    "blurb": "<p>If a game was always going to be run on the same device and at the same\nresolution, positioning controls would be a simple matter of setting the\nposition and size of each one of them. Unfortunately, that is rarely the\ncase.</p><p>Only TVs nowadays have a standard resolution and aspect ratio.\nEverything else, from computer monitors to tablets, portable consoles\nand mobile phones have different resolutions and aspect ratios.</p><p>There are several ways to handle this, but for now, let's just imagine\nthat the screen resolution has changed and the controls need to be\nre-positioned. Some will need to follow the bottom of the screen, others\nthe top of the screen, or maybe the right or left margins.</p><p>This is done by editing the <em>margin</em> properties of controls. Each\ncontrol has four margins: left, right, bottom, and top, which correspond\nto the respective edges of the control. By default, all of\nthem represent a distance in pixels relative to the top-left corner of\nthe parent control or (in case there is no parent control) the viewport.</p><p>So to make the control wider you can make the right margin larger and/or\nmake the left margin smaller. This lets you set the exact placement\nand shape of the control.</p><p>The <em>anchor</em> properties adjust where the margin distances are relative <em>to</em>.\nEach margin has an individual anchor that can be adjusted from the\nbeginning to the end of the parent. So the vertical (top, bottom) anchors\nadjust from 0 (top of parent) to 1.0 (bottom of parent) with 0.5 being\nthe center, and the control margins will be placed relative to that\npoint. The horizontal (left, right) anchors similarly adjust from left to\nright of the parent.</p><p>Note that when you wish the edge of a control to be above or left of the\nanchor point, you must change the margin value to be negative.</p><p>For example: when horizontal anchors are changed to 1, the margin values\nbecome relative to the top-right corner of the parent control or viewport.</p><p>Adjusting the two horizontal or the two vertical anchors to different\nvalues will make the control change size when the parent control does.\nHere, the control is set to anchor its bottom-right corner to the\nparent's bottom-right, while the top-left control margins are still\nanchored to the top-left of the parent, so when re-sizing the parent,\nthe control will always cover it, leaving a 20 pixel margin:</p>",
                    "description": null
                },
                "gui_containers": {
                    "url": "https://docs.godotengine.org/en/4.1/tutorials/ui/gui_containers.html",
                    "title": "Using Containers",
                    "blurb": "<p><a class=\"reference internal\" href=\"size_and_anchors.html#doc-size-and-anchors\"><span class=\"std std-ref\">Anchors</span></a> are an efficient way to handle\ndifferent aspect ratios for basic multiple resolution handling in GUIs,</p><p>For more complex user interfaces, they can become difficult to use.</p><p>This is often the case of games, such as RPGs, online chats, tycoons or simulations. Another\ncommon case where more advanced layout features may be required is in-game tools (or simply just tools).</p><p>All these situations require a more capable OS-like user interface, with advanced layout and formatting.\nFor that, <a class=\"reference internal\" href=\"../../classes/class_container.html#class-container\"><span class=\"std std-ref\">Containers</span></a> are more useful.</p>",
                    "description": null
                },
                "custom_gui_controls": {
                    "url": "https://docs.godotengine.org/en/4.1/tutorials/ui/custom_gui_controls.html",
                    "title": "Custom GUI controls",
                    "blurb": "",
                    "description": null
                },
                "gui_navigation": {
                    "url": "https://docs.godotengine.org/en/4.1/tutorials/ui/gui_navigation.html",
                    "title": "Keyboard/Controller Navigation and Focus",
                    "blurb": "<p>It is a common requirement for a user interface to have full keyboard\nand controller support for navigation and interaction. There are two main\nreasons why this is beneficial for projects: improved accessibility (not everyone\ncan use mouse or touch controls for interactions), and getting your project\nready for <a class=\"reference internal\" href=\"../platform/consoles.html#doc-consoles\"><span class=\"std std-ref\">consoles</span></a> (or just for people who prefer\nto game with a controller on PC).</p><p>Navigating between UI elements with keyboard or controller is done by\nchanging which node is actively selected. This is also called changing UI focus.\nEvery <a class=\"reference internal\" href=\"../../classes/class_control.html#class-control\"><span class=\"std std-ref\">Control</span></a> node in Godot is capable of having focus.\nBy default, some control nodes have the ability to automatically grab focus\nreacting to built-in UI actions such as <code class=\"docutils literal notranslate\"><span class=\"pre\">ui_up</span></code>, <code class=\"docutils literal notranslate\"><span class=\"pre\">ui_down</span></code>, <code class=\"docutils literal notranslate\"><span class=\"pre\">ui_focus_next</span></code>, etc.\nThese actions can be seen in the project settings in the input map and can be modified.</p>",
                    "description": null
                },
                "control_node_gallery": {
                    "url": "https://docs.godotengine.org/en/4.1/tutorials/ui/control_node_gallery.html",
                    "title": "Control node gallery",
                    "blurb": "<p>Here is a list of common Control nodes with their name next to them:</p><p>The Control Gallery demo pictured above can be found\n<a class=\"reference external\" href=\"https://github.com/godotengine/godot-demo-projects/tree/master/gui/control_gallery\">on GitHub</a>.</p>",
                    "description": null
                },
                "gui_skinning": {
                    "url": "https://docs.godotengine.org/en/4.1/tutorials/ui/gui_skinning.html",
                    "title": "Introduction to GUI skinning",
                    "blurb": "<p>It is essential for a game to provide clear, informative, and yet visually\npleasing user interface to its players. While <a class=\"reference internal\" href=\"../../classes/class_control.html#class-control\"><span class=\"std std-ref\">Control</span></a>\nnodes come with a decently functional look out of the box, there is always\nroom for uniqueness and case-specific tuning. For this purpose Godot engine\nincludes a system for GUI skinning (or theming), which allows you to customize\nthe look of every control in your user interface, including your custom controls.</p><p>Here is an example of this system in action — a game with the GUI that is\nradically different from the default UI theme of the engine:</p><p>Beyond achieving a unique look for your game, this system also enables developers\nto provide customization options to the end users, including accessibility settings.\nUI themes are applied in a cascading manner (i.e. they propagate from parent\ncontrols to their children), which means that font settings or adjustments for\ncolorblind users can be applied in a single place and affect the entire UI tree.\nOf course this system can also be used for gameplay purposes: your hero-based game\ncan change its style for the selected player character, or you can give different\nflavors to the sides in your team-based project.</p>",
                    "description": null
                },
                "gui_using_theme_editor": {
                    "url": "https://docs.godotengine.org/en/4.1/tutorials/ui/gui_using_theme_editor.html",
                    "title": "Using the theme editor",
                    "blurb": "<p>This article explains how to create and manage UI themes using the Godot\neditor and its theme editor tool. We recommend getting familiar with the\nbasics behind GUI skinning/theming by reading <a class=\"reference internal\" href=\"gui_skinning.html#doc-gui-skinning\"><span class=\"std std-ref\">Introduction to GUI skinning</span></a> before starting.</p><p>The theme editor is a bottom panel tool that activates automatically, when\na <a class=\"reference internal\" href=\"../../classes/class_theme.html#class-theme\"><span class=\"std std-ref\">Theme</span></a> resource is selected for editing. It contains\nthe necessary UI for adding, removing, and adjusting theme types and theme\nitems. It features a preview section for testing your changes live, as well\nas a window dialog for doing bulk operations of the theme items.</p>",
                    "description": null
                },
                "gui_theme_type_variations": {
                    "url": "https://docs.godotengine.org/en/4.1/tutorials/ui/gui_theme_type_variations.html",
                    "title": "Theme type variations",
                    "blurb": "<p>When designing a user interface there may be times when a <a class=\"reference internal\" href=\"../../classes/class_control.html#class-control\"><span class=\"std std-ref\">Control</span></a> node\nneeds to have a different look than what is normally defined by a <a class=\"reference internal\" href=\"../../classes/class_theme.html#class-theme\"><span class=\"std std-ref\">Theme</span></a>.\nEvery control node has theme property overrides, which allow you to redefine the styling for\neach individual UI element.</p><p>This approach quickly becomes hard to manage, if you need to share the same custom look\nbetween several controls. Imagine that you use gray, blue, and red variants of <a class=\"reference internal\" href=\"../../classes/class_button.html#class-button\"><span class=\"std std-ref\">Button</span></a>\nthroughout your project. Setting it up every time you add a new button element to your interface\nis a tedious task.</p><p>To help with the organization and to better utilize the <a class=\"reference internal\" href=\"gui_skinning.html#doc-gui-skinning\"><span class=\"std std-ref\">power of themes</span></a>\nyou can use theme type variations. These work like normal theme types, but instead\nof being self-sufficient and standalone they extend another, base type.</p><p>Following the previous example, your theme can have some styles, colors, and fonts\ndefined for the <code class=\"docutils literal notranslate\"><span class=\"pre\">Button</span></code> type, customizing the looks of every button element in your UI.\nTo then have a gray, red, or blue button you would create a new type, e.g. <code class=\"docutils literal notranslate\"><span class=\"pre\">GrayButton</span></code>, and\nmark it as a variation of the base <code class=\"docutils literal notranslate\"><span class=\"pre\">Button</span></code> type.</p><p>Type variations can replace some aspects of the base type, but keep others.\nThey can also define properties that the base style hasn't defined. For example,\nyour <code class=\"docutils literal notranslate\"><span class=\"pre\">GrayButton</span></code> can override the <code class=\"docutils literal notranslate\"><span class=\"pre\">normal</span></code> style from the base <code class=\"docutils literal notranslate\"><span class=\"pre\">Button</span></code>\nand add <code class=\"docutils literal notranslate\"><span class=\"pre\">font_color</span></code> that <code class=\"docutils literal notranslate\"><span class=\"pre\">Button</span></code> has never defined. The control will use\na combination of both types giving priority to the type variation.</p>",
                    "description": null
                },
                "gui_using_fonts": {
                    "url": "https://docs.godotengine.org/en/4.1/tutorials/ui/gui_using_fonts.html",
                    "title": "Using Fonts",
                    "blurb": "<p>Godot allows you to set specific fonts for different UI nodes.</p><p>There are three different places where you can setup font usage.\nThe first is the theme editor. Choose the node you want to set the\nfont for and select the font tab. The second is in the inspector\nfor control nodes under <strong>Theme Overrides &gt; Fonts</strong>. Lastly, in\nthe inspector settings for themes under <strong>Default Font</strong>.</p><p>If no font override is specified anywhere,\n<a class=\"reference external\" href=\"https://fonts.google.com/specimen/Open+Sans\">Open Sans</a> SemiBold\nis used as the default project font.</p><p>There are 2 kinds of font files: <em>dynamic</em> (TTF/OTF/WOFF/WOFF2 formats) and\n<em>bitmap</em> (BMFont <code class=\"docutils literal notranslate\"><span class=\"pre\">.fnt</span></code> format or monospaced image). Dynamic fonts are the\nmost commonly used option, as they can be resized and still look crisp at higher\nsizes. Thanks to their vector-based nature, they can also contain a lot more\nglyphs while keeping a reasonable file size compared to bitmap fonts. Dynamic\nfonts also support some advanced features that bitmap fonts cannot support, such\nas <em>ligatures</em> (several characters transforming into a single different design).</p>",
                    "description": null
                },
                "bbcode_in_richtextlabel": {
                    "url": "https://docs.godotengine.org/en/4.1/tutorials/ui/bbcode_in_richtextlabel.html",
                    "title": "BBCode in RichTextLabel",
                    "blurb": "",
                    "description": null
                }
            },
            "xr": {
                "setting_up_xr": {
                    "url": "https://docs.godotengine.org/en/4.1/tutorials/xr/setting_up_xr.html",
                    "title": "Setting up XR",
                    "blurb": "",
                    "description": null
                },
                "deploying_to_android": {
                    "url": "https://docs.godotengine.org/en/4.1/tutorials/xr/deploying_to_android.html",
                    "title": "Deploying to Android",
                    "blurb": "",
                    "description": null
                },
                "introducing_xr_tools": {
                    "url": "https://docs.godotengine.org/en/4.1/tutorials/xr/introducing_xr_tools.html",
                    "title": "Introducing XR tools",
                    "blurb": "<p>Out of the box Godot gives you all the basic support to setup an XR project.\nXR specific game mechanics however need to be implemented on top of this foundation.\nWhile Godot makes this relatively easy this can still be a daunting task.</p><p>For this reason Godot has developed a toolkit called <a class=\"reference external\" href=\"https://github.com/GodotVR/godot-xr-tools\">Godot XR Tools</a>\nthat implements many of the basic mechanics found in XR games, from locomotion to object interaction to UI interaction.</p><p>This toolkit is designed to work with both OpenXR and WebXR runtimes.\nWe'll be using this as a base for our documentation here.\nIt helps developers hit the ground running but for more specific use cases building your own logic is just as valid.\nIn that case XR tools can help in providing inspiration.</p>",
                    "description": null
                },
                "basic_xr_locomotion": {
                    "url": "https://docs.godotengine.org/en/4.1/tutorials/xr/basic_xr_locomotion.html",
                    "title": "Basic XR Locomotion",
                    "blurb": "<p>For basic locomotion we're going to continue using our Godot XR Tools library. The library contains both basic movement features as more advanced features.</p>",
                    "description": null
                },
                "xr_action_map": {
                    "url": "https://docs.godotengine.org/en/4.1/tutorials/xr/xr_action_map.html",
                    "title": "The XR action map",
                    "blurb": "<p>Godot has an action map feature as part of the XR system.\nAt this point in time this system is part of the OpenXR module.\nThere are plans to encompass WebXR into this in the near future hence we call it the XR action map system in this document.\nIt implements the built-in action map system of OpenXR mostly exactly as it is offered.</p><p>The XR action map system exposes input, positional data and output for XR controllers to your game/application.\nIt does this by exposing named actions that can be tailored to your game/application and binding these to the actual inputs and outputs on your XR devices.</p><p>As the XR action map is currently part of the OpenXR module, OpenXR needs to be enabled in your project settings to expose it:</p><p>You will then find the XR Action Map interface in the bottom of the screen:</p>",
                    "description": null
                },
                "xr_room_scale": {
                    "url": "https://docs.godotengine.org/en/4.1/tutorials/xr/xr_room_scale.html",
                    "title": "Room scale in XR",
                    "blurb": "<p>One of the staples of XR projects is the ability to walk around freely in a large space.\nThis space is often constrained by the room the player is physically in with tracking sensors placed within this space.\nWith the advent of inside out tracking however ever larger play spaces are possible.</p><p>As a developer this introduces a number of interesting challenges.\nIn this document we will look at a number of the challenges you may face and outline some solutions.\nWe'll discuss the issues and challenges for seated XR games in another document.</p><p>In traditional first person games a player is represented by a <a class=\"reference internal\" href=\"../../classes/class_characterbody3d.html#class-characterbody3d\"><span class=\"std std-ref\">CharacterBody3D</span></a> node.\nThis node is moved by processing traditional controller, mouse or keyboard input.\nA camera is attached to this node at a location roughly where the player's head will be.</p><p>Applying this model to the XR setup, we add an <a class=\"reference internal\" href=\"../../classes/class_xrorigin3d.html#class-xrorigin3d\"><span class=\"std std-ref\">XROrigin3D</span></a> node as a child of the character body,\nand add a <a class=\"reference internal\" href=\"../../classes/class_xrcamera3d.html#class-xrcamera3d\"><span class=\"std std-ref\">XRCamera3D</span></a> as a child of the origin node. At face value this seems to work.\nHowever, upon closer examination this model does not take into account that there are two forms of movement in XR.\nThe movement through controller input, and the physical movement of the player in the real world.</p><p>As a result, the origin node does not represent the position of the player.\nIt represents the center, or start of, the tracking space in which the player can physically move.\nAs the player moves around their room this movement is represented through the tracking of the players headset.\nIn game this translates to the camera node's position being updated accordingly.\nFor all intents and purposes, we are tracking a disembodied head.\nUnless body tracking is available, we have no knowledge of the position or orientation of the player's body.</p><p>The first problem this causes is fairly obvious.\nWhen the player moves with controller input, we can use the same approach in normal games and move the player in a forward direction.\nHowever the player isn't where we think they are and as we move forward we're checking collisions in the wrong location.</p><p>The second problem really shows itself when the player walks further away from the center of the tracking space and uses controller input to turn.\nIf we rotate our character body, the player will be moved around the room in a circular fashion.</p><p>If we fix the above issues, we will find a third issue.\nWhen the path for the player is blocked in the virtual world, the player can still physically move forward.</p><p>We will look at solving the first two problem with two separate solutions, and then discuss dealing with the third.</p>",
                    "description": null
                },
                "openxr_hand_tracking": {
                    "url": "https://docs.godotengine.org/en/4.1/tutorials/xr/openxr_hand_tracking.html",
                    "title": "The OpenXR hand tracking",
                    "blurb": "<p>Hand tracking is the process by which the position and orientation of the players hands are tracked,\nincluding the orientation of the players fingers.\nWe can identify 3 categories of this:</p><p>One, hand tracking through external sensors such as cameras.\nThis is what Hololens, Quest, UltraLeap and similar devices do.\nThis often results in very accurate tracking of all fingers of the players hands.</p><p>Two, hand tracking through VR gloves.\nThis method is still mostly experimental but is likely to gain popularity soon.\nGloves often have good finger tracking capabilities but their real selling point is the ability to restrict movement.\nThis allows the sensation of touch.\nGloves are often also recognised as controllers and often will have additional controls such as buttons embedded.</p><p>Three, inferred hand tracking.\nThis has been the defacto approach since the early days of VR.\nAs we know the player is holding a controller and we know the position of this controller,\nwe can infer where to render the players hand.\nFingers can be positioned based on the controls the player is interacting with.\nMany modern VR controllers have additional sensors to help determine finger positions on the controller.</p>",
                    "description": null
                },
                "openxr_passthrough": {
                    "url": "https://docs.godotengine.org/en/4.1/tutorials/xr/openxr_passthrough.html",
                    "title": "The OpenXR passthrough",
                    "blurb": "<p>Passthrough is a technique where camera images are used to present the environment of the user as the background.\nThis turns a VR headset into an AR headset, often referred to as Mixed Reality or MR.</p>",
                    "description": null
                }
            }
        },
        "contributing": {
            "ways_to_contribute": {
                "url": "https://docs.godotengine.org/en/4.1/contributing/ways_to_contribute.html",
                "title": "Ways to contribute",
                "blurb": "<p>Godot Engine is a non-profit, community-driven free and open source project.\nAlmost all (but our lead dev Juan, more on that below) developers are working\n<em>pro bono</em> on their free time, out of personal interest and for the love of\ncreating a libre engine of exceptional quality.</p><p>This means that to thrive, Godot needs as many users as possible to get\ninvolved by contributing to the engine. There are many ways to contribute to\nsuch a big project, making it possible for everybody to bring something\npositive to the engine, regardless of their skill set:</p>",
                "description": null
            },
            "workflow": {
                "bisecting_regressions": {
                    "url": "https://docs.godotengine.org/en/4.1/contributing/workflow/bisecting_regressions.html",
                    "title": "Bisecting regressions",
                    "blurb": "<p>Bisecting is a way to find regressions in software. After reporting a bug on the\n<a class=\"reference external\" href=\"https://github.com/godotengine/godot\">Godot repository on GitHub</a>, you may\nbe asked by a contributor to <em>bisect</em> the issue. Bisecting makes it possible for\ncontributors to fix bugs faster, as they can know in advance which commit caused\nthe regression. Your effort will be widely appreciated :)</p><p>The guide below explains how to find a regression by bisecting.</p>",
                    "description": null
                },
                "bug_triage_guidelines": {
                    "url": "https://docs.godotengine.org/en/4.1/contributing/workflow/bug_triage_guidelines.html",
                    "title": "Bug triage guidelines",
                    "blurb": "<p>This page describes the typical workflow of the bug triage team aka\nbugsquad when handling issues and pull requests on Godot's\n<a class=\"reference external\" href=\"https://github.com/godotengine/godot\">GitHub repository</a>.\nIt is bound to evolve together with the bugsquad, so do not\nhesitate to propose modifications to the following guidelines.</p>",
                    "description": null
                },
                "pr_workflow": {
                    "url": "https://docs.godotengine.org/en/4.1/contributing/workflow/pr_workflow.html",
                    "title": "Pull request workflow",
                    "blurb": "<p>The so-called \"PR workflow\" used by Godot is common to many projects using\nGit, and should be familiar to veteran free software contributors. The idea\nis that only a small number (if any) commit directly to the <em>master</em> branch.\nInstead, contributors <em>fork</em> the project (i.e. create a copy of it, which\nthey can modify as they wish), and then use the GitHub interface to request\na <em>pull</em> from one of their fork's branches to one branch of the original\n(often named <em>upstream</em>) repository.</p><p>The resulting <em>pull request</em> (PR) can then be reviewed by other contributors,\nwhich might approve it, reject it, or most often request that modifications\nbe done. Once approved, the PR can then be merged by one of the core\ndevelopers, and its commit(s) will become part of the target branch (usually\nthe <em>master</em> branch).</p><p>We will go together through an example to show the typical workflow and\nassociated Git commands. But first, let's have a quick look at the\norganization of Godot's Git repository.</p>",
                    "description": null
                },
                "pr_review_guidelines": {
                    "url": "https://docs.godotengine.org/en/4.1/contributing/workflow/pr_review_guidelines.html",
                    "title": "Pull request review process",
                    "blurb": "<p>From a high level, the ideal life cycle of a pull request looks like the\nfollowing:</p><p>This document will explain steps 2, 3, 4, and 5 in more detail. For a more\ndetailed explanation of the pull request workflow please see the <a class=\"reference internal\" href=\"pr_workflow.html#doc-pr-workflow\"><span class=\"std std-ref\">pull\nrequest workflow document</span></a>.</p><p>Typically the first interaction on a pull request will be an engine maintainer\nassigning tags to the pull request and flagging it for review by someone\nfamiliar with that area of code.</p><p>Engine maintainers are folks who are \"members\" of the Godot project repository\non GitHub and/or are listed on the <a class=\"reference external\" href=\"https://godotengine.org/teams\">Teams page</a>\non the Godot website. Maintainers are responsible for a given area of the\nengine. Typically this means they are the people who are given more trust to\napprove and recommend pull requests for merging.</p><p>Even if you are not a maintainer, you can still help by reviewing code,\nproviding feedback on PRs and testing PRs locally on your machine to confirm\nthat they work as intended. Many of the currently active maintainers started out\ndoing this before they became maintainers.</p>",
                    "description": null
                },
                "testing_pull_requests": {
                    "url": "https://docs.godotengine.org/en/4.1/contributing/workflow/testing_pull_requests.html",
                    "title": "Testing pull requests",
                    "blurb": "<p>Many people are developing new features or fixing bugs on GitHub.\nTo help with engine development, you may be asked to test those pull requests\nwith a Godot build that includes code from the pull request in question.</p><p>Thanks to GitHub Actions, all <a class=\"reference external\" href=\"https://github.com/godotengine/godot/pulls\">pull requests</a>\nhave continuous builds available. These builds let you try out pull requests\nwithout having to compile anything from source.</p>",
                    "description": null
                }
            },
            "development": {
                "best_practices_for_engine_contributors": {
                    "url": "https://docs.godotengine.org/en/4.1/contributing/development/best_practices_for_engine_contributors.html",
                    "title": "Best practices for engine contributors",
                    "blurb": "",
                    "description": null
                },
                "code_style_guidelines": {
                    "url": "https://docs.godotengine.org/en/4.1/contributing/development/code_style_guidelines.html",
                    "title": "Code style guidelines",
                    "blurb": "<p>When contributing to Godot's source code, you will be expected to follow the\nstyle guidelines outlined below. Some of them are checked via the Continuous\nIntegration process and reviewers will ask you to fix potential issues, so\nbest setup your system as outlined below to ensure all your commits follow the\nguidelines.</p>",
                    "description": null
                },
                "cpp_usage_guidelines": {
                    "url": "https://docs.godotengine.org/en/4.1/contributing/development/cpp_usage_guidelines.html",
                    "title": "C++ usage guidelines",
                    "blurb": "",
                    "description": null
                },
                "configuring_an_ide/index": {
                    "url": "https://docs.godotengine.org/en/4.1/contributing/development/configuring_an_ide/index.html",
                    "title": "Configuring an IDE",
                    "blurb": "<p>We assume that you have already <a class=\"reference external\" href=\"https://github.com/godotengine/godot\">cloned</a>\nand <a class=\"reference internal\" href=\"../compiling/index.html#toc-devel-compiling\"><span class=\"std std-ref\">compiled</span></a> Godot.</p><p>You can easily develop Godot with any text editor and by invoking <code class=\"docutils literal notranslate\"><span class=\"pre\">scons</span></code>\non the command line, but if you want to work with an IDE (Integrated\nDevelopment Environment), here are setup instructions for some popular ones:</p><p>It is possible to use other IDEs, but their setup is not documented yet.</p><p>If your editor supports the <a class=\"reference external\" href=\"https://microsoft.github.io/language-server-protocol/\">language server protocol</a>,\nyou can use <a class=\"reference external\" href=\"https://clangd.llvm.org\">clangd</a> for completion, diagnostics, and more.\nYou can generate a compilation database for use with clangd one of two ways:</p>",
                    "description": null
                },
                "compiling/index": {
                    "url": "https://docs.godotengine.org/en/4.1/contributing/development/compiling/index.html",
                    "title": "Building from source",
                    "blurb": "<p>Godot prides itself on being very easy to build, by C++ projects' standards.\n<a class=\"reference internal\" href=\"../../../about/faq.html#doc-faq-why-scons\"><span class=\"std std-ref\">Godot uses the SCons build system</span></a>, and after the initial\nsetup compiling the engine for your current platform should be as easy as running:</p><p>But you will probably need to use at least some of the available options to configure\nthe build to match your specific needs, be it a custom engine fork, a lightweight build\nstripped of extra modules, or an executable targetting engine development.</p><p>The articles below should help you navigate configuration options available, as well as\nprerequisites required to compile Godot exactly the way you need.</p>",
                    "description": null
                },
                "debugging/index": {
                    "url": "https://docs.godotengine.org/en/4.1/contributing/development/debugging/index.html",
                    "title": "Debugging and profiling",
                    "blurb": "<p>This section contains pages that provide guidance if you're looking at the\nengine code trying to find an underlying issue or an optimization possibility.</p>",
                    "description": null
                },
                "core_and_modules/index": {
                    "url": "https://docs.godotengine.org/en/4.1/contributing/development/core_and_modules/index.html",
                    "title": "Engine core and modules",
                    "blurb": "<p>The following pages are meant to introduce the global organization of Godot Engine's\nsource code, and give useful tips for extending and fixing the engine on the C++ side.</p>",
                    "description": null
                },
                "file_formats/index": {
                    "url": "https://docs.godotengine.org/en/4.1/contributing/development/file_formats/index.html",
                    "title": "Godot file formats",
                    "blurb": "",
                    "description": null
                },
                "editor/index": {
                    "url": "https://docs.godotengine.org/en/4.1/contributing/development/editor/index.html",
                    "title": "Editor development",
                    "blurb": "",
                    "description": null
                }
            },
            "documentation": {
                "content_guidelines": {
                    "url": "https://docs.godotengine.org/en/4.1/contributing/documentation/content_guidelines.html",
                    "title": "Content guidelines",
                    "blurb": "<p>This document outlines what should be included in the official documentation.\nBelow, you will find a couple of principles and recommendations for writing\naccessible content.</p><p>We want to achieve two goals:</p>",
                    "description": null
                },
                "docs_writing_guidelines": {
                    "url": "https://docs.godotengine.org/en/4.1/contributing/documentation/docs_writing_guidelines.html",
                    "title": "Writing guidelines",
                    "blurb": "<p>The Godot community is rich and international. Users come from all\naround the world. Some of them are young, and many aren't native English\nspeakers. That's why we must all write using a clear and a common\nlanguage. For the class reference, the goal is to make it easy to read\nfor everyone and precise.</p><p>In summary, always try to:</p><p>There are 3 rules to describe classes:</p>",
                    "description": null
                },
                "docs_image_guidelines": {
                    "url": "https://docs.godotengine.org/en/4.1/contributing/documentation/docs_image_guidelines.html",
                    "title": "Creating documentation images",
                    "blurb": "<p>Throughout documentation images are often needed to make the explanation\nof a feature or concept as clear as possible for a reader. This page will\nexplain the process from beginning to end.</p>",
                    "description": null
                },
                "contributing_to_the_documentation": {
                    "url": "https://docs.godotengine.org/en/4.1/contributing/documentation/contributing_to_the_documentation.html",
                    "title": "Contributing to the documentation",
                    "blurb": "<p>This guide explains how to contribute to Godot's documentation, be it by\nwriting or reviewing pages.</p>",
                    "description": null
                },
                "building_the_manual": {
                    "url": "https://docs.godotengine.org/en/4.1/contributing/documentation/building_the_manual.html",
                    "title": "Building the manual with Sphinx",
                    "blurb": "<p>This page explains how to build a local copy of the Godot manual using the\nSphinx docs engine. This allows you to have local HTML files and build the\ndocumentation as a PDF, EPUB, or LaTeX file, for example.</p><p>Before you get started, make sure that you have:</p><p>The compilation will take some time as the <code class=\"docutils literal notranslate\"><span class=\"pre\">classes/</span></code> folder contains hundreds of files.\nSee <a class=\"reference internal\" href=\"#doc-building-the-manual-performance\"><span class=\"std std-ref\">Hints for performance</span></a>.</p><p>You can then browse the documentation by opening <code class=\"docutils literal notranslate\"><span class=\"pre\">_build/html/index.html</span></code> in\nyour web browser.</p>",
                    "description": null
                },
                "updating_the_class_reference": {
                    "url": "https://docs.godotengine.org/en/4.1/contributing/documentation/updating_the_class_reference.html",
                    "title": "Contributing to the class reference",
                    "blurb": "<p>The <a class=\"reference internal\" href=\"../../classes/index.html#doc-class-reference\"><span class=\"std std-ref\">Class reference</span></a> is a set of articles describing\nthe public API of the engine. This includes descriptions for various classes,\nmethods, properties, and global objects, available for scripting. The class reference\nis available online, from the documentation sidebar, and in the Godot editor, from\nthe help menu.</p><p>As the engine grows and features are added or modified, some parts of the class reference\nbecome obsolete and new descriptions and examples need to be added. While developers are\nencouraged to document all of their work in the class reference when submitting a pull request,\nwe can't expect everyone to be able to write high quality documentation, so there is\nalways work for contributors like you to polish existing and create missing reference material.</p>",
                    "description": null
                },
                "class_reference_primer": {
                    "url": "https://docs.godotengine.org/en/4.1/contributing/documentation/class_reference_primer.html",
                    "title": "Class reference primer",
                    "blurb": "<p>This page explains how to write the class reference. You will learn where to\nwrite new descriptions for the classes, methods, and properties for Godot's\nbuilt-in node types.</p><p>The reference for each class is contained in an XML file like the one below:</p><p>It starts with brief and long descriptions. In the generated docs, the brief\ndescription is always at the top of the page, while the long description lies\nbelow the list of methods, variables, and constants. You can find methods,\nmember variables, constants, and signals in separate XML nodes.</p><p>For each, you want to learn how they work in Godot's source code. Then, fill\ntheir documentation by completing or improving the text in these tags:</p><p>Write in a clear and simple language. Always follow the <a class=\"reference internal\" href=\"docs_writing_guidelines.html#doc-docs-writing-guidelines\"><span class=\"std std-ref\">writing guidelines</span></a> to keep your descriptions short and easy to read.\n<strong>Do not leave empty lines</strong> in the descriptions: each line in the XML file will\nresult in a new paragraph, even if it is empty.</p>",
                    "description": null
                },
                "editor_and_docs_localization": {
                    "url": "https://docs.godotengine.org/en/4.1/contributing/documentation/editor_and_docs_localization.html",
                    "title": "Editor and documentation localization",
                    "blurb": "<p>Godot aims to make game development available to everyone, including people who\nmay not know or be comfortable with English. Therefore, we do our best to make\nthe most important resources available in many languages, thanks to the\ntranslation effort of the community.</p><p>These resources include:</p><p>To manage translations, we use the GNU gettext file format (<code class=\"docutils literal notranslate\"><span class=\"pre\">PO</span></code> files), and\nthe open source <a class=\"reference external\" href=\"https://weblate.org\">Weblate</a> web-based localization\nplatform, which allows easy collaboration of many contributors to complete the\ntranslation for the various components, and keep them up to date. Click the bold\nlinks above to access each resource on Weblate.</p><p>This page gives an overview of the general translation workflow on Weblate, and\nsome resource-specific instructions on e.g. how to handle some keywords or the\nlocalization of images.</p>",
                    "description": null
                }
            }
        },
        "community": {
            "asset_library": {
                "what_is_assetlib": {
                    "url": "https://docs.godotengine.org/en/4.1/community/asset_library/what_is_assetlib.html",
                    "title": "About the Asset Library",
                    "blurb": "<p>The Godot Asset Library, otherwise known as the AssetLib, is a repository of\nuser-submitted Godot addons, scripts, tools, and other resources, collectively referred\nto as assets. They're available to all Godot users for download directly from within the\nengine, but it can also be accessed at Godot's <a class=\"reference external\" href=\"https://godotengine.org/asset-library/asset\">official website</a>.</p><p>On the surface, the Asset Library might look and function similar to asset\nstores available for other engines, such as Unity's Asset Store, or Unreal\nEngine's Marketplace, where you can submit both freely-available assets, as well\nas paid, commercial ones. In addition, often times such assets are distributed\nunder non-free, proprietary licenses, limiting what you can do with them.</p><p>The Asset Library is different - all assets are distributed free of charge, and under\na host of open source licenses (such as the MIT license, the GPL, and the Boost Software License).\nThis makes the AssetLib more similar to the software repositories of a Linux distribution.</p><p>This set of pages will cover how to use the AssetLib (both from inside Godot, and on the\nwebsite), how you can submit your own assets, and what the guidelines for submission are.</p><p>Please note that the AssetLib is relatively young - it may have various pain points, bugs,\nand usability issues. As with all Godot projects, the code repository is available on <a class=\"reference external\" href=\"https://github.com/godotengine/godot-asset-library\">GitHub</a>,\nwhere you can submit pull requests and issues, so please do not hesitate to visit it!</p>",
                    "description": null
                },
                "using_assetlib": {
                    "url": "https://docs.godotengine.org/en/4.1/community/asset_library/using_assetlib.html",
                    "title": "Using the Asset Library",
                    "blurb": "",
                    "description": null
                },
                "submitting_to_assetlib": {
                    "url": "https://docs.godotengine.org/en/4.1/community/asset_library/submitting_to_assetlib.html",
                    "title": "Submitting to the Asset Library",
                    "blurb": "",
                    "description": null
                }
            },
            "channels": {
                "url": "https://docs.godotengine.org/en/4.1/community/channels.html",
                "title": "Community channels",
                "blurb": "<p>So, where is the Godot community and where can you ask questions and get help?</p><p>Note that some of these channels are run and moderated by members of the Godot community or third parties.</p><p>A brief overview over these and other channels is also available on the <a class=\"reference external\" href=\"https://godotengine.org/community\">Godot website</a>.</p>",
                "description": null
            },
            "tutorials": {
                "url": "https://docs.godotengine.org/en/4.1/community/tutorials.html",
                "title": "Tutorials and resources",
                "blurb": "<p>This is a list of third-party tutorials and resources created by the Godot community. For resources, remember that there is the official <a class=\"reference external\" href=\"https://godotengine.org/asset-library/asset\">Godot Asset Library</a> full of official and community resources too! Also, have a look at this <a class=\"reference external\" href=\"https://www.reddit.com/r/godot/comments/an0iq5/godot_tutorials_list_of_video_and_written/\">huge list over at Reddit</a>.</p><p>Think there is something missing here? Feel free to submit a <a class=\"reference external\" href=\"https://github.com/godotengine/godot-docs/blob/master/community/tutorials.rst\">Pull Request</a> as always.</p>",
                "description": null
            }
        },
        "classes": {
            "class_@gdscript": {
                "url": "https://docs.godotengine.org/en/4.1/classes/class_@gdscript.html",
                "title": "@GDScript",
                "blurb": "<p>Built-in GDScript constants, functions, and annotations.</p>",
                "description": "\n\n<p>A list of GDScript-specific utility functions and annotations accessible from any script.</p>\n<p>For the list of the global functions and constants see <a class=\"reference internal\" href=\"class_%40globalscope.html#class-globalscope\"><span class=\"std std-ref\">@GlobalScope</span></a>.</p>\n"
            },
            "class_@globalscope": {
                "url": "https://docs.godotengine.org/en/4.1/classes/class_@globalscope.html",
                "title": "@GlobalScope",
                "blurb": "<p>Global scope constants and functions.</p>",
                "description": "\n\n<p>A list of global scope enumerated constants and built-in functions. This is all that resides in the globals, constants regarding error codes, keycodes, property hints, etc.</p>\n<p>Singletons are also documented here, since they can be accessed from anywhere.</p>\n<p>For the entries related to GDScript which can be accessed in any script see <a class=\"reference internal\" href=\"class_%40gdscript.html#class-gdscript\"><span class=\"std std-ref\">@GDScript</span></a>.</p>\n"
            },
            "class_node": {
                "url": "https://docs.godotengine.org/en/4.1/classes/class_node.html",
                "title": "Node",
                "blurb": "<p><strong>Inherits:</strong> <a class=\"reference internal\" href=\"class_object.html#class-object\"><span class=\"std std-ref\">Object</span></a></p><p><strong>Inherited By:</strong> <a class=\"reference internal\" href=\"class_animationplayer.html#class-animationplayer\"><span class=\"std std-ref\">AnimationPlayer</span></a>, <a class=\"reference internal\" href=\"class_animationtree.html#class-animationtree\"><span class=\"std std-ref\">AnimationTree</span></a>, <a class=\"reference internal\" href=\"class_audiostreamplayer.html#class-audiostreamplayer\"><span class=\"std std-ref\">AudioStreamPlayer</span></a>, <a class=\"reference internal\" href=\"class_canvasitem.html#class-canvasitem\"><span class=\"std std-ref\">CanvasItem</span></a>, <a class=\"reference internal\" href=\"class_canvaslayer.html#class-canvaslayer\"><span class=\"std std-ref\">CanvasLayer</span></a>, <a class=\"reference internal\" href=\"class_editorfilesystem.html#class-editorfilesystem\"><span class=\"std std-ref\">EditorFileSystem</span></a>, <a class=\"reference internal\" href=\"class_editorplugin.html#class-editorplugin\"><span class=\"std std-ref\">EditorPlugin</span></a>, <a class=\"reference internal\" href=\"class_editorresourcepreview.html#class-editorresourcepreview\"><span class=\"std std-ref\">EditorResourcePreview</span></a>, <a class=\"reference internal\" href=\"class_httprequest.html#class-httprequest\"><span class=\"std std-ref\">HTTPRequest</span></a>, <a class=\"reference internal\" href=\"class_instanceplaceholder.html#class-instanceplaceholder\"><span class=\"std std-ref\">InstancePlaceholder</span></a>, <a class=\"reference internal\" href=\"class_missingnode.html#class-missingnode\"><span class=\"std std-ref\">MissingNode</span></a>, <a class=\"reference internal\" href=\"class_multiplayerspawner.html#class-multiplayerspawner\"><span class=\"std std-ref\">MultiplayerSpawner</span></a>, <a class=\"reference internal\" href=\"class_multiplayersynchronizer.html#class-multiplayersynchronizer\"><span class=\"std std-ref\">MultiplayerSynchronizer</span></a>, <a class=\"reference internal\" href=\"class_navigationagent2d.html#class-navigationagent2d\"><span class=\"std std-ref\">NavigationAgent2D</span></a>, <a class=\"reference internal\" href=\"class_navigationagent3d.html#class-navigationagent3d\"><span class=\"std std-ref\">NavigationAgent3D</span></a>, <a class=\"reference internal\" href=\"class_node3d.html#class-node3d\"><span class=\"std std-ref\">Node3D</span></a>, <a class=\"reference internal\" href=\"class_resourcepreloader.html#class-resourcepreloader\"><span class=\"std std-ref\">ResourcePreloader</span></a>, <a class=\"reference internal\" href=\"class_shaderglobalsoverride.html#class-shaderglobalsoverride\"><span class=\"std std-ref\">ShaderGlobalsOverride</span></a>, <a class=\"reference internal\" href=\"class_skeletonik3d.html#class-skeletonik3d\"><span class=\"std std-ref\">SkeletonIK3D</span></a>, <a class=\"reference internal\" href=\"class_timer.html#class-timer\"><span class=\"std std-ref\">Timer</span></a>, <a class=\"reference internal\" href=\"class_viewport.html#class-viewport\"><span class=\"std std-ref\">Viewport</span></a>, <a class=\"reference internal\" href=\"class_worldenvironment.html#class-worldenvironment\"><span class=\"std std-ref\">WorldEnvironment</span></a></p><p>Base class for all scene objects.</p>",
                "description": "\n\n<p>Nodes are Godot's building blocks. They can be assigned as the child of another node, resulting in a tree arrangement. A given node can contain any number of nodes as children with the requirement that all siblings (direct children of a node) should have unique names.</p>\n<p>A tree of nodes is called a <em>scene</em>. Scenes can be saved to the disk and then instantiated into other scenes. This allows for very high flexibility in the architecture and data model of Godot projects.</p>\n<p><strong>Scene tree:</strong> The <a class=\"reference internal\" href=\"class_scenetree.html#class-scenetree\"><span class=\"std std-ref\">SceneTree</span></a> contains the active tree of nodes. When a node is added to the scene tree, it receives the <a class=\"reference internal\" href=\"#class-node-constant-notification-enter-tree\"><span class=\"std std-ref\">NOTIFICATION_ENTER_TREE</span></a> notification and its <a class=\"reference internal\" href=\"#class-node-method-enter-tree\"><span class=\"std std-ref\">_enter_tree</span></a> callback is triggered. Child nodes are always added <em>after</em> their parent node, i.e. the <a class=\"reference internal\" href=\"#class-node-method-enter-tree\"><span class=\"std std-ref\">_enter_tree</span></a> callback of a parent node will be triggered before its child's.</p>\n<p>Once all nodes have been added in the scene tree, they receive the <a class=\"reference internal\" href=\"#class-node-constant-notification-ready\"><span class=\"std std-ref\">NOTIFICATION_READY</span></a> notification and their respective <a class=\"reference internal\" href=\"#class-node-method-ready\"><span class=\"std std-ref\">_ready</span></a> callbacks are triggered. For groups of nodes, the <a class=\"reference internal\" href=\"#class-node-method-ready\"><span class=\"std std-ref\">_ready</span></a> callback is called in reverse order, starting with the children and moving up to the parent nodes.</p>\n<p>This means that when adding a node to the scene tree, the following order will be used for the callbacks: <a class=\"reference internal\" href=\"#class-node-method-enter-tree\"><span class=\"std std-ref\">_enter_tree</span></a> of the parent, <a class=\"reference internal\" href=\"#class-node-method-enter-tree\"><span class=\"std std-ref\">_enter_tree</span></a> of the children, <a class=\"reference internal\" href=\"#class-node-method-ready\"><span class=\"std std-ref\">_ready</span></a> of the children and finally <a class=\"reference internal\" href=\"#class-node-method-ready\"><span class=\"std std-ref\">_ready</span></a> of the parent (recursively for the entire scene tree).</p>\n<p><strong>Processing:</strong> Nodes can override the \"process\" state, so that they receive a callback on each frame requesting them to process (do something). Normal processing (callback <a class=\"reference internal\" href=\"#class-node-method-process\"><span class=\"std std-ref\">_process</span></a>, toggled with <a class=\"reference internal\" href=\"#class-node-method-set-process\"><span class=\"std std-ref\">set_process</span></a>) happens as fast as possible and is dependent on the frame rate, so the processing time <em>delta</em> (in seconds) is passed as an argument. Physics processing (callback <a class=\"reference internal\" href=\"#class-node-method-physics-process\"><span class=\"std std-ref\">_physics_process</span></a>, toggled with <a class=\"reference internal\" href=\"#class-node-method-set-physics-process\"><span class=\"std std-ref\">set_physics_process</span></a>) happens a fixed number of times per second (60 by default) and is useful for code related to the physics engine.</p>\n<p>Nodes can also process input events. When present, the <a class=\"reference internal\" href=\"#class-node-method-input\"><span class=\"std std-ref\">_input</span></a> function will be called for each input that the program receives. In many cases, this can be overkill (unless used for simple projects), and the <a class=\"reference internal\" href=\"#class-node-method-unhandled-input\"><span class=\"std std-ref\">_unhandled_input</span></a> function might be preferred; it is called when the input event was not handled by anyone else (typically, GUI <a class=\"reference internal\" href=\"class_control.html#class-control\"><span class=\"std std-ref\">Control</span></a> nodes), ensuring that the node only receives the events that were meant for it.</p>\n<p>To keep track of the scene hierarchy (especially when instancing scenes into other scenes), an \"owner\" can be set for the node with the <a class=\"reference internal\" href=\"#class-node-property-owner\"><span class=\"std std-ref\">owner</span></a> property. This keeps track of who instantiated what. This is mostly useful when writing editors and tools, though.</p>\n<p>Finally, when a node is freed with <a class=\"reference internal\" href=\"class_object.html#class-object-method-free\"><span class=\"std std-ref\">Object.free</span></a> or <a class=\"reference internal\" href=\"#class-node-method-queue-free\"><span class=\"std std-ref\">queue_free</span></a>, it will also free all its children.</p>\n<p><strong>Groups:</strong> Nodes can be added to as many groups as you want to be easy to manage, you could create groups like \"enemies\" or \"collectables\" for example, depending on your game. See <a class=\"reference internal\" href=\"#class-node-method-add-to-group\"><span class=\"std std-ref\">add_to_group</span></a>, <a class=\"reference internal\" href=\"#class-node-method-is-in-group\"><span class=\"std std-ref\">is_in_group</span></a> and <a class=\"reference internal\" href=\"#class-node-method-remove-from-group\"><span class=\"std std-ref\">remove_from_group</span></a>. You can then retrieve all nodes in these groups, iterate them and even call methods on groups via the methods on <a class=\"reference internal\" href=\"class_scenetree.html#class-scenetree\"><span class=\"std std-ref\">SceneTree</span></a>.</p>\n<p><strong>Networking with nodes:</strong> After connecting to a server (or making one, see <a class=\"reference internal\" href=\"class_enetmultiplayerpeer.html#class-enetmultiplayerpeer\"><span class=\"std std-ref\">ENetMultiplayerPeer</span></a>), it is possible to use the built-in RPC (remote procedure call) system to communicate over the network. By calling <a class=\"reference internal\" href=\"#class-node-method-rpc\"><span class=\"std std-ref\">rpc</span></a> with a method name, it will be called locally and in all connected peers (peers = clients and the server that accepts connections). To identify which node receives the RPC call, Godot will use its <a class=\"reference internal\" href=\"class_nodepath.html#class-nodepath\"><span class=\"std std-ref\">NodePath</span></a> (make sure node names are the same on all peers). Also, take a look at the high-level networking tutorial and corresponding demos.</p>\n<p><strong>Note:</strong> The <code class=\"docutils literal notranslate\"><span class=\"pre\">script</span></code> property is part of the <a class=\"reference internal\" href=\"class_object.html#class-object\"><span class=\"std std-ref\">Object</span></a> class, not <strong>Node</strong>. It isn't exposed like most properties but does have a setter and getter (<code class=\"docutils literal notranslate\"><span class=\"pre\">set_script()</span></code> and <code class=\"docutils literal notranslate\"><span class=\"pre\">get_script()</span></code>).</p>\n"
            },
            "class_acceptdialog": {
                "url": "https://docs.godotengine.org/en/4.1/classes/class_acceptdialog.html",
                "title": "AcceptDialog",
                "blurb": "<p><strong>Inherits:</strong> <a class=\"reference internal\" href=\"class_window.html#class-window\"><span class=\"std std-ref\">Window</span></a> <strong>&lt;</strong> <a class=\"reference internal\" href=\"class_viewport.html#class-viewport\"><span class=\"std std-ref\">Viewport</span></a> <strong>&lt;</strong> <a class=\"reference internal\" href=\"class_node.html#class-node\"><span class=\"std std-ref\">Node</span></a> <strong>&lt;</strong> <a class=\"reference internal\" href=\"class_object.html#class-object\"><span class=\"std std-ref\">Object</span></a></p><p><strong>Inherited By:</strong> <a class=\"reference internal\" href=\"class_confirmationdialog.html#class-confirmationdialog\"><span class=\"std std-ref\">ConfirmationDialog</span></a></p><p>A base dialog used for user notification.</p>",
                "description": "\n\n<p>The default use of <strong>AcceptDialog</strong> is to allow it to only be accepted or closed, with the same result. However, the <a class=\"reference internal\" href=\"#class-acceptdialog-signal-confirmed\"><span class=\"std std-ref\">confirmed</span></a> and <a class=\"reference internal\" href=\"#class-acceptdialog-signal-canceled\"><span class=\"std std-ref\">canceled</span></a> signals allow to make the two actions different, and the <a class=\"reference internal\" href=\"#class-acceptdialog-method-add-button\"><span class=\"std std-ref\">add_button</span></a> method allows to add custom buttons and actions.</p>\n"
            },
            "class_animatablebody2d": {
                "url": "https://docs.godotengine.org/en/4.1/classes/class_animatablebody2d.html",
                "title": "AnimatableBody2D",
                "blurb": "<p><strong>Inherits:</strong> <a class=\"reference internal\" href=\"class_staticbody2d.html#class-staticbody2d\"><span class=\"std std-ref\">StaticBody2D</span></a> <strong>&lt;</strong> <a class=\"reference internal\" href=\"class_physicsbody2d.html#class-physicsbody2d\"><span class=\"std std-ref\">PhysicsBody2D</span></a> <strong>&lt;</strong> <a class=\"reference internal\" href=\"class_collisionobject2d.html#class-collisionobject2d\"><span class=\"std std-ref\">CollisionObject2D</span></a> <strong>&lt;</strong> <a class=\"reference internal\" href=\"class_node2d.html#class-node2d\"><span class=\"std std-ref\">Node2D</span></a> <strong>&lt;</strong> <a class=\"reference internal\" href=\"class_canvasitem.html#class-canvasitem\"><span class=\"std std-ref\">CanvasItem</span></a> <strong>&lt;</strong> <a class=\"reference internal\" href=\"class_node.html#class-node\"><span class=\"std std-ref\">Node</span></a> <strong>&lt;</strong> <a class=\"reference internal\" href=\"class_object.html#class-object\"><span class=\"std std-ref\">Object</span></a></p><p>A 2D physics body that can't be moved by external forces. When moved manually, it affects other bodies in its path.</p>",
                "description": "\n\n<p>An animatable 2D physics body. It can't be moved by external forces or contacts, but can be moved manually by other means such as code, <a class=\"reference internal\" href=\"class_animationplayer.html#class-animationplayer\"><span class=\"std std-ref\">AnimationPlayer</span></a>s (with <a class=\"reference internal\" href=\"class_animationplayer.html#class-animationplayer-property-playback-process-mode\"><span class=\"std std-ref\">AnimationPlayer.playback_process_mode</span></a> set to <code class=\"docutils literal notranslate\"><span class=\"pre\">ANIMATION_PROCESS_PHYSICS</span></code>), and <a class=\"reference internal\" href=\"class_remotetransform2d.html#class-remotetransform2d\"><span class=\"std std-ref\">RemoteTransform2D</span></a>.</p>\n<p>When <strong>AnimatableBody2D</strong> is moved, its linear and angular velocity are estimated and used to affect other physics bodies in its path. This makes it useful for moving platforms, doors, and other moving objects.</p>\n"
            },
            "class_animatablebody3d": {
                "url": "https://docs.godotengine.org/en/4.1/classes/class_animatablebody3d.html",
                "title": "AnimatableBody3D",
                "blurb": "<p><strong>Inherits:</strong> <a class=\"reference internal\" href=\"class_staticbody3d.html#class-staticbody3d\"><span class=\"std std-ref\">StaticBody3D</span></a> <strong>&lt;</strong> <a class=\"reference internal\" href=\"class_physicsbody3d.html#class-physicsbody3d\"><span class=\"std std-ref\">PhysicsBody3D</span></a> <strong>&lt;</strong> <a class=\"reference internal\" href=\"class_collisionobject3d.html#class-collisionobject3d\"><span class=\"std std-ref\">CollisionObject3D</span></a> <strong>&lt;</strong> <a class=\"reference internal\" href=\"class_node3d.html#class-node3d\"><span class=\"std std-ref\">Node3D</span></a> <strong>&lt;</strong> <a class=\"reference internal\" href=\"class_node.html#class-node\"><span class=\"std std-ref\">Node</span></a> <strong>&lt;</strong> <a class=\"reference internal\" href=\"class_object.html#class-object\"><span class=\"std std-ref\">Object</span></a></p><p>A 3D physics body that can't be moved by external forces. When moved manually, it affects other bodies in its path.</p>",
                "description": "\n\n<p>An animatable 3D physics body. It can't be moved by external forces or contacts, but can be moved manually by other means such as code, <a class=\"reference internal\" href=\"class_animationplayer.html#class-animationplayer\"><span class=\"std std-ref\">AnimationPlayer</span></a>s (with <a class=\"reference internal\" href=\"class_animationplayer.html#class-animationplayer-property-playback-process-mode\"><span class=\"std std-ref\">AnimationPlayer.playback_process_mode</span></a> set to <code class=\"docutils literal notranslate\"><span class=\"pre\">ANIMATION_PROCESS_PHYSICS</span></code>), and <a class=\"reference internal\" href=\"class_remotetransform3d.html#class-remotetransform3d\"><span class=\"std std-ref\">RemoteTransform3D</span></a>.</p>\n<p>When <strong>AnimatableBody3D</strong> is moved, its linear and angular velocity are estimated and used to affect other physics bodies in its path. This makes it useful for moving platforms, doors, and other moving objects.</p>\n"
            },
            "class_animatedsprite2d": {
                "url": "https://docs.godotengine.org/en/4.1/classes/class_animatedsprite2d.html",
                "title": "AnimatedSprite2D",
                "blurb": "<p><strong>Inherits:</strong> <a class=\"reference internal\" href=\"class_node2d.html#class-node2d\"><span class=\"std std-ref\">Node2D</span></a> <strong>&lt;</strong> <a class=\"reference internal\" href=\"class_canvasitem.html#class-canvasitem\"><span class=\"std std-ref\">CanvasItem</span></a> <strong>&lt;</strong> <a class=\"reference internal\" href=\"class_node.html#class-node\"><span class=\"std std-ref\">Node</span></a> <strong>&lt;</strong> <a class=\"reference internal\" href=\"class_object.html#class-object\"><span class=\"std std-ref\">Object</span></a></p><p>Sprite node that contains multiple textures as frames to play for animation.</p>",
                "description": "\n\n<p><strong>AnimatedSprite2D</strong> is similar to the <a class=\"reference internal\" href=\"class_sprite2d.html#class-sprite2d\"><span class=\"std std-ref\">Sprite2D</span></a> node, except it carries multiple textures as animation frames. Animations are created using a <a class=\"reference internal\" href=\"class_spriteframes.html#class-spriteframes\"><span class=\"std std-ref\">SpriteFrames</span></a> resource, which allows you to import image files (or a folder containing said files) to provide the animation frames for the sprite. The <a class=\"reference internal\" href=\"class_spriteframes.html#class-spriteframes\"><span class=\"std std-ref\">SpriteFrames</span></a> resource can be configured in the editor via the SpriteFrames bottom panel.</p>\n"
            },
            "class_animatedsprite3d": {
                "url": "https://docs.godotengine.org/en/4.1/classes/class_animatedsprite3d.html",
                "title": "AnimatedSprite3D",
                "blurb": "<p><strong>Inherits:</strong> <a class=\"reference internal\" href=\"class_spritebase3d.html#class-spritebase3d\"><span class=\"std std-ref\">SpriteBase3D</span></a> <strong>&lt;</strong> <a class=\"reference internal\" href=\"class_geometryinstance3d.html#class-geometryinstance3d\"><span class=\"std std-ref\">GeometryInstance3D</span></a> <strong>&lt;</strong> <a class=\"reference internal\" href=\"class_visualinstance3d.html#class-visualinstance3d\"><span class=\"std std-ref\">VisualInstance3D</span></a> <strong>&lt;</strong> <a class=\"reference internal\" href=\"class_node3d.html#class-node3d\"><span class=\"std std-ref\">Node3D</span></a> <strong>&lt;</strong> <a class=\"reference internal\" href=\"class_node.html#class-node\"><span class=\"std std-ref\">Node</span></a> <strong>&lt;</strong> <a class=\"reference internal\" href=\"class_object.html#class-object\"><span class=\"std std-ref\">Object</span></a></p><p>2D sprite node in 3D world, that can use multiple 2D textures for animation.</p>",
                "description": "\n\n<p><strong>AnimatedSprite3D</strong> is similar to the <a class=\"reference internal\" href=\"class_sprite3d.html#class-sprite3d\"><span class=\"std std-ref\">Sprite3D</span></a> node, except it carries multiple textures as animation <a class=\"reference internal\" href=\"#class-animatedsprite3d-property-sprite-frames\"><span class=\"std std-ref\">sprite_frames</span></a>. Animations are created using a <a class=\"reference internal\" href=\"class_spriteframes.html#class-spriteframes\"><span class=\"std std-ref\">SpriteFrames</span></a> resource, which allows you to import image files (or a folder containing said files) to provide the animation frames for the sprite. The <a class=\"reference internal\" href=\"class_spriteframes.html#class-spriteframes\"><span class=\"std std-ref\">SpriteFrames</span></a> resource can be configured in the editor via the SpriteFrames bottom panel.</p>\n"
            },
            "class_animationplayer": {
                "url": "https://docs.godotengine.org/en/4.1/classes/class_animationplayer.html",
                "title": "AnimationPlayer",
                "blurb": "<p><strong>Inherits:</strong> <a class=\"reference internal\" href=\"class_node.html#class-node\"><span class=\"std std-ref\">Node</span></a> <strong>&lt;</strong> <a class=\"reference internal\" href=\"class_object.html#class-object\"><span class=\"std std-ref\">Object</span></a></p><p>A node used for animation playback.</p>",
                "description": "\n\n<p>An animation player is used for general-purpose playback of animations. It contains a dictionary of <a class=\"reference internal\" href=\"class_animationlibrary.html#class-animationlibrary\"><span class=\"std std-ref\">AnimationLibrary</span></a> resources and custom blend times between animation transitions.</p>\n<p>Some methods and properties use a single key to reference an animation directly. These keys are formatted as the key for the library, followed by a forward slash, then the key for the animation within the library, for example <code class=\"docutils literal notranslate\"><span class=\"pre\">\"movement/run\"</span></code>. If the library's key is an empty string (known as the default library), the forward slash is omitted, being the same key used by the library.</p>\n<p><strong>AnimationPlayer</strong> is better-suited than <a class=\"reference internal\" href=\"class_tween.html#class-tween\"><span class=\"std std-ref\">Tween</span></a> for more complex animations, for example ones with non-trivial timings. It can also be used over <a class=\"reference internal\" href=\"class_tween.html#class-tween\"><span class=\"std std-ref\">Tween</span></a> if the animation track editor is more convenient than doing it in code.</p>\n<p>Updating the target properties of animations occurs at the process frame.</p>\n"
            },
            "class_animationtree": {
                "url": "https://docs.godotengine.org/en/4.1/classes/class_animationtree.html",
                "title": "AnimationTree",
                "blurb": "<p><strong>Inherits:</strong> <a class=\"reference internal\" href=\"class_node.html#class-node\"><span class=\"std std-ref\">Node</span></a> <strong>&lt;</strong> <a class=\"reference internal\" href=\"class_object.html#class-object\"><span class=\"std std-ref\">Object</span></a></p><p>A node used for advanced animation transitions in an <a class=\"reference internal\" href=\"class_animationplayer.html#class-animationplayer\"><span class=\"std std-ref\">AnimationPlayer</span></a>.</p>",
                "description": "\n\n<p>A node used for advanced animation transitions in an <a class=\"reference internal\" href=\"class_animationplayer.html#class-animationplayer\"><span class=\"std std-ref\">AnimationPlayer</span></a>.</p>\n<p><strong>Note:</strong> When linked with an <a class=\"reference internal\" href=\"class_animationplayer.html#class-animationplayer\"><span class=\"std std-ref\">AnimationPlayer</span></a>, several properties and methods of the corresponding <a class=\"reference internal\" href=\"class_animationplayer.html#class-animationplayer\"><span class=\"std std-ref\">AnimationPlayer</span></a> will not function as expected. Playback and transitions should be handled using only the <strong>AnimationTree</strong> and its constituent <a class=\"reference internal\" href=\"class_animationnode.html#class-animationnode\"><span class=\"std std-ref\">AnimationNode</span></a>(s). The <a class=\"reference internal\" href=\"class_animationplayer.html#class-animationplayer\"><span class=\"std std-ref\">AnimationPlayer</span></a> node should be used solely for adding, deleting, and editing animations.</p>\n"
            },
            "class_area2d": {
                "url": "https://docs.godotengine.org/en/4.1/classes/class_area2d.html",
                "title": "Area2D",
                "blurb": "<p><strong>Inherits:</strong> <a class=\"reference internal\" href=\"class_collisionobject2d.html#class-collisionobject2d\"><span class=\"std std-ref\">CollisionObject2D</span></a> <strong>&lt;</strong> <a class=\"reference internal\" href=\"class_node2d.html#class-node2d\"><span class=\"std std-ref\">Node2D</span></a> <strong>&lt;</strong> <a class=\"reference internal\" href=\"class_canvasitem.html#class-canvasitem\"><span class=\"std std-ref\">CanvasItem</span></a> <strong>&lt;</strong> <a class=\"reference internal\" href=\"class_node.html#class-node\"><span class=\"std std-ref\">Node</span></a> <strong>&lt;</strong> <a class=\"reference internal\" href=\"class_object.html#class-object\"><span class=\"std std-ref\">Object</span></a></p><p>A region of 2D space that detects other <a class=\"reference internal\" href=\"class_collisionobject2d.html#class-collisionobject2d\"><span class=\"std std-ref\">CollisionObject2D</span></a>s entering or exiting it.</p>",
                "description": "\n\n<p><strong>Area2D</strong> is a region of 2D space defined by one or multiple <a class=\"reference internal\" href=\"class_collisionshape2d.html#class-collisionshape2d\"><span class=\"std std-ref\">CollisionShape2D</span></a> or <a class=\"reference internal\" href=\"class_collisionpolygon2d.html#class-collisionpolygon2d\"><span class=\"std std-ref\">CollisionPolygon2D</span></a> child nodes. It detects when other <a class=\"reference internal\" href=\"class_collisionobject2d.html#class-collisionobject2d\"><span class=\"std std-ref\">CollisionObject2D</span></a>s enter or exit it, and it also keeps track of which collision objects haven't exited it yet (i.e. which one are overlapping it).</p>\n<p>This node can also locally alter or override physics parameters (gravity, damping) and route audio to custom audio buses.</p>\n"
            },
            "class_area3d": {
                "url": "https://docs.godotengine.org/en/4.1/classes/class_area3d.html",
                "title": "Area3D",
                "blurb": "<p><strong>Inherits:</strong> <a class=\"reference internal\" href=\"class_collisionobject3d.html#class-collisionobject3d\"><span class=\"std std-ref\">CollisionObject3D</span></a> <strong>&lt;</strong> <a class=\"reference internal\" href=\"class_node3d.html#class-node3d\"><span class=\"std std-ref\">Node3D</span></a> <strong>&lt;</strong> <a class=\"reference internal\" href=\"class_node.html#class-node\"><span class=\"std std-ref\">Node</span></a> <strong>&lt;</strong> <a class=\"reference internal\" href=\"class_object.html#class-object\"><span class=\"std std-ref\">Object</span></a></p><p>A region of 3D space that detects other <a class=\"reference internal\" href=\"class_collisionobject3d.html#class-collisionobject3d\"><span class=\"std std-ref\">CollisionObject3D</span></a>s entering or exiting it.</p>",
                "description": "\n\n<p><strong>Area3D</strong> is a region of 3D space defined by one or multiple <a class=\"reference internal\" href=\"class_collisionshape3d.html#class-collisionshape3d\"><span class=\"std std-ref\">CollisionShape3D</span></a> or <a class=\"reference internal\" href=\"class_collisionpolygon3d.html#class-collisionpolygon3d\"><span class=\"std std-ref\">CollisionPolygon3D</span></a> child nodes. It detects when other <a class=\"reference internal\" href=\"class_collisionobject3d.html#class-collisionobject3d\"><span class=\"std std-ref\">CollisionObject3D</span></a>s enter or exit it, and it also keeps track of which collision objects haven't exited it yet (i.e. which one are overlapping it).</p>\n<p>This node can also locally alter or override physics parameters (gravity, damping) and route audio to custom audio buses.</p>\n<p><strong>Warning:</strong> Using a <a class=\"reference internal\" href=\"class_concavepolygonshape3d.html#class-concavepolygonshape3d\"><span class=\"std std-ref\">ConcavePolygonShape3D</span></a> inside a <a class=\"reference internal\" href=\"class_collisionshape3d.html#class-collisionshape3d\"><span class=\"std std-ref\">CollisionShape3D</span></a> child of this node (created e.g. by using the <em>Create Trimesh Collision Sibling</em> option in the <em>Mesh</em> menu that appears when selecting a <a class=\"reference internal\" href=\"class_meshinstance3d.html#class-meshinstance3d\"><span class=\"std std-ref\">MeshInstance3D</span></a> node) may give unexpected results, since this collision shape is hollow. If this is not desired, it has to be split into multiple <a class=\"reference internal\" href=\"class_convexpolygonshape3d.html#class-convexpolygonshape3d\"><span class=\"std std-ref\">ConvexPolygonShape3D</span></a>s or primitive shapes like <a class=\"reference internal\" href=\"class_boxshape3d.html#class-boxshape3d\"><span class=\"std std-ref\">BoxShape3D</span></a>, or in some cases it may be replaceable by a <a class=\"reference internal\" href=\"class_collisionpolygon3d.html#class-collisionpolygon3d\"><span class=\"std std-ref\">CollisionPolygon3D</span></a>.</p>\n"
            },
            "class_aspectratiocontainer": {
                "url": "https://docs.godotengine.org/en/4.1/classes/class_aspectratiocontainer.html",
                "title": "AspectRatioContainer",
                "blurb": "<p><strong>Inherits:</strong> <a class=\"reference internal\" href=\"class_container.html#class-container\"><span class=\"std std-ref\">Container</span></a> <strong>&lt;</strong> <a class=\"reference internal\" href=\"class_control.html#class-control\"><span class=\"std std-ref\">Control</span></a> <strong>&lt;</strong> <a class=\"reference internal\" href=\"class_canvasitem.html#class-canvasitem\"><span class=\"std std-ref\">CanvasItem</span></a> <strong>&lt;</strong> <a class=\"reference internal\" href=\"class_node.html#class-node\"><span class=\"std std-ref\">Node</span></a> <strong>&lt;</strong> <a class=\"reference internal\" href=\"class_object.html#class-object\"><span class=\"std std-ref\">Object</span></a></p><p>A container that preserves the proportions of its child controls.</p>",
                "description": "\n\n<p>A container type that arranges its child controls in a way that preserves their proportions automatically when the container is resized. Useful when a container has a dynamic size and the child nodes must adjust their sizes accordingly without losing their aspect ratios.</p>\n"
            },
            "class_audiolistener2d": {
                "url": "https://docs.godotengine.org/en/4.1/classes/class_audiolistener2d.html",
                "title": "AudioListener2D",
                "blurb": "<p><strong>Inherits:</strong> <a class=\"reference internal\" href=\"class_node2d.html#class-node2d\"><span class=\"std std-ref\">Node2D</span></a> <strong>&lt;</strong> <a class=\"reference internal\" href=\"class_canvasitem.html#class-canvasitem\"><span class=\"std std-ref\">CanvasItem</span></a> <strong>&lt;</strong> <a class=\"reference internal\" href=\"class_node.html#class-node\"><span class=\"std std-ref\">Node</span></a> <strong>&lt;</strong> <a class=\"reference internal\" href=\"class_object.html#class-object\"><span class=\"std std-ref\">Object</span></a></p><p>Overrides the location sounds are heard from.</p>",
                "description": "\n\n<p>Once added to the scene tree and enabled using <a class=\"reference internal\" href=\"#class-audiolistener2d-method-make-current\"><span class=\"std std-ref\">make_current</span></a>, this node will override the location sounds are heard from. Only one <strong>AudioListener2D</strong> can be current. Using <a class=\"reference internal\" href=\"#class-audiolistener2d-method-make-current\"><span class=\"std std-ref\">make_current</span></a> will disable the previous <strong>AudioListener2D</strong>.</p>\n<p>If there is no active <strong>AudioListener2D</strong> in the current <a class=\"reference internal\" href=\"class_viewport.html#class-viewport\"><span class=\"std std-ref\">Viewport</span></a>, center of the screen will be used as a hearing point for the audio. <strong>AudioListener2D</strong> needs to be inside <a class=\"reference internal\" href=\"class_scenetree.html#class-scenetree\"><span class=\"std std-ref\">SceneTree</span></a> to function.</p>\n"
            },
            "class_audiolistener3d": {
                "url": "https://docs.godotengine.org/en/4.1/classes/class_audiolistener3d.html",
                "title": "AudioListener3D",
                "blurb": "<p><strong>Inherits:</strong> <a class=\"reference internal\" href=\"class_node3d.html#class-node3d\"><span class=\"std std-ref\">Node3D</span></a> <strong>&lt;</strong> <a class=\"reference internal\" href=\"class_node.html#class-node\"><span class=\"std std-ref\">Node</span></a> <strong>&lt;</strong> <a class=\"reference internal\" href=\"class_object.html#class-object\"><span class=\"std std-ref\">Object</span></a></p><p>Overrides the location sounds are heard from.</p>",
                "description": "\n\n<p>Once added to the scene tree and enabled using <a class=\"reference internal\" href=\"#class-audiolistener3d-method-make-current\"><span class=\"std std-ref\">make_current</span></a>, this node will override the location sounds are heard from. This can be used to listen from a location different from the <a class=\"reference internal\" href=\"class_camera3d.html#class-camera3d\"><span class=\"std std-ref\">Camera3D</span></a>.</p>\n"
            },
            "class_audiostreamplayer": {
                "url": "https://docs.godotengine.org/en/4.1/classes/class_audiostreamplayer.html",
                "title": "AudioStreamPlayer",
                "blurb": "<p><strong>Inherits:</strong> <a class=\"reference internal\" href=\"class_node.html#class-node\"><span class=\"std std-ref\">Node</span></a> <strong>&lt;</strong> <a class=\"reference internal\" href=\"class_object.html#class-object\"><span class=\"std std-ref\">Object</span></a></p><p>Plays back audio non-positionally.</p>",
                "description": "\n\n<p>Plays an audio stream non-positionally.</p>\n<p>To play audio positionally, use <a class=\"reference internal\" href=\"class_audiostreamplayer2d.html#class-audiostreamplayer2d\"><span class=\"std std-ref\">AudioStreamPlayer2D</span></a> or <a class=\"reference internal\" href=\"class_audiostreamplayer3d.html#class-audiostreamplayer3d\"><span class=\"std std-ref\">AudioStreamPlayer3D</span></a> instead of <strong>AudioStreamPlayer</strong>.</p>\n"
            },
            "class_audiostreamplayer2d": {
                "url": "https://docs.godotengine.org/en/4.1/classes/class_audiostreamplayer2d.html",
                "title": "AudioStreamPlayer2D",
                "blurb": "<p><strong>Inherits:</strong> <a class=\"reference internal\" href=\"class_node2d.html#class-node2d\"><span class=\"std std-ref\">Node2D</span></a> <strong>&lt;</strong> <a class=\"reference internal\" href=\"class_canvasitem.html#class-canvasitem\"><span class=\"std std-ref\">CanvasItem</span></a> <strong>&lt;</strong> <a class=\"reference internal\" href=\"class_node.html#class-node\"><span class=\"std std-ref\">Node</span></a> <strong>&lt;</strong> <a class=\"reference internal\" href=\"class_object.html#class-object\"><span class=\"std std-ref\">Object</span></a></p><p>Plays positional sound in 2D space.</p>",
                "description": "\n\n<p>Plays audio that is attenuated with distance to the listener.</p>\n<p>By default, audio is heard from the screen center. This can be changed by adding an <a class=\"reference internal\" href=\"class_audiolistener2d.html#class-audiolistener2d\"><span class=\"std std-ref\">AudioListener2D</span></a> node to the scene and enabling it by calling <a class=\"reference internal\" href=\"class_audiolistener2d.html#class-audiolistener2d-method-make-current\"><span class=\"std std-ref\">AudioListener2D.make_current</span></a> on it.</p>\n<p>See also <a class=\"reference internal\" href=\"class_audiostreamplayer.html#class-audiostreamplayer\"><span class=\"std std-ref\">AudioStreamPlayer</span></a> to play a sound non-positionally.</p>\n<p><strong>Note:</strong> Hiding an <strong>AudioStreamPlayer2D</strong> node does not disable its audio output. To temporarily disable an <strong>AudioStreamPlayer2D</strong>'s audio output, set <a class=\"reference internal\" href=\"#class-audiostreamplayer2d-property-volume-db\"><span class=\"std std-ref\">volume_db</span></a> to a very low value like <code class=\"docutils literal notranslate\"><span class=\"pre\">-100</span></code> (which isn't audible to human hearing).</p>\n"
            },
            "class_audiostreamplayer3d": {
                "url": "https://docs.godotengine.org/en/4.1/classes/class_audiostreamplayer3d.html",
                "title": "AudioStreamPlayer3D",
                "blurb": "<p><strong>Inherits:</strong> <a class=\"reference internal\" href=\"class_node3d.html#class-node3d\"><span class=\"std std-ref\">Node3D</span></a> <strong>&lt;</strong> <a class=\"reference internal\" href=\"class_node.html#class-node\"><span class=\"std std-ref\">Node</span></a> <strong>&lt;</strong> <a class=\"reference internal\" href=\"class_object.html#class-object\"><span class=\"std std-ref\">Object</span></a></p><p>Plays positional sound in 3D space.</p>",
                "description": "\n\n<p>Plays audio with positional sound effects, based on the relative position of the audio listener. Positional effects include distance attenuation, directionality, and the Doppler effect. For greater realism, a low-pass filter is applied to distant sounds. This can be disabled by setting <a class=\"reference internal\" href=\"#class-audiostreamplayer3d-property-attenuation-filter-cutoff-hz\"><span class=\"std std-ref\">attenuation_filter_cutoff_hz</span></a> to <code class=\"docutils literal notranslate\"><span class=\"pre\">20500</span></code>.</p>\n<p>By default, audio is heard from the camera position. This can be changed by adding an <a class=\"reference internal\" href=\"class_audiolistener3d.html#class-audiolistener3d\"><span class=\"std std-ref\">AudioListener3D</span></a> node to the scene and enabling it by calling <a class=\"reference internal\" href=\"class_audiolistener3d.html#class-audiolistener3d-method-make-current\"><span class=\"std std-ref\">AudioListener3D.make_current</span></a> on it.</p>\n<p>See also <a class=\"reference internal\" href=\"class_audiostreamplayer.html#class-audiostreamplayer\"><span class=\"std std-ref\">AudioStreamPlayer</span></a> to play a sound non-positionally.</p>\n<p><strong>Note:</strong> Hiding an <strong>AudioStreamPlayer3D</strong> node does not disable its audio output. To temporarily disable an <strong>AudioStreamPlayer3D</strong>'s audio output, set <a class=\"reference internal\" href=\"#class-audiostreamplayer3d-property-volume-db\"><span class=\"std std-ref\">volume_db</span></a> to a very low value like <code class=\"docutils literal notranslate\"><span class=\"pre\">-100</span></code> (which isn't audible to human hearing).</p>\n"
            },
            "class_backbuffercopy": {
                "url": "https://docs.godotengine.org/en/4.1/classes/class_backbuffercopy.html",
                "title": "BackBufferCopy",
                "blurb": "<p><strong>Inherits:</strong> <a class=\"reference internal\" href=\"class_node2d.html#class-node2d\"><span class=\"std std-ref\">Node2D</span></a> <strong>&lt;</strong> <a class=\"reference internal\" href=\"class_canvasitem.html#class-canvasitem\"><span class=\"std std-ref\">CanvasItem</span></a> <strong>&lt;</strong> <a class=\"reference internal\" href=\"class_node.html#class-node\"><span class=\"std std-ref\">Node</span></a> <strong>&lt;</strong> <a class=\"reference internal\" href=\"class_object.html#class-object\"><span class=\"std std-ref\">Object</span></a></p><p>Copies a region of the screen (or the whole screen) to a buffer so it can be accessed in your shader scripts using the screen texture (i.e. a uniform sampler with <code class=\"docutils literal notranslate\"><span class=\"pre\">hint_screen_texture</span></code>).</p>",
                "description": "\n\n<p>Node for back-buffering the currently-displayed screen. The region defined in the <strong>BackBufferCopy</strong> node is buffered with the content of the screen it covers, or the entire screen according to the copy mode set. Use the screen texture in your shader scripts to access the buffer.</p>\n<p><strong>Note:</strong> Since this node inherits from <a class=\"reference internal\" href=\"class_node2d.html#class-node2d\"><span class=\"std std-ref\">Node2D</span></a> (and not <a class=\"reference internal\" href=\"class_control.html#class-control\"><span class=\"std std-ref\">Control</span></a>), anchors and margins won't apply to child <a class=\"reference internal\" href=\"class_control.html#class-control\"><span class=\"std std-ref\">Control</span></a>-derived nodes. This can be problematic when resizing the window. To avoid this, add <a class=\"reference internal\" href=\"class_control.html#class-control\"><span class=\"std std-ref\">Control</span></a>-derived nodes as <em>siblings</em> to the <strong>BackBufferCopy</strong> node instead of adding them as children.</p>\n"
            },
            "class_basebutton": {
                "url": "https://docs.godotengine.org/en/4.1/classes/class_basebutton.html",
                "title": "BaseButton",
                "blurb": "<p><strong>Inherits:</strong> <a class=\"reference internal\" href=\"class_control.html#class-control\"><span class=\"std std-ref\">Control</span></a> <strong>&lt;</strong> <a class=\"reference internal\" href=\"class_canvasitem.html#class-canvasitem\"><span class=\"std std-ref\">CanvasItem</span></a> <strong>&lt;</strong> <a class=\"reference internal\" href=\"class_node.html#class-node\"><span class=\"std std-ref\">Node</span></a> <strong>&lt;</strong> <a class=\"reference internal\" href=\"class_object.html#class-object\"><span class=\"std std-ref\">Object</span></a></p><p><strong>Inherited By:</strong> <a class=\"reference internal\" href=\"class_button.html#class-button\"><span class=\"std std-ref\">Button</span></a>, <a class=\"reference internal\" href=\"class_linkbutton.html#class-linkbutton\"><span class=\"std std-ref\">LinkButton</span></a>, <a class=\"reference internal\" href=\"class_texturebutton.html#class-texturebutton\"><span class=\"std std-ref\">TextureButton</span></a></p><p>Abstract base class for GUI buttons.</p>",
                "description": "\n\n<p><strong>BaseButton</strong> is an abstract base class for GUI buttons. It doesn't display anything by itself.</p>\n"
            },
            "class_bone2d": {
                "url": "https://docs.godotengine.org/en/4.1/classes/class_bone2d.html",
                "title": "Bone2D",
                "blurb": "<p><strong>Inherits:</strong> <a class=\"reference internal\" href=\"class_node2d.html#class-node2d\"><span class=\"std std-ref\">Node2D</span></a> <strong>&lt;</strong> <a class=\"reference internal\" href=\"class_canvasitem.html#class-canvasitem\"><span class=\"std std-ref\">CanvasItem</span></a> <strong>&lt;</strong> <a class=\"reference internal\" href=\"class_node.html#class-node\"><span class=\"std std-ref\">Node</span></a> <strong>&lt;</strong> <a class=\"reference internal\" href=\"class_object.html#class-object\"><span class=\"std std-ref\">Object</span></a></p><p>A joint used with <a class=\"reference internal\" href=\"class_skeleton2d.html#class-skeleton2d\"><span class=\"std std-ref\">Skeleton2D</span></a> to control and animate other nodes.</p>",
                "description": "\n\n<p>A hierarchy of <strong>Bone2D</strong>s can be bound to a <a class=\"reference internal\" href=\"class_skeleton2d.html#class-skeleton2d\"><span class=\"std std-ref\">Skeleton2D</span></a> to control and animate other <a class=\"reference internal\" href=\"class_node2d.html#class-node2d\"><span class=\"std std-ref\">Node2D</span></a> nodes.</p>\n<p>You can use <strong>Bone2D</strong> and <a class=\"reference internal\" href=\"class_skeleton2d.html#class-skeleton2d\"><span class=\"std std-ref\">Skeleton2D</span></a> nodes to animate 2D meshes created with the <a class=\"reference internal\" href=\"class_polygon2d.html#class-polygon2d\"><span class=\"std std-ref\">Polygon2D</span></a> UV editor.</p>\n<p>Each bone has a <a class=\"reference internal\" href=\"#class-bone2d-property-rest\"><span class=\"std std-ref\">rest</span></a> transform that you can reset to with <a class=\"reference internal\" href=\"#class-bone2d-method-apply-rest\"><span class=\"std std-ref\">apply_rest</span></a>. These rest poses are relative to the bone's parent.</p>\n<p>If in the editor, you can set the rest pose of an entire skeleton using a menu option, from the code, you need to iterate over the bones to set their individual rest poses.</p>\n"
            },
            "class_boneattachment3d": {
                "url": "https://docs.godotengine.org/en/4.1/classes/class_boneattachment3d.html",
                "title": "BoneAttachment3D",
                "blurb": "<p><strong>Inherits:</strong> <a class=\"reference internal\" href=\"class_node3d.html#class-node3d\"><span class=\"std std-ref\">Node3D</span></a> <strong>&lt;</strong> <a class=\"reference internal\" href=\"class_node.html#class-node\"><span class=\"std std-ref\">Node</span></a> <strong>&lt;</strong> <a class=\"reference internal\" href=\"class_object.html#class-object\"><span class=\"std std-ref\">Object</span></a></p><p>А node that dynamically copies or overrides the 3D transform of a bone in its parent <a class=\"reference internal\" href=\"class_skeleton3d.html#class-skeleton3d\"><span class=\"std std-ref\">Skeleton3D</span></a>.</p>",
                "description": "\n\n<p>This node selects a bone in a <a class=\"reference internal\" href=\"class_skeleton3d.html#class-skeleton3d\"><span class=\"std std-ref\">Skeleton3D</span></a> and attaches to it. This means that the <strong>BoneAttachment3D</strong> node will either dynamically copy or override the 3D transform of the selected bone.</p>\n"
            },
            "class_boxcontainer": {
                "url": "https://docs.godotengine.org/en/4.1/classes/class_boxcontainer.html",
                "title": "BoxContainer",
                "blurb": "<p><strong>Inherits:</strong> <a class=\"reference internal\" href=\"class_container.html#class-container\"><span class=\"std std-ref\">Container</span></a> <strong>&lt;</strong> <a class=\"reference internal\" href=\"class_control.html#class-control\"><span class=\"std std-ref\">Control</span></a> <strong>&lt;</strong> <a class=\"reference internal\" href=\"class_canvasitem.html#class-canvasitem\"><span class=\"std std-ref\">CanvasItem</span></a> <strong>&lt;</strong> <a class=\"reference internal\" href=\"class_node.html#class-node\"><span class=\"std std-ref\">Node</span></a> <strong>&lt;</strong> <a class=\"reference internal\" href=\"class_object.html#class-object\"><span class=\"std std-ref\">Object</span></a></p><p><strong>Inherited By:</strong> <a class=\"reference internal\" href=\"class_hboxcontainer.html#class-hboxcontainer\"><span class=\"std std-ref\">HBoxContainer</span></a>, <a class=\"reference internal\" href=\"class_vboxcontainer.html#class-vboxcontainer\"><span class=\"std std-ref\">VBoxContainer</span></a></p><p>A container that arranges its child controls horizontally or vertically.</p>",
                "description": "\n\n<p>A container that arranges its child controls horizontally or vertically, rearranging them automatically when their minimum size changes.</p>\n"
            },
            "class_button": {
                "url": "https://docs.godotengine.org/en/4.1/classes/class_button.html",
                "title": "Button",
                "blurb": "<p><strong>Inherits:</strong> <a class=\"reference internal\" href=\"class_basebutton.html#class-basebutton\"><span class=\"std std-ref\">BaseButton</span></a> <strong>&lt;</strong> <a class=\"reference internal\" href=\"class_control.html#class-control\"><span class=\"std std-ref\">Control</span></a> <strong>&lt;</strong> <a class=\"reference internal\" href=\"class_canvasitem.html#class-canvasitem\"><span class=\"std std-ref\">CanvasItem</span></a> <strong>&lt;</strong> <a class=\"reference internal\" href=\"class_node.html#class-node\"><span class=\"std std-ref\">Node</span></a> <strong>&lt;</strong> <a class=\"reference internal\" href=\"class_object.html#class-object\"><span class=\"std std-ref\">Object</span></a></p><p><strong>Inherited By:</strong> <a class=\"reference internal\" href=\"class_checkbox.html#class-checkbox\"><span class=\"std std-ref\">CheckBox</span></a>, <a class=\"reference internal\" href=\"class_checkbutton.html#class-checkbutton\"><span class=\"std std-ref\">CheckButton</span></a>, <a class=\"reference internal\" href=\"class_colorpickerbutton.html#class-colorpickerbutton\"><span class=\"std std-ref\">ColorPickerButton</span></a>, <a class=\"reference internal\" href=\"class_menubutton.html#class-menubutton\"><span class=\"std std-ref\">MenuButton</span></a>, <a class=\"reference internal\" href=\"class_optionbutton.html#class-optionbutton\"><span class=\"std std-ref\">OptionButton</span></a></p><p>A themed button that can contain text and an icon.</p>",
                "description": "\n\n<p><strong>Button</strong> is the standard themed button. It can contain text and an icon, and it will display them according to the current <a class=\"reference internal\" href=\"class_theme.html#class-theme\"><span class=\"std std-ref\">Theme</span></a>.</p>\n<p><strong>Example of creating a button and assigning an action when pressed by code:</strong></p>\n<div class=\"sphinx-tabs docutils container\">\n<div aria-label=\"Tabbed content\" class=\"closeable\" role=\"tablist\"><button aria-controls=\"panel-0-R0RTY3JpcHQ=\" aria-selected=\"true\" class=\"sphinx-tabs-tab code-tab group-tab\" id=\"tab-0-R0RTY3JpcHQ=\" name=\"R0RTY3JpcHQ=\" role=\"tab\" tabindex=\"0\">GDScript</button><button aria-controls=\"panel-0-QyM=\" aria-selected=\"false\" class=\"sphinx-tabs-tab code-tab group-tab\" id=\"tab-0-QyM=\" name=\"QyM=\" role=\"tab\" tabindex=\"-1\">C#</button></div><div aria-labelledby=\"tab-0-R0RTY3JpcHQ=\" class=\"sphinx-tabs-panel code-tab group-tab\" id=\"panel-0-R0RTY3JpcHQ=\" name=\"R0RTY3JpcHQ=\" role=\"tabpanel\" tabindex=\"0\"><div class=\"highlight-gdscript notranslate\"><div class=\"highlight\"><pre><span></span><span class=\"k\">func</span> <span class=\"n\">_ready</span><span class=\"p\">():</span>\n    <span class=\"k\">var</span> <span class=\"n\">button</span> <span class=\"o\">=</span> <span class=\"n\">Button</span><span class=\"o\">.</span><span class=\"n\">new</span><span class=\"p\">()</span>\n    <span class=\"n\">button</span><span class=\"o\">.</span><span class=\"n\">text</span> <span class=\"o\">=</span> <span class=\"s2\">\"Click me\"</span>\n    <span class=\"n\">button</span><span class=\"o\">.</span><span class=\"n\">pressed</span><span class=\"o\">.</span><span class=\"n\">connect</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_button_pressed</span><span class=\"p\">)</span>\n    <span class=\"n\">add_child</span><span class=\"p\">(</span><span class=\"n\">button</span><span class=\"p\">)</span>\n\n<span class=\"k\">func</span> <span class=\"n\">_button_pressed</span><span class=\"p\">():</span>\n    <span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"s2\">\"Hello world!\"</span><span class=\"p\">)</span>\n</pre></div>\n</div>\n</div><div aria-labelledby=\"tab-0-QyM=\" class=\"sphinx-tabs-panel code-tab group-tab\" hidden=\"true\" id=\"panel-0-QyM=\" name=\"QyM=\" role=\"tabpanel\" tabindex=\"0\"><div class=\"highlight-csharp notranslate\"><div class=\"highlight\"><pre><span></span><span class=\"k\">public</span><span class=\"w\"> </span><span class=\"k\">override</span><span class=\"w\"> </span><span class=\"k\">void</span><span class=\"w\"> </span><span class=\"nf\">_Ready</span><span class=\"p\">()</span>\n<span class=\"p\">{</span>\n<span class=\"w\">    </span><span class=\"kt\">var</span><span class=\"w\"> </span><span class=\"n\">button</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"k\">new</span><span class=\"w\"> </span><span class=\"n\">Button</span><span class=\"p\">();</span>\n<span class=\"w\">    </span><span class=\"n\">button</span><span class=\"p\">.</span><span class=\"n\">Text</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"s\">\"Click me\"</span><span class=\"p\">;</span>\n<span class=\"w\">    </span><span class=\"n\">button</span><span class=\"p\">.</span><span class=\"n\">Pressed</span><span class=\"w\"> </span><span class=\"o\">+=</span><span class=\"w\"> </span><span class=\"n\">ButtonPressed</span><span class=\"p\">;</span>\n<span class=\"w\">    </span><span class=\"n\">AddChild</span><span class=\"p\">(</span><span class=\"n\">button</span><span class=\"p\">);</span>\n<span class=\"p\">}</span>\n\n<span class=\"k\">private</span><span class=\"w\"> </span><span class=\"k\">void</span><span class=\"w\"> </span><span class=\"nf\">ButtonPressed</span><span class=\"p\">()</span>\n<span class=\"p\">{</span>\n<span class=\"w\">    </span><span class=\"n\">GD</span><span class=\"p\">.</span><span class=\"n\">Print</span><span class=\"p\">(</span><span class=\"s\">\"Hello world!\"</span><span class=\"p\">);</span>\n<span class=\"p\">}</span>\n</pre></div>\n</div>\n</div></div>\n<p>See also <a class=\"reference internal\" href=\"class_basebutton.html#class-basebutton\"><span class=\"std std-ref\">BaseButton</span></a> which contains common properties and methods associated with this node.</p>\n<p><strong>Note:</strong> Buttons do not interpret touch input and therefore don't support multitouch, since mouse emulation can only press one button at a given time. Use <a class=\"reference internal\" href=\"class_touchscreenbutton.html#class-touchscreenbutton\"><span class=\"std std-ref\">TouchScreenButton</span></a> for buttons that trigger gameplay movement or actions.</p>\n"
            },
            "class_camera2d": {
                "url": "https://docs.godotengine.org/en/4.1/classes/class_camera2d.html",
                "title": "Camera2D",
                "blurb": "<p><strong>Inherits:</strong> <a class=\"reference internal\" href=\"class_node2d.html#class-node2d\"><span class=\"std std-ref\">Node2D</span></a> <strong>&lt;</strong> <a class=\"reference internal\" href=\"class_canvasitem.html#class-canvasitem\"><span class=\"std std-ref\">CanvasItem</span></a> <strong>&lt;</strong> <a class=\"reference internal\" href=\"class_node.html#class-node\"><span class=\"std std-ref\">Node</span></a> <strong>&lt;</strong> <a class=\"reference internal\" href=\"class_object.html#class-object\"><span class=\"std std-ref\">Object</span></a></p><p>Camera node for 2D scenes.</p>",
                "description": "\n\n<p>Camera node for 2D scenes. It forces the screen (current layer) to scroll following this node. This makes it easier (and faster) to program scrollable scenes than manually changing the position of <a class=\"reference internal\" href=\"class_canvasitem.html#class-canvasitem\"><span class=\"std std-ref\">CanvasItem</span></a>-based nodes.</p>\n<p>Cameras register themselves in the nearest <a class=\"reference internal\" href=\"class_viewport.html#class-viewport\"><span class=\"std std-ref\">Viewport</span></a> node (when ascending the tree). Only one camera can be active per viewport. If no viewport is available ascending the tree, the camera will register in the global viewport.</p>\n<p>This node is intended to be a simple helper to get things going quickly, but more functionality may be desired to change how the camera works. To make your own custom camera node, inherit it from <a class=\"reference internal\" href=\"class_node2d.html#class-node2d\"><span class=\"std std-ref\">Node2D</span></a> and change the transform of the canvas by setting <a class=\"reference internal\" href=\"class_viewport.html#class-viewport-property-canvas-transform\"><span class=\"std std-ref\">Viewport.canvas_transform</span></a> in <a class=\"reference internal\" href=\"class_viewport.html#class-viewport\"><span class=\"std std-ref\">Viewport</span></a> (you can obtain the current <a class=\"reference internal\" href=\"class_viewport.html#class-viewport\"><span class=\"std std-ref\">Viewport</span></a> by using <a class=\"reference internal\" href=\"class_node.html#class-node-method-get-viewport\"><span class=\"std std-ref\">Node.get_viewport</span></a>).</p>\n<p>Note that the <strong>Camera2D</strong> node's <code class=\"docutils literal notranslate\"><span class=\"pre\">position</span></code> doesn't represent the actual position of the screen, which may differ due to applied smoothing or limits. You can use <a class=\"reference internal\" href=\"#class-camera2d-method-get-screen-center-position\"><span class=\"std std-ref\">get_screen_center_position</span></a> to get the real position.</p>\n"
            },
            "class_camera3d": {
                "url": "https://docs.godotengine.org/en/4.1/classes/class_camera3d.html",
                "title": "Camera3D",
                "blurb": "<p><strong>Inherits:</strong> <a class=\"reference internal\" href=\"class_node3d.html#class-node3d\"><span class=\"std std-ref\">Node3D</span></a> <strong>&lt;</strong> <a class=\"reference internal\" href=\"class_node.html#class-node\"><span class=\"std std-ref\">Node</span></a> <strong>&lt;</strong> <a class=\"reference internal\" href=\"class_object.html#class-object\"><span class=\"std std-ref\">Object</span></a></p><p><strong>Inherited By:</strong> <a class=\"reference internal\" href=\"class_xrcamera3d.html#class-xrcamera3d\"><span class=\"std std-ref\">XRCamera3D</span></a></p><p>Camera node, displays from a point of view.</p>",
                "description": "\n\n<p><strong>Camera3D</strong> is a special node that displays what is visible from its current location. Cameras register themselves in the nearest <a class=\"reference internal\" href=\"class_viewport.html#class-viewport\"><span class=\"std std-ref\">Viewport</span></a> node (when ascending the tree). Only one camera can be active per viewport. If no viewport is available ascending the tree, the camera will register in the global viewport. In other words, a camera just provides 3D display capabilities to a <a class=\"reference internal\" href=\"class_viewport.html#class-viewport\"><span class=\"std std-ref\">Viewport</span></a>, and, without one, a scene registered in that <a class=\"reference internal\" href=\"class_viewport.html#class-viewport\"><span class=\"std std-ref\">Viewport</span></a> (or higher viewports) can't be displayed.</p>\n"
            },
            "class_canvasgroup": {
                "url": "https://docs.godotengine.org/en/4.1/classes/class_canvasgroup.html",
                "title": "CanvasGroup",
                "blurb": "<p><strong>Inherits:</strong> <a class=\"reference internal\" href=\"class_node2d.html#class-node2d\"><span class=\"std std-ref\">Node2D</span></a> <strong>&lt;</strong> <a class=\"reference internal\" href=\"class_canvasitem.html#class-canvasitem\"><span class=\"std std-ref\">CanvasItem</span></a> <strong>&lt;</strong> <a class=\"reference internal\" href=\"class_node.html#class-node\"><span class=\"std std-ref\">Node</span></a> <strong>&lt;</strong> <a class=\"reference internal\" href=\"class_object.html#class-object\"><span class=\"std std-ref\">Object</span></a></p><p>Merges several 2D nodes into a single draw operation.</p>",
                "description": "\n\n<p>Child <a class=\"reference internal\" href=\"class_canvasitem.html#class-canvasitem\"><span class=\"std std-ref\">CanvasItem</span></a> nodes of a <strong>CanvasGroup</strong> are drawn as a single object. It allows to e.g. draw overlapping translucent 2D nodes without blending (set <a class=\"reference internal\" href=\"class_canvasitem.html#class-canvasitem-property-self-modulate\"><span class=\"std std-ref\">CanvasItem.self_modulate</span></a> property of <strong>CanvasGroup</strong> to achieve this effect).</p>\n<p><strong>Note:</strong> The <strong>CanvasGroup</strong> uses a custom shader to read from the backbuffer to draw its children. Assigning a <a class=\"reference internal\" href=\"class_material.html#class-material\"><span class=\"std std-ref\">Material</span></a> to the <strong>CanvasGroup</strong> overrides the builtin shader. To duplicate the behavior of the builtin shader in a custom <a class=\"reference internal\" href=\"class_shader.html#class-shader\"><span class=\"std std-ref\">Shader</span></a> use the following:</p>\n<div class=\"highlight-gdscript notranslate\"><div class=\"highlight\"><pre><span></span><span class=\"n\">shader_type</span> <span class=\"n\">canvas_item</span><span class=\"p\">;</span>\n<span class=\"n\">render_mode</span> <span class=\"n\">unshaded</span><span class=\"p\">;</span>\n\n<span class=\"n\">uniform</span> <span class=\"n\">sampler2D</span> <span class=\"n\">screen_texture</span> <span class=\"p\">:</span> <span class=\"n\">hint_screen_texture</span><span class=\"p\">,</span> <span class=\"n\">repeat_disable</span><span class=\"p\">,</span> <span class=\"n\">filter_nearest</span><span class=\"p\">;</span>\n\n<span class=\"n\">void</span> <span class=\"n\">fragment</span><span class=\"p\">()</span> <span class=\"p\">{</span>\n    <span class=\"n\">vec4</span> <span class=\"n\">c</span> <span class=\"o\">=</span> <span class=\"n\">textureLod</span><span class=\"p\">(</span><span class=\"n\">screen_texture</span><span class=\"p\">,</span> <span class=\"n\">SCREEN_UV</span><span class=\"p\">,</span> <span class=\"mf\">0.0</span><span class=\"p\">);</span>\n\n    <span class=\"k k-ControlFlow\">if</span> <span class=\"p\">(</span><span class=\"n\">c</span><span class=\"o\">.</span><span class=\"n\">a</span> <span class=\"o\">&gt;</span> <span class=\"mf\">0.0001</span><span class=\"p\">)</span> <span class=\"p\">{</span>\n        <span class=\"n\">c</span><span class=\"o\">.</span><span class=\"n\">rgb</span> <span class=\"o\">/=</span> <span class=\"n\">c</span><span class=\"o\">.</span><span class=\"n\">a</span><span class=\"p\">;</span>\n    <span class=\"p\">}</span>\n\n    <span class=\"n\">COLOR</span> <span class=\"o\">*=</span> <span class=\"n\">c</span><span class=\"p\">;</span>\n<span class=\"p\">}</span>\n</pre></div>\n</div>\n<p><strong>Note:</strong> Since <strong>CanvasGroup</strong> and <a class=\"reference internal\" href=\"class_canvasitem.html#class-canvasitem-property-clip-children\"><span class=\"std std-ref\">CanvasItem.clip_children</span></a> both utilize the backbuffer, children of a <strong>CanvasGroup</strong> who have their <a class=\"reference internal\" href=\"class_canvasitem.html#class-canvasitem-property-clip-children\"><span class=\"std std-ref\">CanvasItem.clip_children</span></a> set to anything other than <a class=\"reference internal\" href=\"class_canvasitem.html#class-canvasitem-constant-clip-children-disabled\"><span class=\"std std-ref\">CanvasItem.CLIP_CHILDREN_DISABLED</span></a> will not function correctly.</p>\n"
            },
            "class_canvasitem": {
                "url": "https://docs.godotengine.org/en/4.1/classes/class_canvasitem.html",
                "title": "CanvasItem",
                "blurb": "<p><strong>Inherits:</strong> <a class=\"reference internal\" href=\"class_node.html#class-node\"><span class=\"std std-ref\">Node</span></a> <strong>&lt;</strong> <a class=\"reference internal\" href=\"class_object.html#class-object\"><span class=\"std std-ref\">Object</span></a></p><p><strong>Inherited By:</strong> <a class=\"reference internal\" href=\"class_control.html#class-control\"><span class=\"std std-ref\">Control</span></a>, <a class=\"reference internal\" href=\"class_node2d.html#class-node2d\"><span class=\"std std-ref\">Node2D</span></a></p><p>Abstract base class for everything in 2D space.</p>",
                "description": "\n\n<p>Abstract base class for everything in 2D space. Canvas items are laid out in a tree; children inherit and extend their parent's transform. <strong>CanvasItem</strong> is extended by <a class=\"reference internal\" href=\"class_control.html#class-control\"><span class=\"std std-ref\">Control</span></a> for GUI-related nodes, and by <a class=\"reference internal\" href=\"class_node2d.html#class-node2d\"><span class=\"std std-ref\">Node2D</span></a> for 2D game objects.</p>\n<p>Any <strong>CanvasItem</strong> can draw. For this, <a class=\"reference internal\" href=\"#class-canvasitem-method-queue-redraw\"><span class=\"std std-ref\">queue_redraw</span></a> is called by the engine, then <a class=\"reference internal\" href=\"#class-canvasitem-constant-notification-draw\"><span class=\"std std-ref\">NOTIFICATION_DRAW</span></a> will be received on idle time to request a redraw. Because of this, canvas items don't need to be redrawn on every frame, improving the performance significantly. Several functions for drawing on the <strong>CanvasItem</strong> are provided (see <code class=\"docutils literal notranslate\"><span class=\"pre\">draw_*</span></code> functions). However, they can only be used inside <a class=\"reference internal\" href=\"#class-canvasitem-method-draw\"><span class=\"std std-ref\">_draw</span></a>, its corresponding <a class=\"reference internal\" href=\"class_object.html#class-object-method-notification\"><span class=\"std std-ref\">Object._notification</span></a> or methods connected to the <a class=\"reference internal\" href=\"#class-canvasitem-signal-draw\"><span class=\"std std-ref\">draw</span></a> signal.</p>\n<p>Canvas items are drawn in tree order. By default, children are on top of their parents, so a root <strong>CanvasItem</strong> will be drawn behind everything. This behavior can be changed on a per-item basis.</p>\n<p>A <strong>CanvasItem</strong> can be hidden, which will also hide its children. By adjusting various other properties of a <strong>CanvasItem</strong>, you can also modulate its color (via <a class=\"reference internal\" href=\"#class-canvasitem-property-modulate\"><span class=\"std std-ref\">modulate</span></a> or <a class=\"reference internal\" href=\"#class-canvasitem-property-self-modulate\"><span class=\"std std-ref\">self_modulate</span></a>), change its Z-index, blend mode, and more.</p>\n"
            },
            "class_canvaslayer": {
                "url": "https://docs.godotengine.org/en/4.1/classes/class_canvaslayer.html",
                "title": "CanvasLayer",
                "blurb": "<p><strong>Inherits:</strong> <a class=\"reference internal\" href=\"class_node.html#class-node\"><span class=\"std std-ref\">Node</span></a> <strong>&lt;</strong> <a class=\"reference internal\" href=\"class_object.html#class-object\"><span class=\"std std-ref\">Object</span></a></p><p><strong>Inherited By:</strong> <a class=\"reference internal\" href=\"class_parallaxbackground.html#class-parallaxbackground\"><span class=\"std std-ref\">ParallaxBackground</span></a></p><p>A node used for independent rendering of objects within a 2D scene.</p>",
                "description": "\n\n<p><a class=\"reference internal\" href=\"class_canvasitem.html#class-canvasitem\"><span class=\"std std-ref\">CanvasItem</span></a>-derived nodes that are direct or indirect children of a <strong>CanvasLayer</strong> will be drawn in that layer. The layer is a numeric index that defines the draw order. The default 2D scene renders with index <code class=\"docutils literal notranslate\"><span class=\"pre\">0</span></code>, so a <strong>CanvasLayer</strong> with index <code class=\"docutils literal notranslate\"><span class=\"pre\">-1</span></code> will be drawn below, and a <strong>CanvasLayer</strong> with index <code class=\"docutils literal notranslate\"><span class=\"pre\">1</span></code> will be drawn above. This order will hold regardless of the <a class=\"reference internal\" href=\"class_canvasitem.html#class-canvasitem-property-z-index\"><span class=\"std std-ref\">CanvasItem.z_index</span></a> of the nodes within each layer.</p>\n<p><strong>CanvasLayer</strong>s can be hidden and they can also optionally follow the viewport. This makes them useful for HUDs like health bar overlays (on layers <code class=\"docutils literal notranslate\"><span class=\"pre\">1</span></code> and higher) or backgrounds (on layers <code class=\"docutils literal notranslate\"><span class=\"pre\">-1</span></code> and lower).</p>\n<p><strong>Note:</strong> Embedded <a class=\"reference internal\" href=\"class_window.html#class-window\"><span class=\"std std-ref\">Window</span></a>s are placed on layer <code class=\"docutils literal notranslate\"><span class=\"pre\">1024</span></code>. <a class=\"reference internal\" href=\"class_canvasitem.html#class-canvasitem\"><span class=\"std std-ref\">CanvasItem</span></a>s on layers <code class=\"docutils literal notranslate\"><span class=\"pre\">1025</span></code> and higher appear in front of embedded windows.</p>\n<p><strong>Note:</strong> Each <strong>CanvasLayer</strong> is drawn on one specific <a class=\"reference internal\" href=\"class_viewport.html#class-viewport\"><span class=\"std std-ref\">Viewport</span></a> and cannot be shared between multiple <a class=\"reference internal\" href=\"class_viewport.html#class-viewport\"><span class=\"std std-ref\">Viewport</span></a>s, see <a class=\"reference internal\" href=\"#class-canvaslayer-property-custom-viewport\"><span class=\"std std-ref\">custom_viewport</span></a>. When using multiple <a class=\"reference internal\" href=\"class_viewport.html#class-viewport\"><span class=\"std std-ref\">Viewport</span></a>s, for example in a split-screen game, you need create an individual <strong>CanvasLayer</strong> for each <a class=\"reference internal\" href=\"class_viewport.html#class-viewport\"><span class=\"std std-ref\">Viewport</span></a> you want it to be drawn on.</p>\n"
            },
            "class_canvasmodulate": {
                "url": "https://docs.godotengine.org/en/4.1/classes/class_canvasmodulate.html",
                "title": "CanvasModulate",
                "blurb": "<p><strong>Inherits:</strong> <a class=\"reference internal\" href=\"class_node2d.html#class-node2d\"><span class=\"std std-ref\">Node2D</span></a> <strong>&lt;</strong> <a class=\"reference internal\" href=\"class_canvasitem.html#class-canvasitem\"><span class=\"std std-ref\">CanvasItem</span></a> <strong>&lt;</strong> <a class=\"reference internal\" href=\"class_node.html#class-node\"><span class=\"std std-ref\">Node</span></a> <strong>&lt;</strong> <a class=\"reference internal\" href=\"class_object.html#class-object\"><span class=\"std std-ref\">Object</span></a></p><p>A node that applies a color tint to a canvas.</p>",
                "description": "\n\n<p><strong>CanvasModulate</strong> applies a color tint to all nodes on a canvas. Only one can be used to tint a canvas, but <a class=\"reference internal\" href=\"class_canvaslayer.html#class-canvaslayer\"><span class=\"std std-ref\">CanvasLayer</span></a>s can be used to render things independently.</p>\n"
            },
            "class_centercontainer": {
                "url": "https://docs.godotengine.org/en/4.1/classes/class_centercontainer.html",
                "title": "CenterContainer",
                "blurb": "<p><strong>Inherits:</strong> <a class=\"reference internal\" href=\"class_container.html#class-container\"><span class=\"std std-ref\">Container</span></a> <strong>&lt;</strong> <a class=\"reference internal\" href=\"class_control.html#class-control\"><span class=\"std std-ref\">Control</span></a> <strong>&lt;</strong> <a class=\"reference internal\" href=\"class_canvasitem.html#class-canvasitem\"><span class=\"std std-ref\">CanvasItem</span></a> <strong>&lt;</strong> <a class=\"reference internal\" href=\"class_node.html#class-node\"><span class=\"std std-ref\">Node</span></a> <strong>&lt;</strong> <a class=\"reference internal\" href=\"class_object.html#class-object\"><span class=\"std std-ref\">Object</span></a></p><p>A container that keeps child controls in its center.</p>",
                "description": "\n\n<p><strong>CenterContainer</strong> is a container that keeps all of its child controls in its center at their minimum size.</p>\n"
            },
            "class_characterbody2d": {
                "url": "https://docs.godotengine.org/en/4.1/classes/class_characterbody2d.html",
                "title": "CharacterBody2D",
                "blurb": "<p><strong>Inherits:</strong> <a class=\"reference internal\" href=\"class_physicsbody2d.html#class-physicsbody2d\"><span class=\"std std-ref\">PhysicsBody2D</span></a> <strong>&lt;</strong> <a class=\"reference internal\" href=\"class_collisionobject2d.html#class-collisionobject2d\"><span class=\"std std-ref\">CollisionObject2D</span></a> <strong>&lt;</strong> <a class=\"reference internal\" href=\"class_node2d.html#class-node2d\"><span class=\"std std-ref\">Node2D</span></a> <strong>&lt;</strong> <a class=\"reference internal\" href=\"class_canvasitem.html#class-canvasitem\"><span class=\"std std-ref\">CanvasItem</span></a> <strong>&lt;</strong> <a class=\"reference internal\" href=\"class_node.html#class-node\"><span class=\"std std-ref\">Node</span></a> <strong>&lt;</strong> <a class=\"reference internal\" href=\"class_object.html#class-object\"><span class=\"std std-ref\">Object</span></a></p><p>A 2D physics body specialized for characters moved by script.</p>",
                "description": "\n\n<p><strong>CharacterBody2D</strong> is a specialized class for physics bodies that are meant to be user-controlled. They are not affected by physics at all, but they affect other physics bodies in their path. They are mainly used to provide high-level API to move objects with wall and slope detection (<a class=\"reference internal\" href=\"#class-characterbody2d-method-move-and-slide\"><span class=\"std std-ref\">move_and_slide</span></a> method) in addition to the general collision detection provided by <a class=\"reference internal\" href=\"class_physicsbody2d.html#class-physicsbody2d-method-move-and-collide\"><span class=\"std std-ref\">PhysicsBody2D.move_and_collide</span></a>. This makes it useful for highly configurable physics bodies that must move in specific ways and collide with the world, as is often the case with user-controlled characters.</p>\n<p>For game objects that don't require complex movement or collision detection, such as moving platforms, <a class=\"reference internal\" href=\"class_animatablebody2d.html#class-animatablebody2d\"><span class=\"std std-ref\">AnimatableBody2D</span></a> is simpler to configure.</p>\n"
            },
            "class_characterbody3d": {
                "url": "https://docs.godotengine.org/en/4.1/classes/class_characterbody3d.html",
                "title": "CharacterBody3D",
                "blurb": "<p><strong>Inherits:</strong> <a class=\"reference internal\" href=\"class_physicsbody3d.html#class-physicsbody3d\"><span class=\"std std-ref\">PhysicsBody3D</span></a> <strong>&lt;</strong> <a class=\"reference internal\" href=\"class_collisionobject3d.html#class-collisionobject3d\"><span class=\"std std-ref\">CollisionObject3D</span></a> <strong>&lt;</strong> <a class=\"reference internal\" href=\"class_node3d.html#class-node3d\"><span class=\"std std-ref\">Node3D</span></a> <strong>&lt;</strong> <a class=\"reference internal\" href=\"class_node.html#class-node\"><span class=\"std std-ref\">Node</span></a> <strong>&lt;</strong> <a class=\"reference internal\" href=\"class_object.html#class-object\"><span class=\"std std-ref\">Object</span></a></p><p>A 3D physics body specialized for characters moved by script.</p>",
                "description": "\n\n<p><strong>CharacterBody3D</strong> is a specialized class for physics bodies that are meant to be user-controlled. They are not affected by physics at all, but they affect other physics bodies in their path. They are mainly used to provide high-level API to move objects with wall and slope detection (<a class=\"reference internal\" href=\"#class-characterbody3d-method-move-and-slide\"><span class=\"std std-ref\">move_and_slide</span></a> method) in addition to the general collision detection provided by <a class=\"reference internal\" href=\"class_physicsbody3d.html#class-physicsbody3d-method-move-and-collide\"><span class=\"std std-ref\">PhysicsBody3D.move_and_collide</span></a>. This makes it useful for highly configurable physics bodies that must move in specific ways and collide with the world, as is often the case with user-controlled characters.</p>\n<p>For game objects that don't require complex movement or collision detection, such as moving platforms, <a class=\"reference internal\" href=\"class_animatablebody3d.html#class-animatablebody3d\"><span class=\"std std-ref\">AnimatableBody3D</span></a> is simpler to configure.</p>\n"
            },
            "class_checkbox": {
                "url": "https://docs.godotengine.org/en/4.1/classes/class_checkbox.html",
                "title": "CheckBox",
                "blurb": "<p><strong>Inherits:</strong> <a class=\"reference internal\" href=\"class_button.html#class-button\"><span class=\"std std-ref\">Button</span></a> <strong>&lt;</strong> <a class=\"reference internal\" href=\"class_basebutton.html#class-basebutton\"><span class=\"std std-ref\">BaseButton</span></a> <strong>&lt;</strong> <a class=\"reference internal\" href=\"class_control.html#class-control\"><span class=\"std std-ref\">Control</span></a> <strong>&lt;</strong> <a class=\"reference internal\" href=\"class_canvasitem.html#class-canvasitem\"><span class=\"std std-ref\">CanvasItem</span></a> <strong>&lt;</strong> <a class=\"reference internal\" href=\"class_node.html#class-node\"><span class=\"std std-ref\">Node</span></a> <strong>&lt;</strong> <a class=\"reference internal\" href=\"class_object.html#class-object\"><span class=\"std std-ref\">Object</span></a></p><p>A button that represents a binary choice.</p>",
                "description": "\n\n<p><strong>CheckBox</strong> allows the user to choose one of only two possible options. It's similar to <a class=\"reference internal\" href=\"class_checkbutton.html#class-checkbutton\"><span class=\"std std-ref\">CheckButton</span></a> in functionality, but it has a different appearance. To follow established UX patterns, it's recommended to use <strong>CheckBox</strong> when toggling it has <strong>no</strong> immediate effect on something. For example, it could be used when toggling it will only do something once a confirmation button is pressed.</p>\n<p>See also <a class=\"reference internal\" href=\"class_basebutton.html#class-basebutton\"><span class=\"std std-ref\">BaseButton</span></a> which contains common properties and methods associated with this node.</p>\n<p>When <a class=\"reference internal\" href=\"class_basebutton.html#class-basebutton-property-button-group\"><span class=\"std std-ref\">BaseButton.button_group</span></a> specifies a <a class=\"reference internal\" href=\"class_buttongroup.html#class-buttongroup\"><span class=\"std std-ref\">ButtonGroup</span></a>, <strong>CheckBox</strong> changes its appearance to that of a radio button and uses the various <code class=\"docutils literal notranslate\"><span class=\"pre\">radio_*</span></code> theme properties.</p>\n"
            },
            "class_checkbutton": {
                "url": "https://docs.godotengine.org/en/4.1/classes/class_checkbutton.html",
                "title": "CheckButton",
                "blurb": "<p><strong>Inherits:</strong> <a class=\"reference internal\" href=\"class_button.html#class-button\"><span class=\"std std-ref\">Button</span></a> <strong>&lt;</strong> <a class=\"reference internal\" href=\"class_basebutton.html#class-basebutton\"><span class=\"std std-ref\">BaseButton</span></a> <strong>&lt;</strong> <a class=\"reference internal\" href=\"class_control.html#class-control\"><span class=\"std std-ref\">Control</span></a> <strong>&lt;</strong> <a class=\"reference internal\" href=\"class_canvasitem.html#class-canvasitem\"><span class=\"std std-ref\">CanvasItem</span></a> <strong>&lt;</strong> <a class=\"reference internal\" href=\"class_node.html#class-node\"><span class=\"std std-ref\">Node</span></a> <strong>&lt;</strong> <a class=\"reference internal\" href=\"class_object.html#class-object\"><span class=\"std std-ref\">Object</span></a></p><p>A button that represents a binary choice.</p>",
                "description": "\n\n<p><strong>CheckButton</strong> is a toggle button displayed as a check field. It's similar to <a class=\"reference internal\" href=\"class_checkbox.html#class-checkbox\"><span class=\"std std-ref\">CheckBox</span></a> in functionality, but it has a different appearance. To follow established UX patterns, it's recommended to use <strong>CheckButton</strong> when toggling it has an <strong>immediate</strong> effect on something. For example, it can be used when pressing it shows or hides advanced settings, without asking the user to confirm this action.</p>\n<p>See also <a class=\"reference internal\" href=\"class_basebutton.html#class-basebutton\"><span class=\"std std-ref\">BaseButton</span></a> which contains common properties and methods associated with this node.</p>\n"
            },
            "class_codeedit": {
                "url": "https://docs.godotengine.org/en/4.1/classes/class_codeedit.html",
                "title": "CodeEdit",
                "blurb": "<p><strong>Inherits:</strong> <a class=\"reference internal\" href=\"class_textedit.html#class-textedit\"><span class=\"std std-ref\">TextEdit</span></a> <strong>&lt;</strong> <a class=\"reference internal\" href=\"class_control.html#class-control\"><span class=\"std std-ref\">Control</span></a> <strong>&lt;</strong> <a class=\"reference internal\" href=\"class_canvasitem.html#class-canvasitem\"><span class=\"std std-ref\">CanvasItem</span></a> <strong>&lt;</strong> <a class=\"reference internal\" href=\"class_node.html#class-node\"><span class=\"std std-ref\">Node</span></a> <strong>&lt;</strong> <a class=\"reference internal\" href=\"class_object.html#class-object\"><span class=\"std std-ref\">Object</span></a></p><p>A multiline text editor designed for editing code.</p>",
                "description": "\n\n<p>CodeEdit is a specialized <a class=\"reference internal\" href=\"class_textedit.html#class-textedit\"><span class=\"std std-ref\">TextEdit</span></a> designed for editing plain text code files. It has many features commonly found in code editors such as line numbers, line folding, code completion, indent management, and string/comment management.</p>\n<p><strong>Note:</strong> Regardless of locale, <strong>CodeEdit</strong> will by default always use left-to-right text direction to correctly display source code.</p>\n"
            },
            "class_collisionobject2d": {
                "url": "https://docs.godotengine.org/en/4.1/classes/class_collisionobject2d.html",
                "title": "CollisionObject2D",
                "blurb": "<p><strong>Inherits:</strong> <a class=\"reference internal\" href=\"class_node2d.html#class-node2d\"><span class=\"std std-ref\">Node2D</span></a> <strong>&lt;</strong> <a class=\"reference internal\" href=\"class_canvasitem.html#class-canvasitem\"><span class=\"std std-ref\">CanvasItem</span></a> <strong>&lt;</strong> <a class=\"reference internal\" href=\"class_node.html#class-node\"><span class=\"std std-ref\">Node</span></a> <strong>&lt;</strong> <a class=\"reference internal\" href=\"class_object.html#class-object\"><span class=\"std std-ref\">Object</span></a></p><p><strong>Inherited By:</strong> <a class=\"reference internal\" href=\"class_area2d.html#class-area2d\"><span class=\"std std-ref\">Area2D</span></a>, <a class=\"reference internal\" href=\"class_physicsbody2d.html#class-physicsbody2d\"><span class=\"std std-ref\">PhysicsBody2D</span></a></p><p>Abstract base class for 2D physics objects.</p>",
                "description": "\n\n<p>Abstract base class for 2D physics objects. <strong>CollisionObject2D</strong> can hold any number of <a class=\"reference internal\" href=\"class_shape2d.html#class-shape2d\"><span class=\"std std-ref\">Shape2D</span></a>s for collision. Each shape must be assigned to a <em>shape owner</em>. Shape owners are not nodes and do not appear in the editor, but are accessible through code using the <code class=\"docutils literal notranslate\"><span class=\"pre\">shape_owner_*</span></code> methods.</p>\n<p><strong>Note:</strong> Only collisions between objects within the same canvas (<a class=\"reference internal\" href=\"class_viewport.html#class-viewport\"><span class=\"std std-ref\">Viewport</span></a> canvas or <a class=\"reference internal\" href=\"class_canvaslayer.html#class-canvaslayer\"><span class=\"std std-ref\">CanvasLayer</span></a>) are supported. The behavior of collisions between objects in different canvases is undefined.</p>\n"
            },
            "class_collisionobject3d": {
                "url": "https://docs.godotengine.org/en/4.1/classes/class_collisionobject3d.html",
                "title": "CollisionObject3D",
                "blurb": "<p><strong>Inherits:</strong> <a class=\"reference internal\" href=\"class_node3d.html#class-node3d\"><span class=\"std std-ref\">Node3D</span></a> <strong>&lt;</strong> <a class=\"reference internal\" href=\"class_node.html#class-node\"><span class=\"std std-ref\">Node</span></a> <strong>&lt;</strong> <a class=\"reference internal\" href=\"class_object.html#class-object\"><span class=\"std std-ref\">Object</span></a></p><p><strong>Inherited By:</strong> <a class=\"reference internal\" href=\"class_area3d.html#class-area3d\"><span class=\"std std-ref\">Area3D</span></a>, <a class=\"reference internal\" href=\"class_physicsbody3d.html#class-physicsbody3d\"><span class=\"std std-ref\">PhysicsBody3D</span></a></p><p>Abstract base class for 3D physics objects.</p>",
                "description": "\n\n<p>Abstract base class for 3D physics objects. <strong>CollisionObject3D</strong> can hold any number of <a class=\"reference internal\" href=\"class_shape3d.html#class-shape3d\"><span class=\"std std-ref\">Shape3D</span></a>s for collision. Each shape must be assigned to a <em>shape owner</em>. Shape owners are not nodes and do not appear in the editor, but are accessible through code using the <code class=\"docutils literal notranslate\"><span class=\"pre\">shape_owner_*</span></code> methods.</p>\n<p><strong>Warning:</strong> With a non-uniform scale, this node will likely not behave as expected. It is advised to keep its scale the same on all axes and adjust its collision shape(s) instead.</p>\n"
            },
            "class_collisionpolygon2d": {
                "url": "https://docs.godotengine.org/en/4.1/classes/class_collisionpolygon2d.html",
                "title": "CollisionPolygon2D",
                "blurb": "<p><strong>Inherits:</strong> <a class=\"reference internal\" href=\"class_node2d.html#class-node2d\"><span class=\"std std-ref\">Node2D</span></a> <strong>&lt;</strong> <a class=\"reference internal\" href=\"class_canvasitem.html#class-canvasitem\"><span class=\"std std-ref\">CanvasItem</span></a> <strong>&lt;</strong> <a class=\"reference internal\" href=\"class_node.html#class-node\"><span class=\"std std-ref\">Node</span></a> <strong>&lt;</strong> <a class=\"reference internal\" href=\"class_object.html#class-object\"><span class=\"std std-ref\">Object</span></a></p><p>A node that provides a polygon shape to a <a class=\"reference internal\" href=\"class_collisionobject2d.html#class-collisionobject2d\"><span class=\"std std-ref\">CollisionObject2D</span></a> parent.</p>",
                "description": "\n\n<p>A node that provides a thickened polygon shape (a prism) to a <a class=\"reference internal\" href=\"class_collisionobject2d.html#class-collisionobject2d\"><span class=\"std std-ref\">CollisionObject2D</span></a> parent and allows to edit it. The polygon can be concave or convex. This can give a detection shape to an <a class=\"reference internal\" href=\"class_area2d.html#class-area2d\"><span class=\"std std-ref\">Area2D</span></a> or turn <a class=\"reference internal\" href=\"class_physicsbody2d.html#class-physicsbody2d\"><span class=\"std std-ref\">PhysicsBody2D</span></a> into a solid object.</p>\n<p><strong>Warning:</strong> A non-uniformly scaled <a class=\"reference internal\" href=\"class_collisionshape3d.html#class-collisionshape3d\"><span class=\"std std-ref\">CollisionShape3D</span></a> will likely not behave as expected. Make sure to keep its scale the same on all axes and adjust its shape resource instead.</p>\n"
            },
            "class_collisionpolygon3d": {
                "url": "https://docs.godotengine.org/en/4.1/classes/class_collisionpolygon3d.html",
                "title": "CollisionPolygon3D",
                "blurb": "<p><strong>Inherits:</strong> <a class=\"reference internal\" href=\"class_node3d.html#class-node3d\"><span class=\"std std-ref\">Node3D</span></a> <strong>&lt;</strong> <a class=\"reference internal\" href=\"class_node.html#class-node\"><span class=\"std std-ref\">Node</span></a> <strong>&lt;</strong> <a class=\"reference internal\" href=\"class_object.html#class-object\"><span class=\"std std-ref\">Object</span></a></p><p>A node that provides a thickened polygon shape (a prism) to a <a class=\"reference internal\" href=\"class_collisionobject3d.html#class-collisionobject3d\"><span class=\"std std-ref\">CollisionObject3D</span></a> parent.</p>",
                "description": "\n\n<p>A node that provides a thickened polygon shape (a prism) to a <a class=\"reference internal\" href=\"class_collisionobject3d.html#class-collisionobject3d\"><span class=\"std std-ref\">CollisionObject3D</span></a> parent and allows to edit it. The polygon can be concave or convex. This can give a detection shape to an <a class=\"reference internal\" href=\"class_area3d.html#class-area3d\"><span class=\"std std-ref\">Area3D</span></a> or turn <a class=\"reference internal\" href=\"class_physicsbody3d.html#class-physicsbody3d\"><span class=\"std std-ref\">PhysicsBody3D</span></a> into a solid object.</p>\n<p><strong>Warning:</strong> A non-uniformly scaled <a class=\"reference internal\" href=\"class_collisionshape3d.html#class-collisionshape3d\"><span class=\"std std-ref\">CollisionShape3D</span></a> will likely not behave as expected. Make sure to keep its scale the same on all axes and adjust its shape resource instead.</p>\n"
            },
            "class_collisionshape2d": {
                "url": "https://docs.godotengine.org/en/4.1/classes/class_collisionshape2d.html",
                "title": "CollisionShape2D",
                "blurb": "<p><strong>Inherits:</strong> <a class=\"reference internal\" href=\"class_node2d.html#class-node2d\"><span class=\"std std-ref\">Node2D</span></a> <strong>&lt;</strong> <a class=\"reference internal\" href=\"class_canvasitem.html#class-canvasitem\"><span class=\"std std-ref\">CanvasItem</span></a> <strong>&lt;</strong> <a class=\"reference internal\" href=\"class_node.html#class-node\"><span class=\"std std-ref\">Node</span></a> <strong>&lt;</strong> <a class=\"reference internal\" href=\"class_object.html#class-object\"><span class=\"std std-ref\">Object</span></a></p><p>A node that provides a <a class=\"reference internal\" href=\"class_shape2d.html#class-shape2d\"><span class=\"std std-ref\">Shape2D</span></a> to a <a class=\"reference internal\" href=\"class_collisionobject2d.html#class-collisionobject2d\"><span class=\"std std-ref\">CollisionObject2D</span></a> parent.</p>",
                "description": "\n\n<p>A node that provides a <a class=\"reference internal\" href=\"class_shape2d.html#class-shape2d\"><span class=\"std std-ref\">Shape2D</span></a> to a <a class=\"reference internal\" href=\"class_collisionobject2d.html#class-collisionobject2d\"><span class=\"std std-ref\">CollisionObject2D</span></a> parent and allows to edit it. This can give a detection shape to an <a class=\"reference internal\" href=\"class_area2d.html#class-area2d\"><span class=\"std std-ref\">Area2D</span></a> or turn a <a class=\"reference internal\" href=\"class_physicsbody2d.html#class-physicsbody2d\"><span class=\"std std-ref\">PhysicsBody2D</span></a> into a solid object.</p>\n"
            },
            "class_collisionshape3d": {
                "url": "https://docs.godotengine.org/en/4.1/classes/class_collisionshape3d.html",
                "title": "CollisionShape3D",
                "blurb": "<p><strong>Inherits:</strong> <a class=\"reference internal\" href=\"class_node3d.html#class-node3d\"><span class=\"std std-ref\">Node3D</span></a> <strong>&lt;</strong> <a class=\"reference internal\" href=\"class_node.html#class-node\"><span class=\"std std-ref\">Node</span></a> <strong>&lt;</strong> <a class=\"reference internal\" href=\"class_object.html#class-object\"><span class=\"std std-ref\">Object</span></a></p><p>A node that provides a <a class=\"reference internal\" href=\"class_shape3d.html#class-shape3d\"><span class=\"std std-ref\">Shape3D</span></a> to a <a class=\"reference internal\" href=\"class_collisionobject3d.html#class-collisionobject3d\"><span class=\"std std-ref\">CollisionObject3D</span></a> parent.</p>",
                "description": "\n\n<p>A node that provides a <a class=\"reference internal\" href=\"class_shape3d.html#class-shape3d\"><span class=\"std std-ref\">Shape3D</span></a> to a <a class=\"reference internal\" href=\"class_collisionobject3d.html#class-collisionobject3d\"><span class=\"std std-ref\">CollisionObject3D</span></a> parent and allows to edit it. This can give a detection shape to an <a class=\"reference internal\" href=\"class_area3d.html#class-area3d\"><span class=\"std std-ref\">Area3D</span></a> or turn a <a class=\"reference internal\" href=\"class_physicsbody3d.html#class-physicsbody3d\"><span class=\"std std-ref\">PhysicsBody3D</span></a> into a solid object.</p>\n<p><strong>Warning:</strong> A non-uniformly scaled <strong>CollisionShape3D</strong> will likely not behave as expected. Make sure to keep its scale the same on all axes and adjust its <a class=\"reference internal\" href=\"#class-collisionshape3d-property-shape\"><span class=\"std std-ref\">shape</span></a> resource instead.</p>\n"
            },
            "class_colorpicker": {
                "url": "https://docs.godotengine.org/en/4.1/classes/class_colorpicker.html",
                "title": "ColorPicker",
                "blurb": "<p><strong>Inherits:</strong> <a class=\"reference internal\" href=\"class_vboxcontainer.html#class-vboxcontainer\"><span class=\"std std-ref\">VBoxContainer</span></a> <strong>&lt;</strong> <a class=\"reference internal\" href=\"class_boxcontainer.html#class-boxcontainer\"><span class=\"std std-ref\">BoxContainer</span></a> <strong>&lt;</strong> <a class=\"reference internal\" href=\"class_container.html#class-container\"><span class=\"std std-ref\">Container</span></a> <strong>&lt;</strong> <a class=\"reference internal\" href=\"class_control.html#class-control\"><span class=\"std std-ref\">Control</span></a> <strong>&lt;</strong> <a class=\"reference internal\" href=\"class_canvasitem.html#class-canvasitem\"><span class=\"std std-ref\">CanvasItem</span></a> <strong>&lt;</strong> <a class=\"reference internal\" href=\"class_node.html#class-node\"><span class=\"std std-ref\">Node</span></a> <strong>&lt;</strong> <a class=\"reference internal\" href=\"class_object.html#class-object\"><span class=\"std std-ref\">Object</span></a></p><p>A widget that provides an interface for selecting or modifying a color.</p>",
                "description": "\n\n<p>A widget that provides an interface for selecting or modifying a color. It can optionally provide functionalities like a color sampler (eyedropper), color modes, and presets.</p>\n<p><strong>Note:</strong> This control is the color picker widget itself. You can use a <a class=\"reference internal\" href=\"class_colorpickerbutton.html#class-colorpickerbutton\"><span class=\"std std-ref\">ColorPickerButton</span></a> instead if you need a button that brings up a <strong>ColorPicker</strong> in a popup.</p>\n"
            },
            "class_colorpickerbutton": {
                "url": "https://docs.godotengine.org/en/4.1/classes/class_colorpickerbutton.html",
                "title": "ColorPickerButton",
                "blurb": "<p><strong>Inherits:</strong> <a class=\"reference internal\" href=\"class_button.html#class-button\"><span class=\"std std-ref\">Button</span></a> <strong>&lt;</strong> <a class=\"reference internal\" href=\"class_basebutton.html#class-basebutton\"><span class=\"std std-ref\">BaseButton</span></a> <strong>&lt;</strong> <a class=\"reference internal\" href=\"class_control.html#class-control\"><span class=\"std std-ref\">Control</span></a> <strong>&lt;</strong> <a class=\"reference internal\" href=\"class_canvasitem.html#class-canvasitem\"><span class=\"std std-ref\">CanvasItem</span></a> <strong>&lt;</strong> <a class=\"reference internal\" href=\"class_node.html#class-node\"><span class=\"std std-ref\">Node</span></a> <strong>&lt;</strong> <a class=\"reference internal\" href=\"class_object.html#class-object\"><span class=\"std std-ref\">Object</span></a></p><p>A button that brings up a <a class=\"reference internal\" href=\"class_colorpicker.html#class-colorpicker\"><span class=\"std std-ref\">ColorPicker</span></a> when pressed.</p>",
                "description": "\n\n<p>Encapsulates a <a class=\"reference internal\" href=\"class_colorpicker.html#class-colorpicker\"><span class=\"std std-ref\">ColorPicker</span></a>, making it accessible by pressing a button. Pressing the button will toggle the <a class=\"reference internal\" href=\"class_colorpicker.html#class-colorpicker\"><span class=\"std std-ref\">ColorPicker</span></a>'s visibility.</p>\n<p>See also <a class=\"reference internal\" href=\"class_basebutton.html#class-basebutton\"><span class=\"std std-ref\">BaseButton</span></a> which contains common properties and methods associated with this node.</p>\n<p><strong>Note:</strong> By default, the button may not be wide enough for the color preview swatch to be visible. Make sure to set <a class=\"reference internal\" href=\"class_control.html#class-control-property-custom-minimum-size\"><span class=\"std std-ref\">Control.custom_minimum_size</span></a> to a big enough value to give the button enough space.</p>\n"
            },
            "class_colorrect": {
                "url": "https://docs.godotengine.org/en/4.1/classes/class_colorrect.html",
                "title": "ColorRect",
                "blurb": "<p><strong>Inherits:</strong> <a class=\"reference internal\" href=\"class_control.html#class-control\"><span class=\"std std-ref\">Control</span></a> <strong>&lt;</strong> <a class=\"reference internal\" href=\"class_canvasitem.html#class-canvasitem\"><span class=\"std std-ref\">CanvasItem</span></a> <strong>&lt;</strong> <a class=\"reference internal\" href=\"class_node.html#class-node\"><span class=\"std std-ref\">Node</span></a> <strong>&lt;</strong> <a class=\"reference internal\" href=\"class_object.html#class-object\"><span class=\"std std-ref\">Object</span></a></p><p>A control that displays a solid color rectangle.</p>",
                "description": "\n\n<p>Displays a rectangle filled with a solid <a class=\"reference internal\" href=\"#class-colorrect-property-color\"><span class=\"std std-ref\">color</span></a>. If you need to display the border alone, consider using a <a class=\"reference internal\" href=\"class_panel.html#class-panel\"><span class=\"std std-ref\">Panel</span></a> instead.</p>\n"
            },
            "class_conetwistjoint3d": {
                "url": "https://docs.godotengine.org/en/4.1/classes/class_conetwistjoint3d.html",
                "title": "ConeTwistJoint3D",
                "blurb": "<p><strong>Inherits:</strong> <a class=\"reference internal\" href=\"class_joint3d.html#class-joint3d\"><span class=\"std std-ref\">Joint3D</span></a> <strong>&lt;</strong> <a class=\"reference internal\" href=\"class_node3d.html#class-node3d\"><span class=\"std std-ref\">Node3D</span></a> <strong>&lt;</strong> <a class=\"reference internal\" href=\"class_node.html#class-node\"><span class=\"std std-ref\">Node</span></a> <strong>&lt;</strong> <a class=\"reference internal\" href=\"class_object.html#class-object\"><span class=\"std std-ref\">Object</span></a></p><p>A physics joint that connects two 3D physics bodies in a way that simulates a ball-and-socket joint.</p>",
                "description": "\n\n<p>A physics joint that connects two 3D physics bodies in a way that simulates a ball-and-socket joint. The twist axis is initiated as the X axis of the <strong>ConeTwistJoint3D</strong>. Once the physics bodies swing, the twist axis is calculated as the middle of the X axes of the joint in the local space of the two physics bodies. Useful for limbs like shoulders and hips, lamps hanging off a ceiling, etc.</p>\n"
            },
            "class_confirmationdialog": {
                "url": "https://docs.godotengine.org/en/4.1/classes/class_confirmationdialog.html",
                "title": "ConfirmationDialog",
                "blurb": "<p><strong>Inherits:</strong> <a class=\"reference internal\" href=\"class_acceptdialog.html#class-acceptdialog\"><span class=\"std std-ref\">AcceptDialog</span></a> <strong>&lt;</strong> <a class=\"reference internal\" href=\"class_window.html#class-window\"><span class=\"std std-ref\">Window</span></a> <strong>&lt;</strong> <a class=\"reference internal\" href=\"class_viewport.html#class-viewport\"><span class=\"std std-ref\">Viewport</span></a> <strong>&lt;</strong> <a class=\"reference internal\" href=\"class_node.html#class-node\"><span class=\"std std-ref\">Node</span></a> <strong>&lt;</strong> <a class=\"reference internal\" href=\"class_object.html#class-object\"><span class=\"std std-ref\">Object</span></a></p><p><strong>Inherited By:</strong> <a class=\"reference internal\" href=\"class_editorcommandpalette.html#class-editorcommandpalette\"><span class=\"std std-ref\">EditorCommandPalette</span></a>, <a class=\"reference internal\" href=\"class_editorfiledialog.html#class-editorfiledialog\"><span class=\"std std-ref\">EditorFileDialog</span></a>, <a class=\"reference internal\" href=\"class_filedialog.html#class-filedialog\"><span class=\"std std-ref\">FileDialog</span></a>, <a class=\"reference internal\" href=\"class_scriptcreatedialog.html#class-scriptcreatedialog\"><span class=\"std std-ref\">ScriptCreateDialog</span></a></p><p>A dialog used for confirmation of actions.</p>",
                "description": "\n\n<p>A dialog used for confirmation of actions. This window is similar to <a class=\"reference internal\" href=\"class_acceptdialog.html#class-acceptdialog\"><span class=\"std std-ref\">AcceptDialog</span></a>, but pressing its Cancel button can have a different outcome from pressing the OK button. The order of the two buttons varies depending on the host OS.</p>\n<p>To get cancel action, you can use:</p>\n<div class=\"sphinx-tabs docutils container\">\n<div aria-label=\"Tabbed content\" class=\"closeable\" role=\"tablist\"><button aria-controls=\"panel-0-R0RTY3JpcHQ=\" aria-selected=\"true\" class=\"sphinx-tabs-tab code-tab group-tab\" id=\"tab-0-R0RTY3JpcHQ=\" name=\"R0RTY3JpcHQ=\" role=\"tab\" tabindex=\"0\">GDScript</button><button aria-controls=\"panel-0-QyM=\" aria-selected=\"false\" class=\"sphinx-tabs-tab code-tab group-tab\" id=\"tab-0-QyM=\" name=\"QyM=\" role=\"tab\" tabindex=\"-1\">C#</button></div><div aria-labelledby=\"tab-0-R0RTY3JpcHQ=\" class=\"sphinx-tabs-panel code-tab group-tab\" id=\"panel-0-R0RTY3JpcHQ=\" name=\"R0RTY3JpcHQ=\" role=\"tabpanel\" tabindex=\"0\"><div class=\"highlight-gdscript notranslate\"><div class=\"highlight\"><pre><span></span><span class=\"n\">get_cancel_button</span><span class=\"p\">()</span><span class=\"o\">.</span><span class=\"n\">pressed</span><span class=\"o\">.</span><span class=\"n\">connect</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">canceled</span><span class=\"p\">)</span>\n</pre></div>\n</div>\n</div><div aria-labelledby=\"tab-0-QyM=\" class=\"sphinx-tabs-panel code-tab group-tab\" hidden=\"true\" id=\"panel-0-QyM=\" name=\"QyM=\" role=\"tabpanel\" tabindex=\"0\"><div class=\"highlight-csharp notranslate\"><div class=\"highlight\"><pre><span></span><span class=\"n\">GetCancelButton</span><span class=\"p\">().</span><span class=\"n\">Pressed</span><span class=\"w\"> </span><span class=\"o\">+=</span><span class=\"w\"> </span><span class=\"n\">Canceled</span><span class=\"p\">;</span>\n</pre></div>\n</div>\n</div></div>\n"
            },
            "class_container": {
                "url": "https://docs.godotengine.org/en/4.1/classes/class_container.html",
                "title": "Container",
                "blurb": "<p><strong>Inherits:</strong> <a class=\"reference internal\" href=\"class_control.html#class-control\"><span class=\"std std-ref\">Control</span></a> <strong>&lt;</strong> <a class=\"reference internal\" href=\"class_canvasitem.html#class-canvasitem\"><span class=\"std std-ref\">CanvasItem</span></a> <strong>&lt;</strong> <a class=\"reference internal\" href=\"class_node.html#class-node\"><span class=\"std std-ref\">Node</span></a> <strong>&lt;</strong> <a class=\"reference internal\" href=\"class_object.html#class-object\"><span class=\"std std-ref\">Object</span></a></p><p><strong>Inherited By:</strong> <a class=\"reference internal\" href=\"class_aspectratiocontainer.html#class-aspectratiocontainer\"><span class=\"std std-ref\">AspectRatioContainer</span></a>, <a class=\"reference internal\" href=\"class_boxcontainer.html#class-boxcontainer\"><span class=\"std std-ref\">BoxContainer</span></a>, <a class=\"reference internal\" href=\"class_centercontainer.html#class-centercontainer\"><span class=\"std std-ref\">CenterContainer</span></a>, <a class=\"reference internal\" href=\"class_editorproperty.html#class-editorproperty\"><span class=\"std std-ref\">EditorProperty</span></a>, <a class=\"reference internal\" href=\"class_flowcontainer.html#class-flowcontainer\"><span class=\"std std-ref\">FlowContainer</span></a>, <a class=\"reference internal\" href=\"class_graphnode.html#class-graphnode\"><span class=\"std std-ref\">GraphNode</span></a>, <a class=\"reference internal\" href=\"class_gridcontainer.html#class-gridcontainer\"><span class=\"std std-ref\">GridContainer</span></a>, <a class=\"reference internal\" href=\"class_margincontainer.html#class-margincontainer\"><span class=\"std std-ref\">MarginContainer</span></a>, <a class=\"reference internal\" href=\"class_panelcontainer.html#class-panelcontainer\"><span class=\"std std-ref\">PanelContainer</span></a>, <a class=\"reference internal\" href=\"class_scrollcontainer.html#class-scrollcontainer\"><span class=\"std std-ref\">ScrollContainer</span></a>, <a class=\"reference internal\" href=\"class_splitcontainer.html#class-splitcontainer\"><span class=\"std std-ref\">SplitContainer</span></a>, <a class=\"reference internal\" href=\"class_subviewportcontainer.html#class-subviewportcontainer\"><span class=\"std std-ref\">SubViewportContainer</span></a>, <a class=\"reference internal\" href=\"class_tabcontainer.html#class-tabcontainer\"><span class=\"std std-ref\">TabContainer</span></a></p><p>Base class for all GUI containers.</p>",
                "description": "\n\n<p>Base class for all GUI containers. A <strong>Container</strong> automatically arranges its child controls in a certain way. This class can be inherited to make custom container types.</p>\n"
            },
            "class_control": {
                "url": "https://docs.godotengine.org/en/4.1/classes/class_control.html",
                "title": "Control",
                "blurb": "<p><strong>Inherits:</strong> <a class=\"reference internal\" href=\"class_canvasitem.html#class-canvasitem\"><span class=\"std std-ref\">CanvasItem</span></a> <strong>&lt;</strong> <a class=\"reference internal\" href=\"class_node.html#class-node\"><span class=\"std std-ref\">Node</span></a> <strong>&lt;</strong> <a class=\"reference internal\" href=\"class_object.html#class-object\"><span class=\"std std-ref\">Object</span></a></p><p><strong>Inherited By:</strong> <a class=\"reference internal\" href=\"class_basebutton.html#class-basebutton\"><span class=\"std std-ref\">BaseButton</span></a>, <a class=\"reference internal\" href=\"class_colorrect.html#class-colorrect\"><span class=\"std std-ref\">ColorRect</span></a>, <a class=\"reference internal\" href=\"class_container.html#class-container\"><span class=\"std std-ref\">Container</span></a>, <a class=\"reference internal\" href=\"class_graphedit.html#class-graphedit\"><span class=\"std std-ref\">GraphEdit</span></a>, <a class=\"reference internal\" href=\"class_itemlist.html#class-itemlist\"><span class=\"std std-ref\">ItemList</span></a>, <a class=\"reference internal\" href=\"class_label.html#class-label\"><span class=\"std std-ref\">Label</span></a>, <a class=\"reference internal\" href=\"class_lineedit.html#class-lineedit\"><span class=\"std std-ref\">LineEdit</span></a>, <a class=\"reference internal\" href=\"class_menubar.html#class-menubar\"><span class=\"std std-ref\">MenuBar</span></a>, <a class=\"reference internal\" href=\"class_ninepatchrect.html#class-ninepatchrect\"><span class=\"std std-ref\">NinePatchRect</span></a>, <a class=\"reference internal\" href=\"class_panel.html#class-panel\"><span class=\"std std-ref\">Panel</span></a>, <a class=\"reference internal\" href=\"class_range.html#class-range\"><span class=\"std std-ref\">Range</span></a>, <a class=\"reference internal\" href=\"class_referencerect.html#class-referencerect\"><span class=\"std std-ref\">ReferenceRect</span></a>, <a class=\"reference internal\" href=\"class_richtextlabel.html#class-richtextlabel\"><span class=\"std std-ref\">RichTextLabel</span></a>, <a class=\"reference internal\" href=\"class_separator.html#class-separator\"><span class=\"std std-ref\">Separator</span></a>, <a class=\"reference internal\" href=\"class_tabbar.html#class-tabbar\"><span class=\"std std-ref\">TabBar</span></a>, <a class=\"reference internal\" href=\"class_textedit.html#class-textedit\"><span class=\"std std-ref\">TextEdit</span></a>, <a class=\"reference internal\" href=\"class_texturerect.html#class-texturerect\"><span class=\"std std-ref\">TextureRect</span></a>, <a class=\"reference internal\" href=\"class_tree.html#class-tree\"><span class=\"std std-ref\">Tree</span></a>, <a class=\"reference internal\" href=\"class_videostreamplayer.html#class-videostreamplayer\"><span class=\"std std-ref\">VideoStreamPlayer</span></a></p><p>Base class for all GUI controls. Adapts its position and size based on its parent control.</p>",
                "description": "\n\n<p>Base class for all UI-related nodes. <strong>Control</strong> features a bounding rectangle that defines its extents, an anchor position relative to its parent control or the current viewport, and offsets relative to the anchor. The offsets update automatically when the node, any of its parents, or the screen size change.</p>\n<p>For more information on Godot's UI system, anchors, offsets, and containers, see the related tutorials in the manual. To build flexible UIs, you'll need a mix of UI elements that inherit from <strong>Control</strong> and <a class=\"reference internal\" href=\"class_container.html#class-container\"><span class=\"std std-ref\">Container</span></a> nodes.</p>\n<p><strong>User Interface nodes and input</strong></p>\n<p>Godot propagates input events via viewports. Each <a class=\"reference internal\" href=\"class_viewport.html#class-viewport\"><span class=\"std std-ref\">Viewport</span></a> is responsible for propagating <a class=\"reference internal\" href=\"class_inputevent.html#class-inputevent\"><span class=\"std std-ref\">InputEvent</span></a>s to their child nodes. As the <a class=\"reference internal\" href=\"class_scenetree.html#class-scenetree-property-root\"><span class=\"std std-ref\">SceneTree.root</span></a> is a <a class=\"reference internal\" href=\"class_window.html#class-window\"><span class=\"std std-ref\">Window</span></a>, this already happens automatically for all UI elements in your game.</p>\n<p>Input events are propagated through the <a class=\"reference internal\" href=\"class_scenetree.html#class-scenetree\"><span class=\"std std-ref\">SceneTree</span></a> from the root node to all child nodes by calling <a class=\"reference internal\" href=\"class_node.html#class-node-method-input\"><span class=\"std std-ref\">Node._input</span></a>. For UI elements specifically, it makes more sense to override the virtual method <a class=\"reference internal\" href=\"#class-control-method-gui-input\"><span class=\"std std-ref\">_gui_input</span></a>, which filters out unrelated input events, such as by checking z-order, <a class=\"reference internal\" href=\"#class-control-property-mouse-filter\"><span class=\"std std-ref\">mouse_filter</span></a>, focus, or if the event was inside of the control's bounding box.</p>\n<p>Call <a class=\"reference internal\" href=\"#class-control-method-accept-event\"><span class=\"std std-ref\">accept_event</span></a> so no other node receives the event. Once you accept an input, it becomes handled so <a class=\"reference internal\" href=\"class_node.html#class-node-method-unhandled-input\"><span class=\"std std-ref\">Node._unhandled_input</span></a> will not process it.</p>\n<p>Only one <strong>Control</strong> node can be in focus. Only the node in focus will receive events. To get the focus, call <a class=\"reference internal\" href=\"#class-control-method-grab-focus\"><span class=\"std std-ref\">grab_focus</span></a>. <strong>Control</strong> nodes lose focus when another node grabs it, or if you hide the node in focus.</p>\n<p>Sets <a class=\"reference internal\" href=\"#class-control-property-mouse-filter\"><span class=\"std std-ref\">mouse_filter</span></a> to <a class=\"reference internal\" href=\"#class-control-constant-mouse-filter-ignore\"><span class=\"std std-ref\">MOUSE_FILTER_IGNORE</span></a> to tell a <strong>Control</strong> node to ignore mouse or touch events. You'll need it if you place an icon on top of a button.</p>\n<p><a class=\"reference internal\" href=\"class_theme.html#class-theme\"><span class=\"std std-ref\">Theme</span></a> resources change the Control's appearance. If you change the <a class=\"reference internal\" href=\"class_theme.html#class-theme\"><span class=\"std std-ref\">Theme</span></a> on a <strong>Control</strong> node, it affects all of its children. To override some of the theme's parameters, call one of the <code class=\"docutils literal notranslate\"><span class=\"pre\">add_theme_*_override</span></code> methods, like <a class=\"reference internal\" href=\"#class-control-method-add-theme-font-override\"><span class=\"std std-ref\">add_theme_font_override</span></a>. You can override the theme with the Inspector.</p>\n<p><strong>Note:</strong> Theme items are <em>not</em> <a class=\"reference internal\" href=\"class_object.html#class-object\"><span class=\"std std-ref\">Object</span></a> properties. This means you can't access their values using <a class=\"reference internal\" href=\"class_object.html#id1\"><span class=\"std std-ref\">Object.get</span></a> and <a class=\"reference internal\" href=\"class_object.html#id6\"><span class=\"std std-ref\">Object.set</span></a>. Instead, use the <code class=\"docutils literal notranslate\"><span class=\"pre\">get_theme_*</span></code> and <code class=\"docutils literal notranslate\"><span class=\"pre\">add_theme_*_override</span></code> methods provided by this class.</p>\n"
            },
            "class_cpuparticles2d": {
                "url": "https://docs.godotengine.org/en/4.1/classes/class_cpuparticles2d.html",
                "title": "CPUParticles2D",
                "blurb": "<p><strong>Inherits:</strong> <a class=\"reference internal\" href=\"class_node2d.html#class-node2d\"><span class=\"std std-ref\">Node2D</span></a> <strong>&lt;</strong> <a class=\"reference internal\" href=\"class_canvasitem.html#class-canvasitem\"><span class=\"std std-ref\">CanvasItem</span></a> <strong>&lt;</strong> <a class=\"reference internal\" href=\"class_node.html#class-node\"><span class=\"std std-ref\">Node</span></a> <strong>&lt;</strong> <a class=\"reference internal\" href=\"class_object.html#class-object\"><span class=\"std std-ref\">Object</span></a></p><p>CPU-based 2D particle emitter.</p>",
                "description": "\n\n<p>CPU-based 2D particle node used to create a variety of particle systems and effects.</p>\n<p>See also <a class=\"reference internal\" href=\"class_gpuparticles2d.html#class-gpuparticles2d\"><span class=\"std std-ref\">GPUParticles2D</span></a>, which provides the same functionality with hardware acceleration, but may not run on older devices.</p>\n"
            },
            "class_cpuparticles3d": {
                "url": "https://docs.godotengine.org/en/4.1/classes/class_cpuparticles3d.html",
                "title": "CPUParticles3D",
                "blurb": "<p><strong>Inherits:</strong> <a class=\"reference internal\" href=\"class_geometryinstance3d.html#class-geometryinstance3d\"><span class=\"std std-ref\">GeometryInstance3D</span></a> <strong>&lt;</strong> <a class=\"reference internal\" href=\"class_visualinstance3d.html#class-visualinstance3d\"><span class=\"std std-ref\">VisualInstance3D</span></a> <strong>&lt;</strong> <a class=\"reference internal\" href=\"class_node3d.html#class-node3d\"><span class=\"std std-ref\">Node3D</span></a> <strong>&lt;</strong> <a class=\"reference internal\" href=\"class_node.html#class-node\"><span class=\"std std-ref\">Node</span></a> <strong>&lt;</strong> <a class=\"reference internal\" href=\"class_object.html#class-object\"><span class=\"std std-ref\">Object</span></a></p><p>CPU-based 3D particle emitter.</p>",
                "description": "\n\n<p>CPU-based 3D particle node used to create a variety of particle systems and effects.</p>\n<p>See also <a class=\"reference internal\" href=\"class_gpuparticles3d.html#class-gpuparticles3d\"><span class=\"std std-ref\">GPUParticles3D</span></a>, which provides the same functionality with hardware acceleration, but may not run on older devices.</p>\n"
            },
            "class_csgbox3d": {
                "url": "https://docs.godotengine.org/en/4.1/classes/class_csgbox3d.html",
                "title": "CSGBox3D",
                "blurb": "<p><strong>Inherits:</strong> <a class=\"reference internal\" href=\"class_csgprimitive3d.html#class-csgprimitive3d\"><span class=\"std std-ref\">CSGPrimitive3D</span></a> <strong>&lt;</strong> <a class=\"reference internal\" href=\"class_csgshape3d.html#class-csgshape3d\"><span class=\"std std-ref\">CSGShape3D</span></a> <strong>&lt;</strong> <a class=\"reference internal\" href=\"class_geometryinstance3d.html#class-geometryinstance3d\"><span class=\"std std-ref\">GeometryInstance3D</span></a> <strong>&lt;</strong> <a class=\"reference internal\" href=\"class_visualinstance3d.html#class-visualinstance3d\"><span class=\"std std-ref\">VisualInstance3D</span></a> <strong>&lt;</strong> <a class=\"reference internal\" href=\"class_node3d.html#class-node3d\"><span class=\"std std-ref\">Node3D</span></a> <strong>&lt;</strong> <a class=\"reference internal\" href=\"class_node.html#class-node\"><span class=\"std std-ref\">Node</span></a> <strong>&lt;</strong> <a class=\"reference internal\" href=\"class_object.html#class-object\"><span class=\"std std-ref\">Object</span></a></p><p>A CSG Box shape.</p>",
                "description": "\n\n<p>This node allows you to create a box for use with the CSG system.</p>\n<p><strong>Note:</strong> CSG nodes are intended to be used for level prototyping. Creating CSG nodes has a significant CPU cost compared to creating a <a class=\"reference internal\" href=\"class_meshinstance3d.html#class-meshinstance3d\"><span class=\"std std-ref\">MeshInstance3D</span></a> with a <a class=\"reference internal\" href=\"class_primitivemesh.html#class-primitivemesh\"><span class=\"std std-ref\">PrimitiveMesh</span></a>. Moving a CSG node within another CSG node also has a significant CPU cost, so it should be avoided during gameplay.</p>\n"
            },
            "class_csgcombiner3d": {
                "url": "https://docs.godotengine.org/en/4.1/classes/class_csgcombiner3d.html",
                "title": "CSGCombiner3D",
                "blurb": "<p><strong>Inherits:</strong> <a class=\"reference internal\" href=\"class_csgshape3d.html#class-csgshape3d\"><span class=\"std std-ref\">CSGShape3D</span></a> <strong>&lt;</strong> <a class=\"reference internal\" href=\"class_geometryinstance3d.html#class-geometryinstance3d\"><span class=\"std std-ref\">GeometryInstance3D</span></a> <strong>&lt;</strong> <a class=\"reference internal\" href=\"class_visualinstance3d.html#class-visualinstance3d\"><span class=\"std std-ref\">VisualInstance3D</span></a> <strong>&lt;</strong> <a class=\"reference internal\" href=\"class_node3d.html#class-node3d\"><span class=\"std std-ref\">Node3D</span></a> <strong>&lt;</strong> <a class=\"reference internal\" href=\"class_node.html#class-node\"><span class=\"std std-ref\">Node</span></a> <strong>&lt;</strong> <a class=\"reference internal\" href=\"class_object.html#class-object\"><span class=\"std std-ref\">Object</span></a></p><p>A CSG node that allows you to combine other CSG modifiers.</p>",
                "description": "\n\n<p>For complex arrangements of shapes, it is sometimes needed to add structure to your CSG nodes. The CSGCombiner3D node allows you to create this structure. The node encapsulates the result of the CSG operations of its children. In this way, it is possible to do operations on one set of shapes that are children of one CSGCombiner3D node, and a set of separate operations on a second set of shapes that are children of a second CSGCombiner3D node, and then do an operation that takes the two end results as its input to create the final shape.</p>\n<p><strong>Note:</strong> CSG nodes are intended to be used for level prototyping. Creating CSG nodes has a significant CPU cost compared to creating a <a class=\"reference internal\" href=\"class_meshinstance3d.html#class-meshinstance3d\"><span class=\"std std-ref\">MeshInstance3D</span></a> with a <a class=\"reference internal\" href=\"class_primitivemesh.html#class-primitivemesh\"><span class=\"std std-ref\">PrimitiveMesh</span></a>. Moving a CSG node within another CSG node also has a significant CPU cost, so it should be avoided during gameplay.</p>\n"
            },
            "class_csgcylinder3d": {
                "url": "https://docs.godotengine.org/en/4.1/classes/class_csgcylinder3d.html",
                "title": "CSGCylinder3D",
                "blurb": "<p><strong>Inherits:</strong> <a class=\"reference internal\" href=\"class_csgprimitive3d.html#class-csgprimitive3d\"><span class=\"std std-ref\">CSGPrimitive3D</span></a> <strong>&lt;</strong> <a class=\"reference internal\" href=\"class_csgshape3d.html#class-csgshape3d\"><span class=\"std std-ref\">CSGShape3D</span></a> <strong>&lt;</strong> <a class=\"reference internal\" href=\"class_geometryinstance3d.html#class-geometryinstance3d\"><span class=\"std std-ref\">GeometryInstance3D</span></a> <strong>&lt;</strong> <a class=\"reference internal\" href=\"class_visualinstance3d.html#class-visualinstance3d\"><span class=\"std std-ref\">VisualInstance3D</span></a> <strong>&lt;</strong> <a class=\"reference internal\" href=\"class_node3d.html#class-node3d\"><span class=\"std std-ref\">Node3D</span></a> <strong>&lt;</strong> <a class=\"reference internal\" href=\"class_node.html#class-node\"><span class=\"std std-ref\">Node</span></a> <strong>&lt;</strong> <a class=\"reference internal\" href=\"class_object.html#class-object\"><span class=\"std std-ref\">Object</span></a></p><p>A CSG Cylinder shape.</p>",
                "description": "\n\n<p>This node allows you to create a cylinder (or cone) for use with the CSG system.</p>\n<p><strong>Note:</strong> CSG nodes are intended to be used for level prototyping. Creating CSG nodes has a significant CPU cost compared to creating a <a class=\"reference internal\" href=\"class_meshinstance3d.html#class-meshinstance3d\"><span class=\"std std-ref\">MeshInstance3D</span></a> with a <a class=\"reference internal\" href=\"class_primitivemesh.html#class-primitivemesh\"><span class=\"std std-ref\">PrimitiveMesh</span></a>. Moving a CSG node within another CSG node also has a significant CPU cost, so it should be avoided during gameplay.</p>\n"
            },
            "class_csgmesh3d": {
                "url": "https://docs.godotengine.org/en/4.1/classes/class_csgmesh3d.html",
                "title": "CSGMesh3D",
                "blurb": "<p><strong>Inherits:</strong> <a class=\"reference internal\" href=\"class_csgprimitive3d.html#class-csgprimitive3d\"><span class=\"std std-ref\">CSGPrimitive3D</span></a> <strong>&lt;</strong> <a class=\"reference internal\" href=\"class_csgshape3d.html#class-csgshape3d\"><span class=\"std std-ref\">CSGShape3D</span></a> <strong>&lt;</strong> <a class=\"reference internal\" href=\"class_geometryinstance3d.html#class-geometryinstance3d\"><span class=\"std std-ref\">GeometryInstance3D</span></a> <strong>&lt;</strong> <a class=\"reference internal\" href=\"class_visualinstance3d.html#class-visualinstance3d\"><span class=\"std std-ref\">VisualInstance3D</span></a> <strong>&lt;</strong> <a class=\"reference internal\" href=\"class_node3d.html#class-node3d\"><span class=\"std std-ref\">Node3D</span></a> <strong>&lt;</strong> <a class=\"reference internal\" href=\"class_node.html#class-node\"><span class=\"std std-ref\">Node</span></a> <strong>&lt;</strong> <a class=\"reference internal\" href=\"class_object.html#class-object\"><span class=\"std std-ref\">Object</span></a></p><p>A CSG Mesh shape that uses a mesh resource.</p>",
                "description": "\n\n<p>This CSG node allows you to use any mesh resource as a CSG shape, provided it is closed, does not self-intersect, does not contain internal faces and has no edges that connect to more than two faces. See also <a class=\"reference internal\" href=\"class_csgpolygon3d.html#class-csgpolygon3d\"><span class=\"std std-ref\">CSGPolygon3D</span></a> for drawing 2D extruded polygons to be used as CSG nodes.</p>\n<p><strong>Note:</strong> CSG nodes are intended to be used for level prototyping. Creating CSG nodes has a significant CPU cost compared to creating a <a class=\"reference internal\" href=\"class_meshinstance3d.html#class-meshinstance3d\"><span class=\"std std-ref\">MeshInstance3D</span></a> with a <a class=\"reference internal\" href=\"class_primitivemesh.html#class-primitivemesh\"><span class=\"std std-ref\">PrimitiveMesh</span></a>. Moving a CSG node within another CSG node also has a significant CPU cost, so it should be avoided during gameplay.</p>\n"
            },
            "class_csgpolygon3d": {
                "url": "https://docs.godotengine.org/en/4.1/classes/class_csgpolygon3d.html",
                "title": "CSGPolygon3D",
                "blurb": "<p><strong>Inherits:</strong> <a class=\"reference internal\" href=\"class_csgprimitive3d.html#class-csgprimitive3d\"><span class=\"std std-ref\">CSGPrimitive3D</span></a> <strong>&lt;</strong> <a class=\"reference internal\" href=\"class_csgshape3d.html#class-csgshape3d\"><span class=\"std std-ref\">CSGShape3D</span></a> <strong>&lt;</strong> <a class=\"reference internal\" href=\"class_geometryinstance3d.html#class-geometryinstance3d\"><span class=\"std std-ref\">GeometryInstance3D</span></a> <strong>&lt;</strong> <a class=\"reference internal\" href=\"class_visualinstance3d.html#class-visualinstance3d\"><span class=\"std std-ref\">VisualInstance3D</span></a> <strong>&lt;</strong> <a class=\"reference internal\" href=\"class_node3d.html#class-node3d\"><span class=\"std std-ref\">Node3D</span></a> <strong>&lt;</strong> <a class=\"reference internal\" href=\"class_node.html#class-node\"><span class=\"std std-ref\">Node</span></a> <strong>&lt;</strong> <a class=\"reference internal\" href=\"class_object.html#class-object\"><span class=\"std std-ref\">Object</span></a></p><p>Extrudes a 2D polygon shape to create a 3D mesh.</p>",
                "description": "\n\n<p>An array of 2D points is extruded to quickly and easily create a variety of 3D meshes. See also <a class=\"reference internal\" href=\"class_csgmesh3d.html#class-csgmesh3d\"><span class=\"std std-ref\">CSGMesh3D</span></a> for using 3D meshes as CSG nodes.</p>\n<p><strong>Note:</strong> CSG nodes are intended to be used for level prototyping. Creating CSG nodes has a significant CPU cost compared to creating a <a class=\"reference internal\" href=\"class_meshinstance3d.html#class-meshinstance3d\"><span class=\"std std-ref\">MeshInstance3D</span></a> with a <a class=\"reference internal\" href=\"class_primitivemesh.html#class-primitivemesh\"><span class=\"std std-ref\">PrimitiveMesh</span></a>. Moving a CSG node within another CSG node also has a significant CPU cost, so it should be avoided during gameplay.</p>\n"
            },
            "class_csgprimitive3d": {
                "url": "https://docs.godotengine.org/en/4.1/classes/class_csgprimitive3d.html",
                "title": "CSGPrimitive3D",
                "blurb": "<p><strong>Inherits:</strong> <a class=\"reference internal\" href=\"class_csgshape3d.html#class-csgshape3d\"><span class=\"std std-ref\">CSGShape3D</span></a> <strong>&lt;</strong> <a class=\"reference internal\" href=\"class_geometryinstance3d.html#class-geometryinstance3d\"><span class=\"std std-ref\">GeometryInstance3D</span></a> <strong>&lt;</strong> <a class=\"reference internal\" href=\"class_visualinstance3d.html#class-visualinstance3d\"><span class=\"std std-ref\">VisualInstance3D</span></a> <strong>&lt;</strong> <a class=\"reference internal\" href=\"class_node3d.html#class-node3d\"><span class=\"std std-ref\">Node3D</span></a> <strong>&lt;</strong> <a class=\"reference internal\" href=\"class_node.html#class-node\"><span class=\"std std-ref\">Node</span></a> <strong>&lt;</strong> <a class=\"reference internal\" href=\"class_object.html#class-object\"><span class=\"std std-ref\">Object</span></a></p><p><strong>Inherited By:</strong> <a class=\"reference internal\" href=\"class_csgbox3d.html#class-csgbox3d\"><span class=\"std std-ref\">CSGBox3D</span></a>, <a class=\"reference internal\" href=\"class_csgcylinder3d.html#class-csgcylinder3d\"><span class=\"std std-ref\">CSGCylinder3D</span></a>, <a class=\"reference internal\" href=\"class_csgmesh3d.html#class-csgmesh3d\"><span class=\"std std-ref\">CSGMesh3D</span></a>, <a class=\"reference internal\" href=\"class_csgpolygon3d.html#class-csgpolygon3d\"><span class=\"std std-ref\">CSGPolygon3D</span></a>, <a class=\"reference internal\" href=\"class_csgsphere3d.html#class-csgsphere3d\"><span class=\"std std-ref\">CSGSphere3D</span></a>, <a class=\"reference internal\" href=\"class_csgtorus3d.html#class-csgtorus3d\"><span class=\"std std-ref\">CSGTorus3D</span></a></p><p>Base class for CSG primitives.</p>",
                "description": "\n\n<p>Parent class for various CSG primitives. It contains code and functionality that is common between them. It cannot be used directly. Instead use one of the various classes that inherit from it.</p>\n<p><strong>Note:</strong> CSG nodes are intended to be used for level prototyping. Creating CSG nodes has a significant CPU cost compared to creating a <a class=\"reference internal\" href=\"class_meshinstance3d.html#class-meshinstance3d\"><span class=\"std std-ref\">MeshInstance3D</span></a> with a <a class=\"reference internal\" href=\"class_primitivemesh.html#class-primitivemesh\"><span class=\"std std-ref\">PrimitiveMesh</span></a>. Moving a CSG node within another CSG node also has a significant CPU cost, so it should be avoided during gameplay.</p>\n"
            },
            "class_csgshape3d": {
                "url": "https://docs.godotengine.org/en/4.1/classes/class_csgshape3d.html",
                "title": "CSGShape3D",
                "blurb": "<p><strong>Inherits:</strong> <a class=\"reference internal\" href=\"class_geometryinstance3d.html#class-geometryinstance3d\"><span class=\"std std-ref\">GeometryInstance3D</span></a> <strong>&lt;</strong> <a class=\"reference internal\" href=\"class_visualinstance3d.html#class-visualinstance3d\"><span class=\"std std-ref\">VisualInstance3D</span></a> <strong>&lt;</strong> <a class=\"reference internal\" href=\"class_node3d.html#class-node3d\"><span class=\"std std-ref\">Node3D</span></a> <strong>&lt;</strong> <a class=\"reference internal\" href=\"class_node.html#class-node\"><span class=\"std std-ref\">Node</span></a> <strong>&lt;</strong> <a class=\"reference internal\" href=\"class_object.html#class-object\"><span class=\"std std-ref\">Object</span></a></p><p><strong>Inherited By:</strong> <a class=\"reference internal\" href=\"class_csgcombiner3d.html#class-csgcombiner3d\"><span class=\"std std-ref\">CSGCombiner3D</span></a>, <a class=\"reference internal\" href=\"class_csgprimitive3d.html#class-csgprimitive3d\"><span class=\"std std-ref\">CSGPrimitive3D</span></a></p><p>The CSG base class.</p>",
                "description": "\n\n<p>This is the CSG base class that provides CSG operation support to the various CSG nodes in Godot.</p>\n<p><strong>Note:</strong> CSG nodes are intended to be used for level prototyping. Creating CSG nodes has a significant CPU cost compared to creating a <a class=\"reference internal\" href=\"class_meshinstance3d.html#class-meshinstance3d\"><span class=\"std std-ref\">MeshInstance3D</span></a> with a <a class=\"reference internal\" href=\"class_primitivemesh.html#class-primitivemesh\"><span class=\"std std-ref\">PrimitiveMesh</span></a>. Moving a CSG node within another CSG node also has a significant CPU cost, so it should be avoided during gameplay.</p>\n"
            },
            "class_csgsphere3d": {
                "url": "https://docs.godotengine.org/en/4.1/classes/class_csgsphere3d.html",
                "title": "CSGSphere3D",
                "blurb": "<p><strong>Inherits:</strong> <a class=\"reference internal\" href=\"class_csgprimitive3d.html#class-csgprimitive3d\"><span class=\"std std-ref\">CSGPrimitive3D</span></a> <strong>&lt;</strong> <a class=\"reference internal\" href=\"class_csgshape3d.html#class-csgshape3d\"><span class=\"std std-ref\">CSGShape3D</span></a> <strong>&lt;</strong> <a class=\"reference internal\" href=\"class_geometryinstance3d.html#class-geometryinstance3d\"><span class=\"std std-ref\">GeometryInstance3D</span></a> <strong>&lt;</strong> <a class=\"reference internal\" href=\"class_visualinstance3d.html#class-visualinstance3d\"><span class=\"std std-ref\">VisualInstance3D</span></a> <strong>&lt;</strong> <a class=\"reference internal\" href=\"class_node3d.html#class-node3d\"><span class=\"std std-ref\">Node3D</span></a> <strong>&lt;</strong> <a class=\"reference internal\" href=\"class_node.html#class-node\"><span class=\"std std-ref\">Node</span></a> <strong>&lt;</strong> <a class=\"reference internal\" href=\"class_object.html#class-object\"><span class=\"std std-ref\">Object</span></a></p><p>A CSG Sphere shape.</p>",
                "description": "\n\n<p>This node allows you to create a sphere for use with the CSG system.</p>\n<p><strong>Note:</strong> CSG nodes are intended to be used for level prototyping. Creating CSG nodes has a significant CPU cost compared to creating a <a class=\"reference internal\" href=\"class_meshinstance3d.html#class-meshinstance3d\"><span class=\"std std-ref\">MeshInstance3D</span></a> with a <a class=\"reference internal\" href=\"class_primitivemesh.html#class-primitivemesh\"><span class=\"std std-ref\">PrimitiveMesh</span></a>. Moving a CSG node within another CSG node also has a significant CPU cost, so it should be avoided during gameplay.</p>\n"
            },
            "class_csgtorus3d": {
                "url": "https://docs.godotengine.org/en/4.1/classes/class_csgtorus3d.html",
                "title": "CSGTorus3D",
                "blurb": "<p><strong>Inherits:</strong> <a class=\"reference internal\" href=\"class_csgprimitive3d.html#class-csgprimitive3d\"><span class=\"std std-ref\">CSGPrimitive3D</span></a> <strong>&lt;</strong> <a class=\"reference internal\" href=\"class_csgshape3d.html#class-csgshape3d\"><span class=\"std std-ref\">CSGShape3D</span></a> <strong>&lt;</strong> <a class=\"reference internal\" href=\"class_geometryinstance3d.html#class-geometryinstance3d\"><span class=\"std std-ref\">GeometryInstance3D</span></a> <strong>&lt;</strong> <a class=\"reference internal\" href=\"class_visualinstance3d.html#class-visualinstance3d\"><span class=\"std std-ref\">VisualInstance3D</span></a> <strong>&lt;</strong> <a class=\"reference internal\" href=\"class_node3d.html#class-node3d\"><span class=\"std std-ref\">Node3D</span></a> <strong>&lt;</strong> <a class=\"reference internal\" href=\"class_node.html#class-node\"><span class=\"std std-ref\">Node</span></a> <strong>&lt;</strong> <a class=\"reference internal\" href=\"class_object.html#class-object\"><span class=\"std std-ref\">Object</span></a></p><p>A CSG Torus shape.</p>",
                "description": "\n\n<p>This node allows you to create a torus for use with the CSG system.</p>\n<p><strong>Note:</strong> CSG nodes are intended to be used for level prototyping. Creating CSG nodes has a significant CPU cost compared to creating a <a class=\"reference internal\" href=\"class_meshinstance3d.html#class-meshinstance3d\"><span class=\"std std-ref\">MeshInstance3D</span></a> with a <a class=\"reference internal\" href=\"class_primitivemesh.html#class-primitivemesh\"><span class=\"std std-ref\">PrimitiveMesh</span></a>. Moving a CSG node within another CSG node also has a significant CPU cost, so it should be avoided during gameplay.</p>\n"
            },
            "class_dampedspringjoint2d": {
                "url": "https://docs.godotengine.org/en/4.1/classes/class_dampedspringjoint2d.html",
                "title": "DampedSpringJoint2D",
                "blurb": "<p><strong>Inherits:</strong> <a class=\"reference internal\" href=\"class_joint2d.html#class-joint2d\"><span class=\"std std-ref\">Joint2D</span></a> <strong>&lt;</strong> <a class=\"reference internal\" href=\"class_node2d.html#class-node2d\"><span class=\"std std-ref\">Node2D</span></a> <strong>&lt;</strong> <a class=\"reference internal\" href=\"class_canvasitem.html#class-canvasitem\"><span class=\"std std-ref\">CanvasItem</span></a> <strong>&lt;</strong> <a class=\"reference internal\" href=\"class_node.html#class-node\"><span class=\"std std-ref\">Node</span></a> <strong>&lt;</strong> <a class=\"reference internal\" href=\"class_object.html#class-object\"><span class=\"std std-ref\">Object</span></a></p><p>A physics joint that connects two 2D physics bodies with a spring-like force.</p>",
                "description": "\n\n<p>A physics joint that connects two 2D physics bodies with a spring-like force. This resembles a spring that always wants to stretch to a given length.</p>\n"
            },
            "class_decal": {
                "url": "https://docs.godotengine.org/en/4.1/classes/class_decal.html",
                "title": "Decal",
                "blurb": "<p><strong>Inherits:</strong> <a class=\"reference internal\" href=\"class_visualinstance3d.html#class-visualinstance3d\"><span class=\"std std-ref\">VisualInstance3D</span></a> <strong>&lt;</strong> <a class=\"reference internal\" href=\"class_node3d.html#class-node3d\"><span class=\"std std-ref\">Node3D</span></a> <strong>&lt;</strong> <a class=\"reference internal\" href=\"class_node.html#class-node\"><span class=\"std std-ref\">Node</span></a> <strong>&lt;</strong> <a class=\"reference internal\" href=\"class_object.html#class-object\"><span class=\"std std-ref\">Object</span></a></p><p>Node that projects a texture onto a <a class=\"reference internal\" href=\"class_meshinstance3d.html#class-meshinstance3d\"><span class=\"std std-ref\">MeshInstance3D</span></a>.</p>",
                "description": "\n\n<p><strong>Decal</strong>s are used to project a texture onto a <a class=\"reference internal\" href=\"class_mesh.html#class-mesh\"><span class=\"std std-ref\">Mesh</span></a> in the scene. Use Decals to add detail to a scene without affecting the underlying <a class=\"reference internal\" href=\"class_mesh.html#class-mesh\"><span class=\"std std-ref\">Mesh</span></a>. They are often used to add weathering to building, add dirt or mud to the ground, or add variety to props. Decals can be moved at any time, making them suitable for things like blob shadows or laser sight dots.</p>\n<p>They are made of an <a class=\"reference internal\" href=\"class_aabb.html#class-aabb\"><span class=\"std std-ref\">AABB</span></a> and a group of <a class=\"reference internal\" href=\"class_texture2d.html#class-texture2d\"><span class=\"std std-ref\">Texture2D</span></a>s specifying <a class=\"reference internal\" href=\"class_color.html#class-color\"><span class=\"std std-ref\">Color</span></a>, normal, ORM (ambient occlusion, roughness, metallic), and emission. Decals are projected within their <a class=\"reference internal\" href=\"class_aabb.html#class-aabb\"><span class=\"std std-ref\">AABB</span></a> so altering the orientation of the Decal affects the direction in which they are projected. By default, Decals are projected down (i.e. from positive Y to negative Y).</p>\n<p>The <a class=\"reference internal\" href=\"class_texture2d.html#class-texture2d\"><span class=\"std std-ref\">Texture2D</span></a>s associated with the Decal are automatically stored in a texture atlas which is used for drawing the decals so all decals can be drawn at once. Godot uses clustered decals, meaning they are stored in cluster data and drawn when the mesh is drawn, they are not drawn as a post-processing effect after.</p>\n<p><strong>Note:</strong> Decals cannot affect an underlying material's transparency, regardless of its transparency mode (alpha blend, alpha scissor, alpha hash, opaque pre-pass). This means translucent or transparent areas of a material will remain translucent or transparent even if an opaque decal is applied on them.</p>\n<p><strong>Note:</strong> Decals are only supported in the Forward+ and Mobile rendering methods, not Compatibility. When using the Mobile rendering method, only 8 decals can be displayed on each mesh resource. Attempting to display more than 8 decals on a single mesh resource will result in decals flickering in and out as the camera moves.</p>\n<p><strong>Note:</strong> When using the Mobile rendering method, decals will only correctly affect meshes whose visibility AABB intersects with the decal's AABB. If using a shader to deform the mesh in a way that makes it go outside its AABB, <a class=\"reference internal\" href=\"class_geometryinstance3d.html#class-geometryinstance3d-property-extra-cull-margin\"><span class=\"std std-ref\">GeometryInstance3D.extra_cull_margin</span></a> must be increased on the mesh. Otherwise, the decal may not be visible on the mesh.</p>\n"
            },
            "class_directionallight2d": {
                "url": "https://docs.godotengine.org/en/4.1/classes/class_directionallight2d.html",
                "title": "DirectionalLight2D",
                "blurb": "<p><strong>Inherits:</strong> <a class=\"reference internal\" href=\"class_light2d.html#class-light2d\"><span class=\"std std-ref\">Light2D</span></a> <strong>&lt;</strong> <a class=\"reference internal\" href=\"class_node2d.html#class-node2d\"><span class=\"std std-ref\">Node2D</span></a> <strong>&lt;</strong> <a class=\"reference internal\" href=\"class_canvasitem.html#class-canvasitem\"><span class=\"std std-ref\">CanvasItem</span></a> <strong>&lt;</strong> <a class=\"reference internal\" href=\"class_node.html#class-node\"><span class=\"std std-ref\">Node</span></a> <strong>&lt;</strong> <a class=\"reference internal\" href=\"class_object.html#class-object\"><span class=\"std std-ref\">Object</span></a></p><p>Directional 2D light from a distance.</p>",
                "description": "\n\n<p>A directional light is a type of <a class=\"reference internal\" href=\"class_light2d.html#class-light2d\"><span class=\"std std-ref\">Light2D</span></a> node that models an infinite number of parallel rays covering the entire scene. It is used for lights with strong intensity that are located far away from the scene (for example: to model sunlight or moonlight).</p>\n<p><strong>Note:</strong> <strong>DirectionalLight2D</strong> does not support light cull masks (but it supports shadow cull masks). It will always light up 2D nodes, regardless of the 2D node's <a class=\"reference internal\" href=\"class_canvasitem.html#class-canvasitem-property-light-mask\"><span class=\"std std-ref\">CanvasItem.light_mask</span></a>.</p>\n"
            },
            "class_directionallight3d": {
                "url": "https://docs.godotengine.org/en/4.1/classes/class_directionallight3d.html",
                "title": "DirectionalLight3D",
                "blurb": "<p><strong>Inherits:</strong> <a class=\"reference internal\" href=\"class_light3d.html#class-light3d\"><span class=\"std std-ref\">Light3D</span></a> <strong>&lt;</strong> <a class=\"reference internal\" href=\"class_visualinstance3d.html#class-visualinstance3d\"><span class=\"std std-ref\">VisualInstance3D</span></a> <strong>&lt;</strong> <a class=\"reference internal\" href=\"class_node3d.html#class-node3d\"><span class=\"std std-ref\">Node3D</span></a> <strong>&lt;</strong> <a class=\"reference internal\" href=\"class_node.html#class-node\"><span class=\"std std-ref\">Node</span></a> <strong>&lt;</strong> <a class=\"reference internal\" href=\"class_object.html#class-object\"><span class=\"std std-ref\">Object</span></a></p><p>Directional light from a distance, as from the Sun.</p>",
                "description": "\n\n<p>A directional light is a type of <a class=\"reference internal\" href=\"class_light3d.html#class-light3d\"><span class=\"std std-ref\">Light3D</span></a> node that models an infinite number of parallel rays covering the entire scene. It is used for lights with strong intensity that are located far away from the scene to model sunlight or moonlight. The worldspace location of the DirectionalLight3D transform (origin) is ignored. Only the basis is used to determine light direction.</p>\n"
            },
            "class_editorcommandpalette": {
                "url": "https://docs.godotengine.org/en/4.1/classes/class_editorcommandpalette.html",
                "title": "EditorCommandPalette",
                "blurb": "<p><strong>Inherits:</strong> <a class=\"reference internal\" href=\"class_confirmationdialog.html#class-confirmationdialog\"><span class=\"std std-ref\">ConfirmationDialog</span></a> <strong>&lt;</strong> <a class=\"reference internal\" href=\"class_acceptdialog.html#class-acceptdialog\"><span class=\"std std-ref\">AcceptDialog</span></a> <strong>&lt;</strong> <a class=\"reference internal\" href=\"class_window.html#class-window\"><span class=\"std std-ref\">Window</span></a> <strong>&lt;</strong> <a class=\"reference internal\" href=\"class_viewport.html#class-viewport\"><span class=\"std std-ref\">Viewport</span></a> <strong>&lt;</strong> <a class=\"reference internal\" href=\"class_node.html#class-node\"><span class=\"std std-ref\">Node</span></a> <strong>&lt;</strong> <a class=\"reference internal\" href=\"class_object.html#class-object\"><span class=\"std std-ref\">Object</span></a></p><p>Godot editor's command palette.</p>",
                "description": "\n\n<p>Object that holds all the available Commands and their shortcuts text. These Commands can be accessed through <strong>Editor &gt; Command Palette</strong> menu.</p>\n<p>Command key names use slash delimiters to distinguish sections, for example: <code class=\"docutils literal notranslate\"><span class=\"pre\">\"example/command1\"</span></code> then <code class=\"docutils literal notranslate\"><span class=\"pre\">example</span></code> will be the section name.</p>\n<div class=\"sphinx-tabs docutils container\">\n<div aria-label=\"Tabbed content\" class=\"closeable\" role=\"tablist\"><button aria-controls=\"panel-0-R0RTY3JpcHQ=\" aria-selected=\"true\" class=\"sphinx-tabs-tab code-tab group-tab\" id=\"tab-0-R0RTY3JpcHQ=\" name=\"R0RTY3JpcHQ=\" role=\"tab\" tabindex=\"0\">GDScript</button><button aria-controls=\"panel-0-QyM=\" aria-selected=\"false\" class=\"sphinx-tabs-tab code-tab group-tab\" id=\"tab-0-QyM=\" name=\"QyM=\" role=\"tab\" tabindex=\"-1\">C#</button></div><div aria-labelledby=\"tab-0-R0RTY3JpcHQ=\" class=\"sphinx-tabs-panel code-tab group-tab\" id=\"panel-0-R0RTY3JpcHQ=\" name=\"R0RTY3JpcHQ=\" role=\"tabpanel\" tabindex=\"0\"><div class=\"highlight-gdscript notranslate\"><div class=\"highlight\"><pre><span></span><span class=\"k\">var</span> <span class=\"n\">command_palette</span> <span class=\"o\">=</span> <span class=\"n\">get_editor_interface</span><span class=\"p\">()</span><span class=\"o\">.</span><span class=\"n\">get_command_palette</span><span class=\"p\">()</span>\n<span class=\"c1\"># external_command is a function that will be called with the command is executed.</span>\n<span class=\"k\">var</span> <span class=\"n\">command_callable</span> <span class=\"o\">=</span> <span class=\"n\">Callable</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span> <span class=\"s2\">\"external_command\"</span><span class=\"p\">)</span><span class=\"o\">.</span><span class=\"n\">bind</span><span class=\"p\">(</span><span class=\"n\">arguments</span><span class=\"p\">)</span>\n<span class=\"n\">command_palette</span><span class=\"o\">.</span><span class=\"n\">add_command</span><span class=\"p\">(</span><span class=\"s2\">\"command\"</span><span class=\"p\">,</span> <span class=\"s2\">\"test/command\"</span><span class=\"p\">,</span><span class=\"n\">command_callable</span><span class=\"p\">)</span>\n</pre></div>\n</div>\n</div><div aria-labelledby=\"tab-0-QyM=\" class=\"sphinx-tabs-panel code-tab group-tab\" hidden=\"true\" id=\"panel-0-QyM=\" name=\"QyM=\" role=\"tabpanel\" tabindex=\"0\"><div class=\"highlight-csharp notranslate\"><div class=\"highlight\"><pre><span></span><span class=\"n\">EditorCommandPalette</span><span class=\"w\"> </span><span class=\"n\">commandPalette</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"n\">GetEditorInterface</span><span class=\"p\">().</span><span class=\"n\">GetCommandPalette</span><span class=\"p\">();</span>\n<span class=\"c1\">// ExternalCommand is a function that will be called with the command is executed.</span>\n<span class=\"n\">Callable</span><span class=\"w\"> </span><span class=\"n\">commandCallable</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"k\">new</span><span class=\"w\"> </span><span class=\"n\">Callable</span><span class=\"p\">(</span><span class=\"k\">this</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">MethodName</span><span class=\"p\">.</span><span class=\"n\">ExternalCommand</span><span class=\"p\">);</span>\n<span class=\"n\">commandPalette</span><span class=\"p\">.</span><span class=\"n\">AddCommand</span><span class=\"p\">(</span><span class=\"s\">\"command\"</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"s\">\"test/command\"</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">commandCallable</span><span class=\"p\">)</span>\n</pre></div>\n</div>\n</div></div>\n<p><strong>Note:</strong> This class shouldn't be instantiated directly. Instead, access the singleton using <a class=\"reference internal\" href=\"class_editorinterface.html#class-editorinterface-method-get-command-palette\"><span class=\"std std-ref\">EditorInterface.get_command_palette</span></a>.</p>\n"
            },
            "class_editorfiledialog": {
                "url": "https://docs.godotengine.org/en/4.1/classes/class_editorfiledialog.html",
                "title": "EditorFileDialog",
                "blurb": "<p><strong>Inherits:</strong> <a class=\"reference internal\" href=\"class_confirmationdialog.html#class-confirmationdialog\"><span class=\"std std-ref\">ConfirmationDialog</span></a> <strong>&lt;</strong> <a class=\"reference internal\" href=\"class_acceptdialog.html#class-acceptdialog\"><span class=\"std std-ref\">AcceptDialog</span></a> <strong>&lt;</strong> <a class=\"reference internal\" href=\"class_window.html#class-window\"><span class=\"std std-ref\">Window</span></a> <strong>&lt;</strong> <a class=\"reference internal\" href=\"class_viewport.html#class-viewport\"><span class=\"std std-ref\">Viewport</span></a> <strong>&lt;</strong> <a class=\"reference internal\" href=\"class_node.html#class-node\"><span class=\"std std-ref\">Node</span></a> <strong>&lt;</strong> <a class=\"reference internal\" href=\"class_object.html#class-object\"><span class=\"std std-ref\">Object</span></a></p><p>A modified version of <a class=\"reference internal\" href=\"class_filedialog.html#class-filedialog\"><span class=\"std std-ref\">FileDialog</span></a> used by the editor.</p>",
                "description": "\n\n<p><strong>EditorFileDialog</strong> is an enhanced version of <a class=\"reference internal\" href=\"class_filedialog.html#class-filedialog\"><span class=\"std std-ref\">FileDialog</span></a> available only to editor plugins. Additional features include list of favorited/recent files and the ability to see files as thumbnails grid instead of list.</p>\n"
            },
            "class_editorfilesystem": {
                "url": "https://docs.godotengine.org/en/4.1/classes/class_editorfilesystem.html",
                "title": "EditorFileSystem",
                "blurb": "<p><strong>Inherits:</strong> <a class=\"reference internal\" href=\"class_node.html#class-node\"><span class=\"std std-ref\">Node</span></a> <strong>&lt;</strong> <a class=\"reference internal\" href=\"class_object.html#class-object\"><span class=\"std std-ref\">Object</span></a></p><p>Resource filesystem, as the editor sees it.</p>",
                "description": "\n\n<p>This object holds information of all resources in the filesystem, their types, etc.</p>\n<p><strong>Note:</strong> This class shouldn't be instantiated directly. Instead, access the singleton using <a class=\"reference internal\" href=\"class_editorinterface.html#class-editorinterface-method-get-resource-filesystem\"><span class=\"std std-ref\">EditorInterface.get_resource_filesystem</span></a>.</p>\n"
            },
            "class_editorinspector": {
                "url": "https://docs.godotengine.org/en/4.1/classes/class_editorinspector.html",
                "title": "EditorInspector",
                "blurb": "<p><strong>Inherits:</strong> <a class=\"reference internal\" href=\"class_scrollcontainer.html#class-scrollcontainer\"><span class=\"std std-ref\">ScrollContainer</span></a> <strong>&lt;</strong> <a class=\"reference internal\" href=\"class_container.html#class-container\"><span class=\"std std-ref\">Container</span></a> <strong>&lt;</strong> <a class=\"reference internal\" href=\"class_control.html#class-control\"><span class=\"std std-ref\">Control</span></a> <strong>&lt;</strong> <a class=\"reference internal\" href=\"class_canvasitem.html#class-canvasitem\"><span class=\"std std-ref\">CanvasItem</span></a> <strong>&lt;</strong> <a class=\"reference internal\" href=\"class_node.html#class-node\"><span class=\"std std-ref\">Node</span></a> <strong>&lt;</strong> <a class=\"reference internal\" href=\"class_object.html#class-object\"><span class=\"std std-ref\">Object</span></a></p><p>A control used to edit properties of an object.</p>",
                "description": "\n\n<p>This is the control that implements property editing in the editor's Settings dialogs, the Inspector dock, etc. To get the <strong>EditorInspector</strong> used in the editor's Inspector dock, use <a class=\"reference internal\" href=\"class_editorinterface.html#class-editorinterface-method-get-inspector\"><span class=\"std std-ref\">EditorInterface.get_inspector</span></a>.</p>\n<p><strong>EditorInspector</strong> will show properties in the same order as the array returned by <a class=\"reference internal\" href=\"class_object.html#id2\"><span class=\"std std-ref\">Object.get_property_list</span></a>.</p>\n<p>If a property's name is path-like (i.e. if it contains forward slashes), <strong>EditorInspector</strong> will create nested sections for \"directories\" along the path. For example, if a property is named <code class=\"docutils literal notranslate\"><span class=\"pre\">highlighting/gdscript/node_path_color</span></code>, it will be shown as \"Node Path Color\" inside the \"GDScript\" section nested inside the \"Highlighting\" section.</p>\n<p>If a property has <a class=\"reference internal\" href=\"class_%40globalscope.html#class-globalscope-constant-property-usage-group\"><span class=\"std std-ref\">@GlobalScope.PROPERTY_USAGE_GROUP</span></a> usage, it will group subsequent properties whose name starts with the property's hint string. The group ends when a property does not start with that hint string or when a new group starts. An empty group name effectively ends the current group. <strong>EditorInspector</strong> will create a top-level section for each group. For example, if a property with group usage is named <code class=\"docutils literal notranslate\"><span class=\"pre\">Collide</span> <span class=\"pre\">With</span></code> and its hint string is <code class=\"docutils literal notranslate\"><span class=\"pre\">collide_with_</span></code>, a subsequent <code class=\"docutils literal notranslate\"><span class=\"pre\">collide_with_area</span></code> property will be shown as \"Area\" inside the \"Collide With\" section. There is also a special case: when the hint string contains the name of a property, that property is grouped too. This is mainly to help grouping properties like <code class=\"docutils literal notranslate\"><span class=\"pre\">font</span></code>, <code class=\"docutils literal notranslate\"><span class=\"pre\">font_color</span></code> and <code class=\"docutils literal notranslate\"><span class=\"pre\">font_size</span></code> (using the hint string <code class=\"docutils literal notranslate\"><span class=\"pre\">font_</span></code>).</p>\n<p>If a property has <a class=\"reference internal\" href=\"class_%40globalscope.html#class-globalscope-constant-property-usage-subgroup\"><span class=\"std std-ref\">@GlobalScope.PROPERTY_USAGE_SUBGROUP</span></a> usage, a subgroup will be created in the same way as a group, and a second-level section will be created for each subgroup.</p>\n<p><strong>Note:</strong> Unlike sections created from path-like property names, <strong>EditorInspector</strong> won't capitalize the name for sections created from groups. So properties with group usage usually use capitalized names instead of snake_cased names.</p>\n"
            },
            "class_editorplugin": {
                "url": "https://docs.godotengine.org/en/4.1/classes/class_editorplugin.html",
                "title": "EditorPlugin",
                "blurb": "<p><strong>Inherits:</strong> <a class=\"reference internal\" href=\"class_node.html#class-node\"><span class=\"std std-ref\">Node</span></a> <strong>&lt;</strong> <a class=\"reference internal\" href=\"class_object.html#class-object\"><span class=\"std std-ref\">Object</span></a></p><p>Used by the editor to extend its functionality.</p>",
                "description": "\n\n<p>Plugins are used by the editor to extend functionality. The most common types of plugins are those which edit a given node or resource type, import plugins and export plugins. See also <a class=\"reference internal\" href=\"class_editorscript.html#class-editorscript\"><span class=\"std std-ref\">EditorScript</span></a> to add functions to the editor.</p>\n"
            },
            "class_editorproperty": {
                "url": "https://docs.godotengine.org/en/4.1/classes/class_editorproperty.html",
                "title": "EditorProperty",
                "blurb": "<p><strong>Inherits:</strong> <a class=\"reference internal\" href=\"class_container.html#class-container\"><span class=\"std std-ref\">Container</span></a> <strong>&lt;</strong> <a class=\"reference internal\" href=\"class_control.html#class-control\"><span class=\"std std-ref\">Control</span></a> <strong>&lt;</strong> <a class=\"reference internal\" href=\"class_canvasitem.html#class-canvasitem\"><span class=\"std std-ref\">CanvasItem</span></a> <strong>&lt;</strong> <a class=\"reference internal\" href=\"class_node.html#class-node\"><span class=\"std std-ref\">Node</span></a> <strong>&lt;</strong> <a class=\"reference internal\" href=\"class_object.html#class-object\"><span class=\"std std-ref\">Object</span></a></p><p>Custom control for editing properties that can be added to the <a class=\"reference internal\" href=\"class_editorinspector.html#class-editorinspector\"><span class=\"std std-ref\">EditorInspector</span></a>.</p>",
                "description": "\n\n<p>A custom control for editing properties that can be added to the <a class=\"reference internal\" href=\"class_editorinspector.html#class-editorinspector\"><span class=\"std std-ref\">EditorInspector</span></a>. It is added via <a class=\"reference internal\" href=\"class_editorinspectorplugin.html#class-editorinspectorplugin\"><span class=\"std std-ref\">EditorInspectorPlugin</span></a>.</p>\n"
            },
            "class_editorresourcepicker": {
                "url": "https://docs.godotengine.org/en/4.1/classes/class_editorresourcepicker.html",
                "title": "EditorResourcePicker",
                "blurb": "<p><strong>Inherits:</strong> <a class=\"reference internal\" href=\"class_hboxcontainer.html#class-hboxcontainer\"><span class=\"std std-ref\">HBoxContainer</span></a> <strong>&lt;</strong> <a class=\"reference internal\" href=\"class_boxcontainer.html#class-boxcontainer\"><span class=\"std std-ref\">BoxContainer</span></a> <strong>&lt;</strong> <a class=\"reference internal\" href=\"class_container.html#class-container\"><span class=\"std std-ref\">Container</span></a> <strong>&lt;</strong> <a class=\"reference internal\" href=\"class_control.html#class-control\"><span class=\"std std-ref\">Control</span></a> <strong>&lt;</strong> <a class=\"reference internal\" href=\"class_canvasitem.html#class-canvasitem\"><span class=\"std std-ref\">CanvasItem</span></a> <strong>&lt;</strong> <a class=\"reference internal\" href=\"class_node.html#class-node\"><span class=\"std std-ref\">Node</span></a> <strong>&lt;</strong> <a class=\"reference internal\" href=\"class_object.html#class-object\"><span class=\"std std-ref\">Object</span></a></p><p><strong>Inherited By:</strong> <a class=\"reference internal\" href=\"class_editorscriptpicker.html#class-editorscriptpicker\"><span class=\"std std-ref\">EditorScriptPicker</span></a></p><p>Godot editor's control for selecting <a class=\"reference internal\" href=\"class_resource.html#class-resource\"><span class=\"std std-ref\">Resource</span></a> type properties.</p>",
                "description": "\n\n<p>This <a class=\"reference internal\" href=\"class_control.html#class-control\"><span class=\"std std-ref\">Control</span></a> node is used in the editor's Inspector dock to allow editing of <a class=\"reference internal\" href=\"class_resource.html#class-resource\"><span class=\"std std-ref\">Resource</span></a> type properties. It provides options for creating, loading, saving and converting resources. Can be used with <a class=\"reference internal\" href=\"class_editorinspectorplugin.html#class-editorinspectorplugin\"><span class=\"std std-ref\">EditorInspectorPlugin</span></a> to recreate the same behavior.</p>\n<p><strong>Note:</strong> This <a class=\"reference internal\" href=\"class_control.html#class-control\"><span class=\"std std-ref\">Control</span></a> does not include any editor for the resource, as editing is controlled by the Inspector dock itself or sub-Inspectors.</p>\n"
            },
            "class_editorresourcepreview": {
                "url": "https://docs.godotengine.org/en/4.1/classes/class_editorresourcepreview.html",
                "title": "EditorResourcePreview",
                "blurb": "<p><strong>Inherits:</strong> <a class=\"reference internal\" href=\"class_node.html#class-node\"><span class=\"std std-ref\">Node</span></a> <strong>&lt;</strong> <a class=\"reference internal\" href=\"class_object.html#class-object\"><span class=\"std std-ref\">Object</span></a></p><p>A node used to generate previews of resources or files.</p>",
                "description": "\n\n<p>This node is used to generate previews for resources of files.</p>\n<p><strong>Note:</strong> This class shouldn't be instantiated directly. Instead, access the singleton using <a class=\"reference internal\" href=\"class_editorinterface.html#class-editorinterface-method-get-resource-previewer\"><span class=\"std std-ref\">EditorInterface.get_resource_previewer</span></a>.</p>\n"
            },
            "class_editorscriptpicker": {
                "url": "https://docs.godotengine.org/en/4.1/classes/class_editorscriptpicker.html",
                "title": "EditorScriptPicker",
                "blurb": "<p><strong>Inherits:</strong> <a class=\"reference internal\" href=\"class_editorresourcepicker.html#class-editorresourcepicker\"><span class=\"std std-ref\">EditorResourcePicker</span></a> <strong>&lt;</strong> <a class=\"reference internal\" href=\"class_hboxcontainer.html#class-hboxcontainer\"><span class=\"std std-ref\">HBoxContainer</span></a> <strong>&lt;</strong> <a class=\"reference internal\" href=\"class_boxcontainer.html#class-boxcontainer\"><span class=\"std std-ref\">BoxContainer</span></a> <strong>&lt;</strong> <a class=\"reference internal\" href=\"class_container.html#class-container\"><span class=\"std std-ref\">Container</span></a> <strong>&lt;</strong> <a class=\"reference internal\" href=\"class_control.html#class-control\"><span class=\"std std-ref\">Control</span></a> <strong>&lt;</strong> <a class=\"reference internal\" href=\"class_canvasitem.html#class-canvasitem\"><span class=\"std std-ref\">CanvasItem</span></a> <strong>&lt;</strong> <a class=\"reference internal\" href=\"class_node.html#class-node\"><span class=\"std std-ref\">Node</span></a> <strong>&lt;</strong> <a class=\"reference internal\" href=\"class_object.html#class-object\"><span class=\"std std-ref\">Object</span></a></p><p>Godot editor's control for selecting the <code class=\"docutils literal notranslate\"><span class=\"pre\">script</span></code> property of a <a class=\"reference internal\" href=\"class_node.html#class-node\"><span class=\"std std-ref\">Node</span></a>.</p>",
                "description": "\n\n<p>Similar to <a class=\"reference internal\" href=\"class_editorresourcepicker.html#class-editorresourcepicker\"><span class=\"std std-ref\">EditorResourcePicker</span></a> this <a class=\"reference internal\" href=\"class_control.html#class-control\"><span class=\"std std-ref\">Control</span></a> node is used in the editor's Inspector dock, but only to edit the <code class=\"docutils literal notranslate\"><span class=\"pre\">script</span></code> property of a <a class=\"reference internal\" href=\"class_node.html#class-node\"><span class=\"std std-ref\">Node</span></a>. Default options for creating new resources of all possible subtypes are replaced with dedicated buttons that open the \"Attach Node Script\" dialog. Can be used with <a class=\"reference internal\" href=\"class_editorinspectorplugin.html#class-editorinspectorplugin\"><span class=\"std std-ref\">EditorInspectorPlugin</span></a> to recreate the same behavior.</p>\n<p><strong>Note:</strong> You must set the <a class=\"reference internal\" href=\"#class-editorscriptpicker-property-script-owner\"><span class=\"std std-ref\">script_owner</span></a> for the custom context menu items to work.</p>\n"
            },
            "class_editorspinslider": {
                "url": "https://docs.godotengine.org/en/4.1/classes/class_editorspinslider.html",
                "title": "EditorSpinSlider",
                "blurb": "<p><strong>Inherits:</strong> <a class=\"reference internal\" href=\"class_range.html#class-range\"><span class=\"std std-ref\">Range</span></a> <strong>&lt;</strong> <a class=\"reference internal\" href=\"class_control.html#class-control\"><span class=\"std std-ref\">Control</span></a> <strong>&lt;</strong> <a class=\"reference internal\" href=\"class_canvasitem.html#class-canvasitem\"><span class=\"std std-ref\">CanvasItem</span></a> <strong>&lt;</strong> <a class=\"reference internal\" href=\"class_node.html#class-node\"><span class=\"std std-ref\">Node</span></a> <strong>&lt;</strong> <a class=\"reference internal\" href=\"class_object.html#class-object\"><span class=\"std std-ref\">Object</span></a></p><p>Godot editor's control for editing numeric values.</p>",
                "description": "\n\n<p>This <a class=\"reference internal\" href=\"class_control.html#class-control\"><span class=\"std std-ref\">Control</span></a> node is used in the editor's Inspector dock to allow editing of numeric values. Can be used with <a class=\"reference internal\" href=\"class_editorinspectorplugin.html#class-editorinspectorplugin\"><span class=\"std std-ref\">EditorInspectorPlugin</span></a> to recreate the same behavior.</p>\n"
            },
            "class_filedialog": {
                "url": "https://docs.godotengine.org/en/4.1/classes/class_filedialog.html",
                "title": "FileDialog",
                "blurb": "<p><strong>Inherits:</strong> <a class=\"reference internal\" href=\"class_confirmationdialog.html#class-confirmationdialog\"><span class=\"std std-ref\">ConfirmationDialog</span></a> <strong>&lt;</strong> <a class=\"reference internal\" href=\"class_acceptdialog.html#class-acceptdialog\"><span class=\"std std-ref\">AcceptDialog</span></a> <strong>&lt;</strong> <a class=\"reference internal\" href=\"class_window.html#class-window\"><span class=\"std std-ref\">Window</span></a> <strong>&lt;</strong> <a class=\"reference internal\" href=\"class_viewport.html#class-viewport\"><span class=\"std std-ref\">Viewport</span></a> <strong>&lt;</strong> <a class=\"reference internal\" href=\"class_node.html#class-node\"><span class=\"std std-ref\">Node</span></a> <strong>&lt;</strong> <a class=\"reference internal\" href=\"class_object.html#class-object\"><span class=\"std std-ref\">Object</span></a></p><p>A dialog for selecting files or directories in the filesystem.</p>",
                "description": "\n\n<p><strong>FileDialog</strong> is a preset dialog used to choose files and directories in the filesystem. It supports filter masks. <strong>FileDialog</strong> automatically sets its window title according to the <a class=\"reference internal\" href=\"#class-filedialog-property-file-mode\"><span class=\"std std-ref\">file_mode</span></a>. If you want to use a custom title, disable this by setting <a class=\"reference internal\" href=\"#class-filedialog-property-mode-overrides-title\"><span class=\"std std-ref\">mode_overrides_title</span></a> to <code class=\"docutils literal notranslate\"><span class=\"pre\">false</span></code>.</p>\n"
            },
            "class_filesystemdock": {
                "url": "https://docs.godotengine.org/en/4.1/classes/class_filesystemdock.html",
                "title": "FileSystemDock",
                "blurb": "<p><strong>Inherits:</strong> <a class=\"reference internal\" href=\"class_vboxcontainer.html#class-vboxcontainer\"><span class=\"std std-ref\">VBoxContainer</span></a> <strong>&lt;</strong> <a class=\"reference internal\" href=\"class_boxcontainer.html#class-boxcontainer\"><span class=\"std std-ref\">BoxContainer</span></a> <strong>&lt;</strong> <a class=\"reference internal\" href=\"class_container.html#class-container\"><span class=\"std std-ref\">Container</span></a> <strong>&lt;</strong> <a class=\"reference internal\" href=\"class_control.html#class-control\"><span class=\"std std-ref\">Control</span></a> <strong>&lt;</strong> <a class=\"reference internal\" href=\"class_canvasitem.html#class-canvasitem\"><span class=\"std std-ref\">CanvasItem</span></a> <strong>&lt;</strong> <a class=\"reference internal\" href=\"class_node.html#class-node\"><span class=\"std std-ref\">Node</span></a> <strong>&lt;</strong> <a class=\"reference internal\" href=\"class_object.html#class-object\"><span class=\"std std-ref\">Object</span></a></p><p>Godot editor's dock for managing files in the project.</p>",
                "description": "\n\n<p>This class is available only in <a class=\"reference internal\" href=\"class_editorplugin.html#class-editorplugin\"><span class=\"std std-ref\">EditorPlugin</span></a>s and can't be instantiated. You can access it using <a class=\"reference internal\" href=\"class_editorinterface.html#class-editorinterface-method-get-file-system-dock\"><span class=\"std std-ref\">EditorInterface.get_file_system_dock</span></a>.</p>\n<p>While <strong>FileSystemDock</strong> doesn't expose any methods for file manipulation, it can listen for various file-related signals.</p>\n"
            },
            "class_flowcontainer": {
                "url": "https://docs.godotengine.org/en/4.1/classes/class_flowcontainer.html",
                "title": "FlowContainer",
                "blurb": "<p><strong>Inherits:</strong> <a class=\"reference internal\" href=\"class_container.html#class-container\"><span class=\"std std-ref\">Container</span></a> <strong>&lt;</strong> <a class=\"reference internal\" href=\"class_control.html#class-control\"><span class=\"std std-ref\">Control</span></a> <strong>&lt;</strong> <a class=\"reference internal\" href=\"class_canvasitem.html#class-canvasitem\"><span class=\"std std-ref\">CanvasItem</span></a> <strong>&lt;</strong> <a class=\"reference internal\" href=\"class_node.html#class-node\"><span class=\"std std-ref\">Node</span></a> <strong>&lt;</strong> <a class=\"reference internal\" href=\"class_object.html#class-object\"><span class=\"std std-ref\">Object</span></a></p><p><strong>Inherited By:</strong> <a class=\"reference internal\" href=\"class_hflowcontainer.html#class-hflowcontainer\"><span class=\"std std-ref\">HFlowContainer</span></a>, <a class=\"reference internal\" href=\"class_vflowcontainer.html#class-vflowcontainer\"><span class=\"std std-ref\">VFlowContainer</span></a></p><p>A container that arranges its child controls horizontally or vertically and wraps them around at the borders.</p>",
                "description": "\n\n<p>A container that arranges its child controls horizontally or vertically and wraps them around at the borders. This is similar to how text in a book wraps around when no more words can fit on a line.</p>\n"
            },
            "class_fogvolume": {
                "url": "https://docs.godotengine.org/en/4.1/classes/class_fogvolume.html",
                "title": "FogVolume",
                "blurb": "<p><strong>Inherits:</strong> <a class=\"reference internal\" href=\"class_visualinstance3d.html#class-visualinstance3d\"><span class=\"std std-ref\">VisualInstance3D</span></a> <strong>&lt;</strong> <a class=\"reference internal\" href=\"class_node3d.html#class-node3d\"><span class=\"std std-ref\">Node3D</span></a> <strong>&lt;</strong> <a class=\"reference internal\" href=\"class_node.html#class-node\"><span class=\"std std-ref\">Node</span></a> <strong>&lt;</strong> <a class=\"reference internal\" href=\"class_object.html#class-object\"><span class=\"std std-ref\">Object</span></a></p><p>A node used to add local fog with the volumetric fog effect.</p>",
                "description": "\n\n<p><strong>FogVolume</strong>s are used to add localized fog into the global volumetric fog effect. <strong>FogVolume</strong>s can also remove volumetric fog from specific areas if using a <a class=\"reference internal\" href=\"class_fogmaterial.html#class-fogmaterial\"><span class=\"std std-ref\">FogMaterial</span></a> with a negative <a class=\"reference internal\" href=\"class_fogmaterial.html#class-fogmaterial-property-density\"><span class=\"std std-ref\">FogMaterial.density</span></a>.</p>\n<p>Performance of <strong>FogVolume</strong>s is directly related to their relative size on the screen and the complexity of their attached <a class=\"reference internal\" href=\"class_fogmaterial.html#class-fogmaterial\"><span class=\"std std-ref\">FogMaterial</span></a>. It is best to keep <strong>FogVolume</strong>s relatively small and simple where possible.</p>\n<p><strong>Note:</strong> <strong>FogVolume</strong>s only have a visible effect if <a class=\"reference internal\" href=\"class_environment.html#class-environment-property-volumetric-fog-enabled\"><span class=\"std std-ref\">Environment.volumetric_fog_enabled</span></a> is <code class=\"docutils literal notranslate\"><span class=\"pre\">true</span></code>. If you don't want fog to be globally visible (but only within <strong>FogVolume</strong> nodes), set <a class=\"reference internal\" href=\"class_environment.html#class-environment-property-volumetric-fog-density\"><span class=\"std std-ref\">Environment.volumetric_fog_density</span></a> to <code class=\"docutils literal notranslate\"><span class=\"pre\">0.0</span></code>.</p>\n"
            },
            "class_generic6dofjoint3d": {
                "url": "https://docs.godotengine.org/en/4.1/classes/class_generic6dofjoint3d.html",
                "title": "Generic6DOFJoint3D",
                "blurb": "<p><strong>Inherits:</strong> <a class=\"reference internal\" href=\"class_joint3d.html#class-joint3d\"><span class=\"std std-ref\">Joint3D</span></a> <strong>&lt;</strong> <a class=\"reference internal\" href=\"class_node3d.html#class-node3d\"><span class=\"std std-ref\">Node3D</span></a> <strong>&lt;</strong> <a class=\"reference internal\" href=\"class_node.html#class-node\"><span class=\"std std-ref\">Node</span></a> <strong>&lt;</strong> <a class=\"reference internal\" href=\"class_object.html#class-object\"><span class=\"std std-ref\">Object</span></a></p><p>A physics joint that allows for complex movement and rotation between two 3D physics bodies.</p>",
                "description": "\n\n<p>The <strong>Generic6DOFJoint3D</strong> (6 Degrees Of Freedom) joint allows for implementing custom types of joints by locking the rotation and translation of certain axes.</p>\n<p>The first 3 DOF represent the linear motion of the physics bodies and the last 3 DOF represent the angular motion of the physics bodies. Each axis can be either locked, or limited.</p>\n"
            },
            "class_geometryinstance3d": {
                "url": "https://docs.godotengine.org/en/4.1/classes/class_geometryinstance3d.html",
                "title": "GeometryInstance3D",
                "blurb": "<p><strong>Inherits:</strong> <a class=\"reference internal\" href=\"class_visualinstance3d.html#class-visualinstance3d\"><span class=\"std std-ref\">VisualInstance3D</span></a> <strong>&lt;</strong> <a class=\"reference internal\" href=\"class_node3d.html#class-node3d\"><span class=\"std std-ref\">Node3D</span></a> <strong>&lt;</strong> <a class=\"reference internal\" href=\"class_node.html#class-node\"><span class=\"std std-ref\">Node</span></a> <strong>&lt;</strong> <a class=\"reference internal\" href=\"class_object.html#class-object\"><span class=\"std std-ref\">Object</span></a></p><p><strong>Inherited By:</strong> <a class=\"reference internal\" href=\"class_cpuparticles3d.html#class-cpuparticles3d\"><span class=\"std std-ref\">CPUParticles3D</span></a>, <a class=\"reference internal\" href=\"class_csgshape3d.html#class-csgshape3d\"><span class=\"std std-ref\">CSGShape3D</span></a>, <a class=\"reference internal\" href=\"class_gpuparticles3d.html#class-gpuparticles3d\"><span class=\"std std-ref\">GPUParticles3D</span></a>, <a class=\"reference internal\" href=\"class_label3d.html#class-label3d\"><span class=\"std std-ref\">Label3D</span></a>, <a class=\"reference internal\" href=\"class_meshinstance3d.html#class-meshinstance3d\"><span class=\"std std-ref\">MeshInstance3D</span></a>, <a class=\"reference internal\" href=\"class_multimeshinstance3d.html#class-multimeshinstance3d\"><span class=\"std std-ref\">MultiMeshInstance3D</span></a>, <a class=\"reference internal\" href=\"class_spritebase3d.html#class-spritebase3d\"><span class=\"std std-ref\">SpriteBase3D</span></a></p><p>Base node for geometry-based visual instances.</p>",
                "description": "\n\n<p>Base node for geometry-based visual instances. Shares some common functionality like visibility and custom materials.</p>\n"
            },
            "class_gpuparticles2d": {
                "url": "https://docs.godotengine.org/en/4.1/classes/class_gpuparticles2d.html",
                "title": "GPUParticles2D",
                "blurb": "<p><strong>Inherits:</strong> <a class=\"reference internal\" href=\"class_node2d.html#class-node2d\"><span class=\"std std-ref\">Node2D</span></a> <strong>&lt;</strong> <a class=\"reference internal\" href=\"class_canvasitem.html#class-canvasitem\"><span class=\"std std-ref\">CanvasItem</span></a> <strong>&lt;</strong> <a class=\"reference internal\" href=\"class_node.html#class-node\"><span class=\"std std-ref\">Node</span></a> <strong>&lt;</strong> <a class=\"reference internal\" href=\"class_object.html#class-object\"><span class=\"std std-ref\">Object</span></a></p><p>2D particle emitter.</p>",
                "description": "\n\n<p>2D particle node used to create a variety of particle systems and effects. <strong>GPUParticles2D</strong> features an emitter that generates some number of particles at a given rate.</p>\n<p>Use the <a class=\"reference internal\" href=\"#class-gpuparticles2d-property-process-material\"><span class=\"std std-ref\">process_material</span></a> property to add a <a class=\"reference internal\" href=\"class_particleprocessmaterial.html#class-particleprocessmaterial\"><span class=\"std std-ref\">ParticleProcessMaterial</span></a> to configure particle appearance and behavior. Alternatively, you can add a <a class=\"reference internal\" href=\"class_shadermaterial.html#class-shadermaterial\"><span class=\"std std-ref\">ShaderMaterial</span></a> which will be applied to all particles.</p>\n<p>2D particles can optionally collide with <a class=\"reference internal\" href=\"class_lightoccluder2d.html#class-lightoccluder2d\"><span class=\"std std-ref\">LightOccluder2D</span></a> nodes (note: they don't collide with <a class=\"reference internal\" href=\"class_physicsbody2d.html#class-physicsbody2d\"><span class=\"std std-ref\">PhysicsBody2D</span></a> nodes).</p>\n"
            },
            "class_gpuparticles3d": {
                "url": "https://docs.godotengine.org/en/4.1/classes/class_gpuparticles3d.html",
                "title": "GPUParticles3D",
                "blurb": "<p><strong>Inherits:</strong> <a class=\"reference internal\" href=\"class_geometryinstance3d.html#class-geometryinstance3d\"><span class=\"std std-ref\">GeometryInstance3D</span></a> <strong>&lt;</strong> <a class=\"reference internal\" href=\"class_visualinstance3d.html#class-visualinstance3d\"><span class=\"std std-ref\">VisualInstance3D</span></a> <strong>&lt;</strong> <a class=\"reference internal\" href=\"class_node3d.html#class-node3d\"><span class=\"std std-ref\">Node3D</span></a> <strong>&lt;</strong> <a class=\"reference internal\" href=\"class_node.html#class-node\"><span class=\"std std-ref\">Node</span></a> <strong>&lt;</strong> <a class=\"reference internal\" href=\"class_object.html#class-object\"><span class=\"std std-ref\">Object</span></a></p><p>3D particle emitter.</p>",
                "description": "\n\n<p>3D particle node used to create a variety of particle systems and effects. <strong>GPUParticles3D</strong> features an emitter that generates some number of particles at a given rate.</p>\n<p>Use the <code class=\"docutils literal notranslate\"><span class=\"pre\">process_material</span></code> property to add a <a class=\"reference internal\" href=\"class_particleprocessmaterial.html#class-particleprocessmaterial\"><span class=\"std std-ref\">ParticleProcessMaterial</span></a> to configure particle appearance and behavior. Alternatively, you can add a <a class=\"reference internal\" href=\"class_shadermaterial.html#class-shadermaterial\"><span class=\"std std-ref\">ShaderMaterial</span></a> which will be applied to all particles.</p>\n"
            },
            "class_gpuparticlesattractor3d": {
                "url": "https://docs.godotengine.org/en/4.1/classes/class_gpuparticlesattractor3d.html",
                "title": "GPUParticlesAttractor3D",
                "blurb": "<p><strong>Inherits:</strong> <a class=\"reference internal\" href=\"class_visualinstance3d.html#class-visualinstance3d\"><span class=\"std std-ref\">VisualInstance3D</span></a> <strong>&lt;</strong> <a class=\"reference internal\" href=\"class_node3d.html#class-node3d\"><span class=\"std std-ref\">Node3D</span></a> <strong>&lt;</strong> <a class=\"reference internal\" href=\"class_node.html#class-node\"><span class=\"std std-ref\">Node</span></a> <strong>&lt;</strong> <a class=\"reference internal\" href=\"class_object.html#class-object\"><span class=\"std std-ref\">Object</span></a></p><p><strong>Inherited By:</strong> <a class=\"reference internal\" href=\"class_gpuparticlesattractorbox3d.html#class-gpuparticlesattractorbox3d\"><span class=\"std std-ref\">GPUParticlesAttractorBox3D</span></a>, <a class=\"reference internal\" href=\"class_gpuparticlesattractorsphere3d.html#class-gpuparticlesattractorsphere3d\"><span class=\"std std-ref\">GPUParticlesAttractorSphere3D</span></a>, <a class=\"reference internal\" href=\"class_gpuparticlesattractorvectorfield3d.html#class-gpuparticlesattractorvectorfield3d\"><span class=\"std std-ref\">GPUParticlesAttractorVectorField3D</span></a></p><p>Abstract class for 3D particle attractors affecting <a class=\"reference internal\" href=\"class_gpuparticles3d.html#class-gpuparticles3d\"><span class=\"std std-ref\">GPUParticles3D</span></a> nodes.</p>",
                "description": "\n\n<p>Particle attractors can be used to attract particles towards the attractor's origin, or to push them away from the attractor's origin.</p>\n<p>Particle attractors work in real-time and can be moved, rotated and scaled during gameplay. Unlike collision shapes, non-uniform scaling of attractors is also supported.</p>\n<p>Attractors can be temporarily disabled by hiding them, or by setting their <a class=\"reference internal\" href=\"#class-gpuparticlesattractor3d-property-strength\"><span class=\"std std-ref\">strength</span></a> to <code class=\"docutils literal notranslate\"><span class=\"pre\">0.0</span></code>.</p>\n<p><strong>Note:</strong> Particle attractors only affect <a class=\"reference internal\" href=\"class_gpuparticles3d.html#class-gpuparticles3d\"><span class=\"std std-ref\">GPUParticles3D</span></a>, not <a class=\"reference internal\" href=\"class_cpuparticles3d.html#class-cpuparticles3d\"><span class=\"std std-ref\">CPUParticles3D</span></a>.</p>\n"
            },
            "class_gpuparticlesattractorbox3d": {
                "url": "https://docs.godotengine.org/en/4.1/classes/class_gpuparticlesattractorbox3d.html",
                "title": "GPUParticlesAttractorBox3D",
                "blurb": "<p><strong>Inherits:</strong> <a class=\"reference internal\" href=\"class_gpuparticlesattractor3d.html#class-gpuparticlesattractor3d\"><span class=\"std std-ref\">GPUParticlesAttractor3D</span></a> <strong>&lt;</strong> <a class=\"reference internal\" href=\"class_visualinstance3d.html#class-visualinstance3d\"><span class=\"std std-ref\">VisualInstance3D</span></a> <strong>&lt;</strong> <a class=\"reference internal\" href=\"class_node3d.html#class-node3d\"><span class=\"std std-ref\">Node3D</span></a> <strong>&lt;</strong> <a class=\"reference internal\" href=\"class_node.html#class-node\"><span class=\"std std-ref\">Node</span></a> <strong>&lt;</strong> <a class=\"reference internal\" href=\"class_object.html#class-object\"><span class=\"std std-ref\">Object</span></a></p><p>Box-shaped 3D particle attractor affecting <a class=\"reference internal\" href=\"class_gpuparticles3d.html#class-gpuparticles3d\"><span class=\"std std-ref\">GPUParticles3D</span></a> nodes.</p>",
                "description": "\n\n<p>Box-shaped 3D particle attractor affecting <a class=\"reference internal\" href=\"class_gpuparticles3d.html#class-gpuparticles3d\"><span class=\"std std-ref\">GPUParticles3D</span></a> nodes.</p>\n<p><strong>Note:</strong> Particle attractors only affect <a class=\"reference internal\" href=\"class_gpuparticles3d.html#class-gpuparticles3d\"><span class=\"std std-ref\">GPUParticles3D</span></a>, not <a class=\"reference internal\" href=\"class_cpuparticles3d.html#class-cpuparticles3d\"><span class=\"std std-ref\">CPUParticles3D</span></a>.</p>\n"
            },
            "class_gpuparticlesattractorsphere3d": {
                "url": "https://docs.godotengine.org/en/4.1/classes/class_gpuparticlesattractorsphere3d.html",
                "title": "GPUParticlesAttractorSphere3D",
                "blurb": "<p><strong>Inherits:</strong> <a class=\"reference internal\" href=\"class_gpuparticlesattractor3d.html#class-gpuparticlesattractor3d\"><span class=\"std std-ref\">GPUParticlesAttractor3D</span></a> <strong>&lt;</strong> <a class=\"reference internal\" href=\"class_visualinstance3d.html#class-visualinstance3d\"><span class=\"std std-ref\">VisualInstance3D</span></a> <strong>&lt;</strong> <a class=\"reference internal\" href=\"class_node3d.html#class-node3d\"><span class=\"std std-ref\">Node3D</span></a> <strong>&lt;</strong> <a class=\"reference internal\" href=\"class_node.html#class-node\"><span class=\"std std-ref\">Node</span></a> <strong>&lt;</strong> <a class=\"reference internal\" href=\"class_object.html#class-object\"><span class=\"std std-ref\">Object</span></a></p><p>Ellipse-shaped 3D particle attractor affecting <a class=\"reference internal\" href=\"class_gpuparticles3d.html#class-gpuparticles3d\"><span class=\"std std-ref\">GPUParticles3D</span></a> nodes.</p>",
                "description": "\n\n<p>Ellipse-shaped 3D particle attractor affecting <a class=\"reference internal\" href=\"class_gpuparticles3d.html#class-gpuparticles3d\"><span class=\"std std-ref\">GPUParticles3D</span></a> nodes.</p>\n<p><strong>Note:</strong> Particle attractors only affect <a class=\"reference internal\" href=\"class_gpuparticles3d.html#class-gpuparticles3d\"><span class=\"std std-ref\">GPUParticles3D</span></a>, not <a class=\"reference internal\" href=\"class_cpuparticles3d.html#class-cpuparticles3d\"><span class=\"std std-ref\">CPUParticles3D</span></a>.</p>\n"
            },
            "class_gpuparticlesattractorvectorfield3d": {
                "url": "https://docs.godotengine.org/en/4.1/classes/class_gpuparticlesattractorvectorfield3d.html",
                "title": "GPUParticlesAttractorVectorField3D",
                "blurb": "<p><strong>Inherits:</strong> <a class=\"reference internal\" href=\"class_gpuparticlesattractor3d.html#class-gpuparticlesattractor3d\"><span class=\"std std-ref\">GPUParticlesAttractor3D</span></a> <strong>&lt;</strong> <a class=\"reference internal\" href=\"class_visualinstance3d.html#class-visualinstance3d\"><span class=\"std std-ref\">VisualInstance3D</span></a> <strong>&lt;</strong> <a class=\"reference internal\" href=\"class_node3d.html#class-node3d\"><span class=\"std std-ref\">Node3D</span></a> <strong>&lt;</strong> <a class=\"reference internal\" href=\"class_node.html#class-node\"><span class=\"std std-ref\">Node</span></a> <strong>&lt;</strong> <a class=\"reference internal\" href=\"class_object.html#class-object\"><span class=\"std std-ref\">Object</span></a></p><p>Box-shaped 3D particle attractor with strength varying within the box, affecting <a class=\"reference internal\" href=\"class_gpuparticles3d.html#class-gpuparticles3d\"><span class=\"std std-ref\">GPUParticles3D</span></a> nodes.</p>",
                "description": "\n\n<p>Box-shaped 3D particle attractor with strength varying within the box, affecting <a class=\"reference internal\" href=\"class_gpuparticles3d.html#class-gpuparticles3d\"><span class=\"std std-ref\">GPUParticles3D</span></a> nodes.</p>\n<p>Unlike <a class=\"reference internal\" href=\"class_gpuparticlesattractorbox3d.html#class-gpuparticlesattractorbox3d\"><span class=\"std std-ref\">GPUParticlesAttractorBox3D</span></a>, <strong>GPUParticlesAttractorVectorField3D</strong> uses a <a class=\"reference internal\" href=\"#class-gpuparticlesattractorvectorfield3d-property-texture\"><span class=\"std std-ref\">texture</span></a> to affect attraction strength within the box. This can be used to create complex attraction scenarios where particles travel in different directions depending on their location. This can be useful for weather effects such as sandstorms.</p>\n<p><strong>Note:</strong> Particle attractors only affect <a class=\"reference internal\" href=\"class_gpuparticles3d.html#class-gpuparticles3d\"><span class=\"std std-ref\">GPUParticles3D</span></a>, not <a class=\"reference internal\" href=\"class_cpuparticles3d.html#class-cpuparticles3d\"><span class=\"std std-ref\">CPUParticles3D</span></a>.</p>\n"
            },
            "class_gpuparticlescollision3d": {
                "url": "https://docs.godotengine.org/en/4.1/classes/class_gpuparticlescollision3d.html",
                "title": "GPUParticlesCollision3D",
                "blurb": "<p><strong>Inherits:</strong> <a class=\"reference internal\" href=\"class_visualinstance3d.html#class-visualinstance3d\"><span class=\"std std-ref\">VisualInstance3D</span></a> <strong>&lt;</strong> <a class=\"reference internal\" href=\"class_node3d.html#class-node3d\"><span class=\"std std-ref\">Node3D</span></a> <strong>&lt;</strong> <a class=\"reference internal\" href=\"class_node.html#class-node\"><span class=\"std std-ref\">Node</span></a> <strong>&lt;</strong> <a class=\"reference internal\" href=\"class_object.html#class-object\"><span class=\"std std-ref\">Object</span></a></p><p><strong>Inherited By:</strong> <a class=\"reference internal\" href=\"class_gpuparticlescollisionbox3d.html#class-gpuparticlescollisionbox3d\"><span class=\"std std-ref\">GPUParticlesCollisionBox3D</span></a>, <a class=\"reference internal\" href=\"class_gpuparticlescollisionheightfield3d.html#class-gpuparticlescollisionheightfield3d\"><span class=\"std std-ref\">GPUParticlesCollisionHeightField3D</span></a>, <a class=\"reference internal\" href=\"class_gpuparticlescollisionsdf3d.html#class-gpuparticlescollisionsdf3d\"><span class=\"std std-ref\">GPUParticlesCollisionSDF3D</span></a>, <a class=\"reference internal\" href=\"class_gpuparticlescollisionsphere3d.html#class-gpuparticlescollisionsphere3d\"><span class=\"std std-ref\">GPUParticlesCollisionSphere3D</span></a></p><p>Abstract class for 3D particle collision shapes affecting <a class=\"reference internal\" href=\"class_gpuparticles3d.html#class-gpuparticles3d\"><span class=\"std std-ref\">GPUParticles3D</span></a> nodes.</p>",
                "description": "\n\n<p>Particle collision shapes can be used to make particles stop or bounce against them.</p>\n<p>Particle collision shapes in real-time and can be moved, rotated and scaled during gameplay. Unlike attractors, non-uniform scaling of collision shapes is <em>not</em> supported.</p>\n<p>Particle collision shapes can be temporarily disabled by hiding them.</p>\n<p><strong>Note:</strong> <a class=\"reference internal\" href=\"class_particleprocessmaterial.html#class-particleprocessmaterial-property-collision-mode\"><span class=\"std std-ref\">ParticleProcessMaterial.collision_mode</span></a> must be <a class=\"reference internal\" href=\"class_particleprocessmaterial.html#class-particleprocessmaterial-constant-collision-rigid\"><span class=\"std std-ref\">ParticleProcessMaterial.COLLISION_RIGID</span></a> or <a class=\"reference internal\" href=\"class_particleprocessmaterial.html#class-particleprocessmaterial-constant-collision-hide-on-contact\"><span class=\"std std-ref\">ParticleProcessMaterial.COLLISION_HIDE_ON_CONTACT</span></a> on the <a class=\"reference internal\" href=\"class_gpuparticles3d.html#class-gpuparticles3d\"><span class=\"std std-ref\">GPUParticles3D</span></a>'s process material for collision to work.</p>\n<p><strong>Note:</strong> Particle collision only affects <a class=\"reference internal\" href=\"class_gpuparticles3d.html#class-gpuparticles3d\"><span class=\"std std-ref\">GPUParticles3D</span></a>, not <a class=\"reference internal\" href=\"class_cpuparticles3d.html#class-cpuparticles3d\"><span class=\"std std-ref\">CPUParticles3D</span></a>.</p>\n<p><strong>Note:</strong> Particles pushed by a collider that is being moved will not be interpolated, which can result in visible stuttering. This can be alleviated by setting <a class=\"reference internal\" href=\"class_gpuparticles3d.html#class-gpuparticles3d-property-fixed-fps\"><span class=\"std std-ref\">GPUParticles3D.fixed_fps</span></a> to <code class=\"docutils literal notranslate\"><span class=\"pre\">0</span></code> or a value that matches or exceeds the target framerate.</p>\n"
            },
            "class_gpuparticlescollisionbox3d": {
                "url": "https://docs.godotengine.org/en/4.1/classes/class_gpuparticlescollisionbox3d.html",
                "title": "GPUParticlesCollisionBox3D",
                "blurb": "<p><strong>Inherits:</strong> <a class=\"reference internal\" href=\"class_gpuparticlescollision3d.html#class-gpuparticlescollision3d\"><span class=\"std std-ref\">GPUParticlesCollision3D</span></a> <strong>&lt;</strong> <a class=\"reference internal\" href=\"class_visualinstance3d.html#class-visualinstance3d\"><span class=\"std std-ref\">VisualInstance3D</span></a> <strong>&lt;</strong> <a class=\"reference internal\" href=\"class_node3d.html#class-node3d\"><span class=\"std std-ref\">Node3D</span></a> <strong>&lt;</strong> <a class=\"reference internal\" href=\"class_node.html#class-node\"><span class=\"std std-ref\">Node</span></a> <strong>&lt;</strong> <a class=\"reference internal\" href=\"class_object.html#class-object\"><span class=\"std std-ref\">Object</span></a></p><p>Box-shaped 3D particle collision shape affecting <a class=\"reference internal\" href=\"class_gpuparticles3d.html#class-gpuparticles3d\"><span class=\"std std-ref\">GPUParticles3D</span></a> nodes.</p>",
                "description": "\n\n<p>Box-shaped 3D particle collision shape affecting <a class=\"reference internal\" href=\"class_gpuparticles3d.html#class-gpuparticles3d\"><span class=\"std std-ref\">GPUParticles3D</span></a> nodes.</p>\n<p><strong>Note:</strong> <a class=\"reference internal\" href=\"class_particleprocessmaterial.html#class-particleprocessmaterial-property-collision-mode\"><span class=\"std std-ref\">ParticleProcessMaterial.collision_mode</span></a> must be <a class=\"reference internal\" href=\"class_particleprocessmaterial.html#class-particleprocessmaterial-constant-collision-rigid\"><span class=\"std std-ref\">ParticleProcessMaterial.COLLISION_RIGID</span></a> or <a class=\"reference internal\" href=\"class_particleprocessmaterial.html#class-particleprocessmaterial-constant-collision-hide-on-contact\"><span class=\"std std-ref\">ParticleProcessMaterial.COLLISION_HIDE_ON_CONTACT</span></a> on the <a class=\"reference internal\" href=\"class_gpuparticles3d.html#class-gpuparticles3d\"><span class=\"std std-ref\">GPUParticles3D</span></a>'s process material for collision to work.</p>\n<p><strong>Note:</strong> Particle collision only affects <a class=\"reference internal\" href=\"class_gpuparticles3d.html#class-gpuparticles3d\"><span class=\"std std-ref\">GPUParticles3D</span></a>, not <a class=\"reference internal\" href=\"class_cpuparticles3d.html#class-cpuparticles3d\"><span class=\"std std-ref\">CPUParticles3D</span></a>.</p>\n"
            },
            "class_gpuparticlescollisionheightfield3d": {
                "url": "https://docs.godotengine.org/en/4.1/classes/class_gpuparticlescollisionheightfield3d.html",
                "title": "GPUParticlesCollisionHeightField3D",
                "blurb": "<p><strong>Inherits:</strong> <a class=\"reference internal\" href=\"class_gpuparticlescollision3d.html#class-gpuparticlescollision3d\"><span class=\"std std-ref\">GPUParticlesCollision3D</span></a> <strong>&lt;</strong> <a class=\"reference internal\" href=\"class_visualinstance3d.html#class-visualinstance3d\"><span class=\"std std-ref\">VisualInstance3D</span></a> <strong>&lt;</strong> <a class=\"reference internal\" href=\"class_node3d.html#class-node3d\"><span class=\"std std-ref\">Node3D</span></a> <strong>&lt;</strong> <a class=\"reference internal\" href=\"class_node.html#class-node\"><span class=\"std std-ref\">Node</span></a> <strong>&lt;</strong> <a class=\"reference internal\" href=\"class_object.html#class-object\"><span class=\"std std-ref\">Object</span></a></p><p>Real-time heightmap-shaped 3D particle attractor affecting <a class=\"reference internal\" href=\"class_gpuparticles3d.html#class-gpuparticles3d\"><span class=\"std std-ref\">GPUParticles3D</span></a> nodes.</p>",
                "description": "\n\n<p>Real-time heightmap-shaped 3D particle attractor affecting <a class=\"reference internal\" href=\"class_gpuparticles3d.html#class-gpuparticles3d\"><span class=\"std std-ref\">GPUParticles3D</span></a> nodes.</p>\n<p>Heightmap shapes allow for efficiently representing collisions for convex and concave objects with a single \"floor\" (such as terrain). This is less flexible than <a class=\"reference internal\" href=\"class_gpuparticlescollisionsdf3d.html#class-gpuparticlescollisionsdf3d\"><span class=\"std std-ref\">GPUParticlesCollisionSDF3D</span></a>, but it doesn't require a baking step.</p>\n<p><strong>GPUParticlesCollisionHeightField3D</strong> can also be regenerated in real-time when it is moved, when the camera moves, or even continuously. This makes <strong>GPUParticlesCollisionHeightField3D</strong> a good choice for weather effects such as rain and snow and games with highly dynamic geometry. However, since heightmaps cannot represent overhangs, <strong>GPUParticlesCollisionHeightField3D</strong> is not suited for indoor particle collision.</p>\n<p><strong>Note:</strong> <a class=\"reference internal\" href=\"class_particleprocessmaterial.html#class-particleprocessmaterial-property-collision-mode\"><span class=\"std std-ref\">ParticleProcessMaterial.collision_mode</span></a> must be <code class=\"docutils literal notranslate\"><span class=\"pre\">true</span></code> on the <a class=\"reference internal\" href=\"class_gpuparticles3d.html#class-gpuparticles3d\"><span class=\"std std-ref\">GPUParticles3D</span></a>'s process material for collision to work.</p>\n<p><strong>Note:</strong> Particle collision only affects <a class=\"reference internal\" href=\"class_gpuparticles3d.html#class-gpuparticles3d\"><span class=\"std std-ref\">GPUParticles3D</span></a>, not <a class=\"reference internal\" href=\"class_cpuparticles3d.html#class-cpuparticles3d\"><span class=\"std std-ref\">CPUParticles3D</span></a>.</p>\n"
            },
            "class_gpuparticlescollisionsdf3d": {
                "url": "https://docs.godotengine.org/en/4.1/classes/class_gpuparticlescollisionsdf3d.html",
                "title": "GPUParticlesCollisionSDF3D",
                "blurb": "<p><strong>Inherits:</strong> <a class=\"reference internal\" href=\"class_gpuparticlescollision3d.html#class-gpuparticlescollision3d\"><span class=\"std std-ref\">GPUParticlesCollision3D</span></a> <strong>&lt;</strong> <a class=\"reference internal\" href=\"class_visualinstance3d.html#class-visualinstance3d\"><span class=\"std std-ref\">VisualInstance3D</span></a> <strong>&lt;</strong> <a class=\"reference internal\" href=\"class_node3d.html#class-node3d\"><span class=\"std std-ref\">Node3D</span></a> <strong>&lt;</strong> <a class=\"reference internal\" href=\"class_node.html#class-node\"><span class=\"std std-ref\">Node</span></a> <strong>&lt;</strong> <a class=\"reference internal\" href=\"class_object.html#class-object\"><span class=\"std std-ref\">Object</span></a></p><p>Baked signed distance field 3D particle attractor affecting <a class=\"reference internal\" href=\"class_gpuparticles3d.html#class-gpuparticles3d\"><span class=\"std std-ref\">GPUParticles3D</span></a> nodes.</p>",
                "description": "\n\n<p>Baked signed distance field 3D particle attractor affecting <a class=\"reference internal\" href=\"class_gpuparticles3d.html#class-gpuparticles3d\"><span class=\"std std-ref\">GPUParticles3D</span></a> nodes.</p>\n<p>Signed distance fields (SDF) allow for efficiently representing approximate collision shapes for convex and concave objects of any shape. This is more flexible than <a class=\"reference internal\" href=\"class_gpuparticlescollisionheightfield3d.html#class-gpuparticlescollisionheightfield3d\"><span class=\"std std-ref\">GPUParticlesCollisionHeightField3D</span></a>, but it requires a baking step.</p>\n<p><strong>Baking:</strong> The signed distance field texture can be baked by selecting the <strong>GPUParticlesCollisionSDF3D</strong> node in the editor, then clicking <strong>Bake SDF</strong> at the top of the 3D viewport. Any <em>visible</em> <a class=\"reference internal\" href=\"class_meshinstance3d.html#class-meshinstance3d\"><span class=\"std std-ref\">MeshInstance3D</span></a>s within the <a class=\"reference internal\" href=\"#class-gpuparticlescollisionsdf3d-property-size\"><span class=\"std std-ref\">size</span></a> will be taken into account for baking, regardless of their <a class=\"reference internal\" href=\"class_geometryinstance3d.html#class-geometryinstance3d-property-gi-mode\"><span class=\"std std-ref\">GeometryInstance3D.gi_mode</span></a>.</p>\n<p><strong>Note:</strong> Baking a <strong>GPUParticlesCollisionSDF3D</strong>'s <a class=\"reference internal\" href=\"#class-gpuparticlescollisionsdf3d-property-texture\"><span class=\"std std-ref\">texture</span></a> is only possible within the editor, as there is no bake method exposed for use in exported projects. However, it's still possible to load pre-baked <a class=\"reference internal\" href=\"class_texture3d.html#class-texture3d\"><span class=\"std std-ref\">Texture3D</span></a>s into its <a class=\"reference internal\" href=\"#class-gpuparticlescollisionsdf3d-property-texture\"><span class=\"std std-ref\">texture</span></a> property in an exported project.</p>\n<p><strong>Note:</strong> <a class=\"reference internal\" href=\"class_particleprocessmaterial.html#class-particleprocessmaterial-property-collision-mode\"><span class=\"std std-ref\">ParticleProcessMaterial.collision_mode</span></a> must be <a class=\"reference internal\" href=\"class_particleprocessmaterial.html#class-particleprocessmaterial-constant-collision-rigid\"><span class=\"std std-ref\">ParticleProcessMaterial.COLLISION_RIGID</span></a> or <a class=\"reference internal\" href=\"class_particleprocessmaterial.html#class-particleprocessmaterial-constant-collision-hide-on-contact\"><span class=\"std std-ref\">ParticleProcessMaterial.COLLISION_HIDE_ON_CONTACT</span></a> on the <a class=\"reference internal\" href=\"class_gpuparticles3d.html#class-gpuparticles3d\"><span class=\"std std-ref\">GPUParticles3D</span></a>'s process material for collision to work.</p>\n<p><strong>Note:</strong> Particle collision only affects <a class=\"reference internal\" href=\"class_gpuparticles3d.html#class-gpuparticles3d\"><span class=\"std std-ref\">GPUParticles3D</span></a>, not <a class=\"reference internal\" href=\"class_cpuparticles3d.html#class-cpuparticles3d\"><span class=\"std std-ref\">CPUParticles3D</span></a>.</p>\n"
            },
            "class_gpuparticlescollisionsphere3d": {
                "url": "https://docs.godotengine.org/en/4.1/classes/class_gpuparticlescollisionsphere3d.html",
                "title": "GPUParticlesCollisionSphere3D",
                "blurb": "<p><strong>Inherits:</strong> <a class=\"reference internal\" href=\"class_gpuparticlescollision3d.html#class-gpuparticlescollision3d\"><span class=\"std std-ref\">GPUParticlesCollision3D</span></a> <strong>&lt;</strong> <a class=\"reference internal\" href=\"class_visualinstance3d.html#class-visualinstance3d\"><span class=\"std std-ref\">VisualInstance3D</span></a> <strong>&lt;</strong> <a class=\"reference internal\" href=\"class_node3d.html#class-node3d\"><span class=\"std std-ref\">Node3D</span></a> <strong>&lt;</strong> <a class=\"reference internal\" href=\"class_node.html#class-node\"><span class=\"std std-ref\">Node</span></a> <strong>&lt;</strong> <a class=\"reference internal\" href=\"class_object.html#class-object\"><span class=\"std std-ref\">Object</span></a></p><p>Sphere-shaped 3D particle collision shape affecting <a class=\"reference internal\" href=\"class_gpuparticles3d.html#class-gpuparticles3d\"><span class=\"std std-ref\">GPUParticles3D</span></a> nodes.</p>",
                "description": "\n\n<p>Sphere-shaped 3D particle collision shape affecting <a class=\"reference internal\" href=\"class_gpuparticles3d.html#class-gpuparticles3d\"><span class=\"std std-ref\">GPUParticles3D</span></a> nodes.</p>\n<p><strong>Note:</strong> <a class=\"reference internal\" href=\"class_particleprocessmaterial.html#class-particleprocessmaterial-property-collision-mode\"><span class=\"std std-ref\">ParticleProcessMaterial.collision_mode</span></a> must be <a class=\"reference internal\" href=\"class_particleprocessmaterial.html#class-particleprocessmaterial-constant-collision-rigid\"><span class=\"std std-ref\">ParticleProcessMaterial.COLLISION_RIGID</span></a> or <a class=\"reference internal\" href=\"class_particleprocessmaterial.html#class-particleprocessmaterial-constant-collision-hide-on-contact\"><span class=\"std std-ref\">ParticleProcessMaterial.COLLISION_HIDE_ON_CONTACT</span></a> on the <a class=\"reference internal\" href=\"class_gpuparticles3d.html#class-gpuparticles3d\"><span class=\"std std-ref\">GPUParticles3D</span></a>'s process material for collision to work.</p>\n<p><strong>Note:</strong> Particle collision only affects <a class=\"reference internal\" href=\"class_gpuparticles3d.html#class-gpuparticles3d\"><span class=\"std std-ref\">GPUParticles3D</span></a>, not <a class=\"reference internal\" href=\"class_cpuparticles3d.html#class-cpuparticles3d\"><span class=\"std std-ref\">CPUParticles3D</span></a>.</p>\n"
            },
            "class_graphedit": {
                "url": "https://docs.godotengine.org/en/4.1/classes/class_graphedit.html",
                "title": "GraphEdit",
                "blurb": "<p><strong>Inherits:</strong> <a class=\"reference internal\" href=\"class_control.html#class-control\"><span class=\"std std-ref\">Control</span></a> <strong>&lt;</strong> <a class=\"reference internal\" href=\"class_canvasitem.html#class-canvasitem\"><span class=\"std std-ref\">CanvasItem</span></a> <strong>&lt;</strong> <a class=\"reference internal\" href=\"class_node.html#class-node\"><span class=\"std std-ref\">Node</span></a> <strong>&lt;</strong> <a class=\"reference internal\" href=\"class_object.html#class-object\"><span class=\"std std-ref\">Object</span></a></p><p>An editor for graph-like structures, using <a class=\"reference internal\" href=\"class_graphnode.html#class-graphnode\"><span class=\"std std-ref\">GraphNode</span></a>s.</p>",
                "description": "\n\n<p><strong>GraphEdit</strong> provides tools for creation, manipulation, and display of various graphs. Its main purpose in the engine is to power the visual programming systems, such as visual shaders, but it is also available for use in user projects.</p>\n<p><strong>GraphEdit</strong> by itself is only an empty container, representing an infinite grid where <a class=\"reference internal\" href=\"class_graphnode.html#class-graphnode\"><span class=\"std std-ref\">GraphNode</span></a>s can be placed. Each <a class=\"reference internal\" href=\"class_graphnode.html#class-graphnode\"><span class=\"std std-ref\">GraphNode</span></a> represents a node in the graph, a single unit of data in the connected scheme. <strong>GraphEdit</strong>, in turn, helps to control various interactions with nodes and between nodes. When the user attempts to connect, disconnect, or close a <a class=\"reference internal\" href=\"class_graphnode.html#class-graphnode\"><span class=\"std std-ref\">GraphNode</span></a>, a signal is emitted in the <strong>GraphEdit</strong>, but no action is taken by default. It is the responsibility of the programmer utilizing this control to implement the necessary logic to determine how each request should be handled.</p>\n<p><strong>Performance:</strong> It is greatly advised to enable low-processor usage mode (see <a class=\"reference internal\" href=\"class_os.html#class-os-property-low-processor-usage-mode\"><span class=\"std std-ref\">OS.low_processor_usage_mode</span></a>) when using GraphEdits.</p>\n"
            },
            "class_graphnode": {
                "url": "https://docs.godotengine.org/en/4.1/classes/class_graphnode.html",
                "title": "GraphNode",
                "blurb": "<p><strong>Inherits:</strong> <a class=\"reference internal\" href=\"class_container.html#class-container\"><span class=\"std std-ref\">Container</span></a> <strong>&lt;</strong> <a class=\"reference internal\" href=\"class_control.html#class-control\"><span class=\"std std-ref\">Control</span></a> <strong>&lt;</strong> <a class=\"reference internal\" href=\"class_canvasitem.html#class-canvasitem\"><span class=\"std std-ref\">CanvasItem</span></a> <strong>&lt;</strong> <a class=\"reference internal\" href=\"class_node.html#class-node\"><span class=\"std std-ref\">Node</span></a> <strong>&lt;</strong> <a class=\"reference internal\" href=\"class_object.html#class-object\"><span class=\"std std-ref\">Object</span></a></p><p>A container with connection ports, representing a node in a <a class=\"reference internal\" href=\"class_graphedit.html#class-graphedit\"><span class=\"std std-ref\">GraphEdit</span></a>.</p>",
                "description": "\n\n<p><strong>GraphNode</strong> allows to create nodes for a <a class=\"reference internal\" href=\"class_graphedit.html#class-graphedit\"><span class=\"std std-ref\">GraphEdit</span></a> graph with customizable content based on its child controls. <strong>GraphNode</strong> is derived from <a class=\"reference internal\" href=\"class_container.html#class-container\"><span class=\"std std-ref\">Container</span></a> and it is responsible for placing its children on screen. This works similar to <a class=\"reference internal\" href=\"class_vboxcontainer.html#class-vboxcontainer\"><span class=\"std std-ref\">VBoxContainer</span></a>. Children, in turn, provide <strong>GraphNode</strong> with so-called slots, each of which can have a connection port on either side.</p>\n<p>Each <strong>GraphNode</strong> slot is defined by its index and can provide the node with up to two ports: one on the left, and one on the right. By convention the left port is also referred to as the <strong>input port</strong> and the right port is referred to as the <strong>output port</strong>. Each port can be enabled and configured individually, using different type and color. The type is an arbitrary value that you can define using your own considerations. The parent <a class=\"reference internal\" href=\"class_graphedit.html#class-graphedit\"><span class=\"std std-ref\">GraphEdit</span></a> will receive this information on each connect and disconnect request.</p>\n<p>Slots can be configured in the Inspector dock once you add at least one child <a class=\"reference internal\" href=\"class_control.html#class-control\"><span class=\"std std-ref\">Control</span></a>. The properties are grouped by each slot's index in the \"Slot\" section.</p>\n<p><strong>Note:</strong> While GraphNode is set up using slots and slot indices, connections are made between the ports which are enabled. Because of that, <a class=\"reference internal\" href=\"class_graphedit.html#class-graphedit\"><span class=\"std std-ref\">GraphEdit</span></a> uses the port's index and not the slot's index. You can use <a class=\"reference internal\" href=\"#class-graphnode-method-get-connection-input-slot\"><span class=\"std std-ref\">get_connection_input_slot</span></a> and <a class=\"reference internal\" href=\"#class-graphnode-method-get-connection-output-slot\"><span class=\"std std-ref\">get_connection_output_slot</span></a> to get the slot index from the port index.</p>\n"
            },
            "class_gridcontainer": {
                "url": "https://docs.godotengine.org/en/4.1/classes/class_gridcontainer.html",
                "title": "GridContainer",
                "blurb": "<p><strong>Inherits:</strong> <a class=\"reference internal\" href=\"class_container.html#class-container\"><span class=\"std std-ref\">Container</span></a> <strong>&lt;</strong> <a class=\"reference internal\" href=\"class_control.html#class-control\"><span class=\"std std-ref\">Control</span></a> <strong>&lt;</strong> <a class=\"reference internal\" href=\"class_canvasitem.html#class-canvasitem\"><span class=\"std std-ref\">CanvasItem</span></a> <strong>&lt;</strong> <a class=\"reference internal\" href=\"class_node.html#class-node\"><span class=\"std std-ref\">Node</span></a> <strong>&lt;</strong> <a class=\"reference internal\" href=\"class_object.html#class-object\"><span class=\"std std-ref\">Object</span></a></p><p>A container that arranges its child controls in a grid layout.</p>",
                "description": "\n\n<p><strong>GridContainer</strong> arranges its child controls in a grid layout. The number of columns is specified by the <a class=\"reference internal\" href=\"#class-gridcontainer-property-columns\"><span class=\"std std-ref\">columns</span></a> property, whereas the number of rows depends on how many are needed for the child controls. The number of rows and columns is preserved for every size of the container.</p>\n<p><strong>Note:</strong> <strong>GridContainer</strong> only works with child nodes inheriting from <a class=\"reference internal\" href=\"class_control.html#class-control\"><span class=\"std std-ref\">Control</span></a>. It won't rearrange child nodes inheriting from <a class=\"reference internal\" href=\"class_node2d.html#class-node2d\"><span class=\"std std-ref\">Node2D</span></a>.</p>\n"
            },
            "class_gridmap": {
                "url": "https://docs.godotengine.org/en/4.1/classes/class_gridmap.html",
                "title": "GridMap",
                "blurb": "<p><strong>Inherits:</strong> <a class=\"reference internal\" href=\"class_node3d.html#class-node3d\"><span class=\"std std-ref\">Node3D</span></a> <strong>&lt;</strong> <a class=\"reference internal\" href=\"class_node.html#class-node\"><span class=\"std std-ref\">Node</span></a> <strong>&lt;</strong> <a class=\"reference internal\" href=\"class_object.html#class-object\"><span class=\"std std-ref\">Object</span></a></p><p>Node for 3D tile-based maps.</p>",
                "description": "\n\n<p>GridMap lets you place meshes on a grid interactively. It works both from the editor and from scripts, which can help you create in-game level editors.</p>\n<p>GridMaps use a <a class=\"reference internal\" href=\"class_meshlibrary.html#class-meshlibrary\"><span class=\"std std-ref\">MeshLibrary</span></a> which contains a list of tiles. Each tile is a mesh with materials plus optional collision and navigation shapes.</p>\n<p>A GridMap contains a collection of cells. Each grid cell refers to a tile in the <a class=\"reference internal\" href=\"class_meshlibrary.html#class-meshlibrary\"><span class=\"std std-ref\">MeshLibrary</span></a>. All cells in the map have the same dimensions.</p>\n<p>Internally, a GridMap is split into a sparse collection of octants for efficient rendering and physics processing. Every octant has the same dimensions and can contain several cells.</p>\n<p><strong>Note:</strong> GridMap doesn't extend <a class=\"reference internal\" href=\"class_visualinstance3d.html#class-visualinstance3d\"><span class=\"std std-ref\">VisualInstance3D</span></a> and therefore can't be hidden or cull masked based on <a class=\"reference internal\" href=\"class_visualinstance3d.html#class-visualinstance3d-property-layers\"><span class=\"std std-ref\">VisualInstance3D.layers</span></a>. If you make a light not affect the first layer, the whole GridMap won't be lit by the light in question.</p>\n"
            },
            "class_groovejoint2d": {
                "url": "https://docs.godotengine.org/en/4.1/classes/class_groovejoint2d.html",
                "title": "GrooveJoint2D",
                "blurb": "<p><strong>Inherits:</strong> <a class=\"reference internal\" href=\"class_joint2d.html#class-joint2d\"><span class=\"std std-ref\">Joint2D</span></a> <strong>&lt;</strong> <a class=\"reference internal\" href=\"class_node2d.html#class-node2d\"><span class=\"std std-ref\">Node2D</span></a> <strong>&lt;</strong> <a class=\"reference internal\" href=\"class_canvasitem.html#class-canvasitem\"><span class=\"std std-ref\">CanvasItem</span></a> <strong>&lt;</strong> <a class=\"reference internal\" href=\"class_node.html#class-node\"><span class=\"std std-ref\">Node</span></a> <strong>&lt;</strong> <a class=\"reference internal\" href=\"class_object.html#class-object\"><span class=\"std std-ref\">Object</span></a></p><p>A physics joint that restricts the movement of two 2D physics bodies to a fixed axis.</p>",
                "description": "\n\n<p>A physics joint that restricts the movement of two 2D physics bodies to a fixed axis. For example, a <a class=\"reference internal\" href=\"class_staticbody2d.html#class-staticbody2d\"><span class=\"std std-ref\">StaticBody2D</span></a> representing a piston base can be attached to a <a class=\"reference internal\" href=\"class_rigidbody2d.html#class-rigidbody2d\"><span class=\"std std-ref\">RigidBody2D</span></a> representing the piston head, moving up and down.</p>\n"
            },
            "class_hboxcontainer": {
                "url": "https://docs.godotengine.org/en/4.1/classes/class_hboxcontainer.html",
                "title": "HBoxContainer",
                "blurb": "<p><strong>Inherits:</strong> <a class=\"reference internal\" href=\"class_boxcontainer.html#class-boxcontainer\"><span class=\"std std-ref\">BoxContainer</span></a> <strong>&lt;</strong> <a class=\"reference internal\" href=\"class_container.html#class-container\"><span class=\"std std-ref\">Container</span></a> <strong>&lt;</strong> <a class=\"reference internal\" href=\"class_control.html#class-control\"><span class=\"std std-ref\">Control</span></a> <strong>&lt;</strong> <a class=\"reference internal\" href=\"class_canvasitem.html#class-canvasitem\"><span class=\"std std-ref\">CanvasItem</span></a> <strong>&lt;</strong> <a class=\"reference internal\" href=\"class_node.html#class-node\"><span class=\"std std-ref\">Node</span></a> <strong>&lt;</strong> <a class=\"reference internal\" href=\"class_object.html#class-object\"><span class=\"std std-ref\">Object</span></a></p><p><strong>Inherited By:</strong> <a class=\"reference internal\" href=\"class_editorresourcepicker.html#class-editorresourcepicker\"><span class=\"std std-ref\">EditorResourcePicker</span></a></p><p>A container that arranges its child controls horizontally.</p>",
                "description": "\n\n<p>A variant of <a class=\"reference internal\" href=\"class_boxcontainer.html#class-boxcontainer\"><span class=\"std std-ref\">BoxContainer</span></a> that can only arrange its child controls horizontally. Child controls are rearranged automatically when their minimum size changes.</p>\n"
            },
            "class_hflowcontainer": {
                "url": "https://docs.godotengine.org/en/4.1/classes/class_hflowcontainer.html",
                "title": "HFlowContainer",
                "blurb": "<p><strong>Inherits:</strong> <a class=\"reference internal\" href=\"class_flowcontainer.html#class-flowcontainer\"><span class=\"std std-ref\">FlowContainer</span></a> <strong>&lt;</strong> <a class=\"reference internal\" href=\"class_container.html#class-container\"><span class=\"std std-ref\">Container</span></a> <strong>&lt;</strong> <a class=\"reference internal\" href=\"class_control.html#class-control\"><span class=\"std std-ref\">Control</span></a> <strong>&lt;</strong> <a class=\"reference internal\" href=\"class_canvasitem.html#class-canvasitem\"><span class=\"std std-ref\">CanvasItem</span></a> <strong>&lt;</strong> <a class=\"reference internal\" href=\"class_node.html#class-node\"><span class=\"std std-ref\">Node</span></a> <strong>&lt;</strong> <a class=\"reference internal\" href=\"class_object.html#class-object\"><span class=\"std std-ref\">Object</span></a></p><p>A container that arranges its child controls horizontally and wraps them around at the borders.</p>",
                "description": "\n\n<p>A variant of <a class=\"reference internal\" href=\"class_flowcontainer.html#class-flowcontainer\"><span class=\"std std-ref\">FlowContainer</span></a> that can only arrange its child controls horizontally, wrapping them around at the borders. This is similar to how text in a book wraps around when no more words can fit on a line.</p>\n"
            },
            "class_hingejoint3d": {
                "url": "https://docs.godotengine.org/en/4.1/classes/class_hingejoint3d.html",
                "title": "HingeJoint3D",
                "blurb": "<p><strong>Inherits:</strong> <a class=\"reference internal\" href=\"class_joint3d.html#class-joint3d\"><span class=\"std std-ref\">Joint3D</span></a> <strong>&lt;</strong> <a class=\"reference internal\" href=\"class_node3d.html#class-node3d\"><span class=\"std std-ref\">Node3D</span></a> <strong>&lt;</strong> <a class=\"reference internal\" href=\"class_node.html#class-node\"><span class=\"std std-ref\">Node</span></a> <strong>&lt;</strong> <a class=\"reference internal\" href=\"class_object.html#class-object\"><span class=\"std std-ref\">Object</span></a></p><p>A physics joint that restricts the rotation of a 3D physics body around an axis relative to another physics body.</p>",
                "description": "\n\n<p>A physics joint that restricts the rotation of a 3D physics body around an axis relative to another physics body. For example, Body A can be a <a class=\"reference internal\" href=\"class_staticbody3d.html#class-staticbody3d\"><span class=\"std std-ref\">StaticBody3D</span></a> representing a door hinge that a <a class=\"reference internal\" href=\"class_rigidbody3d.html#class-rigidbody3d\"><span class=\"std std-ref\">RigidBody3D</span></a> rotates around.</p>\n"
            },
            "class_hscrollbar": {
                "url": "https://docs.godotengine.org/en/4.1/classes/class_hscrollbar.html",
                "title": "HScrollBar",
                "blurb": "<p><strong>Inherits:</strong> <a class=\"reference internal\" href=\"class_scrollbar.html#class-scrollbar\"><span class=\"std std-ref\">ScrollBar</span></a> <strong>&lt;</strong> <a class=\"reference internal\" href=\"class_range.html#class-range\"><span class=\"std std-ref\">Range</span></a> <strong>&lt;</strong> <a class=\"reference internal\" href=\"class_control.html#class-control\"><span class=\"std std-ref\">Control</span></a> <strong>&lt;</strong> <a class=\"reference internal\" href=\"class_canvasitem.html#class-canvasitem\"><span class=\"std std-ref\">CanvasItem</span></a> <strong>&lt;</strong> <a class=\"reference internal\" href=\"class_node.html#class-node\"><span class=\"std std-ref\">Node</span></a> <strong>&lt;</strong> <a class=\"reference internal\" href=\"class_object.html#class-object\"><span class=\"std std-ref\">Object</span></a></p><p>A horizontal scrollbar that goes from left (min) to right (max).</p>",
                "description": "\n\n<p>A horizontal scrollbar, typically used to navigate through content that extends beyond the visible width of a control. It is a <a class=\"reference internal\" href=\"class_range.html#class-range\"><span class=\"std std-ref\">Range</span></a>-based control and goes from left (min) to right (max).</p>\n"
            },
            "class_hseparator": {
                "url": "https://docs.godotengine.org/en/4.1/classes/class_hseparator.html",
                "title": "HSeparator",
                "blurb": "<p><strong>Inherits:</strong> <a class=\"reference internal\" href=\"class_separator.html#class-separator\"><span class=\"std std-ref\">Separator</span></a> <strong>&lt;</strong> <a class=\"reference internal\" href=\"class_control.html#class-control\"><span class=\"std std-ref\">Control</span></a> <strong>&lt;</strong> <a class=\"reference internal\" href=\"class_canvasitem.html#class-canvasitem\"><span class=\"std std-ref\">CanvasItem</span></a> <strong>&lt;</strong> <a class=\"reference internal\" href=\"class_node.html#class-node\"><span class=\"std std-ref\">Node</span></a> <strong>&lt;</strong> <a class=\"reference internal\" href=\"class_object.html#class-object\"><span class=\"std std-ref\">Object</span></a></p><p>A horizontal line used for separating other controls.</p>",
                "description": "\n\n<p>A horizontal separator used for separating other controls that are arranged <strong>vertically</strong>. <strong>HSeparator</strong> is purely visual and normally drawn as a <a class=\"reference internal\" href=\"class_styleboxline.html#class-styleboxline\"><span class=\"std std-ref\">StyleBoxLine</span></a>.</p>\n"
            },
            "class_hslider": {
                "url": "https://docs.godotengine.org/en/4.1/classes/class_hslider.html",
                "title": "HSlider",
                "blurb": "<p><strong>Inherits:</strong> <a class=\"reference internal\" href=\"class_slider.html#class-slider\"><span class=\"std std-ref\">Slider</span></a> <strong>&lt;</strong> <a class=\"reference internal\" href=\"class_range.html#class-range\"><span class=\"std std-ref\">Range</span></a> <strong>&lt;</strong> <a class=\"reference internal\" href=\"class_control.html#class-control\"><span class=\"std std-ref\">Control</span></a> <strong>&lt;</strong> <a class=\"reference internal\" href=\"class_canvasitem.html#class-canvasitem\"><span class=\"std std-ref\">CanvasItem</span></a> <strong>&lt;</strong> <a class=\"reference internal\" href=\"class_node.html#class-node\"><span class=\"std std-ref\">Node</span></a> <strong>&lt;</strong> <a class=\"reference internal\" href=\"class_object.html#class-object\"><span class=\"std std-ref\">Object</span></a></p><p>A horizontal slider that goes from left (min) to right (max).</p>",
                "description": "\n\n<p>A horizontal slider, used to adjust a value by moving a grabber along a horizontal axis. It is a <a class=\"reference internal\" href=\"class_range.html#class-range\"><span class=\"std std-ref\">Range</span></a>-based control and goes from left (min) to right (max).</p>\n"
            },
            "class_hsplitcontainer": {
                "url": "https://docs.godotengine.org/en/4.1/classes/class_hsplitcontainer.html",
                "title": "HSplitContainer",
                "blurb": "<p><strong>Inherits:</strong> <a class=\"reference internal\" href=\"class_splitcontainer.html#class-splitcontainer\"><span class=\"std std-ref\">SplitContainer</span></a> <strong>&lt;</strong> <a class=\"reference internal\" href=\"class_container.html#class-container\"><span class=\"std std-ref\">Container</span></a> <strong>&lt;</strong> <a class=\"reference internal\" href=\"class_control.html#class-control\"><span class=\"std std-ref\">Control</span></a> <strong>&lt;</strong> <a class=\"reference internal\" href=\"class_canvasitem.html#class-canvasitem\"><span class=\"std std-ref\">CanvasItem</span></a> <strong>&lt;</strong> <a class=\"reference internal\" href=\"class_node.html#class-node\"><span class=\"std std-ref\">Node</span></a> <strong>&lt;</strong> <a class=\"reference internal\" href=\"class_object.html#class-object\"><span class=\"std std-ref\">Object</span></a></p><p>A container that splits two child controls horizontally and provides a grabber for adjusting the split ratio.</p>",
                "description": "\n\n<p>A container that accepts only two child controls, then arranges them horizontally and creates a divisor between them. The divisor can be dragged around to change the size relation between the child controls.</p>\n"
            },
            "class_httprequest": {
                "url": "https://docs.godotengine.org/en/4.1/classes/class_httprequest.html",
                "title": "HTTPRequest",
                "blurb": "<p><strong>Inherits:</strong> <a class=\"reference internal\" href=\"class_node.html#class-node\"><span class=\"std std-ref\">Node</span></a> <strong>&lt;</strong> <a class=\"reference internal\" href=\"class_object.html#class-object\"><span class=\"std std-ref\">Object</span></a></p><p>A node with the ability to send HTTP(S) requests.</p>",
                "description": "\n\n<p>A node with the ability to send HTTP requests. Uses <a class=\"reference internal\" href=\"class_httpclient.html#class-httpclient\"><span class=\"std std-ref\">HTTPClient</span></a> internally.</p>\n<p>Can be used to make HTTP requests, i.e. download or upload files or web content via HTTP.</p>\n<p><strong>Warning:</strong> See the notes and warnings on <a class=\"reference internal\" href=\"class_httpclient.html#class-httpclient\"><span class=\"std std-ref\">HTTPClient</span></a> for limitations, especially regarding TLS security.</p>\n<p><strong>Note:</strong> When exporting to Android, make sure to enable the <code class=\"docutils literal notranslate\"><span class=\"pre\">INTERNET</span></code> permission in the Android export preset before exporting the project or using one-click deploy. Otherwise, network communication of any kind will be blocked by Android.</p>\n<p><strong>Example of contacting a REST API and printing one of its returned fields:</strong></p>\n<div class=\"sphinx-tabs docutils container\">\n<div aria-label=\"Tabbed content\" class=\"closeable\" role=\"tablist\"><button aria-controls=\"panel-0-R0RTY3JpcHQ=\" aria-selected=\"true\" class=\"sphinx-tabs-tab code-tab group-tab\" id=\"tab-0-R0RTY3JpcHQ=\" name=\"R0RTY3JpcHQ=\" role=\"tab\" tabindex=\"0\">GDScript</button><button aria-controls=\"panel-0-QyM=\" aria-selected=\"false\" class=\"sphinx-tabs-tab code-tab group-tab\" id=\"tab-0-QyM=\" name=\"QyM=\" role=\"tab\" tabindex=\"-1\">C#</button></div><div aria-labelledby=\"tab-0-R0RTY3JpcHQ=\" class=\"sphinx-tabs-panel code-tab group-tab\" id=\"panel-0-R0RTY3JpcHQ=\" name=\"R0RTY3JpcHQ=\" role=\"tabpanel\" tabindex=\"0\"><div class=\"highlight-gdscript notranslate\"><div class=\"highlight\"><pre><span></span><span class=\"k\">func</span> <span class=\"n\">_ready</span><span class=\"p\">():</span>\n    <span class=\"c1\"># Create an HTTP request node and connect its completion signal.</span>\n    <span class=\"k\">var</span> <span class=\"n\">http_request</span> <span class=\"o\">=</span> <span class=\"n\">HTTPRequest</span><span class=\"o\">.</span><span class=\"n\">new</span><span class=\"p\">()</span>\n    <span class=\"n\">add_child</span><span class=\"p\">(</span><span class=\"n\">http_request</span><span class=\"p\">)</span>\n    <span class=\"n\">http_request</span><span class=\"o\">.</span><span class=\"n\">request_completed</span><span class=\"o\">.</span><span class=\"n\">connect</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_http_request_completed</span><span class=\"p\">)</span>\n\n    <span class=\"c1\"># Perform a GET request. The URL below returns JSON as of writing.</span>\n    <span class=\"k\">var</span> <span class=\"n\">error</span> <span class=\"o\">=</span> <span class=\"n\">http_request</span><span class=\"o\">.</span><span class=\"n\">request</span><span class=\"p\">(</span><span class=\"s2\">\"https://httpbin.org/get\"</span><span class=\"p\">)</span>\n    <span class=\"k k-ControlFlow\">if</span> <span class=\"n\">error</span> <span class=\"o\">!=</span> <span class=\"n\">OK</span><span class=\"p\">:</span>\n        <span class=\"nb\">push_error</span><span class=\"p\">(</span><span class=\"s2\">\"An error occurred in the HTTP request.\"</span><span class=\"p\">)</span>\n\n    <span class=\"c1\"># Perform a POST request. The URL below returns JSON as of writing.</span>\n    <span class=\"c1\"># Note: Don't make simultaneous requests using a single HTTPRequest node.</span>\n    <span class=\"c1\"># The snippet below is provided for reference only.</span>\n    <span class=\"k\">var</span> <span class=\"n\">body</span> <span class=\"o\">=</span> <span class=\"n\">JSON</span><span class=\"o\">.</span><span class=\"n\">new</span><span class=\"p\">()</span><span class=\"o\">.</span><span class=\"n\">stringify</span><span class=\"p\">({</span><span class=\"s2\">\"name\"</span><span class=\"p\">:</span> <span class=\"s2\">\"Godette\"</span><span class=\"p\">})</span>\n    <span class=\"n\">error</span> <span class=\"o\">=</span> <span class=\"n\">http_request</span><span class=\"o\">.</span><span class=\"n\">request</span><span class=\"p\">(</span><span class=\"s2\">\"https://httpbin.org/post\"</span><span class=\"p\">,</span> <span class=\"p\">[],</span> <span class=\"n\">HTTPClient</span><span class=\"o\">.</span><span class=\"n\">METHOD_POST</span><span class=\"p\">,</span> <span class=\"n\">body</span><span class=\"p\">)</span>\n    <span class=\"k k-ControlFlow\">if</span> <span class=\"n\">error</span> <span class=\"o\">!=</span> <span class=\"n\">OK</span><span class=\"p\">:</span>\n        <span class=\"nb\">push_error</span><span class=\"p\">(</span><span class=\"s2\">\"An error occurred in the HTTP request.\"</span><span class=\"p\">)</span>\n\n<span class=\"c1\"># Called when the HTTP request is completed.</span>\n<span class=\"k\">func</span> <span class=\"n\">_http_request_completed</span><span class=\"p\">(</span><span class=\"n\">result</span><span class=\"p\">,</span> <span class=\"n\">response_code</span><span class=\"p\">,</span> <span class=\"n\">headers</span><span class=\"p\">,</span> <span class=\"n\">body</span><span class=\"p\">):</span>\n    <span class=\"k\">var</span> <span class=\"n\">json</span> <span class=\"o\">=</span> <span class=\"n\">JSON</span><span class=\"o\">.</span><span class=\"n\">new</span><span class=\"p\">()</span>\n    <span class=\"n\">json</span><span class=\"o\">.</span><span class=\"n\">parse</span><span class=\"p\">(</span><span class=\"n\">body</span><span class=\"o\">.</span><span class=\"n\">get_string_from_utf8</span><span class=\"p\">())</span>\n    <span class=\"k\">var</span> <span class=\"n\">response</span> <span class=\"o\">=</span> <span class=\"n\">json</span><span class=\"o\">.</span><span class=\"n\">get_data</span><span class=\"p\">()</span>\n\n    <span class=\"c1\"># Will print the user agent string used by the HTTPRequest node (as recognized by httpbin.org).</span>\n    <span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"n\">response</span><span class=\"o\">.</span><span class=\"n\">headers</span><span class=\"p\">[</span><span class=\"s2\">\"User-Agent\"</span><span class=\"p\">])</span>\n</pre></div>\n</div>\n</div><div aria-labelledby=\"tab-0-QyM=\" class=\"sphinx-tabs-panel code-tab group-tab\" hidden=\"true\" id=\"panel-0-QyM=\" name=\"QyM=\" role=\"tabpanel\" tabindex=\"0\"><div class=\"highlight-csharp notranslate\"><div class=\"highlight\"><pre><span></span><span class=\"k\">public</span><span class=\"w\"> </span><span class=\"k\">override</span><span class=\"w\"> </span><span class=\"k\">void</span><span class=\"w\"> </span><span class=\"nf\">_Ready</span><span class=\"p\">()</span>\n<span class=\"p\">{</span>\n<span class=\"w\">    </span><span class=\"c1\">// Create an HTTP request node and connect its completion signal.</span>\n<span class=\"w\">    </span><span class=\"kt\">var</span><span class=\"w\"> </span><span class=\"n\">httpRequest</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"k\">new</span><span class=\"w\"> </span><span class=\"n\">HTTPRequest</span><span class=\"p\">();</span>\n<span class=\"w\">    </span><span class=\"n\">AddChild</span><span class=\"p\">(</span><span class=\"n\">httpRequest</span><span class=\"p\">);</span>\n<span class=\"w\">    </span><span class=\"n\">httpRequest</span><span class=\"p\">.</span><span class=\"n\">RequestCompleted</span><span class=\"w\"> </span><span class=\"o\">+=</span><span class=\"w\"> </span><span class=\"n\">HttpRequestCompleted</span><span class=\"p\">;</span>\n\n<span class=\"w\">    </span><span class=\"c1\">// Perform a GET request. The URL below returns JSON as of writing.</span>\n<span class=\"w\">    </span><span class=\"n\">Error</span><span class=\"w\"> </span><span class=\"n\">error</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"n\">httpRequest</span><span class=\"p\">.</span><span class=\"n\">Request</span><span class=\"p\">(</span><span class=\"s\">\"https://httpbin.org/get\"</span><span class=\"p\">);</span>\n<span class=\"w\">    </span><span class=\"k\">if</span><span class=\"w\"> </span><span class=\"p\">(</span><span class=\"n\">error</span><span class=\"w\"> </span><span class=\"o\">!=</span><span class=\"w\"> </span><span class=\"n\">Error</span><span class=\"p\">.</span><span class=\"n\">Ok</span><span class=\"p\">)</span>\n<span class=\"w\">    </span><span class=\"p\">{</span>\n<span class=\"w\">        </span><span class=\"n\">GD</span><span class=\"p\">.</span><span class=\"n\">PushError</span><span class=\"p\">(</span><span class=\"s\">\"An error occurred in the HTTP request.\"</span><span class=\"p\">);</span>\n<span class=\"w\">    </span><span class=\"p\">}</span>\n\n<span class=\"w\">    </span><span class=\"c1\">// Perform a POST request. The URL below returns JSON as of writing.</span>\n<span class=\"w\">    </span><span class=\"c1\">// Note: Don't make simultaneous requests using a single HTTPRequest node.</span>\n<span class=\"w\">    </span><span class=\"c1\">// The snippet below is provided for reference only.</span>\n<span class=\"w\">    </span><span class=\"kt\">string</span><span class=\"w\"> </span><span class=\"n\">body</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"k\">new</span><span class=\"w\"> </span><span class=\"n\">Json</span><span class=\"p\">().</span><span class=\"n\">Stringify</span><span class=\"p\">(</span><span class=\"k\">new</span><span class=\"w\"> </span><span class=\"n\">Godot</span><span class=\"p\">.</span><span class=\"n\">Collections</span><span class=\"p\">.</span><span class=\"n\">Dictionary</span>\n<span class=\"w\">    </span><span class=\"p\">{</span>\n<span class=\"w\">        </span><span class=\"p\">{</span><span class=\"w\"> </span><span class=\"s\">\"name\"</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"s\">\"Godette\"</span><span class=\"w\"> </span><span class=\"p\">}</span>\n<span class=\"w\">    </span><span class=\"p\">});</span>\n<span class=\"w\">    </span><span class=\"n\">error</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"n\">httpRequest</span><span class=\"p\">.</span><span class=\"n\">Request</span><span class=\"p\">(</span><span class=\"s\">\"https://httpbin.org/post\"</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"k\">null</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">HTTPClient</span><span class=\"p\">.</span><span class=\"n\">Method</span><span class=\"p\">.</span><span class=\"n\">Post</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">body</span><span class=\"p\">);</span>\n<span class=\"w\">    </span><span class=\"k\">if</span><span class=\"w\"> </span><span class=\"p\">(</span><span class=\"n\">error</span><span class=\"w\"> </span><span class=\"o\">!=</span><span class=\"w\"> </span><span class=\"n\">Error</span><span class=\"p\">.</span><span class=\"n\">Ok</span><span class=\"p\">)</span>\n<span class=\"w\">    </span><span class=\"p\">{</span>\n<span class=\"w\">        </span><span class=\"n\">GD</span><span class=\"p\">.</span><span class=\"n\">PushError</span><span class=\"p\">(</span><span class=\"s\">\"An error occurred in the HTTP request.\"</span><span class=\"p\">);</span>\n<span class=\"w\">    </span><span class=\"p\">}</span>\n<span class=\"p\">}</span>\n\n<span class=\"c1\">// Called when the HTTP request is completed.</span>\n<span class=\"k\">private</span><span class=\"w\"> </span><span class=\"k\">void</span><span class=\"w\"> </span><span class=\"nf\">HttpRequestCompleted</span><span class=\"p\">(</span><span class=\"kt\">long</span><span class=\"w\"> </span><span class=\"n\">result</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"kt\">long</span><span class=\"w\"> </span><span class=\"n\">responseCode</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"kt\">string</span><span class=\"p\">[]</span><span class=\"w\"> </span><span class=\"n\">headers</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"kt\">byte</span><span class=\"p\">[]</span><span class=\"w\"> </span><span class=\"n\">body</span><span class=\"p\">)</span>\n<span class=\"p\">{</span>\n<span class=\"w\">    </span><span class=\"kt\">var</span><span class=\"w\"> </span><span class=\"n\">json</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"k\">new</span><span class=\"w\"> </span><span class=\"n\">Json</span><span class=\"p\">();</span>\n<span class=\"w\">    </span><span class=\"n\">json</span><span class=\"p\">.</span><span class=\"n\">Parse</span><span class=\"p\">(</span><span class=\"n\">body</span><span class=\"p\">.</span><span class=\"n\">GetStringFromUtf8</span><span class=\"p\">());</span>\n<span class=\"w\">    </span><span class=\"kt\">var</span><span class=\"w\"> </span><span class=\"n\">response</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"n\">json</span><span class=\"p\">.</span><span class=\"n\">GetData</span><span class=\"p\">().</span><span class=\"n\">AsGodotDictionary</span><span class=\"p\">();</span>\n\n<span class=\"w\">    </span><span class=\"c1\">// Will print the user agent string used by the HTTPRequest node (as recognized by httpbin.org).</span>\n<span class=\"w\">    </span><span class=\"n\">GD</span><span class=\"p\">.</span><span class=\"n\">Print</span><span class=\"p\">((</span><span class=\"n\">response</span><span class=\"p\">[</span><span class=\"s\">\"headers\"</span><span class=\"p\">].</span><span class=\"n\">AsGodotDictionary</span><span class=\"p\">())[</span><span class=\"s\">\"User-Agent\"</span><span class=\"p\">]);</span>\n<span class=\"p\">}</span>\n</pre></div>\n</div>\n</div></div>\n<p><strong>Example of loading and displaying an image using HTTPRequest:</strong></p>\n<div class=\"sphinx-tabs docutils container\">\n<div aria-label=\"Tabbed content\" class=\"closeable\" role=\"tablist\"><button aria-controls=\"panel-1-R0RTY3JpcHQ=\" aria-selected=\"true\" class=\"sphinx-tabs-tab code-tab group-tab\" id=\"tab-1-R0RTY3JpcHQ=\" name=\"R0RTY3JpcHQ=\" role=\"tab\" tabindex=\"0\">GDScript</button><button aria-controls=\"panel-1-QyM=\" aria-selected=\"false\" class=\"sphinx-tabs-tab code-tab group-tab\" id=\"tab-1-QyM=\" name=\"QyM=\" role=\"tab\" tabindex=\"-1\">C#</button></div><div aria-labelledby=\"tab-1-R0RTY3JpcHQ=\" class=\"sphinx-tabs-panel code-tab group-tab\" id=\"panel-1-R0RTY3JpcHQ=\" name=\"R0RTY3JpcHQ=\" role=\"tabpanel\" tabindex=\"0\"><div class=\"highlight-gdscript notranslate\"><div class=\"highlight\"><pre><span></span><span class=\"k\">func</span> <span class=\"n\">_ready</span><span class=\"p\">():</span>\n    <span class=\"c1\"># Create an HTTP request node and connect its completion signal.</span>\n    <span class=\"k\">var</span> <span class=\"n\">http_request</span> <span class=\"o\">=</span> <span class=\"n\">HTTPRequest</span><span class=\"o\">.</span><span class=\"n\">new</span><span class=\"p\">()</span>\n    <span class=\"n\">add_child</span><span class=\"p\">(</span><span class=\"n\">http_request</span><span class=\"p\">)</span>\n    <span class=\"n\">http_request</span><span class=\"o\">.</span><span class=\"n\">request_completed</span><span class=\"o\">.</span><span class=\"n\">connect</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_http_request_completed</span><span class=\"p\">)</span>\n\n    <span class=\"c1\"># Perform the HTTP request. The URL below returns a PNG image as of writing.</span>\n    <span class=\"k\">var</span> <span class=\"n\">error</span> <span class=\"o\">=</span> <span class=\"n\">http_request</span><span class=\"o\">.</span><span class=\"n\">request</span><span class=\"p\">(</span><span class=\"s2\">\"https://via.placeholder.com/512\"</span><span class=\"p\">)</span>\n    <span class=\"k k-ControlFlow\">if</span> <span class=\"n\">error</span> <span class=\"o\">!=</span> <span class=\"n\">OK</span><span class=\"p\">:</span>\n        <span class=\"nb\">push_error</span><span class=\"p\">(</span><span class=\"s2\">\"An error occurred in the HTTP request.\"</span><span class=\"p\">)</span>\n\n<span class=\"c1\"># Called when the HTTP request is completed.</span>\n<span class=\"k\">func</span> <span class=\"n\">_http_request_completed</span><span class=\"p\">(</span><span class=\"n\">result</span><span class=\"p\">,</span> <span class=\"n\">response_code</span><span class=\"p\">,</span> <span class=\"n\">headers</span><span class=\"p\">,</span> <span class=\"n\">body</span><span class=\"p\">):</span>\n    <span class=\"k k-ControlFlow\">if</span> <span class=\"n\">result</span> <span class=\"o\">!=</span> <span class=\"n\">HTTPRequest</span><span class=\"o\">.</span><span class=\"n\">RESULT_SUCCESS</span><span class=\"p\">:</span>\n        <span class=\"nb\">push_error</span><span class=\"p\">(</span><span class=\"s2\">\"Image couldn't be downloaded. Try a different image.\"</span><span class=\"p\">)</span>\n\n    <span class=\"k\">var</span> <span class=\"n\">image</span> <span class=\"o\">=</span> <span class=\"n\">Image</span><span class=\"o\">.</span><span class=\"n\">new</span><span class=\"p\">()</span>\n    <span class=\"k\">var</span> <span class=\"n\">error</span> <span class=\"o\">=</span> <span class=\"n\">image</span><span class=\"o\">.</span><span class=\"n\">load_png_from_buffer</span><span class=\"p\">(</span><span class=\"n\">body</span><span class=\"p\">)</span>\n    <span class=\"k k-ControlFlow\">if</span> <span class=\"n\">error</span> <span class=\"o\">!=</span> <span class=\"n\">OK</span><span class=\"p\">:</span>\n        <span class=\"nb\">push_error</span><span class=\"p\">(</span><span class=\"s2\">\"Couldn't load the image.\"</span><span class=\"p\">)</span>\n\n    <span class=\"k\">var</span> <span class=\"n\">texture</span> <span class=\"o\">=</span> <span class=\"n\">ImageTexture</span><span class=\"o\">.</span><span class=\"n\">create_from_image</span><span class=\"p\">(</span><span class=\"n\">image</span><span class=\"p\">)</span>\n\n    <span class=\"c1\"># Display the image in a TextureRect node.</span>\n    <span class=\"k\">var</span> <span class=\"n\">texture_rect</span> <span class=\"o\">=</span> <span class=\"n\">TextureRect</span><span class=\"o\">.</span><span class=\"n\">new</span><span class=\"p\">()</span>\n    <span class=\"n\">add_child</span><span class=\"p\">(</span><span class=\"n\">texture_rect</span><span class=\"p\">)</span>\n    <span class=\"n\">texture_rect</span><span class=\"o\">.</span><span class=\"n\">texture</span> <span class=\"o\">=</span> <span class=\"n\">texture</span>\n</pre></div>\n</div>\n</div><div aria-labelledby=\"tab-1-QyM=\" class=\"sphinx-tabs-panel code-tab group-tab\" hidden=\"true\" id=\"panel-1-QyM=\" name=\"QyM=\" role=\"tabpanel\" tabindex=\"0\"><div class=\"highlight-csharp notranslate\"><div class=\"highlight\"><pre><span></span><span class=\"k\">public</span><span class=\"w\"> </span><span class=\"k\">override</span><span class=\"w\"> </span><span class=\"k\">void</span><span class=\"w\"> </span><span class=\"nf\">_Ready</span><span class=\"p\">()</span>\n<span class=\"p\">{</span>\n<span class=\"w\">    </span><span class=\"c1\">// Create an HTTP request node and connect its completion signal.</span>\n<span class=\"w\">    </span><span class=\"kt\">var</span><span class=\"w\"> </span><span class=\"n\">httpRequest</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"k\">new</span><span class=\"w\"> </span><span class=\"n\">HTTPRequest</span><span class=\"p\">();</span>\n<span class=\"w\">    </span><span class=\"n\">AddChild</span><span class=\"p\">(</span><span class=\"n\">httpRequest</span><span class=\"p\">);</span>\n<span class=\"w\">    </span><span class=\"n\">httpRequest</span><span class=\"p\">.</span><span class=\"n\">RequestCompleted</span><span class=\"w\"> </span><span class=\"o\">+=</span><span class=\"w\"> </span><span class=\"n\">HttpRequestCompleted</span><span class=\"p\">;</span>\n\n<span class=\"w\">    </span><span class=\"c1\">// Perform the HTTP request. The URL below returns a PNG image as of writing.</span>\n<span class=\"w\">    </span><span class=\"n\">Error</span><span class=\"w\"> </span><span class=\"n\">error</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"n\">httpRequest</span><span class=\"p\">.</span><span class=\"n\">Request</span><span class=\"p\">(</span><span class=\"s\">\"https://via.placeholder.com/512\"</span><span class=\"p\">);</span>\n<span class=\"w\">    </span><span class=\"k\">if</span><span class=\"w\"> </span><span class=\"p\">(</span><span class=\"n\">error</span><span class=\"w\"> </span><span class=\"o\">!=</span><span class=\"w\"> </span><span class=\"n\">Error</span><span class=\"p\">.</span><span class=\"n\">Ok</span><span class=\"p\">)</span>\n<span class=\"w\">    </span><span class=\"p\">{</span>\n<span class=\"w\">        </span><span class=\"n\">GD</span><span class=\"p\">.</span><span class=\"n\">PushError</span><span class=\"p\">(</span><span class=\"s\">\"An error occurred in the HTTP request.\"</span><span class=\"p\">);</span>\n<span class=\"w\">    </span><span class=\"p\">}</span>\n<span class=\"p\">}</span>\n\n<span class=\"c1\">// Called when the HTTP request is completed.</span>\n<span class=\"k\">private</span><span class=\"w\"> </span><span class=\"k\">void</span><span class=\"w\"> </span><span class=\"nf\">HttpRequestCompleted</span><span class=\"p\">(</span><span class=\"kt\">long</span><span class=\"w\"> </span><span class=\"n\">result</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"kt\">long</span><span class=\"w\"> </span><span class=\"n\">responseCode</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"kt\">string</span><span class=\"p\">[]</span><span class=\"w\"> </span><span class=\"n\">headers</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"kt\">byte</span><span class=\"p\">[]</span><span class=\"w\"> </span><span class=\"n\">body</span><span class=\"p\">)</span>\n<span class=\"p\">{</span>\n<span class=\"w\">    </span><span class=\"k\">if</span><span class=\"w\"> </span><span class=\"p\">(</span><span class=\"n\">result</span><span class=\"w\"> </span><span class=\"o\">!=</span><span class=\"w\"> </span><span class=\"p\">(</span><span class=\"kt\">long</span><span class=\"p\">)</span><span class=\"n\">HTTPRequest</span><span class=\"p\">.</span><span class=\"n\">Result</span><span class=\"p\">.</span><span class=\"n\">Success</span><span class=\"p\">)</span>\n<span class=\"w\">    </span><span class=\"p\">{</span>\n<span class=\"w\">        </span><span class=\"n\">GD</span><span class=\"p\">.</span><span class=\"n\">PushError</span><span class=\"p\">(</span><span class=\"s\">\"Image couldn't be downloaded. Try a different image.\"</span><span class=\"p\">);</span>\n<span class=\"w\">    </span><span class=\"p\">}</span>\n<span class=\"w\">    </span><span class=\"kt\">var</span><span class=\"w\"> </span><span class=\"n\">image</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"k\">new</span><span class=\"w\"> </span><span class=\"n\">Image</span><span class=\"p\">();</span>\n<span class=\"w\">    </span><span class=\"n\">Error</span><span class=\"w\"> </span><span class=\"n\">error</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"n\">image</span><span class=\"p\">.</span><span class=\"n\">LoadPngFromBuffer</span><span class=\"p\">(</span><span class=\"n\">body</span><span class=\"p\">);</span>\n<span class=\"w\">    </span><span class=\"k\">if</span><span class=\"w\"> </span><span class=\"p\">(</span><span class=\"n\">error</span><span class=\"w\"> </span><span class=\"o\">!=</span><span class=\"w\"> </span><span class=\"n\">Error</span><span class=\"p\">.</span><span class=\"n\">Ok</span><span class=\"p\">)</span>\n<span class=\"w\">    </span><span class=\"p\">{</span>\n<span class=\"w\">        </span><span class=\"n\">GD</span><span class=\"p\">.</span><span class=\"n\">PushError</span><span class=\"p\">(</span><span class=\"s\">\"Couldn't load the image.\"</span><span class=\"p\">);</span>\n<span class=\"w\">    </span><span class=\"p\">}</span>\n\n<span class=\"w\">    </span><span class=\"kt\">var</span><span class=\"w\"> </span><span class=\"n\">texture</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"n\">ImageTexture</span><span class=\"p\">.</span><span class=\"n\">CreateFromImage</span><span class=\"p\">(</span><span class=\"n\">image</span><span class=\"p\">);</span>\n\n<span class=\"w\">    </span><span class=\"c1\">// Display the image in a TextureRect node.</span>\n<span class=\"w\">    </span><span class=\"kt\">var</span><span class=\"w\"> </span><span class=\"n\">textureRect</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"k\">new</span><span class=\"w\"> </span><span class=\"n\">TextureRect</span><span class=\"p\">();</span>\n<span class=\"w\">    </span><span class=\"n\">AddChild</span><span class=\"p\">(</span><span class=\"n\">textureRect</span><span class=\"p\">);</span>\n<span class=\"w\">    </span><span class=\"n\">textureRect</span><span class=\"p\">.</span><span class=\"n\">Texture</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"n\">texture</span><span class=\"p\">;</span>\n<span class=\"p\">}</span>\n</pre></div>\n</div>\n</div></div>\n<p><strong>Gzipped response bodies</strong>: HTTPRequest will automatically handle decompression of response bodies. A <code class=\"docutils literal notranslate\"><span class=\"pre\">Accept-Encoding</span></code> header will be automatically added to each of your requests, unless one is already specified. Any response with a <code class=\"docutils literal notranslate\"><span class=\"pre\">Content-Encoding:</span> <span class=\"pre\">gzip</span></code> header will automatically be decompressed and delivered to you as uncompressed bytes.</p>\n"
            },
            "class_importermeshinstance3d": {
                "url": "https://docs.godotengine.org/en/4.1/classes/class_importermeshinstance3d.html",
                "title": "ImporterMeshInstance3D",
                "blurb": "<p><strong>Inherits:</strong> <a class=\"reference internal\" href=\"class_node3d.html#class-node3d\"><span class=\"std std-ref\">Node3D</span></a> <strong>&lt;</strong> <a class=\"reference internal\" href=\"class_node.html#class-node\"><span class=\"std std-ref\">Node</span></a> <strong>&lt;</strong> <a class=\"reference internal\" href=\"class_object.html#class-object\"><span class=\"std std-ref\">Object</span></a></p>",
                "description": null
            },
            "class_instanceplaceholder": {
                "url": "https://docs.godotengine.org/en/4.1/classes/class_instanceplaceholder.html",
                "title": "InstancePlaceholder",
                "blurb": "<p><strong>Inherits:</strong> <a class=\"reference internal\" href=\"class_node.html#class-node\"><span class=\"std std-ref\">Node</span></a> <strong>&lt;</strong> <a class=\"reference internal\" href=\"class_object.html#class-object\"><span class=\"std std-ref\">Object</span></a></p><p>Placeholder for the root <a class=\"reference internal\" href=\"class_node.html#class-node\"><span class=\"std std-ref\">Node</span></a> of a <a class=\"reference internal\" href=\"class_packedscene.html#class-packedscene\"><span class=\"std std-ref\">PackedScene</span></a>.</p>",
                "description": "\n\n<p>Turning on the option <strong>Load As Placeholder</strong> for an instantiated scene in the editor causes it to be replaced by an <strong>InstancePlaceholder</strong> when running the game, this will not replace the node in the editor. This makes it possible to delay actually loading the scene until calling <a class=\"reference internal\" href=\"#class-instanceplaceholder-method-create-instance\"><span class=\"std std-ref\">create_instance</span></a>. This is useful to avoid loading large scenes all at once by loading parts of it selectively.</p>\n<p>The <strong>InstancePlaceholder</strong> does not have a transform. This causes any child nodes to be positioned relatively to the <a class=\"reference internal\" href=\"class_viewport.html#class-viewport\"><span class=\"std std-ref\">Viewport</span></a> from point (0,0), rather than their parent as displayed in the editor. Replacing the placeholder with a scene with a transform will transform children relatively to their parent again.</p>\n"
            },
            "class_itemlist": {
                "url": "https://docs.godotengine.org/en/4.1/classes/class_itemlist.html",
                "title": "ItemList",
                "blurb": "<p><strong>Inherits:</strong> <a class=\"reference internal\" href=\"class_control.html#class-control\"><span class=\"std std-ref\">Control</span></a> <strong>&lt;</strong> <a class=\"reference internal\" href=\"class_canvasitem.html#class-canvasitem\"><span class=\"std std-ref\">CanvasItem</span></a> <strong>&lt;</strong> <a class=\"reference internal\" href=\"class_node.html#class-node\"><span class=\"std std-ref\">Node</span></a> <strong>&lt;</strong> <a class=\"reference internal\" href=\"class_object.html#class-object\"><span class=\"std std-ref\">Object</span></a></p><p>A vertical list of selectable items with one or multiple columns.</p>",
                "description": "\n\n<p>This control provides a vertical list of selectable items that may be in a single or in multiple columns, with each item having options for text and an icon. Tooltips are supported and may be different for every item in the list.</p>\n<p>Selectable items in the list may be selected or deselected and multiple selection may be enabled. Selection with right mouse button may also be enabled to allow use of popup context menus. Items may also be \"activated\" by double-clicking them or by pressing <kbd class=\"kbd docutils literal notranslate\">Enter</kbd>.</p>\n<p>Item text only supports single-line strings. Newline characters (e.g. <code class=\"docutils literal notranslate\"><span class=\"pre\">\\n</span></code>) in the string won't produce a newline. Text wrapping is enabled in <a class=\"reference internal\" href=\"#class-itemlist-constant-icon-mode-top\"><span class=\"std std-ref\">ICON_MODE_TOP</span></a> mode, but the column's width is adjusted to fully fit its content by default. You need to set <a class=\"reference internal\" href=\"#class-itemlist-property-fixed-column-width\"><span class=\"std std-ref\">fixed_column_width</span></a> greater than zero to wrap the text.</p>\n<p>All <code class=\"docutils literal notranslate\"><span class=\"pre\">set_*</span></code> methods allow negative item indices, i.e. <code class=\"docutils literal notranslate\"><span class=\"pre\">-1</span></code> to access the last item, <code class=\"docutils literal notranslate\"><span class=\"pre\">-2</span></code> to select the second-to-last item, and so on.</p>\n<p><strong>Incremental search:</strong> Like <a class=\"reference internal\" href=\"class_popupmenu.html#class-popupmenu\"><span class=\"std std-ref\">PopupMenu</span></a> and <a class=\"reference internal\" href=\"class_tree.html#class-tree\"><span class=\"std std-ref\">Tree</span></a>, <strong>ItemList</strong> supports searching within the list while the control is focused. Press a key that matches the first letter of an item's name to select the first item starting with the given letter. After that point, there are two ways to perform incremental search: 1) Press the same key again before the timeout duration to select the next item starting with the same letter. 2) Press letter keys that match the rest of the word before the timeout duration to match to select the item in question directly. Both of these actions will be reset to the beginning of the list if the timeout duration has passed since the last keystroke was registered. You can adjust the timeout duration by changing <a class=\"reference internal\" href=\"class_projectsettings.html#class-projectsettings-property-gui-timers-incremental-search-max-interval-msec\"><span class=\"std std-ref\">ProjectSettings.gui/timers/incremental_search_max_interval_msec</span></a>.</p>\n"
            },
            "class_joint2d": {
                "url": "https://docs.godotengine.org/en/4.1/classes/class_joint2d.html",
                "title": "Joint2D",
                "blurb": "<p><strong>Inherits:</strong> <a class=\"reference internal\" href=\"class_node2d.html#class-node2d\"><span class=\"std std-ref\">Node2D</span></a> <strong>&lt;</strong> <a class=\"reference internal\" href=\"class_canvasitem.html#class-canvasitem\"><span class=\"std std-ref\">CanvasItem</span></a> <strong>&lt;</strong> <a class=\"reference internal\" href=\"class_node.html#class-node\"><span class=\"std std-ref\">Node</span></a> <strong>&lt;</strong> <a class=\"reference internal\" href=\"class_object.html#class-object\"><span class=\"std std-ref\">Object</span></a></p><p><strong>Inherited By:</strong> <a class=\"reference internal\" href=\"class_dampedspringjoint2d.html#class-dampedspringjoint2d\"><span class=\"std std-ref\">DampedSpringJoint2D</span></a>, <a class=\"reference internal\" href=\"class_groovejoint2d.html#class-groovejoint2d\"><span class=\"std std-ref\">GrooveJoint2D</span></a>, <a class=\"reference internal\" href=\"class_pinjoint2d.html#class-pinjoint2d\"><span class=\"std std-ref\">PinJoint2D</span></a></p><p>Abstract base class for all 2D physics joints.</p>",
                "description": "\n\n<p>Abstract base class for all joints in 2D physics. 2D joints bind together two physics bodies and apply a constraint.</p>\n"
            },
            "class_joint3d": {
                "url": "https://docs.godotengine.org/en/4.1/classes/class_joint3d.html",
                "title": "Joint3D",
                "blurb": "<p><strong>Inherits:</strong> <a class=\"reference internal\" href=\"class_node3d.html#class-node3d\"><span class=\"std std-ref\">Node3D</span></a> <strong>&lt;</strong> <a class=\"reference internal\" href=\"class_node.html#class-node\"><span class=\"std std-ref\">Node</span></a> <strong>&lt;</strong> <a class=\"reference internal\" href=\"class_object.html#class-object\"><span class=\"std std-ref\">Object</span></a></p><p><strong>Inherited By:</strong> <a class=\"reference internal\" href=\"class_conetwistjoint3d.html#class-conetwistjoint3d\"><span class=\"std std-ref\">ConeTwistJoint3D</span></a>, <a class=\"reference internal\" href=\"class_generic6dofjoint3d.html#class-generic6dofjoint3d\"><span class=\"std std-ref\">Generic6DOFJoint3D</span></a>, <a class=\"reference internal\" href=\"class_hingejoint3d.html#class-hingejoint3d\"><span class=\"std std-ref\">HingeJoint3D</span></a>, <a class=\"reference internal\" href=\"class_pinjoint3d.html#class-pinjoint3d\"><span class=\"std std-ref\">PinJoint3D</span></a>, <a class=\"reference internal\" href=\"class_sliderjoint3d.html#class-sliderjoint3d\"><span class=\"std std-ref\">SliderJoint3D</span></a></p><p>Abstract base class for all 3D physics joints.</p>",
                "description": "\n\n<p>Abstract base class for all joints in 3D physics. 3D joints bind together two physics bodies and apply a constraint.</p>\n"
            },
            "class_label": {
                "url": "https://docs.godotengine.org/en/4.1/classes/class_label.html",
                "title": "Label",
                "blurb": "<p><strong>Inherits:</strong> <a class=\"reference internal\" href=\"class_control.html#class-control\"><span class=\"std std-ref\">Control</span></a> <strong>&lt;</strong> <a class=\"reference internal\" href=\"class_canvasitem.html#class-canvasitem\"><span class=\"std std-ref\">CanvasItem</span></a> <strong>&lt;</strong> <a class=\"reference internal\" href=\"class_node.html#class-node\"><span class=\"std std-ref\">Node</span></a> <strong>&lt;</strong> <a class=\"reference internal\" href=\"class_object.html#class-object\"><span class=\"std std-ref\">Object</span></a></p><p>A control for displaying plain text.</p>",
                "description": "\n\n<p>A control for displaying plain text. It gives you control over the horizontal and vertical alignment and can wrap the text inside the node's bounding rectangle. It doesn't support bold, italics, or other rich text formatting. For that, use <a class=\"reference internal\" href=\"class_richtextlabel.html#class-richtextlabel\"><span class=\"std std-ref\">RichTextLabel</span></a> instead.</p>\n"
            },
            "class_label3d": {
                "url": "https://docs.godotengine.org/en/4.1/classes/class_label3d.html",
                "title": "Label3D",
                "blurb": "<p><strong>Inherits:</strong> <a class=\"reference internal\" href=\"class_geometryinstance3d.html#class-geometryinstance3d\"><span class=\"std std-ref\">GeometryInstance3D</span></a> <strong>&lt;</strong> <a class=\"reference internal\" href=\"class_visualinstance3d.html#class-visualinstance3d\"><span class=\"std std-ref\">VisualInstance3D</span></a> <strong>&lt;</strong> <a class=\"reference internal\" href=\"class_node3d.html#class-node3d\"><span class=\"std std-ref\">Node3D</span></a> <strong>&lt;</strong> <a class=\"reference internal\" href=\"class_node.html#class-node\"><span class=\"std std-ref\">Node</span></a> <strong>&lt;</strong> <a class=\"reference internal\" href=\"class_object.html#class-object\"><span class=\"std std-ref\">Object</span></a></p><p>A node for displaying plain text in 3D space.</p>",
                "description": "\n\n<p>A node for displaying plain text in 3D space. By adjusting various properties of this node, you can configure things such as the text's appearance and whether it always faces the camera.</p>\n"
            },
            "class_light2d": {
                "url": "https://docs.godotengine.org/en/4.1/classes/class_light2d.html",
                "title": "Light2D",
                "blurb": "<p><strong>Inherits:</strong> <a class=\"reference internal\" href=\"class_node2d.html#class-node2d\"><span class=\"std std-ref\">Node2D</span></a> <strong>&lt;</strong> <a class=\"reference internal\" href=\"class_canvasitem.html#class-canvasitem\"><span class=\"std std-ref\">CanvasItem</span></a> <strong>&lt;</strong> <a class=\"reference internal\" href=\"class_node.html#class-node\"><span class=\"std std-ref\">Node</span></a> <strong>&lt;</strong> <a class=\"reference internal\" href=\"class_object.html#class-object\"><span class=\"std std-ref\">Object</span></a></p><p><strong>Inherited By:</strong> <a class=\"reference internal\" href=\"class_directionallight2d.html#class-directionallight2d\"><span class=\"std std-ref\">DirectionalLight2D</span></a>, <a class=\"reference internal\" href=\"class_pointlight2d.html#class-pointlight2d\"><span class=\"std std-ref\">PointLight2D</span></a></p><p>Casts light in a 2D environment.</p>",
                "description": "\n\n<p>Casts light in a 2D environment. A light is defined as a color, an energy value, a mode (see constants), and various other parameters (range and shadows-related).</p>\n"
            },
            "class_light3d": {
                "url": "https://docs.godotengine.org/en/4.1/classes/class_light3d.html",
                "title": "Light3D",
                "blurb": "<p><strong>Inherits:</strong> <a class=\"reference internal\" href=\"class_visualinstance3d.html#class-visualinstance3d\"><span class=\"std std-ref\">VisualInstance3D</span></a> <strong>&lt;</strong> <a class=\"reference internal\" href=\"class_node3d.html#class-node3d\"><span class=\"std std-ref\">Node3D</span></a> <strong>&lt;</strong> <a class=\"reference internal\" href=\"class_node.html#class-node\"><span class=\"std std-ref\">Node</span></a> <strong>&lt;</strong> <a class=\"reference internal\" href=\"class_object.html#class-object\"><span class=\"std std-ref\">Object</span></a></p><p><strong>Inherited By:</strong> <a class=\"reference internal\" href=\"class_directionallight3d.html#class-directionallight3d\"><span class=\"std std-ref\">DirectionalLight3D</span></a>, <a class=\"reference internal\" href=\"class_omnilight3d.html#class-omnilight3d\"><span class=\"std std-ref\">OmniLight3D</span></a>, <a class=\"reference internal\" href=\"class_spotlight3d.html#class-spotlight3d\"><span class=\"std std-ref\">SpotLight3D</span></a></p><p>Provides a base class for different kinds of light nodes.</p>",
                "description": "\n\n<p>Light3D is the <em>abstract</em> base class for light nodes. As it can't be instantiated, it shouldn't be used directly. Other types of light nodes inherit from it. Light3D contains the common variables and parameters used for lighting.</p>\n"
            },
            "class_lightmapgi": {
                "url": "https://docs.godotengine.org/en/4.1/classes/class_lightmapgi.html",
                "title": "LightmapGI",
                "blurb": "<p><strong>Inherits:</strong> <a class=\"reference internal\" href=\"class_visualinstance3d.html#class-visualinstance3d\"><span class=\"std std-ref\">VisualInstance3D</span></a> <strong>&lt;</strong> <a class=\"reference internal\" href=\"class_node3d.html#class-node3d\"><span class=\"std std-ref\">Node3D</span></a> <strong>&lt;</strong> <a class=\"reference internal\" href=\"class_node.html#class-node\"><span class=\"std std-ref\">Node</span></a> <strong>&lt;</strong> <a class=\"reference internal\" href=\"class_object.html#class-object\"><span class=\"std std-ref\">Object</span></a></p><p>Computes and stores baked lightmaps for fast global illumination.</p>",
                "description": "\n\n<p>The <strong>LightmapGI</strong> node is used to compute and store baked lightmaps. Lightmaps are used to provide high-quality indirect lighting with very little light leaking. <strong>LightmapGI</strong> can also provide rough reflections using spherical harmonics if <a class=\"reference internal\" href=\"#class-lightmapgi-property-directional\"><span class=\"std std-ref\">directional</span></a> is enabled. Dynamic objects can receive indirect lighting thanks to <em>light probes</em>, which can be automatically placed by setting <a class=\"reference internal\" href=\"#class-lightmapgi-property-generate-probes-subdiv\"><span class=\"std std-ref\">generate_probes_subdiv</span></a> to a value other than <a class=\"reference internal\" href=\"#class-lightmapgi-constant-generate-probes-disabled\"><span class=\"std std-ref\">GENERATE_PROBES_DISABLED</span></a>. Additional lightmap probes can also be added by creating <a class=\"reference internal\" href=\"class_lightmapprobe.html#class-lightmapprobe\"><span class=\"std std-ref\">LightmapProbe</span></a> nodes. The downside is that lightmaps are fully static and cannot be baked in an exported project. Baking a <strong>LightmapGI</strong> node is also slower compared to <a class=\"reference internal\" href=\"class_voxelgi.html#class-voxelgi\"><span class=\"std std-ref\">VoxelGI</span></a>.</p>\n<p><strong>Procedural generation:</strong> Lightmap baking functionality is only available in the editor. This means <strong>LightmapGI</strong> is not suited to procedurally generated or user-built levels. For procedurally generated or user-built levels, use <a class=\"reference internal\" href=\"class_voxelgi.html#class-voxelgi\"><span class=\"std std-ref\">VoxelGI</span></a> or SDFGI instead (see <a class=\"reference internal\" href=\"class_environment.html#class-environment-property-sdfgi-enabled\"><span class=\"std std-ref\">Environment.sdfgi_enabled</span></a>).</p>\n<p><strong>Performance:</strong> <strong>LightmapGI</strong> provides the best possible run-time performance for global illumination. It is suitable for low-end hardware including integrated graphics and mobile devices.</p>\n<p><strong>Note:</strong> Due to how lightmaps work, most properties only have a visible effect once lightmaps are baked again.</p>\n<p><strong>Note:</strong> Lightmap baking on <a class=\"reference internal\" href=\"class_csgshape3d.html#class-csgshape3d\"><span class=\"std std-ref\">CSGShape3D</span></a>s and <a class=\"reference internal\" href=\"class_primitivemesh.html#class-primitivemesh\"><span class=\"std std-ref\">PrimitiveMesh</span></a>es is not supported, as these cannot store UV2 data required for baking.</p>\n<p><strong>Note:</strong> If no custom lightmappers are installed, <strong>LightmapGI</strong> can only be baked when using the Vulkan backend (Forward+ or Mobile), not OpenGL.</p>\n"
            },
            "class_lightmapprobe": {
                "url": "https://docs.godotengine.org/en/4.1/classes/class_lightmapprobe.html",
                "title": "LightmapProbe",
                "blurb": "<p><strong>Inherits:</strong> <a class=\"reference internal\" href=\"class_node3d.html#class-node3d\"><span class=\"std std-ref\">Node3D</span></a> <strong>&lt;</strong> <a class=\"reference internal\" href=\"class_node.html#class-node\"><span class=\"std std-ref\">Node</span></a> <strong>&lt;</strong> <a class=\"reference internal\" href=\"class_object.html#class-object\"><span class=\"std std-ref\">Object</span></a></p><p>Represents a single manually placed probe for dynamic object lighting with <a class=\"reference internal\" href=\"class_lightmapgi.html#class-lightmapgi\"><span class=\"std std-ref\">LightmapGI</span></a>.</p>",
                "description": "\n\n<p><strong>LightmapProbe</strong> represents the position of a single manually placed probe for dynamic object lighting with <a class=\"reference internal\" href=\"class_lightmapgi.html#class-lightmapgi\"><span class=\"std std-ref\">LightmapGI</span></a>.</p>\n<p>Typically, <a class=\"reference internal\" href=\"class_lightmapgi.html#class-lightmapgi\"><span class=\"std std-ref\">LightmapGI</span></a> probes are placed automatically by setting <a class=\"reference internal\" href=\"class_lightmapgi.html#class-lightmapgi-property-generate-probes-subdiv\"><span class=\"std std-ref\">LightmapGI.generate_probes_subdiv</span></a> to a value other than <a class=\"reference internal\" href=\"class_lightmapgi.html#class-lightmapgi-constant-generate-probes-disabled\"><span class=\"std std-ref\">LightmapGI.GENERATE_PROBES_DISABLED</span></a>. By creating <strong>LightmapProbe</strong> nodes before baking lightmaps, you can add more probes in specific areas for greater detail, or disable automatic generation and rely only on manually placed probes instead.</p>\n"
            },
            "class_lightoccluder2d": {
                "url": "https://docs.godotengine.org/en/4.1/classes/class_lightoccluder2d.html",
                "title": "LightOccluder2D",
                "blurb": "<p><strong>Inherits:</strong> <a class=\"reference internal\" href=\"class_node2d.html#class-node2d\"><span class=\"std std-ref\">Node2D</span></a> <strong>&lt;</strong> <a class=\"reference internal\" href=\"class_canvasitem.html#class-canvasitem\"><span class=\"std std-ref\">CanvasItem</span></a> <strong>&lt;</strong> <a class=\"reference internal\" href=\"class_node.html#class-node\"><span class=\"std std-ref\">Node</span></a> <strong>&lt;</strong> <a class=\"reference internal\" href=\"class_object.html#class-object\"><span class=\"std std-ref\">Object</span></a></p><p>Occludes light cast by a Light2D, casting shadows.</p>",
                "description": "\n\n<p>Occludes light cast by a Light2D, casting shadows. The LightOccluder2D must be provided with an <a class=\"reference internal\" href=\"class_occluderpolygon2d.html#class-occluderpolygon2d\"><span class=\"std std-ref\">OccluderPolygon2D</span></a> in order for the shadow to be computed.</p>\n"
            },
            "class_line2d": {
                "url": "https://docs.godotengine.org/en/4.1/classes/class_line2d.html",
                "title": "Line2D",
                "blurb": "<p><strong>Inherits:</strong> <a class=\"reference internal\" href=\"class_node2d.html#class-node2d\"><span class=\"std std-ref\">Node2D</span></a> <strong>&lt;</strong> <a class=\"reference internal\" href=\"class_canvasitem.html#class-canvasitem\"><span class=\"std std-ref\">CanvasItem</span></a> <strong>&lt;</strong> <a class=\"reference internal\" href=\"class_node.html#class-node\"><span class=\"std std-ref\">Node</span></a> <strong>&lt;</strong> <a class=\"reference internal\" href=\"class_object.html#class-object\"><span class=\"std std-ref\">Object</span></a></p><p>A 2D line.</p>",
                "description": "\n\n<p>A line through several points in 2D space.</p>\n"
            },
            "class_lineedit": {
                "url": "https://docs.godotengine.org/en/4.1/classes/class_lineedit.html",
                "title": "LineEdit",
                "blurb": "<p><strong>Inherits:</strong> <a class=\"reference internal\" href=\"class_control.html#class-control\"><span class=\"std std-ref\">Control</span></a> <strong>&lt;</strong> <a class=\"reference internal\" href=\"class_canvasitem.html#class-canvasitem\"><span class=\"std std-ref\">CanvasItem</span></a> <strong>&lt;</strong> <a class=\"reference internal\" href=\"class_node.html#class-node\"><span class=\"std std-ref\">Node</span></a> <strong>&lt;</strong> <a class=\"reference internal\" href=\"class_object.html#class-object\"><span class=\"std std-ref\">Object</span></a></p><p>An input field for single-line text.</p>",
                "description": "\n\n<p><strong>LineEdit</strong> provides an input field for editing a single line of text. It features many built-in shortcuts that are always available (<kbd class=\"kbd docutils literal notranslate\">Ctrl</kbd> here maps to <kbd class=\"kbd docutils literal notranslate\">Cmd</kbd> on macOS):</p>\n<ul class=\"simple\">\n<li><p><kbd class=\"kbd compound docutils literal notranslate\"><kbd class=\"kbd docutils literal notranslate\">Ctrl</kbd> <kbd class=\"kbd docutils literal notranslate\"></kbd>+<kbd class=\"kbd docutils literal notranslate\"></kbd> <kbd class=\"kbd docutils literal notranslate\">C</kbd></kbd>: Copy</p></li>\n<li><p><kbd class=\"kbd compound docutils literal notranslate\"><kbd class=\"kbd docutils literal notranslate\">Ctrl</kbd> <kbd class=\"kbd docutils literal notranslate\"></kbd>+<kbd class=\"kbd docutils literal notranslate\"></kbd> <kbd class=\"kbd docutils literal notranslate\">X</kbd></kbd>: Cut</p></li>\n<li><p><kbd class=\"kbd compound docutils literal notranslate\"><kbd class=\"kbd docutils literal notranslate\">Ctrl</kbd> <kbd class=\"kbd docutils literal notranslate\"></kbd>+<kbd class=\"kbd docutils literal notranslate\"></kbd> <kbd class=\"kbd docutils literal notranslate\">V</kbd></kbd> or <kbd class=\"kbd compound docutils literal notranslate\"><kbd class=\"kbd docutils literal notranslate\">Ctrl</kbd> <kbd class=\"kbd docutils literal notranslate\"></kbd>+<kbd class=\"kbd docutils literal notranslate\"></kbd> <kbd class=\"kbd docutils literal notranslate\">Y</kbd></kbd>: Paste/\"yank\"</p></li>\n<li><p><kbd class=\"kbd compound docutils literal notranslate\"><kbd class=\"kbd docutils literal notranslate\">Ctrl</kbd> <kbd class=\"kbd docutils literal notranslate\"></kbd>+<kbd class=\"kbd docutils literal notranslate\"></kbd> <kbd class=\"kbd docutils literal notranslate\">Z</kbd></kbd>: Undo</p></li>\n<li><p><kbd class=\"kbd compound docutils literal notranslate\"><kbd class=\"kbd docutils literal notranslate\">Ctrl</kbd> <kbd class=\"kbd docutils literal notranslate\"></kbd>+<kbd class=\"kbd docutils literal notranslate\"></kbd> <kbd class=\"kbd docutils literal notranslate\">~</kbd></kbd>: Swap input direction.</p></li>\n<li><p><kbd class=\"kbd compound docutils literal notranslate\"><kbd class=\"kbd docutils literal notranslate\">Ctrl</kbd> <kbd class=\"kbd docutils literal notranslate\"></kbd>+<kbd class=\"kbd docutils literal notranslate\"></kbd> <kbd class=\"kbd docutils literal notranslate\">Shift</kbd> <kbd class=\"kbd docutils literal notranslate\"></kbd>+<kbd class=\"kbd docutils literal notranslate\"></kbd> <kbd class=\"kbd docutils literal notranslate\">Z</kbd></kbd>: Redo</p></li>\n<li><p><kbd class=\"kbd compound docutils literal notranslate\"><kbd class=\"kbd docutils literal notranslate\">Ctrl</kbd> <kbd class=\"kbd docutils literal notranslate\"></kbd>+<kbd class=\"kbd docutils literal notranslate\"></kbd> <kbd class=\"kbd docutils literal notranslate\">U</kbd></kbd>: Delete text from the caret position to the beginning of the line</p></li>\n<li><p><kbd class=\"kbd compound docutils literal notranslate\"><kbd class=\"kbd docutils literal notranslate\">Ctrl</kbd> <kbd class=\"kbd docutils literal notranslate\"></kbd>+<kbd class=\"kbd docutils literal notranslate\"></kbd> <kbd class=\"kbd docutils literal notranslate\">K</kbd></kbd>: Delete text from the caret position to the end of the line</p></li>\n<li><p><kbd class=\"kbd compound docutils literal notranslate\"><kbd class=\"kbd docutils literal notranslate\">Ctrl</kbd> <kbd class=\"kbd docutils literal notranslate\"></kbd>+<kbd class=\"kbd docutils literal notranslate\"></kbd> <kbd class=\"kbd docutils literal notranslate\">A</kbd></kbd>: Select all text</p></li>\n<li><p><kbd class=\"kbd compound docutils literal notranslate\"><kbd class=\"kbd docutils literal notranslate\">Up</kbd> <kbd class=\"kbd docutils literal notranslate\">Arrow</kbd></kbd>/<kbd class=\"kbd compound docutils literal notranslate\"><kbd class=\"kbd docutils literal notranslate\">Down</kbd> <kbd class=\"kbd docutils literal notranslate\">Arrow</kbd></kbd>: Move the caret to the beginning/end of the line</p></li>\n</ul>\n<p>On macOS, some extra keyboard shortcuts are available:</p>\n<ul class=\"simple\">\n<li><p><kbd class=\"kbd compound docutils literal notranslate\"><kbd class=\"kbd docutils literal notranslate\">Cmd</kbd> <kbd class=\"kbd docutils literal notranslate\"></kbd>+<kbd class=\"kbd docutils literal notranslate\"></kbd> <kbd class=\"kbd docutils literal notranslate\">F</kbd></kbd>: Same as <kbd class=\"kbd compound docutils literal notranslate\"><kbd class=\"kbd docutils literal notranslate\">Right</kbd> <kbd class=\"kbd docutils literal notranslate\">Arrow</kbd></kbd>, move the caret one character right</p></li>\n<li><p><kbd class=\"kbd compound docutils literal notranslate\"><kbd class=\"kbd docutils literal notranslate\">Cmd</kbd> <kbd class=\"kbd docutils literal notranslate\"></kbd>+<kbd class=\"kbd docutils literal notranslate\"></kbd> <kbd class=\"kbd docutils literal notranslate\">B</kbd></kbd>: Same as <kbd class=\"kbd compound docutils literal notranslate\"><kbd class=\"kbd docutils literal notranslate\">Left</kbd> <kbd class=\"kbd docutils literal notranslate\">Arrow</kbd></kbd>, move the caret one character left</p></li>\n<li><p><kbd class=\"kbd compound docutils literal notranslate\"><kbd class=\"kbd docutils literal notranslate\">Cmd</kbd> <kbd class=\"kbd docutils literal notranslate\"></kbd>+<kbd class=\"kbd docutils literal notranslate\"></kbd> <kbd class=\"kbd docutils literal notranslate\">P</kbd></kbd>: Same as <kbd class=\"kbd compound docutils literal notranslate\"><kbd class=\"kbd docutils literal notranslate\">Up</kbd> <kbd class=\"kbd docutils literal notranslate\">Arrow</kbd></kbd>, move the caret to the previous line</p></li>\n<li><p><kbd class=\"kbd compound docutils literal notranslate\"><kbd class=\"kbd docutils literal notranslate\">Cmd</kbd> <kbd class=\"kbd docutils literal notranslate\"></kbd>+<kbd class=\"kbd docutils literal notranslate\"></kbd> <kbd class=\"kbd docutils literal notranslate\">N</kbd></kbd>: Same as <kbd class=\"kbd compound docutils literal notranslate\"><kbd class=\"kbd docutils literal notranslate\">Down</kbd> <kbd class=\"kbd docutils literal notranslate\">Arrow</kbd></kbd>, move the caret to the next line</p></li>\n<li><p><kbd class=\"kbd compound docutils literal notranslate\"><kbd class=\"kbd docutils literal notranslate\">Cmd</kbd> <kbd class=\"kbd docutils literal notranslate\"></kbd>+<kbd class=\"kbd docutils literal notranslate\"></kbd> <kbd class=\"kbd docutils literal notranslate\">D</kbd></kbd>: Same as <kbd class=\"kbd docutils literal notranslate\">Delete</kbd>, delete the character on the right side of caret</p></li>\n<li><p><kbd class=\"kbd compound docutils literal notranslate\"><kbd class=\"kbd docutils literal notranslate\">Cmd</kbd> <kbd class=\"kbd docutils literal notranslate\"></kbd>+<kbd class=\"kbd docutils literal notranslate\"></kbd> <kbd class=\"kbd docutils literal notranslate\">H</kbd></kbd>: Same as <kbd class=\"kbd docutils literal notranslate\">Backspace</kbd>, delete the character on the left side of the caret</p></li>\n<li><p><kbd class=\"kbd compound docutils literal notranslate\"><kbd class=\"kbd docutils literal notranslate\">Cmd</kbd> <kbd class=\"kbd docutils literal notranslate\"></kbd>+<kbd class=\"kbd docutils literal notranslate\"></kbd> <kbd class=\"kbd docutils literal notranslate\">A</kbd></kbd>: Same as <kbd class=\"kbd docutils literal notranslate\">Home</kbd>, move the caret to the beginning of the line</p></li>\n<li><p><kbd class=\"kbd compound docutils literal notranslate\"><kbd class=\"kbd docutils literal notranslate\">Cmd</kbd> <kbd class=\"kbd docutils literal notranslate\"></kbd>+<kbd class=\"kbd docutils literal notranslate\"></kbd> <kbd class=\"kbd docutils literal notranslate\">E</kbd></kbd>: Same as <kbd class=\"kbd docutils literal notranslate\">End</kbd>, move the caret to the end of the line</p></li>\n<li><p><kbd class=\"kbd compound docutils literal notranslate\"><kbd class=\"kbd docutils literal notranslate\">Cmd</kbd> <kbd class=\"kbd docutils literal notranslate\"></kbd>+<kbd class=\"kbd docutils literal notranslate\"></kbd> <kbd class=\"kbd docutils literal notranslate\">Left</kbd> <kbd class=\"kbd docutils literal notranslate\">Arrow</kbd></kbd>: Same as <kbd class=\"kbd docutils literal notranslate\">Home</kbd>, move the caret to the beginning of the line</p></li>\n<li><p><kbd class=\"kbd compound docutils literal notranslate\"><kbd class=\"kbd docutils literal notranslate\">Cmd</kbd> <kbd class=\"kbd docutils literal notranslate\"></kbd>+<kbd class=\"kbd docutils literal notranslate\"></kbd> <kbd class=\"kbd docutils literal notranslate\">Right</kbd> <kbd class=\"kbd docutils literal notranslate\">Arrow</kbd></kbd>: Same as <kbd class=\"kbd docutils literal notranslate\">End</kbd>, move the caret to the end of the line</p></li>\n</ul>\n"
            },
            "class_linkbutton": {
                "url": "https://docs.godotengine.org/en/4.1/classes/class_linkbutton.html",
                "title": "LinkButton",
                "blurb": "<p><strong>Inherits:</strong> <a class=\"reference internal\" href=\"class_basebutton.html#class-basebutton\"><span class=\"std std-ref\">BaseButton</span></a> <strong>&lt;</strong> <a class=\"reference internal\" href=\"class_control.html#class-control\"><span class=\"std std-ref\">Control</span></a> <strong>&lt;</strong> <a class=\"reference internal\" href=\"class_canvasitem.html#class-canvasitem\"><span class=\"std std-ref\">CanvasItem</span></a> <strong>&lt;</strong> <a class=\"reference internal\" href=\"class_node.html#class-node\"><span class=\"std std-ref\">Node</span></a> <strong>&lt;</strong> <a class=\"reference internal\" href=\"class_object.html#class-object\"><span class=\"std std-ref\">Object</span></a></p><p>A button that represents a link.</p>",
                "description": "\n\n<p>A button that represents a link. This type of button is primarily used for interactions that cause a context change (like linking to a web page).</p>\n<p>See also <a class=\"reference internal\" href=\"class_basebutton.html#class-basebutton\"><span class=\"std std-ref\">BaseButton</span></a> which contains common properties and methods associated with this node.</p>\n"
            },
            "class_margincontainer": {
                "url": "https://docs.godotengine.org/en/4.1/classes/class_margincontainer.html",
                "title": "MarginContainer",
                "blurb": "<p><strong>Inherits:</strong> <a class=\"reference internal\" href=\"class_container.html#class-container\"><span class=\"std std-ref\">Container</span></a> <strong>&lt;</strong> <a class=\"reference internal\" href=\"class_control.html#class-control\"><span class=\"std std-ref\">Control</span></a> <strong>&lt;</strong> <a class=\"reference internal\" href=\"class_canvasitem.html#class-canvasitem\"><span class=\"std std-ref\">CanvasItem</span></a> <strong>&lt;</strong> <a class=\"reference internal\" href=\"class_node.html#class-node\"><span class=\"std std-ref\">Node</span></a> <strong>&lt;</strong> <a class=\"reference internal\" href=\"class_object.html#class-object\"><span class=\"std std-ref\">Object</span></a></p><p>A container that keeps a margin around its child controls.</p>",
                "description": "\n\n<p><strong>MarginContainer</strong> adds an adjustable margin on each side of its child controls. The margins are added around all children, not around each individual one. To control the <strong>MarginContainer</strong>'s margins, use the <code class=\"docutils literal notranslate\"><span class=\"pre\">margin_*</span></code> theme properties listed below.</p>\n<p><strong>Note:</strong> The margin sizes are theme overrides, not normal properties. This is an example of how to change them in code:</p>\n<div class=\"sphinx-tabs docutils container\">\n<div aria-label=\"Tabbed content\" class=\"closeable\" role=\"tablist\"><button aria-controls=\"panel-0-R0RTY3JpcHQ=\" aria-selected=\"true\" class=\"sphinx-tabs-tab code-tab group-tab\" id=\"tab-0-R0RTY3JpcHQ=\" name=\"R0RTY3JpcHQ=\" role=\"tab\" tabindex=\"0\">GDScript</button><button aria-controls=\"panel-0-QyM=\" aria-selected=\"false\" class=\"sphinx-tabs-tab code-tab group-tab\" id=\"tab-0-QyM=\" name=\"QyM=\" role=\"tab\" tabindex=\"-1\">C#</button></div><div aria-labelledby=\"tab-0-R0RTY3JpcHQ=\" class=\"sphinx-tabs-panel code-tab group-tab\" id=\"panel-0-R0RTY3JpcHQ=\" name=\"R0RTY3JpcHQ=\" role=\"tabpanel\" tabindex=\"0\"><div class=\"highlight-gdscript notranslate\"><div class=\"highlight\"><pre><span></span><span class=\"c1\"># This code sample assumes the current script is extending MarginContainer.</span>\n<span class=\"k\">var</span> <span class=\"n\">margin_value</span> <span class=\"o\">=</span> <span class=\"mi\">100</span>\n<span class=\"n\">add_theme_constant_override</span><span class=\"p\">(</span><span class=\"s2\">\"margin_top\"</span><span class=\"p\">,</span> <span class=\"n\">margin_value</span><span class=\"p\">)</span>\n<span class=\"n\">add_theme_constant_override</span><span class=\"p\">(</span><span class=\"s2\">\"margin_left\"</span><span class=\"p\">,</span> <span class=\"n\">margin_value</span><span class=\"p\">)</span>\n<span class=\"n\">add_theme_constant_override</span><span class=\"p\">(</span><span class=\"s2\">\"margin_bottom\"</span><span class=\"p\">,</span> <span class=\"n\">margin_value</span><span class=\"p\">)</span>\n<span class=\"n\">add_theme_constant_override</span><span class=\"p\">(</span><span class=\"s2\">\"margin_right\"</span><span class=\"p\">,</span> <span class=\"n\">margin_value</span><span class=\"p\">)</span>\n</pre></div>\n</div>\n</div><div aria-labelledby=\"tab-0-QyM=\" class=\"sphinx-tabs-panel code-tab group-tab\" hidden=\"true\" id=\"panel-0-QyM=\" name=\"QyM=\" role=\"tabpanel\" tabindex=\"0\"><div class=\"highlight-csharp notranslate\"><div class=\"highlight\"><pre><span></span><span class=\"c1\">// This code sample assumes the current script is extending MarginContainer.</span>\n<span class=\"kt\">int</span><span class=\"w\"> </span><span class=\"n\">marginValue</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"m\">100</span><span class=\"p\">;</span>\n<span class=\"n\">AddThemeConstantOverride</span><span class=\"p\">(</span><span class=\"s\">\"margin_top\"</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">marginValue</span><span class=\"p\">);</span>\n<span class=\"n\">AddThemeConstantOverride</span><span class=\"p\">(</span><span class=\"s\">\"margin_left\"</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">marginValue</span><span class=\"p\">);</span>\n<span class=\"n\">AddThemeConstantOverride</span><span class=\"p\">(</span><span class=\"s\">\"margin_bottom\"</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">marginValue</span><span class=\"p\">);</span>\n<span class=\"n\">AddThemeConstantOverride</span><span class=\"p\">(</span><span class=\"s\">\"margin_right\"</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">marginValue</span><span class=\"p\">);</span>\n</pre></div>\n</div>\n</div></div>\n"
            },
            "class_marker2d": {
                "url": "https://docs.godotengine.org/en/4.1/classes/class_marker2d.html",
                "title": "Marker2D",
                "blurb": "<p><strong>Inherits:</strong> <a class=\"reference internal\" href=\"class_node2d.html#class-node2d\"><span class=\"std std-ref\">Node2D</span></a> <strong>&lt;</strong> <a class=\"reference internal\" href=\"class_canvasitem.html#class-canvasitem\"><span class=\"std std-ref\">CanvasItem</span></a> <strong>&lt;</strong> <a class=\"reference internal\" href=\"class_node.html#class-node\"><span class=\"std std-ref\">Node</span></a> <strong>&lt;</strong> <a class=\"reference internal\" href=\"class_object.html#class-object\"><span class=\"std std-ref\">Object</span></a></p><p>Generic 2D position hint for editing.</p>",
                "description": "\n\n<p>Generic 2D position hint for editing. It's just like a plain <a class=\"reference internal\" href=\"class_node2d.html#class-node2d\"><span class=\"std std-ref\">Node2D</span></a>, but it displays as a cross in the 2D editor at all times. You can set the cross' visual size by using the gizmo in the 2D editor while the node is selected.</p>\n"
            },
            "class_marker3d": {
                "url": "https://docs.godotengine.org/en/4.1/classes/class_marker3d.html",
                "title": "Marker3D",
                "blurb": "<p><strong>Inherits:</strong> <a class=\"reference internal\" href=\"class_node3d.html#class-node3d\"><span class=\"std std-ref\">Node3D</span></a> <strong>&lt;</strong> <a class=\"reference internal\" href=\"class_node.html#class-node\"><span class=\"std std-ref\">Node</span></a> <strong>&lt;</strong> <a class=\"reference internal\" href=\"class_object.html#class-object\"><span class=\"std std-ref\">Object</span></a></p><p>Generic 3D position hint for editing.</p>",
                "description": "\n\n<p>Generic 3D position hint for editing. It's just like a plain <a class=\"reference internal\" href=\"class_node3d.html#class-node3d\"><span class=\"std std-ref\">Node3D</span></a>, but it displays as a cross in the 3D editor at all times.</p>\n"
            },
            "class_menubar": {
                "url": "https://docs.godotengine.org/en/4.1/classes/class_menubar.html",
                "title": "MenuBar",
                "blurb": "<p><strong>Inherits:</strong> <a class=\"reference internal\" href=\"class_control.html#class-control\"><span class=\"std std-ref\">Control</span></a> <strong>&lt;</strong> <a class=\"reference internal\" href=\"class_canvasitem.html#class-canvasitem\"><span class=\"std std-ref\">CanvasItem</span></a> <strong>&lt;</strong> <a class=\"reference internal\" href=\"class_node.html#class-node\"><span class=\"std std-ref\">Node</span></a> <strong>&lt;</strong> <a class=\"reference internal\" href=\"class_object.html#class-object\"><span class=\"std std-ref\">Object</span></a></p><p>A horizontal menu bar that creates a <a class=\"reference internal\" href=\"class_menubutton.html#class-menubutton\"><span class=\"std std-ref\">MenuButton</span></a> for each <a class=\"reference internal\" href=\"class_popupmenu.html#class-popupmenu\"><span class=\"std std-ref\">PopupMenu</span></a> child.</p>",
                "description": "\n\n<p>A horizontal menu bar that creates a <a class=\"reference internal\" href=\"class_menubutton.html#class-menubutton\"><span class=\"std std-ref\">MenuButton</span></a> for each <a class=\"reference internal\" href=\"class_popupmenu.html#class-popupmenu\"><span class=\"std std-ref\">PopupMenu</span></a> child. New items are created by adding <a class=\"reference internal\" href=\"class_popupmenu.html#class-popupmenu\"><span class=\"std std-ref\">PopupMenu</span></a>s to this node.</p>\n"
            },
            "class_menubutton": {
                "url": "https://docs.godotengine.org/en/4.1/classes/class_menubutton.html",
                "title": "MenuButton",
                "blurb": "<p><strong>Inherits:</strong> <a class=\"reference internal\" href=\"class_button.html#class-button\"><span class=\"std std-ref\">Button</span></a> <strong>&lt;</strong> <a class=\"reference internal\" href=\"class_basebutton.html#class-basebutton\"><span class=\"std std-ref\">BaseButton</span></a> <strong>&lt;</strong> <a class=\"reference internal\" href=\"class_control.html#class-control\"><span class=\"std std-ref\">Control</span></a> <strong>&lt;</strong> <a class=\"reference internal\" href=\"class_canvasitem.html#class-canvasitem\"><span class=\"std std-ref\">CanvasItem</span></a> <strong>&lt;</strong> <a class=\"reference internal\" href=\"class_node.html#class-node\"><span class=\"std std-ref\">Node</span></a> <strong>&lt;</strong> <a class=\"reference internal\" href=\"class_object.html#class-object\"><span class=\"std std-ref\">Object</span></a></p><p>A button that brings up a <a class=\"reference internal\" href=\"class_popupmenu.html#class-popupmenu\"><span class=\"std std-ref\">PopupMenu</span></a> when clicked.</p>",
                "description": "\n\n<p>A button that brings up a <a class=\"reference internal\" href=\"class_popupmenu.html#class-popupmenu\"><span class=\"std std-ref\">PopupMenu</span></a> when clicked. To create new items inside this <a class=\"reference internal\" href=\"class_popupmenu.html#class-popupmenu\"><span class=\"std std-ref\">PopupMenu</span></a>, use <code class=\"docutils literal notranslate\"><span class=\"pre\">get_popup().add_item(\"My</span> <span class=\"pre\">Item</span> <span class=\"pre\">Name\")</span></code>. You can also create them directly from Godot editor's inspector.</p>\n<p>See also <a class=\"reference internal\" href=\"class_basebutton.html#class-basebutton\"><span class=\"std std-ref\">BaseButton</span></a> which contains common properties and methods associated with this node.</p>\n"
            },
            "class_meshinstance2d": {
                "url": "https://docs.godotengine.org/en/4.1/classes/class_meshinstance2d.html",
                "title": "MeshInstance2D",
                "blurb": "<p><strong>Inherits:</strong> <a class=\"reference internal\" href=\"class_node2d.html#class-node2d\"><span class=\"std std-ref\">Node2D</span></a> <strong>&lt;</strong> <a class=\"reference internal\" href=\"class_canvasitem.html#class-canvasitem\"><span class=\"std std-ref\">CanvasItem</span></a> <strong>&lt;</strong> <a class=\"reference internal\" href=\"class_node.html#class-node\"><span class=\"std std-ref\">Node</span></a> <strong>&lt;</strong> <a class=\"reference internal\" href=\"class_object.html#class-object\"><span class=\"std std-ref\">Object</span></a></p><p>Node used for displaying a <a class=\"reference internal\" href=\"class_mesh.html#class-mesh\"><span class=\"std std-ref\">Mesh</span></a> in 2D.</p>",
                "description": "\n\n<p>Node used for displaying a <a class=\"reference internal\" href=\"class_mesh.html#class-mesh\"><span class=\"std std-ref\">Mesh</span></a> in 2D. A <strong>MeshInstance2D</strong> can be automatically created from an existing <a class=\"reference internal\" href=\"class_sprite2d.html#class-sprite2d\"><span class=\"std std-ref\">Sprite2D</span></a> via a tool in the editor toolbar. Select the <a class=\"reference internal\" href=\"class_sprite2d.html#class-sprite2d\"><span class=\"std std-ref\">Sprite2D</span></a> node, then choose <strong>Sprite2D &gt; Convert to MeshInstance2D</strong> at the top of the 2D editor viewport.</p>\n"
            },
            "class_meshinstance3d": {
                "url": "https://docs.godotengine.org/en/4.1/classes/class_meshinstance3d.html",
                "title": "MeshInstance3D",
                "blurb": "<p><strong>Inherits:</strong> <a class=\"reference internal\" href=\"class_geometryinstance3d.html#class-geometryinstance3d\"><span class=\"std std-ref\">GeometryInstance3D</span></a> <strong>&lt;</strong> <a class=\"reference internal\" href=\"class_visualinstance3d.html#class-visualinstance3d\"><span class=\"std std-ref\">VisualInstance3D</span></a> <strong>&lt;</strong> <a class=\"reference internal\" href=\"class_node3d.html#class-node3d\"><span class=\"std std-ref\">Node3D</span></a> <strong>&lt;</strong> <a class=\"reference internal\" href=\"class_node.html#class-node\"><span class=\"std std-ref\">Node</span></a> <strong>&lt;</strong> <a class=\"reference internal\" href=\"class_object.html#class-object\"><span class=\"std std-ref\">Object</span></a></p><p><strong>Inherited By:</strong> <a class=\"reference internal\" href=\"class_softbody3d.html#class-softbody3d\"><span class=\"std std-ref\">SoftBody3D</span></a></p><p>Node that instances meshes into a scenario.</p>",
                "description": "\n\n<p>MeshInstance3D is a node that takes a <a class=\"reference internal\" href=\"class_mesh.html#class-mesh\"><span class=\"std std-ref\">Mesh</span></a> resource and adds it to the current scenario by creating an instance of it. This is the class most often used render 3D geometry and can be used to instance a single <a class=\"reference internal\" href=\"class_mesh.html#class-mesh\"><span class=\"std std-ref\">Mesh</span></a> in many places. This allows reusing geometry, which can save on resources. When a <a class=\"reference internal\" href=\"class_mesh.html#class-mesh\"><span class=\"std std-ref\">Mesh</span></a> has to be instantiated more than thousands of times at close proximity, consider using a <a class=\"reference internal\" href=\"class_multimesh.html#class-multimesh\"><span class=\"std std-ref\">MultiMesh</span></a> in a <a class=\"reference internal\" href=\"class_multimeshinstance3d.html#class-multimeshinstance3d\"><span class=\"std std-ref\">MultiMeshInstance3D</span></a> instead.</p>\n"
            },
            "class_missingnode": {
                "url": "https://docs.godotengine.org/en/4.1/classes/class_missingnode.html",
                "title": "MissingNode",
                "blurb": "<p><strong>Inherits:</strong> <a class=\"reference internal\" href=\"class_node.html#class-node\"><span class=\"std std-ref\">Node</span></a> <strong>&lt;</strong> <a class=\"reference internal\" href=\"class_object.html#class-object\"><span class=\"std std-ref\">Object</span></a></p><p>An internal editor class intended for keeping the data of unrecognized nodes.</p>",
                "description": "\n\n<p>This is an internal editor class intended for keeping data of nodes of unknown type (most likely this type was supplied by an extension that is no longer loaded). It can't be manually instantiated or placed in the scene. Ignore it if you don't know what it is.</p>\n"
            },
            "class_multimeshinstance2d": {
                "url": "https://docs.godotengine.org/en/4.1/classes/class_multimeshinstance2d.html",
                "title": "MultiMeshInstance2D",
                "blurb": "<p><strong>Inherits:</strong> <a class=\"reference internal\" href=\"class_node2d.html#class-node2d\"><span class=\"std std-ref\">Node2D</span></a> <strong>&lt;</strong> <a class=\"reference internal\" href=\"class_canvasitem.html#class-canvasitem\"><span class=\"std std-ref\">CanvasItem</span></a> <strong>&lt;</strong> <a class=\"reference internal\" href=\"class_node.html#class-node\"><span class=\"std std-ref\">Node</span></a> <strong>&lt;</strong> <a class=\"reference internal\" href=\"class_object.html#class-object\"><span class=\"std std-ref\">Object</span></a></p><p>Node that instances a <a class=\"reference internal\" href=\"class_multimesh.html#class-multimesh\"><span class=\"std std-ref\">MultiMesh</span></a> in 2D.</p>",
                "description": "\n\n<p><strong>MultiMeshInstance2D</strong> is a specialized node to instance a <a class=\"reference internal\" href=\"class_multimesh.html#class-multimesh\"><span class=\"std std-ref\">MultiMesh</span></a> resource in 2D.</p>\n<p>Usage is the same as <a class=\"reference internal\" href=\"class_multimeshinstance3d.html#class-multimeshinstance3d\"><span class=\"std std-ref\">MultiMeshInstance3D</span></a>.</p>\n"
            },
            "class_multimeshinstance3d": {
                "url": "https://docs.godotengine.org/en/4.1/classes/class_multimeshinstance3d.html",
                "title": "MultiMeshInstance3D",
                "blurb": "<p><strong>Inherits:</strong> <a class=\"reference internal\" href=\"class_geometryinstance3d.html#class-geometryinstance3d\"><span class=\"std std-ref\">GeometryInstance3D</span></a> <strong>&lt;</strong> <a class=\"reference internal\" href=\"class_visualinstance3d.html#class-visualinstance3d\"><span class=\"std std-ref\">VisualInstance3D</span></a> <strong>&lt;</strong> <a class=\"reference internal\" href=\"class_node3d.html#class-node3d\"><span class=\"std std-ref\">Node3D</span></a> <strong>&lt;</strong> <a class=\"reference internal\" href=\"class_node.html#class-node\"><span class=\"std std-ref\">Node</span></a> <strong>&lt;</strong> <a class=\"reference internal\" href=\"class_object.html#class-object\"><span class=\"std std-ref\">Object</span></a></p><p>Node that instances a <a class=\"reference internal\" href=\"class_multimesh.html#class-multimesh\"><span class=\"std std-ref\">MultiMesh</span></a>.</p>",
                "description": "\n\n<p><strong>MultiMeshInstance3D</strong> is a specialized node to instance <a class=\"reference internal\" href=\"class_geometryinstance3d.html#class-geometryinstance3d\"><span class=\"std std-ref\">GeometryInstance3D</span></a>s based on a <a class=\"reference internal\" href=\"class_multimesh.html#class-multimesh\"><span class=\"std std-ref\">MultiMesh</span></a> resource.</p>\n<p>This is useful to optimize the rendering of a high number of instances of a given mesh (for example trees in a forest or grass strands).</p>\n"
            },
            "class_multiplayerspawner": {
                "url": "https://docs.godotengine.org/en/4.1/classes/class_multiplayerspawner.html",
                "title": "MultiplayerSpawner",
                "blurb": "<p><strong>Inherits:</strong> <a class=\"reference internal\" href=\"class_node.html#class-node\"><span class=\"std std-ref\">Node</span></a> <strong>&lt;</strong> <a class=\"reference internal\" href=\"class_object.html#class-object\"><span class=\"std std-ref\">Object</span></a></p><p>Automatically replicates spawnable nodes from the authority to other multiplayer peers.</p>",
                "description": "\n\n<p>Spawnable scenes can be configured in the editor or through code (see <a class=\"reference internal\" href=\"#class-multiplayerspawner-method-add-spawnable-scene\"><span class=\"std std-ref\">add_spawnable_scene</span></a>).</p>\n<p>Also supports custom node spawns through <a class=\"reference internal\" href=\"#class-multiplayerspawner-method-spawn\"><span class=\"std std-ref\">spawn</span></a>, calling <a class=\"reference internal\" href=\"#class-multiplayerspawner-property-spawn-function\"><span class=\"std std-ref\">spawn_function</span></a> on all peers.</p>\n<p>Internally, <strong>MultiplayerSpawner</strong> uses <a class=\"reference internal\" href=\"class_multiplayerapi.html#class-multiplayerapi-method-object-configuration-add\"><span class=\"std std-ref\">MultiplayerAPI.object_configuration_add</span></a> to notify spawns passing the spawned node as the <code class=\"docutils literal notranslate\"><span class=\"pre\">object</span></code> and itself as the <code class=\"docutils literal notranslate\"><span class=\"pre\">configuration</span></code>, and <a class=\"reference internal\" href=\"class_multiplayerapi.html#class-multiplayerapi-method-object-configuration-remove\"><span class=\"std std-ref\">MultiplayerAPI.object_configuration_remove</span></a> to notify despawns in a similar way.</p>\n"
            },
            "class_multiplayersynchronizer": {
                "url": "https://docs.godotengine.org/en/4.1/classes/class_multiplayersynchronizer.html",
                "title": "MultiplayerSynchronizer",
                "blurb": "<p><strong>Inherits:</strong> <a class=\"reference internal\" href=\"class_node.html#class-node\"><span class=\"std std-ref\">Node</span></a> <strong>&lt;</strong> <a class=\"reference internal\" href=\"class_object.html#class-object\"><span class=\"std std-ref\">Object</span></a></p><p>Synchronizes properties from the multiplayer authority to the remote peers.</p>",
                "description": "\n\n<p>By default, <strong>MultiplayerSynchronizer</strong> synchronizes configured properties to all peers.</p>\n<p>Visibility can be handled directly with <a class=\"reference internal\" href=\"#class-multiplayersynchronizer-method-set-visibility-for\"><span class=\"std std-ref\">set_visibility_for</span></a> or as-needed with <a class=\"reference internal\" href=\"#class-multiplayersynchronizer-method-add-visibility-filter\"><span class=\"std std-ref\">add_visibility_filter</span></a> and <a class=\"reference internal\" href=\"#class-multiplayersynchronizer-method-update-visibility\"><span class=\"std std-ref\">update_visibility</span></a>.</p>\n<p><a class=\"reference internal\" href=\"class_multiplayerspawner.html#class-multiplayerspawner\"><span class=\"std std-ref\">MultiplayerSpawner</span></a>s will handle nodes according to visibility of synchronizers as long as the node at <a class=\"reference internal\" href=\"#class-multiplayersynchronizer-property-root-path\"><span class=\"std std-ref\">root_path</span></a> was spawned by one.</p>\n<p>Internally, <strong>MultiplayerSynchronizer</strong> uses <a class=\"reference internal\" href=\"class_multiplayerapi.html#class-multiplayerapi-method-object-configuration-add\"><span class=\"std std-ref\">MultiplayerAPI.object_configuration_add</span></a> to notify synchronization start passing the <a class=\"reference internal\" href=\"class_node.html#class-node\"><span class=\"std std-ref\">Node</span></a> at <a class=\"reference internal\" href=\"#class-multiplayersynchronizer-property-root-path\"><span class=\"std std-ref\">root_path</span></a> as the <code class=\"docutils literal notranslate\"><span class=\"pre\">object</span></code> and itself as the <code class=\"docutils literal notranslate\"><span class=\"pre\">configuration</span></code>, and uses <a class=\"reference internal\" href=\"class_multiplayerapi.html#class-multiplayerapi-method-object-configuration-remove\"><span class=\"std std-ref\">MultiplayerAPI.object_configuration_remove</span></a> to notify synchronization end in a similar way.</p>\n<p><strong>Note:</strong> Synchronization is not supported for <a class=\"reference internal\" href=\"class_object.html#class-object\"><span class=\"std std-ref\">Object</span></a> type properties, like <a class=\"reference internal\" href=\"class_resource.html#class-resource\"><span class=\"std std-ref\">Resource</span></a>. Properties that are unique to each peer, like the instance IDs of <a class=\"reference internal\" href=\"class_object.html#class-object\"><span class=\"std std-ref\">Object</span></a>s (see <a class=\"reference internal\" href=\"class_object.html#class-object-method-get-instance-id\"><span class=\"std std-ref\">Object.get_instance_id</span></a>) or <a class=\"reference internal\" href=\"class_rid.html#class-rid\"><span class=\"std std-ref\">RID</span></a>s, will also not work in synchronization.</p>\n"
            },
            "class_navigationagent2d": {
                "url": "https://docs.godotengine.org/en/4.1/classes/class_navigationagent2d.html",
                "title": "NavigationAgent2D",
                "blurb": "<p><strong>Inherits:</strong> <a class=\"reference internal\" href=\"class_node.html#class-node\"><span class=\"std std-ref\">Node</span></a> <strong>&lt;</strong> <a class=\"reference internal\" href=\"class_object.html#class-object\"><span class=\"std std-ref\">Object</span></a></p><p>A 2D agent used to pathfind to a position while avoiding obstacles.</p>",
                "description": "\n\n<p>A 2D agent used to pathfind to a position while avoiding static and dynamic obstacles. The calculation can be used by the parent node to dynamically move it along the path. Requires navigation data to work correctly.</p>\n<p>Dynamic obstacles are avoided using RVO collision avoidance. Avoidance is computed before physics, so the pathfinding information can be used safely in the physics step.</p>\n<p><strong>Note:</strong> After setting the <a class=\"reference internal\" href=\"#class-navigationagent2d-property-target-position\"><span class=\"std std-ref\">target_position</span></a> property, the <a class=\"reference internal\" href=\"#class-navigationagent2d-method-get-next-path-position\"><span class=\"std std-ref\">get_next_path_position</span></a> method must be used once every physics frame to update the internal path logic of the navigation agent. The vector position it returns should be used as the next movement position for the agent's parent node.</p>\n"
            },
            "class_navigationagent3d": {
                "url": "https://docs.godotengine.org/en/4.1/classes/class_navigationagent3d.html",
                "title": "NavigationAgent3D",
                "blurb": "<p><strong>Inherits:</strong> <a class=\"reference internal\" href=\"class_node.html#class-node\"><span class=\"std std-ref\">Node</span></a> <strong>&lt;</strong> <a class=\"reference internal\" href=\"class_object.html#class-object\"><span class=\"std std-ref\">Object</span></a></p><p>A 3D agent used to pathfind to a position while avoiding obstacles.</p>",
                "description": "\n\n<p>A 3D agent used to pathfind to a position while avoiding static and dynamic obstacles. The calculation can be used by the parent node to dynamically move it along the path. Requires navigation data to work correctly.</p>\n<p>Dynamic obstacles are avoided using RVO collision avoidance. Avoidance is computed before physics, so the pathfinding information can be used safely in the physics step.</p>\n<p><strong>Note:</strong> After setting the <a class=\"reference internal\" href=\"#class-navigationagent3d-property-target-position\"><span class=\"std std-ref\">target_position</span></a> property, the <a class=\"reference internal\" href=\"#class-navigationagent3d-method-get-next-path-position\"><span class=\"std std-ref\">get_next_path_position</span></a> method must be used once every physics frame to update the internal path logic of the navigation agent. The vector position it returns should be used as the next movement position for the agent's parent node.</p>\n"
            },
            "class_navigationlink2d": {
                "url": "https://docs.godotengine.org/en/4.1/classes/class_navigationlink2d.html",
                "title": "NavigationLink2D",
                "blurb": "<p><strong>Inherits:</strong> <a class=\"reference internal\" href=\"class_node2d.html#class-node2d\"><span class=\"std std-ref\">Node2D</span></a> <strong>&lt;</strong> <a class=\"reference internal\" href=\"class_canvasitem.html#class-canvasitem\"><span class=\"std std-ref\">CanvasItem</span></a> <strong>&lt;</strong> <a class=\"reference internal\" href=\"class_node.html#class-node\"><span class=\"std std-ref\">Node</span></a> <strong>&lt;</strong> <a class=\"reference internal\" href=\"class_object.html#class-object\"><span class=\"std std-ref\">Object</span></a></p><p>A link between two positions on <a class=\"reference internal\" href=\"class_navigationregion2d.html#class-navigationregion2d\"><span class=\"std std-ref\">NavigationRegion2D</span></a>s that agents can be routed through.</p>",
                "description": "\n\n<p>A link between two positions on <a class=\"reference internal\" href=\"class_navigationregion2d.html#class-navigationregion2d\"><span class=\"std std-ref\">NavigationRegion2D</span></a>s that agents can be routed through. These positions can be on the same <a class=\"reference internal\" href=\"class_navigationregion2d.html#class-navigationregion2d\"><span class=\"std std-ref\">NavigationRegion2D</span></a> or on two different ones. Links are useful to express navigation methods other than traveling along the surface of the navigation polygon, such as ziplines, teleporters, or gaps that can be jumped across.</p>\n"
            },
            "class_navigationlink3d": {
                "url": "https://docs.godotengine.org/en/4.1/classes/class_navigationlink3d.html",
                "title": "NavigationLink3D",
                "blurb": "<p><strong>Inherits:</strong> <a class=\"reference internal\" href=\"class_node3d.html#class-node3d\"><span class=\"std std-ref\">Node3D</span></a> <strong>&lt;</strong> <a class=\"reference internal\" href=\"class_node.html#class-node\"><span class=\"std std-ref\">Node</span></a> <strong>&lt;</strong> <a class=\"reference internal\" href=\"class_object.html#class-object\"><span class=\"std std-ref\">Object</span></a></p><p>A link between two positions on <a class=\"reference internal\" href=\"class_navigationregion3d.html#class-navigationregion3d\"><span class=\"std std-ref\">NavigationRegion3D</span></a>s that agents can be routed through.</p>",
                "description": "\n\n<p>A link between two positions on <a class=\"reference internal\" href=\"class_navigationregion3d.html#class-navigationregion3d\"><span class=\"std std-ref\">NavigationRegion3D</span></a>s that agents can be routed through. These positions can be on the same <a class=\"reference internal\" href=\"class_navigationregion3d.html#class-navigationregion3d\"><span class=\"std std-ref\">NavigationRegion3D</span></a> or on two different ones. Links are useful to express navigation methods other than traveling along the surface of the navigation mesh, such as ziplines, teleporters, or gaps that can be jumped across.</p>\n"
            },
            "class_navigationobstacle2d": {
                "url": "https://docs.godotengine.org/en/4.1/classes/class_navigationobstacle2d.html",
                "title": "NavigationObstacle2D",
                "blurb": "<p><strong>Inherits:</strong> <a class=\"reference internal\" href=\"class_node2d.html#class-node2d\"><span class=\"std std-ref\">Node2D</span></a> <strong>&lt;</strong> <a class=\"reference internal\" href=\"class_canvasitem.html#class-canvasitem\"><span class=\"std std-ref\">CanvasItem</span></a> <strong>&lt;</strong> <a class=\"reference internal\" href=\"class_node.html#class-node\"><span class=\"std std-ref\">Node</span></a> <strong>&lt;</strong> <a class=\"reference internal\" href=\"class_object.html#class-object\"><span class=\"std std-ref\">Object</span></a></p><p>2D Obstacle used in navigation to constrain avoidance controlled agents outside or inside an area.</p>",
                "description": "\n\n<p>2D Obstacle used in navigation to constrain avoidance controlled agents outside or inside an area. The obstacle needs a navigation map and outline vertices defined to work correctly.</p>\n<p>If the obstacle's vertices are winded in clockwise order, avoidance agents will be pushed in by the obstacle, otherwise, avoidance agents will be pushed out. Outlines must not cross or overlap.</p>\n<p>Obstacles are <strong>not</strong> a replacement for a (re)baked navigation mesh. Obstacles <strong>don't</strong> change the resulting path from the pathfinding, obstacles only affect the navigation avoidance agent movement by altering the suggested velocity of the avoidance agent.</p>\n<p>Obstacles using vertices can warp to a new position but should not moved every frame as each move requires a rebuild of the avoidance map.</p>\n"
            },
            "class_navigationobstacle3d": {
                "url": "https://docs.godotengine.org/en/4.1/classes/class_navigationobstacle3d.html",
                "title": "NavigationObstacle3D",
                "blurb": "<p><strong>Inherits:</strong> <a class=\"reference internal\" href=\"class_node3d.html#class-node3d\"><span class=\"std std-ref\">Node3D</span></a> <strong>&lt;</strong> <a class=\"reference internal\" href=\"class_node.html#class-node\"><span class=\"std std-ref\">Node</span></a> <strong>&lt;</strong> <a class=\"reference internal\" href=\"class_object.html#class-object\"><span class=\"std std-ref\">Object</span></a></p><p>3D Obstacle used in navigation to constrain avoidance controlled agents outside or inside an area.</p>",
                "description": "\n\n<p>3D Obstacle used in navigation to constrain avoidance controlled agents outside or inside an area. The obstacle needs a navigation map and outline vertices defined to work correctly.</p>\n<p>If the obstacle's vertices are winded in clockwise order, avoidance agents will be pushed in by the obstacle, otherwise, avoidance agents will be pushed out. Outlines must not cross or overlap.</p>\n<p>Obstacles are <strong>not</strong> a replacement for a (re)baked navigation mesh. Obstacles <strong>don't</strong> change the resulting path from the pathfinding, obstacles only affect the navigation avoidance agent movement by altering the suggested velocity of the avoidance agent.</p>\n<p>Obstacles using vertices can warp to a new position but should not moved every frame as each move requires a rebuild of the avoidance map.</p>\n"
            },
            "class_navigationregion2d": {
                "url": "https://docs.godotengine.org/en/4.1/classes/class_navigationregion2d.html",
                "title": "NavigationRegion2D",
                "blurb": "<p><strong>Inherits:</strong> <a class=\"reference internal\" href=\"class_node2d.html#class-node2d\"><span class=\"std std-ref\">Node2D</span></a> <strong>&lt;</strong> <a class=\"reference internal\" href=\"class_canvasitem.html#class-canvasitem\"><span class=\"std std-ref\">CanvasItem</span></a> <strong>&lt;</strong> <a class=\"reference internal\" href=\"class_node.html#class-node\"><span class=\"std std-ref\">Node</span></a> <strong>&lt;</strong> <a class=\"reference internal\" href=\"class_object.html#class-object\"><span class=\"std std-ref\">Object</span></a></p><p>A traversable 2D region that <a class=\"reference internal\" href=\"class_navigationagent2d.html#class-navigationagent2d\"><span class=\"std std-ref\">NavigationAgent2D</span></a>s can use for pathfinding.</p>",
                "description": "\n\n<p>A traversable 2D region based on a <a class=\"reference internal\" href=\"class_navigationpolygon.html#class-navigationpolygon\"><span class=\"std std-ref\">NavigationPolygon</span></a> that <a class=\"reference internal\" href=\"class_navigationagent2d.html#class-navigationagent2d\"><span class=\"std std-ref\">NavigationAgent2D</span></a>s can use for pathfinding.</p>\n<p>Two regions can be connected to each other if they share a similar edge. You can set the minimum distance between two vertices required to connect two edges by using <a class=\"reference internal\" href=\"class_navigationserver2d.html#class-navigationserver2d-method-map-set-edge-connection-margin\"><span class=\"std std-ref\">NavigationServer2D.map_set_edge_connection_margin</span></a>.</p>\n<p><strong>Note:</strong> Overlapping two regions' navigation polygons is not enough for connecting two regions. They must share a similar edge.</p>\n<p>The pathfinding cost of entering a region from another region can be controlled with the <a class=\"reference internal\" href=\"#class-navigationregion2d-property-enter-cost\"><span class=\"std std-ref\">enter_cost</span></a> value.</p>\n<p><strong>Note:</strong> This value is not added to the path cost when the start position is already inside this region.</p>\n<p>The pathfinding cost of traveling distances inside this region can be controlled with the <a class=\"reference internal\" href=\"#class-navigationregion2d-property-travel-cost\"><span class=\"std std-ref\">travel_cost</span></a> multiplier.</p>\n<p><strong>Note:</strong> This node caches changes to its properties, so if you make changes to the underlying region <a class=\"reference internal\" href=\"class_rid.html#class-rid\"><span class=\"std std-ref\">RID</span></a> in <a class=\"reference internal\" href=\"class_navigationserver2d.html#class-navigationserver2d\"><span class=\"std std-ref\">NavigationServer2D</span></a>, they will not be reflected in this node's properties.</p>\n"
            },
            "class_navigationregion3d": {
                "url": "https://docs.godotengine.org/en/4.1/classes/class_navigationregion3d.html",
                "title": "NavigationRegion3D",
                "blurb": "<p><strong>Inherits:</strong> <a class=\"reference internal\" href=\"class_node3d.html#class-node3d\"><span class=\"std std-ref\">Node3D</span></a> <strong>&lt;</strong> <a class=\"reference internal\" href=\"class_node.html#class-node\"><span class=\"std std-ref\">Node</span></a> <strong>&lt;</strong> <a class=\"reference internal\" href=\"class_object.html#class-object\"><span class=\"std std-ref\">Object</span></a></p><p>A traversable 3D region that <a class=\"reference internal\" href=\"class_navigationagent3d.html#class-navigationagent3d\"><span class=\"std std-ref\">NavigationAgent3D</span></a>s can use for pathfinding.</p>",
                "description": "\n\n<p>A traversable 3D region based on a <a class=\"reference internal\" href=\"class_navigationmesh.html#class-navigationmesh\"><span class=\"std std-ref\">NavigationMesh</span></a> that <a class=\"reference internal\" href=\"class_navigationagent3d.html#class-navigationagent3d\"><span class=\"std std-ref\">NavigationAgent3D</span></a>s can use for pathfinding.</p>\n<p>Two regions can be connected to each other if they share a similar edge. You can set the minimum distance between two vertices required to connect two edges by using <a class=\"reference internal\" href=\"class_navigationserver3d.html#class-navigationserver3d-method-map-set-edge-connection-margin\"><span class=\"std std-ref\">NavigationServer3D.map_set_edge_connection_margin</span></a>.</p>\n<p><strong>Note:</strong> Overlapping two regions' navigation meshes is not enough for connecting two regions. They must share a similar edge.</p>\n<p>The cost of entering this region from another region can be controlled with the <a class=\"reference internal\" href=\"#class-navigationregion3d-property-enter-cost\"><span class=\"std std-ref\">enter_cost</span></a> value.</p>\n<p><strong>Note:</strong> This value is not added to the path cost when the start position is already inside this region.</p>\n<p>The cost of traveling distances inside this region can be controlled with the <a class=\"reference internal\" href=\"#class-navigationregion3d-property-travel-cost\"><span class=\"std std-ref\">travel_cost</span></a> multiplier.</p>\n<p><strong>Note:</strong> This node caches changes to its properties, so if you make changes to the underlying region <a class=\"reference internal\" href=\"class_rid.html#class-rid\"><span class=\"std std-ref\">RID</span></a> in <a class=\"reference internal\" href=\"class_navigationserver3d.html#class-navigationserver3d\"><span class=\"std std-ref\">NavigationServer3D</span></a>, they will not be reflected in this node's properties.</p>\n"
            },
            "class_ninepatchrect": {
                "url": "https://docs.godotengine.org/en/4.1/classes/class_ninepatchrect.html",
                "title": "NinePatchRect",
                "blurb": "<p><strong>Inherits:</strong> <a class=\"reference internal\" href=\"class_control.html#class-control\"><span class=\"std std-ref\">Control</span></a> <strong>&lt;</strong> <a class=\"reference internal\" href=\"class_canvasitem.html#class-canvasitem\"><span class=\"std std-ref\">CanvasItem</span></a> <strong>&lt;</strong> <a class=\"reference internal\" href=\"class_node.html#class-node\"><span class=\"std std-ref\">Node</span></a> <strong>&lt;</strong> <a class=\"reference internal\" href=\"class_object.html#class-object\"><span class=\"std std-ref\">Object</span></a></p><p>A control that displays a texture by keeping its corners intact, but tiling its edges and center.</p>",
                "description": "\n\n<p>Also known as 9-slice panels, <strong>NinePatchRect</strong> produces clean panels of any size based on a small texture. To do so, it splits the texture in a 3×3 grid. When you scale the node, it tiles the texture's edges horizontally or vertically, tiles the center on both axes, and leaves the corners unchanged.</p>\n"
            },
            "class_node2d": {
                "url": "https://docs.godotengine.org/en/4.1/classes/class_node2d.html",
                "title": "Node2D",
                "blurb": "<p><strong>Inherits:</strong> <a class=\"reference internal\" href=\"class_canvasitem.html#class-canvasitem\"><span class=\"std std-ref\">CanvasItem</span></a> <strong>&lt;</strong> <a class=\"reference internal\" href=\"class_node.html#class-node\"><span class=\"std std-ref\">Node</span></a> <strong>&lt;</strong> <a class=\"reference internal\" href=\"class_object.html#class-object\"><span class=\"std std-ref\">Object</span></a></p><p><strong>Inherited By:</strong> <a class=\"reference internal\" href=\"class_animatedsprite2d.html#class-animatedsprite2d\"><span class=\"std std-ref\">AnimatedSprite2D</span></a>, <a class=\"reference internal\" href=\"class_audiolistener2d.html#class-audiolistener2d\"><span class=\"std std-ref\">AudioListener2D</span></a>, <a class=\"reference internal\" href=\"class_audiostreamplayer2d.html#class-audiostreamplayer2d\"><span class=\"std std-ref\">AudioStreamPlayer2D</span></a>, <a class=\"reference internal\" href=\"class_backbuffercopy.html#class-backbuffercopy\"><span class=\"std std-ref\">BackBufferCopy</span></a>, <a class=\"reference internal\" href=\"class_bone2d.html#class-bone2d\"><span class=\"std std-ref\">Bone2D</span></a>, <a class=\"reference internal\" href=\"class_camera2d.html#class-camera2d\"><span class=\"std std-ref\">Camera2D</span></a>, <a class=\"reference internal\" href=\"class_canvasgroup.html#class-canvasgroup\"><span class=\"std std-ref\">CanvasGroup</span></a>, <a class=\"reference internal\" href=\"class_canvasmodulate.html#class-canvasmodulate\"><span class=\"std std-ref\">CanvasModulate</span></a>, <a class=\"reference internal\" href=\"class_collisionobject2d.html#class-collisionobject2d\"><span class=\"std std-ref\">CollisionObject2D</span></a>, <a class=\"reference internal\" href=\"class_collisionpolygon2d.html#class-collisionpolygon2d\"><span class=\"std std-ref\">CollisionPolygon2D</span></a>, <a class=\"reference internal\" href=\"class_collisionshape2d.html#class-collisionshape2d\"><span class=\"std std-ref\">CollisionShape2D</span></a>, <a class=\"reference internal\" href=\"class_cpuparticles2d.html#class-cpuparticles2d\"><span class=\"std std-ref\">CPUParticles2D</span></a>, <a class=\"reference internal\" href=\"class_gpuparticles2d.html#class-gpuparticles2d\"><span class=\"std std-ref\">GPUParticles2D</span></a>, <a class=\"reference internal\" href=\"class_joint2d.html#class-joint2d\"><span class=\"std std-ref\">Joint2D</span></a>, <a class=\"reference internal\" href=\"class_light2d.html#class-light2d\"><span class=\"std std-ref\">Light2D</span></a>, <a class=\"reference internal\" href=\"class_lightoccluder2d.html#class-lightoccluder2d\"><span class=\"std std-ref\">LightOccluder2D</span></a>, <a class=\"reference internal\" href=\"class_line2d.html#class-line2d\"><span class=\"std std-ref\">Line2D</span></a>, <a class=\"reference internal\" href=\"class_marker2d.html#class-marker2d\"><span class=\"std std-ref\">Marker2D</span></a>, <a class=\"reference internal\" href=\"class_meshinstance2d.html#class-meshinstance2d\"><span class=\"std std-ref\">MeshInstance2D</span></a>, <a class=\"reference internal\" href=\"class_multimeshinstance2d.html#class-multimeshinstance2d\"><span class=\"std std-ref\">MultiMeshInstance2D</span></a>, <a class=\"reference internal\" href=\"class_navigationlink2d.html#class-navigationlink2d\"><span class=\"std std-ref\">NavigationLink2D</span></a>, <a class=\"reference internal\" href=\"class_navigationobstacle2d.html#class-navigationobstacle2d\"><span class=\"std std-ref\">NavigationObstacle2D</span></a>, <a class=\"reference internal\" href=\"class_navigationregion2d.html#class-navigationregion2d\"><span class=\"std std-ref\">NavigationRegion2D</span></a>, <a class=\"reference internal\" href=\"class_parallaxlayer.html#class-parallaxlayer\"><span class=\"std std-ref\">ParallaxLayer</span></a>, <a class=\"reference internal\" href=\"class_path2d.html#class-path2d\"><span class=\"std std-ref\">Path2D</span></a>, <a class=\"reference internal\" href=\"class_pathfollow2d.html#class-pathfollow2d\"><span class=\"std std-ref\">PathFollow2D</span></a>, <a class=\"reference internal\" href=\"class_polygon2d.html#class-polygon2d\"><span class=\"std std-ref\">Polygon2D</span></a>, <a class=\"reference internal\" href=\"class_raycast2d.html#class-raycast2d\"><span class=\"std std-ref\">RayCast2D</span></a>, <a class=\"reference internal\" href=\"class_remotetransform2d.html#class-remotetransform2d\"><span class=\"std std-ref\">RemoteTransform2D</span></a>, <a class=\"reference internal\" href=\"class_shapecast2d.html#class-shapecast2d\"><span class=\"std std-ref\">ShapeCast2D</span></a>, <a class=\"reference internal\" href=\"class_skeleton2d.html#class-skeleton2d\"><span class=\"std std-ref\">Skeleton2D</span></a>, <a class=\"reference internal\" href=\"class_sprite2d.html#class-sprite2d\"><span class=\"std std-ref\">Sprite2D</span></a>, <a class=\"reference internal\" href=\"class_tilemap.html#class-tilemap\"><span class=\"std std-ref\">TileMap</span></a>, <a class=\"reference internal\" href=\"class_touchscreenbutton.html#class-touchscreenbutton\"><span class=\"std std-ref\">TouchScreenButton</span></a>, <a class=\"reference internal\" href=\"class_visibleonscreennotifier2d.html#class-visibleonscreennotifier2d\"><span class=\"std std-ref\">VisibleOnScreenNotifier2D</span></a></p><p>A 2D game object, inherited by all 2D-related nodes. Has a position, rotation, scale, and Z index.</p>",
                "description": "\n\n<p>A 2D game object, with a transform (position, rotation, and scale). All 2D nodes, including physics objects and sprites, inherit from Node2D. Use Node2D as a parent node to move, scale and rotate children in a 2D project. Also gives control of the node's render order.</p>\n"
            },
            "class_node3d": {
                "url": "https://docs.godotengine.org/en/4.1/classes/class_node3d.html",
                "title": "Node3D",
                "blurb": "<p><strong>Inherits:</strong> <a class=\"reference internal\" href=\"class_node.html#class-node\"><span class=\"std std-ref\">Node</span></a> <strong>&lt;</strong> <a class=\"reference internal\" href=\"class_object.html#class-object\"><span class=\"std std-ref\">Object</span></a></p><p><strong>Inherited By:</strong> <a class=\"reference internal\" href=\"class_audiolistener3d.html#class-audiolistener3d\"><span class=\"std std-ref\">AudioListener3D</span></a>, <a class=\"reference internal\" href=\"class_audiostreamplayer3d.html#class-audiostreamplayer3d\"><span class=\"std std-ref\">AudioStreamPlayer3D</span></a>, <a class=\"reference internal\" href=\"class_boneattachment3d.html#class-boneattachment3d\"><span class=\"std std-ref\">BoneAttachment3D</span></a>, <a class=\"reference internal\" href=\"class_camera3d.html#class-camera3d\"><span class=\"std std-ref\">Camera3D</span></a>, <a class=\"reference internal\" href=\"class_collisionobject3d.html#class-collisionobject3d\"><span class=\"std std-ref\">CollisionObject3D</span></a>, <a class=\"reference internal\" href=\"class_collisionpolygon3d.html#class-collisionpolygon3d\"><span class=\"std std-ref\">CollisionPolygon3D</span></a>, <a class=\"reference internal\" href=\"class_collisionshape3d.html#class-collisionshape3d\"><span class=\"std std-ref\">CollisionShape3D</span></a>, <a class=\"reference internal\" href=\"class_gridmap.html#class-gridmap\"><span class=\"std std-ref\">GridMap</span></a>, <a class=\"reference internal\" href=\"class_importermeshinstance3d.html#class-importermeshinstance3d\"><span class=\"std std-ref\">ImporterMeshInstance3D</span></a>, <a class=\"reference internal\" href=\"class_joint3d.html#class-joint3d\"><span class=\"std std-ref\">Joint3D</span></a>, <a class=\"reference internal\" href=\"class_lightmapprobe.html#class-lightmapprobe\"><span class=\"std std-ref\">LightmapProbe</span></a>, <a class=\"reference internal\" href=\"class_marker3d.html#class-marker3d\"><span class=\"std std-ref\">Marker3D</span></a>, <a class=\"reference internal\" href=\"class_navigationlink3d.html#class-navigationlink3d\"><span class=\"std std-ref\">NavigationLink3D</span></a>, <a class=\"reference internal\" href=\"class_navigationobstacle3d.html#class-navigationobstacle3d\"><span class=\"std std-ref\">NavigationObstacle3D</span></a>, <a class=\"reference internal\" href=\"class_navigationregion3d.html#class-navigationregion3d\"><span class=\"std std-ref\">NavigationRegion3D</span></a>, <a class=\"reference internal\" href=\"class_occluderinstance3d.html#class-occluderinstance3d\"><span class=\"std std-ref\">OccluderInstance3D</span></a>, <a class=\"reference internal\" href=\"class_openxrhand.html#class-openxrhand\"><span class=\"std std-ref\">OpenXRHand</span></a>, <a class=\"reference internal\" href=\"class_path3d.html#class-path3d\"><span class=\"std std-ref\">Path3D</span></a>, <a class=\"reference internal\" href=\"class_pathfollow3d.html#class-pathfollow3d\"><span class=\"std std-ref\">PathFollow3D</span></a>, <a class=\"reference internal\" href=\"class_raycast3d.html#class-raycast3d\"><span class=\"std std-ref\">RayCast3D</span></a>, <a class=\"reference internal\" href=\"class_remotetransform3d.html#class-remotetransform3d\"><span class=\"std std-ref\">RemoteTransform3D</span></a>, <a class=\"reference internal\" href=\"class_shapecast3d.html#class-shapecast3d\"><span class=\"std std-ref\">ShapeCast3D</span></a>, <a class=\"reference internal\" href=\"class_skeleton3d.html#class-skeleton3d\"><span class=\"std std-ref\">Skeleton3D</span></a>, <a class=\"reference internal\" href=\"class_springarm3d.html#class-springarm3d\"><span class=\"std std-ref\">SpringArm3D</span></a>, <a class=\"reference internal\" href=\"class_vehiclewheel3d.html#class-vehiclewheel3d\"><span class=\"std std-ref\">VehicleWheel3D</span></a>, <a class=\"reference internal\" href=\"class_visualinstance3d.html#class-visualinstance3d\"><span class=\"std std-ref\">VisualInstance3D</span></a>, <a class=\"reference internal\" href=\"class_xrnode3d.html#class-xrnode3d\"><span class=\"std std-ref\">XRNode3D</span></a>, <a class=\"reference internal\" href=\"class_xrorigin3d.html#class-xrorigin3d\"><span class=\"std std-ref\">XROrigin3D</span></a></p><p>Most basic 3D game object, parent of all 3D-related nodes.</p>",
                "description": "\n\n<p>Most basic 3D game object, with a <a class=\"reference internal\" href=\"class_transform3d.html#class-transform3d\"><span class=\"std std-ref\">Transform3D</span></a> and visibility settings. All other 3D game objects inherit from Node3D. Use <strong>Node3D</strong> as a parent node to move, scale, rotate and show/hide children in a 3D project.</p>\n<p>Affine operations (rotate, scale, translate) happen in parent's local coordinate system, unless the <strong>Node3D</strong> object is set as top-level. Affine operations in this coordinate system correspond to direct affine operations on the <strong>Node3D</strong>'s transform. The word local below refers to this coordinate system. The coordinate system that is attached to the <strong>Node3D</strong> object itself is referred to as object-local coordinate system.</p>\n<p><strong>Note:</strong> Unless otherwise specified, all methods that have angle parameters must have angles specified as <em>radians</em>. To convert degrees to radians, use <a class=\"reference internal\" href=\"class_%40globalscope.html#class-globalscope-method-deg-to-rad\"><span class=\"std std-ref\">@GlobalScope.deg_to_rad</span></a>.</p>\n<p><strong>Note:</strong> Be aware that \"Spatial\" nodes are now called \"Node3D\" starting with Godot 4. Any Godot 3.x references to \"Spatial\" nodes refer to \"Node3D\" in Godot 4.</p>\n"
            },
            "class_occluderinstance3d": {
                "url": "https://docs.godotengine.org/en/4.1/classes/class_occluderinstance3d.html",
                "title": "OccluderInstance3D",
                "blurb": "<p><strong>Inherits:</strong> <a class=\"reference internal\" href=\"class_node3d.html#class-node3d\"><span class=\"std std-ref\">Node3D</span></a> <strong>&lt;</strong> <a class=\"reference internal\" href=\"class_node.html#class-node\"><span class=\"std std-ref\">Node</span></a> <strong>&lt;</strong> <a class=\"reference internal\" href=\"class_object.html#class-object\"><span class=\"std std-ref\">Object</span></a></p><p>Provides occlusion culling for 3D nodes, which improves performance in closed areas.</p>",
                "description": "\n\n<p>Occlusion culling can improve rendering performance in closed/semi-open areas by hiding geometry that is occluded by other objects.</p>\n<p>The occlusion culling system is mostly static. <strong>OccluderInstance3D</strong>s can be moved or hidden at run-time, but doing so will trigger a background recomputation that can take several frames. It is recommended to only move <strong>OccluderInstance3D</strong>s sporadically (e.g. for procedural generation purposes), rather than doing so every frame.</p>\n<p>The occlusion culling system works by rendering the occluders on the CPU in parallel using <a class=\"reference external\" href=\"https://www.embree.org/\">Embree</a>, drawing the result to a low-resolution buffer then using this to cull 3D nodes individually. In the 3D editor, you can preview the occlusion culling buffer by choosing <strong>Perspective &gt; Debug Advanced... &gt; Occlusion Culling Buffer</strong> in the top-left corner of the 3D viewport. The occlusion culling buffer quality can be adjusted in the Project Settings.</p>\n<p><strong>Baking:</strong> Select an <strong>OccluderInstance3D</strong> node, then use the <strong>Bake Occluders</strong> button at the top of the 3D editor. Only opaque materials will be taken into account; transparent materials (alpha-blended or alpha-tested) will be ignored by the occluder generation.</p>\n<p><strong>Note:</strong> Occlusion culling is only effective if <a class=\"reference internal\" href=\"class_projectsettings.html#class-projectsettings-property-rendering-occlusion-culling-use-occlusion-culling\"><span class=\"std std-ref\">ProjectSettings.rendering/occlusion_culling/use_occlusion_culling</span></a> is <code class=\"docutils literal notranslate\"><span class=\"pre\">true</span></code>. Enabling occlusion culling has a cost on the CPU. Only enable occlusion culling if you actually plan to use it. Large open scenes with few or no objects blocking the view will generally not benefit much from occlusion culling. Large open scenes generally benefit more from mesh LOD and visibility ranges (<a class=\"reference internal\" href=\"class_geometryinstance3d.html#class-geometryinstance3d-property-visibility-range-begin\"><span class=\"std std-ref\">GeometryInstance3D.visibility_range_begin</span></a> and <a class=\"reference internal\" href=\"class_geometryinstance3d.html#class-geometryinstance3d-property-visibility-range-end\"><span class=\"std std-ref\">GeometryInstance3D.visibility_range_end</span></a>) compared to occlusion culling.</p>\n"
            },
            "class_omnilight3d": {
                "url": "https://docs.godotengine.org/en/4.1/classes/class_omnilight3d.html",
                "title": "OmniLight3D",
                "blurb": "<p><strong>Inherits:</strong> <a class=\"reference internal\" href=\"class_light3d.html#class-light3d\"><span class=\"std std-ref\">Light3D</span></a> <strong>&lt;</strong> <a class=\"reference internal\" href=\"class_visualinstance3d.html#class-visualinstance3d\"><span class=\"std std-ref\">VisualInstance3D</span></a> <strong>&lt;</strong> <a class=\"reference internal\" href=\"class_node3d.html#class-node3d\"><span class=\"std std-ref\">Node3D</span></a> <strong>&lt;</strong> <a class=\"reference internal\" href=\"class_node.html#class-node\"><span class=\"std std-ref\">Node</span></a> <strong>&lt;</strong> <a class=\"reference internal\" href=\"class_object.html#class-object\"><span class=\"std std-ref\">Object</span></a></p><p>Omnidirectional light, such as a light bulb or a candle.</p>",
                "description": "\n\n<p>An Omnidirectional light is a type of <a class=\"reference internal\" href=\"class_light3d.html#class-light3d\"><span class=\"std std-ref\">Light3D</span></a> that emits light in all directions. The light is attenuated by distance and this attenuation can be configured by changing its energy, radius, and attenuation parameters.</p>\n<p><strong>Note:</strong> When using the Mobile rendering method, only 8 omni lights can be displayed on each mesh resource. Attempting to display more than 8 omni lights on a single mesh resource will result in omni lights flickering in and out as the camera moves. When using the Compatibility rendering method, only 8 omni lights can be displayed on each mesh resource by default, but this can be increased by adjusting <a class=\"reference internal\" href=\"class_projectsettings.html#class-projectsettings-property-rendering-limits-opengl-max-lights-per-object\"><span class=\"std std-ref\">ProjectSettings.rendering/limits/opengl/max_lights_per_object</span></a>.</p>\n<p><strong>Note:</strong> When using the Mobile or Compatibility rendering methods, omni lights will only correctly affect meshes whose visibility AABB intersects with the light's AABB. If using a shader to deform the mesh in a way that makes it go outside its AABB, <a class=\"reference internal\" href=\"class_geometryinstance3d.html#class-geometryinstance3d-property-extra-cull-margin\"><span class=\"std std-ref\">GeometryInstance3D.extra_cull_margin</span></a> must be increased on the mesh. Otherwise, the light may not be visible on the mesh.</p>\n"
            },
            "class_openxrhand": {
                "url": "https://docs.godotengine.org/en/4.1/classes/class_openxrhand.html",
                "title": "OpenXRHand",
                "blurb": "<p><strong>Inherits:</strong> <a class=\"reference internal\" href=\"class_node3d.html#class-node3d\"><span class=\"std std-ref\">Node3D</span></a> <strong>&lt;</strong> <a class=\"reference internal\" href=\"class_node.html#class-node\"><span class=\"std std-ref\">Node</span></a> <strong>&lt;</strong> <a class=\"reference internal\" href=\"class_object.html#class-object\"><span class=\"std std-ref\">Object</span></a></p><p>Node supporting finger tracking in OpenXR.</p>",
                "description": "\n\n<p>This node enables OpenXR's hand tracking functionality. The node should be a child node of an <a class=\"reference internal\" href=\"class_xrorigin3d.html#class-xrorigin3d\"><span class=\"std std-ref\">XROrigin3D</span></a> node, tracking will update its position to where the player's actual hand is positioned. This node also updates the skeleton of a properly skinned hand model. The hand mesh should be a child node of this node.</p>\n"
            },
            "class_optionbutton": {
                "url": "https://docs.godotengine.org/en/4.1/classes/class_optionbutton.html",
                "title": "OptionButton",
                "blurb": "<p><strong>Inherits:</strong> <a class=\"reference internal\" href=\"class_button.html#class-button\"><span class=\"std std-ref\">Button</span></a> <strong>&lt;</strong> <a class=\"reference internal\" href=\"class_basebutton.html#class-basebutton\"><span class=\"std std-ref\">BaseButton</span></a> <strong>&lt;</strong> <a class=\"reference internal\" href=\"class_control.html#class-control\"><span class=\"std std-ref\">Control</span></a> <strong>&lt;</strong> <a class=\"reference internal\" href=\"class_canvasitem.html#class-canvasitem\"><span class=\"std std-ref\">CanvasItem</span></a> <strong>&lt;</strong> <a class=\"reference internal\" href=\"class_node.html#class-node\"><span class=\"std std-ref\">Node</span></a> <strong>&lt;</strong> <a class=\"reference internal\" href=\"class_object.html#class-object\"><span class=\"std std-ref\">Object</span></a></p><p>A button that brings up a dropdown with selectable options when pressed.</p>",
                "description": "\n\n<p><strong>OptionButton</strong> is a type of button that brings up a dropdown with selectable items when pressed. The item selected becomes the \"current\" item and is displayed as the button text.</p>\n<p>See also <a class=\"reference internal\" href=\"class_basebutton.html#class-basebutton\"><span class=\"std std-ref\">BaseButton</span></a> which contains common properties and methods associated with this node.</p>\n<p><strong>Note:</strong> Properties <a class=\"reference internal\" href=\"class_button.html#class-button-property-text\"><span class=\"std std-ref\">Button.text</span></a> and <a class=\"reference internal\" href=\"class_button.html#class-button-property-icon\"><span class=\"std std-ref\">Button.icon</span></a> are automatically set based on the selected item. They shouldn't be changed manually.</p>\n<p><strong>Note:</strong> The ID values used for items are limited to 32 bits, not full 64 bits of <a class=\"reference internal\" href=\"class_int.html#class-int\"><span class=\"std std-ref\">int</span></a>. This has a range of <code class=\"docutils literal notranslate\"><span class=\"pre\">-2^32</span></code> to <code class=\"docutils literal notranslate\"><span class=\"pre\">2^32</span> <span class=\"pre\">-</span> <span class=\"pre\">1</span></code>, i.e. <code class=\"docutils literal notranslate\"><span class=\"pre\">-2147483648</span></code> to <code class=\"docutils literal notranslate\"><span class=\"pre\">2147483647</span></code>.</p>\n<p><strong>Note:</strong> The ID values used for items are 32-bit, unlike <a class=\"reference internal\" href=\"class_int.html#class-int\"><span class=\"std std-ref\">int</span></a> which is always 64-bit. They go from <code class=\"docutils literal notranslate\"><span class=\"pre\">-2147483648</span></code> to <code class=\"docutils literal notranslate\"><span class=\"pre\">2147483647</span></code>.</p>\n<p><strong>Note:</strong> The <a class=\"reference internal\" href=\"class_button.html#class-button-property-text\"><span class=\"std std-ref\">Button.text</span></a> and <a class=\"reference internal\" href=\"class_button.html#class-button-property-icon\"><span class=\"std std-ref\">Button.icon</span></a> properties are set automatically based on the selected item. They shouldn't be changed manually.</p>\n"
            },
            "class_panel": {
                "url": "https://docs.godotengine.org/en/4.1/classes/class_panel.html",
                "title": "Panel",
                "blurb": "<p><strong>Inherits:</strong> <a class=\"reference internal\" href=\"class_control.html#class-control\"><span class=\"std std-ref\">Control</span></a> <strong>&lt;</strong> <a class=\"reference internal\" href=\"class_canvasitem.html#class-canvasitem\"><span class=\"std std-ref\">CanvasItem</span></a> <strong>&lt;</strong> <a class=\"reference internal\" href=\"class_node.html#class-node\"><span class=\"std std-ref\">Node</span></a> <strong>&lt;</strong> <a class=\"reference internal\" href=\"class_object.html#class-object\"><span class=\"std std-ref\">Object</span></a></p><p>A GUI control that displays a <a class=\"reference internal\" href=\"class_stylebox.html#class-stylebox\"><span class=\"std std-ref\">StyleBox</span></a>.</p>",
                "description": "\n\n<p><strong>Panel</strong> is a GUI control that displays a <a class=\"reference internal\" href=\"class_stylebox.html#class-stylebox\"><span class=\"std std-ref\">StyleBox</span></a>. See also <a class=\"reference internal\" href=\"class_panelcontainer.html#class-panelcontainer\"><span class=\"std std-ref\">PanelContainer</span></a>.</p>\n"
            },
            "class_panelcontainer": {
                "url": "https://docs.godotengine.org/en/4.1/classes/class_panelcontainer.html",
                "title": "PanelContainer",
                "blurb": "<p><strong>Inherits:</strong> <a class=\"reference internal\" href=\"class_container.html#class-container\"><span class=\"std std-ref\">Container</span></a> <strong>&lt;</strong> <a class=\"reference internal\" href=\"class_control.html#class-control\"><span class=\"std std-ref\">Control</span></a> <strong>&lt;</strong> <a class=\"reference internal\" href=\"class_canvasitem.html#class-canvasitem\"><span class=\"std std-ref\">CanvasItem</span></a> <strong>&lt;</strong> <a class=\"reference internal\" href=\"class_node.html#class-node\"><span class=\"std std-ref\">Node</span></a> <strong>&lt;</strong> <a class=\"reference internal\" href=\"class_object.html#class-object\"><span class=\"std std-ref\">Object</span></a></p><p><strong>Inherited By:</strong> <a class=\"reference internal\" href=\"class_scripteditor.html#class-scripteditor\"><span class=\"std std-ref\">ScriptEditor</span></a></p><p>A container that keeps its child controls within the area of a <a class=\"reference internal\" href=\"class_stylebox.html#class-stylebox\"><span class=\"std std-ref\">StyleBox</span></a>.</p>",
                "description": "\n\n<p>A container that keeps its child controls within the area of a <a class=\"reference internal\" href=\"class_stylebox.html#class-stylebox\"><span class=\"std std-ref\">StyleBox</span></a>. Useful for giving controls an outline.</p>\n"
            },
            "class_parallaxbackground": {
                "url": "https://docs.godotengine.org/en/4.1/classes/class_parallaxbackground.html",
                "title": "ParallaxBackground",
                "blurb": "<p><strong>Inherits:</strong> <a class=\"reference internal\" href=\"class_canvaslayer.html#class-canvaslayer\"><span class=\"std std-ref\">CanvasLayer</span></a> <strong>&lt;</strong> <a class=\"reference internal\" href=\"class_node.html#class-node\"><span class=\"std std-ref\">Node</span></a> <strong>&lt;</strong> <a class=\"reference internal\" href=\"class_object.html#class-object\"><span class=\"std std-ref\">Object</span></a></p><p>A node used to create a parallax scrolling background.</p>",
                "description": "\n\n<p>A ParallaxBackground uses one or more <a class=\"reference internal\" href=\"class_parallaxlayer.html#class-parallaxlayer\"><span class=\"std std-ref\">ParallaxLayer</span></a> child nodes to create a parallax effect. Each <a class=\"reference internal\" href=\"class_parallaxlayer.html#class-parallaxlayer\"><span class=\"std std-ref\">ParallaxLayer</span></a> can move at a different speed using <a class=\"reference internal\" href=\"class_parallaxlayer.html#class-parallaxlayer-property-motion-offset\"><span class=\"std std-ref\">ParallaxLayer.motion_offset</span></a>. This creates an illusion of depth in a 2D game. If not used with a <a class=\"reference internal\" href=\"class_camera2d.html#class-camera2d\"><span class=\"std std-ref\">Camera2D</span></a>, you must manually calculate the <a class=\"reference internal\" href=\"#class-parallaxbackground-property-scroll-offset\"><span class=\"std std-ref\">scroll_offset</span></a>.</p>\n<p><strong>Note:</strong> Each <strong>ParallaxBackground</strong> is drawn on one specific <a class=\"reference internal\" href=\"class_viewport.html#class-viewport\"><span class=\"std std-ref\">Viewport</span></a> and cannot be shared between multiple <a class=\"reference internal\" href=\"class_viewport.html#class-viewport\"><span class=\"std std-ref\">Viewport</span></a>s, see <a class=\"reference internal\" href=\"class_canvaslayer.html#class-canvaslayer-property-custom-viewport\"><span class=\"std std-ref\">CanvasLayer.custom_viewport</span></a>. When using multiple <a class=\"reference internal\" href=\"class_viewport.html#class-viewport\"><span class=\"std std-ref\">Viewport</span></a>s, for example in a split-screen game, you need create an individual <strong>ParallaxBackground</strong> for each <a class=\"reference internal\" href=\"class_viewport.html#class-viewport\"><span class=\"std std-ref\">Viewport</span></a> you want it to be drawn on.</p>\n"
            },
            "class_parallaxlayer": {
                "url": "https://docs.godotengine.org/en/4.1/classes/class_parallaxlayer.html",
                "title": "ParallaxLayer",
                "blurb": "<p><strong>Inherits:</strong> <a class=\"reference internal\" href=\"class_node2d.html#class-node2d\"><span class=\"std std-ref\">Node2D</span></a> <strong>&lt;</strong> <a class=\"reference internal\" href=\"class_canvasitem.html#class-canvasitem\"><span class=\"std std-ref\">CanvasItem</span></a> <strong>&lt;</strong> <a class=\"reference internal\" href=\"class_node.html#class-node\"><span class=\"std std-ref\">Node</span></a> <strong>&lt;</strong> <a class=\"reference internal\" href=\"class_object.html#class-object\"><span class=\"std std-ref\">Object</span></a></p><p>A parallax scrolling layer to be used with <a class=\"reference internal\" href=\"class_parallaxbackground.html#class-parallaxbackground\"><span class=\"std std-ref\">ParallaxBackground</span></a>.</p>",
                "description": "\n\n<p>A ParallaxLayer must be the child of a <a class=\"reference internal\" href=\"class_parallaxbackground.html#class-parallaxbackground\"><span class=\"std std-ref\">ParallaxBackground</span></a> node. Each ParallaxLayer can be set to move at different speeds relative to the camera movement or the <a class=\"reference internal\" href=\"class_parallaxbackground.html#class-parallaxbackground-property-scroll-offset\"><span class=\"std std-ref\">ParallaxBackground.scroll_offset</span></a> value.</p>\n<p>This node's children will be affected by its scroll offset.</p>\n<p><strong>Note:</strong> Any changes to this node's position and scale made after it enters the scene will be ignored.</p>\n"
            },
            "class_path2d": {
                "url": "https://docs.godotengine.org/en/4.1/classes/class_path2d.html",
                "title": "Path2D",
                "blurb": "<p><strong>Inherits:</strong> <a class=\"reference internal\" href=\"class_node2d.html#class-node2d\"><span class=\"std std-ref\">Node2D</span></a> <strong>&lt;</strong> <a class=\"reference internal\" href=\"class_canvasitem.html#class-canvasitem\"><span class=\"std std-ref\">CanvasItem</span></a> <strong>&lt;</strong> <a class=\"reference internal\" href=\"class_node.html#class-node\"><span class=\"std std-ref\">Node</span></a> <strong>&lt;</strong> <a class=\"reference internal\" href=\"class_object.html#class-object\"><span class=\"std std-ref\">Object</span></a></p><p>Contains a <a class=\"reference internal\" href=\"class_curve2d.html#class-curve2d\"><span class=\"std std-ref\">Curve2D</span></a> path for <a class=\"reference internal\" href=\"class_pathfollow2d.html#class-pathfollow2d\"><span class=\"std std-ref\">PathFollow2D</span></a> nodes to follow.</p>",
                "description": "\n\n<p>Can have <a class=\"reference internal\" href=\"class_pathfollow2d.html#class-pathfollow2d\"><span class=\"std std-ref\">PathFollow2D</span></a> child nodes moving along the <a class=\"reference internal\" href=\"class_curve2d.html#class-curve2d\"><span class=\"std std-ref\">Curve2D</span></a>. See <a class=\"reference internal\" href=\"class_pathfollow2d.html#class-pathfollow2d\"><span class=\"std std-ref\">PathFollow2D</span></a> for more information on usage.</p>\n<p><strong>Note:</strong> The path is considered as relative to the moved nodes (children of <a class=\"reference internal\" href=\"class_pathfollow2d.html#class-pathfollow2d\"><span class=\"std std-ref\">PathFollow2D</span></a>). As such, the curve should usually start with a zero vector (<code class=\"docutils literal notranslate\"><span class=\"pre\">(0,</span> <span class=\"pre\">0)</span></code>).</p>\n"
            },
            "class_path3d": {
                "url": "https://docs.godotengine.org/en/4.1/classes/class_path3d.html",
                "title": "Path3D",
                "blurb": "<p><strong>Inherits:</strong> <a class=\"reference internal\" href=\"class_node3d.html#class-node3d\"><span class=\"std std-ref\">Node3D</span></a> <strong>&lt;</strong> <a class=\"reference internal\" href=\"class_node.html#class-node\"><span class=\"std std-ref\">Node</span></a> <strong>&lt;</strong> <a class=\"reference internal\" href=\"class_object.html#class-object\"><span class=\"std std-ref\">Object</span></a></p><p>Contains a <a class=\"reference internal\" href=\"class_curve3d.html#class-curve3d\"><span class=\"std std-ref\">Curve3D</span></a> path for <a class=\"reference internal\" href=\"class_pathfollow3d.html#class-pathfollow3d\"><span class=\"std std-ref\">PathFollow3D</span></a> nodes to follow.</p>",
                "description": "\n\n<p>Can have <a class=\"reference internal\" href=\"class_pathfollow3d.html#class-pathfollow3d\"><span class=\"std std-ref\">PathFollow3D</span></a> child nodes moving along the <a class=\"reference internal\" href=\"class_curve3d.html#class-curve3d\"><span class=\"std std-ref\">Curve3D</span></a>. See <a class=\"reference internal\" href=\"class_pathfollow3d.html#class-pathfollow3d\"><span class=\"std std-ref\">PathFollow3D</span></a> for more information on the usage.</p>\n<p>Note that the path is considered as relative to the moved nodes (children of <a class=\"reference internal\" href=\"class_pathfollow3d.html#class-pathfollow3d\"><span class=\"std std-ref\">PathFollow3D</span></a>). As such, the curve should usually start with a zero vector <code class=\"docutils literal notranslate\"><span class=\"pre\">(0,</span> <span class=\"pre\">0,</span> <span class=\"pre\">0)</span></code>.</p>\n"
            },
            "class_pathfollow2d": {
                "url": "https://docs.godotengine.org/en/4.1/classes/class_pathfollow2d.html",
                "title": "PathFollow2D",
                "blurb": "<p><strong>Inherits:</strong> <a class=\"reference internal\" href=\"class_node2d.html#class-node2d\"><span class=\"std std-ref\">Node2D</span></a> <strong>&lt;</strong> <a class=\"reference internal\" href=\"class_canvasitem.html#class-canvasitem\"><span class=\"std std-ref\">CanvasItem</span></a> <strong>&lt;</strong> <a class=\"reference internal\" href=\"class_node.html#class-node\"><span class=\"std std-ref\">Node</span></a> <strong>&lt;</strong> <a class=\"reference internal\" href=\"class_object.html#class-object\"><span class=\"std std-ref\">Object</span></a></p><p>Point sampler for a <a class=\"reference internal\" href=\"class_path2d.html#class-path2d\"><span class=\"std std-ref\">Path2D</span></a>.</p>",
                "description": "\n\n<p>This node takes its parent <a class=\"reference internal\" href=\"class_path2d.html#class-path2d\"><span class=\"std std-ref\">Path2D</span></a>, and returns the coordinates of a point within it, given a distance from the first vertex.</p>\n<p>It is useful for making other nodes follow a path, without coding the movement pattern. For that, the nodes must be children of this node. The descendant nodes will then move accordingly when setting the <a class=\"reference internal\" href=\"#class-pathfollow2d-property-progress\"><span class=\"std std-ref\">progress</span></a> in this node.</p>\n"
            },
            "class_pathfollow3d": {
                "url": "https://docs.godotengine.org/en/4.1/classes/class_pathfollow3d.html",
                "title": "PathFollow3D",
                "blurb": "<p><strong>Inherits:</strong> <a class=\"reference internal\" href=\"class_node3d.html#class-node3d\"><span class=\"std std-ref\">Node3D</span></a> <strong>&lt;</strong> <a class=\"reference internal\" href=\"class_node.html#class-node\"><span class=\"std std-ref\">Node</span></a> <strong>&lt;</strong> <a class=\"reference internal\" href=\"class_object.html#class-object\"><span class=\"std std-ref\">Object</span></a></p><p>Point sampler for a <a class=\"reference internal\" href=\"class_path3d.html#class-path3d\"><span class=\"std std-ref\">Path3D</span></a>.</p>",
                "description": "\n\n<p>This node takes its parent <a class=\"reference internal\" href=\"class_path3d.html#class-path3d\"><span class=\"std std-ref\">Path3D</span></a>, and returns the coordinates of a point within it, given a distance from the first vertex.</p>\n<p>It is useful for making other nodes follow a path, without coding the movement pattern. For that, the nodes must be children of this node. The descendant nodes will then move accordingly when setting the <a class=\"reference internal\" href=\"#class-pathfollow3d-property-progress\"><span class=\"std std-ref\">progress</span></a> in this node.</p>\n"
            },
            "class_physicalbone2d": {
                "url": "https://docs.godotengine.org/en/4.1/classes/class_physicalbone2d.html",
                "title": "PhysicalBone2D",
                "blurb": "<p><strong>Inherits:</strong> <a class=\"reference internal\" href=\"class_rigidbody2d.html#class-rigidbody2d\"><span class=\"std std-ref\">RigidBody2D</span></a> <strong>&lt;</strong> <a class=\"reference internal\" href=\"class_physicsbody2d.html#class-physicsbody2d\"><span class=\"std std-ref\">PhysicsBody2D</span></a> <strong>&lt;</strong> <a class=\"reference internal\" href=\"class_collisionobject2d.html#class-collisionobject2d\"><span class=\"std std-ref\">CollisionObject2D</span></a> <strong>&lt;</strong> <a class=\"reference internal\" href=\"class_node2d.html#class-node2d\"><span class=\"std std-ref\">Node2D</span></a> <strong>&lt;</strong> <a class=\"reference internal\" href=\"class_canvasitem.html#class-canvasitem\"><span class=\"std std-ref\">CanvasItem</span></a> <strong>&lt;</strong> <a class=\"reference internal\" href=\"class_node.html#class-node\"><span class=\"std std-ref\">Node</span></a> <strong>&lt;</strong> <a class=\"reference internal\" href=\"class_object.html#class-object\"><span class=\"std std-ref\">Object</span></a></p><p>A <a class=\"reference internal\" href=\"class_rigidbody2d.html#class-rigidbody2d\"><span class=\"std std-ref\">RigidBody2D</span></a>-derived node used to make <a class=\"reference internal\" href=\"class_bone2d.html#class-bone2d\"><span class=\"std std-ref\">Bone2D</span></a>s in a <a class=\"reference internal\" href=\"class_skeleton2d.html#class-skeleton2d\"><span class=\"std std-ref\">Skeleton2D</span></a> react to physics.</p>",
                "description": "\n\n<p>The <strong>PhysicalBone2D</strong> node is a <a class=\"reference internal\" href=\"class_rigidbody2d.html#class-rigidbody2d\"><span class=\"std std-ref\">RigidBody2D</span></a>-based node that can be used to make <a class=\"reference internal\" href=\"class_bone2d.html#class-bone2d\"><span class=\"std std-ref\">Bone2D</span></a>s in a <a class=\"reference internal\" href=\"class_skeleton2d.html#class-skeleton2d\"><span class=\"std std-ref\">Skeleton2D</span></a> react to physics.</p>\n<p><strong>Note:</strong> To make the <a class=\"reference internal\" href=\"class_bone2d.html#class-bone2d\"><span class=\"std std-ref\">Bone2D</span></a>s visually follow the <strong>PhysicalBone2D</strong> node, use a <a class=\"reference internal\" href=\"class_skeletonmodification2dphysicalbones.html#class-skeletonmodification2dphysicalbones\"><span class=\"std std-ref\">SkeletonModification2DPhysicalBones</span></a> modification on the <a class=\"reference internal\" href=\"class_skeleton2d.html#class-skeleton2d\"><span class=\"std std-ref\">Skeleton2D</span></a> parent.</p>\n<p><strong>Note:</strong> The <strong>PhysicalBone2D</strong> node does not automatically create a <a class=\"reference internal\" href=\"class_joint2d.html#class-joint2d\"><span class=\"std std-ref\">Joint2D</span></a> node to keep <strong>PhysicalBone2D</strong> nodes together. They must be created manually. For most cases, you want to use a <a class=\"reference internal\" href=\"class_pinjoint2d.html#class-pinjoint2d\"><span class=\"std std-ref\">PinJoint2D</span></a> node. The <strong>PhysicalBone2D</strong> node will automatically configure the <a class=\"reference internal\" href=\"class_joint2d.html#class-joint2d\"><span class=\"std std-ref\">Joint2D</span></a> node once it's been added as a child node.</p>\n"
            },
            "class_physicalbone3d": {
                "url": "https://docs.godotengine.org/en/4.1/classes/class_physicalbone3d.html",
                "title": "PhysicalBone3D",
                "blurb": "<p><strong>Inherits:</strong> <a class=\"reference internal\" href=\"class_physicsbody3d.html#class-physicsbody3d\"><span class=\"std std-ref\">PhysicsBody3D</span></a> <strong>&lt;</strong> <a class=\"reference internal\" href=\"class_collisionobject3d.html#class-collisionobject3d\"><span class=\"std std-ref\">CollisionObject3D</span></a> <strong>&lt;</strong> <a class=\"reference internal\" href=\"class_node3d.html#class-node3d\"><span class=\"std std-ref\">Node3D</span></a> <strong>&lt;</strong> <a class=\"reference internal\" href=\"class_node.html#class-node\"><span class=\"std std-ref\">Node</span></a> <strong>&lt;</strong> <a class=\"reference internal\" href=\"class_object.html#class-object\"><span class=\"std std-ref\">Object</span></a></p><p>A physics body used to make bones in a <a class=\"reference internal\" href=\"class_skeleton3d.html#class-skeleton3d\"><span class=\"std std-ref\">Skeleton3D</span></a> react to physics.</p>",
                "description": "\n\n<p>The <strong>PhysicalBone3D</strong> node is a physics body that can be used to make bones in a <a class=\"reference internal\" href=\"class_skeleton3d.html#class-skeleton3d\"><span class=\"std std-ref\">Skeleton3D</span></a> react to physics.</p>\n"
            },
            "class_physicsbody2d": {
                "url": "https://docs.godotengine.org/en/4.1/classes/class_physicsbody2d.html",
                "title": "PhysicsBody2D",
                "blurb": "<p><strong>Inherits:</strong> <a class=\"reference internal\" href=\"class_collisionobject2d.html#class-collisionobject2d\"><span class=\"std std-ref\">CollisionObject2D</span></a> <strong>&lt;</strong> <a class=\"reference internal\" href=\"class_node2d.html#class-node2d\"><span class=\"std std-ref\">Node2D</span></a> <strong>&lt;</strong> <a class=\"reference internal\" href=\"class_canvasitem.html#class-canvasitem\"><span class=\"std std-ref\">CanvasItem</span></a> <strong>&lt;</strong> <a class=\"reference internal\" href=\"class_node.html#class-node\"><span class=\"std std-ref\">Node</span></a> <strong>&lt;</strong> <a class=\"reference internal\" href=\"class_object.html#class-object\"><span class=\"std std-ref\">Object</span></a></p><p><strong>Inherited By:</strong> <a class=\"reference internal\" href=\"class_characterbody2d.html#class-characterbody2d\"><span class=\"std std-ref\">CharacterBody2D</span></a>, <a class=\"reference internal\" href=\"class_rigidbody2d.html#class-rigidbody2d\"><span class=\"std std-ref\">RigidBody2D</span></a>, <a class=\"reference internal\" href=\"class_staticbody2d.html#class-staticbody2d\"><span class=\"std std-ref\">StaticBody2D</span></a></p><p>Abstract base class for 2D game objects affected by physics.</p>",
                "description": "\n\n<p><strong>PhysicsBody2D</strong> is an abstract base class for 2D game objects affected by physics. All 2D physics bodies inherit from it.</p>\n"
            },
            "class_physicsbody3d": {
                "url": "https://docs.godotengine.org/en/4.1/classes/class_physicsbody3d.html",
                "title": "PhysicsBody3D",
                "blurb": "<p><strong>Inherits:</strong> <a class=\"reference internal\" href=\"class_collisionobject3d.html#class-collisionobject3d\"><span class=\"std std-ref\">CollisionObject3D</span></a> <strong>&lt;</strong> <a class=\"reference internal\" href=\"class_node3d.html#class-node3d\"><span class=\"std std-ref\">Node3D</span></a> <strong>&lt;</strong> <a class=\"reference internal\" href=\"class_node.html#class-node\"><span class=\"std std-ref\">Node</span></a> <strong>&lt;</strong> <a class=\"reference internal\" href=\"class_object.html#class-object\"><span class=\"std std-ref\">Object</span></a></p><p><strong>Inherited By:</strong> <a class=\"reference internal\" href=\"class_characterbody3d.html#class-characterbody3d\"><span class=\"std std-ref\">CharacterBody3D</span></a>, <a class=\"reference internal\" href=\"class_physicalbone3d.html#class-physicalbone3d\"><span class=\"std std-ref\">PhysicalBone3D</span></a>, <a class=\"reference internal\" href=\"class_rigidbody3d.html#class-rigidbody3d\"><span class=\"std std-ref\">RigidBody3D</span></a>, <a class=\"reference internal\" href=\"class_staticbody3d.html#class-staticbody3d\"><span class=\"std std-ref\">StaticBody3D</span></a></p><p>Abstract base class for 3D game objects affected by physics.</p>",
                "description": "\n\n<p><strong>PhysicsBody3D</strong> is an abstract base class for 3D game objects affected by physics. All 3D physics bodies inherit from it.</p>\n<p><strong>Warning:</strong> With a non-uniform scale, this node will likely not behave as expected. It is advised to keep its scale the same on all axes and adjust its collision shape(s) instead.</p>\n"
            },
            "class_pinjoint2d": {
                "url": "https://docs.godotengine.org/en/4.1/classes/class_pinjoint2d.html",
                "title": "PinJoint2D",
                "blurb": "<p><strong>Inherits:</strong> <a class=\"reference internal\" href=\"class_joint2d.html#class-joint2d\"><span class=\"std std-ref\">Joint2D</span></a> <strong>&lt;</strong> <a class=\"reference internal\" href=\"class_node2d.html#class-node2d\"><span class=\"std std-ref\">Node2D</span></a> <strong>&lt;</strong> <a class=\"reference internal\" href=\"class_canvasitem.html#class-canvasitem\"><span class=\"std std-ref\">CanvasItem</span></a> <strong>&lt;</strong> <a class=\"reference internal\" href=\"class_node.html#class-node\"><span class=\"std std-ref\">Node</span></a> <strong>&lt;</strong> <a class=\"reference internal\" href=\"class_object.html#class-object\"><span class=\"std std-ref\">Object</span></a></p><p>A physics joint that attaches two 2D physics bodies at a single point, allowing them to freely rotate.</p>",
                "description": "\n\n<p>A physics joint that attaches two 2D physics bodies at a single point, allowing them to freely rotate. For example, a <a class=\"reference internal\" href=\"class_rigidbody2d.html#class-rigidbody2d\"><span class=\"std std-ref\">RigidBody2D</span></a> can be attached to a <a class=\"reference internal\" href=\"class_staticbody2d.html#class-staticbody2d\"><span class=\"std std-ref\">StaticBody2D</span></a> to create a pendulum or a seesaw.</p>\n"
            },
            "class_pinjoint3d": {
                "url": "https://docs.godotengine.org/en/4.1/classes/class_pinjoint3d.html",
                "title": "PinJoint3D",
                "blurb": "<p><strong>Inherits:</strong> <a class=\"reference internal\" href=\"class_joint3d.html#class-joint3d\"><span class=\"std std-ref\">Joint3D</span></a> <strong>&lt;</strong> <a class=\"reference internal\" href=\"class_node3d.html#class-node3d\"><span class=\"std std-ref\">Node3D</span></a> <strong>&lt;</strong> <a class=\"reference internal\" href=\"class_node.html#class-node\"><span class=\"std std-ref\">Node</span></a> <strong>&lt;</strong> <a class=\"reference internal\" href=\"class_object.html#class-object\"><span class=\"std std-ref\">Object</span></a></p><p>A physics joint that attaches two 3D physics bodies at a single point, allowing them to freely rotate.</p>",
                "description": "\n\n<p>A physics joint that attaches two 2D physics bodies at a single point, allowing them to freely rotate. For example, a <a class=\"reference internal\" href=\"class_rigidbody3d.html#class-rigidbody3d\"><span class=\"std std-ref\">RigidBody3D</span></a> can be attached to a <a class=\"reference internal\" href=\"class_staticbody3d.html#class-staticbody3d\"><span class=\"std std-ref\">StaticBody3D</span></a> to create a pendulum or a seesaw.</p>\n"
            },
            "class_pointlight2d": {
                "url": "https://docs.godotengine.org/en/4.1/classes/class_pointlight2d.html",
                "title": "PointLight2D",
                "blurb": "<p><strong>Inherits:</strong> <a class=\"reference internal\" href=\"class_light2d.html#class-light2d\"><span class=\"std std-ref\">Light2D</span></a> <strong>&lt;</strong> <a class=\"reference internal\" href=\"class_node2d.html#class-node2d\"><span class=\"std std-ref\">Node2D</span></a> <strong>&lt;</strong> <a class=\"reference internal\" href=\"class_canvasitem.html#class-canvasitem\"><span class=\"std std-ref\">CanvasItem</span></a> <strong>&lt;</strong> <a class=\"reference internal\" href=\"class_node.html#class-node\"><span class=\"std std-ref\">Node</span></a> <strong>&lt;</strong> <a class=\"reference internal\" href=\"class_object.html#class-object\"><span class=\"std std-ref\">Object</span></a></p><p>Positional 2D light source.</p>",
                "description": "\n\n<p>Casts light in a 2D environment. This light's shape is defined by a (usually grayscale) texture.</p>\n"
            },
            "class_polygon2d": {
                "url": "https://docs.godotengine.org/en/4.1/classes/class_polygon2d.html",
                "title": "Polygon2D",
                "blurb": "<p><strong>Inherits:</strong> <a class=\"reference internal\" href=\"class_node2d.html#class-node2d\"><span class=\"std std-ref\">Node2D</span></a> <strong>&lt;</strong> <a class=\"reference internal\" href=\"class_canvasitem.html#class-canvasitem\"><span class=\"std std-ref\">CanvasItem</span></a> <strong>&lt;</strong> <a class=\"reference internal\" href=\"class_node.html#class-node\"><span class=\"std std-ref\">Node</span></a> <strong>&lt;</strong> <a class=\"reference internal\" href=\"class_object.html#class-object\"><span class=\"std std-ref\">Object</span></a></p><p>A 2D polygon.</p>",
                "description": "\n\n<p>A Polygon2D is defined by a set of points. Each point is connected to the next, with the final point being connected to the first, resulting in a closed polygon. Polygon2Ds can be filled with color (solid or gradient) or filled with a given texture.</p>\n"
            },
            "class_popup": {
                "url": "https://docs.godotengine.org/en/4.1/classes/class_popup.html",
                "title": "Popup",
                "blurb": "<p><strong>Inherits:</strong> <a class=\"reference internal\" href=\"class_window.html#class-window\"><span class=\"std std-ref\">Window</span></a> <strong>&lt;</strong> <a class=\"reference internal\" href=\"class_viewport.html#class-viewport\"><span class=\"std std-ref\">Viewport</span></a> <strong>&lt;</strong> <a class=\"reference internal\" href=\"class_node.html#class-node\"><span class=\"std std-ref\">Node</span></a> <strong>&lt;</strong> <a class=\"reference internal\" href=\"class_object.html#class-object\"><span class=\"std std-ref\">Object</span></a></p><p><strong>Inherited By:</strong> <a class=\"reference internal\" href=\"class_popupmenu.html#class-popupmenu\"><span class=\"std std-ref\">PopupMenu</span></a>, <a class=\"reference internal\" href=\"class_popuppanel.html#class-popuppanel\"><span class=\"std std-ref\">PopupPanel</span></a></p><p>Base class for contextual windows and panels with fixed position.</p>",
                "description": "\n\n<p><strong>Popup</strong> is a base class for contextual windows and panels with fixed position. It's a modal by default (see <a class=\"reference internal\" href=\"class_window.html#class-window-property-popup-window\"><span class=\"std std-ref\">Window.popup_window</span></a>) and provides methods for implementing custom popup behavior.</p>\n"
            },
            "class_popupmenu": {
                "url": "https://docs.godotengine.org/en/4.1/classes/class_popupmenu.html",
                "title": "PopupMenu",
                "blurb": "<p><strong>Inherits:</strong> <a class=\"reference internal\" href=\"class_popup.html#class-popup\"><span class=\"std std-ref\">Popup</span></a> <strong>&lt;</strong> <a class=\"reference internal\" href=\"class_window.html#class-window\"><span class=\"std std-ref\">Window</span></a> <strong>&lt;</strong> <a class=\"reference internal\" href=\"class_viewport.html#class-viewport\"><span class=\"std std-ref\">Viewport</span></a> <strong>&lt;</strong> <a class=\"reference internal\" href=\"class_node.html#class-node\"><span class=\"std std-ref\">Node</span></a> <strong>&lt;</strong> <a class=\"reference internal\" href=\"class_object.html#class-object\"><span class=\"std std-ref\">Object</span></a></p><p>A modal window used to display a list of options.</p>",
                "description": "\n\n<p><strong>PopupMenu</strong> is a modal window used to display a list of options. Useful for toolbars and context menus.</p>\n<p>The size of a <strong>PopupMenu</strong> can be limited by using <a class=\"reference internal\" href=\"class_window.html#class-window-property-max-size\"><span class=\"std std-ref\">Window.max_size</span></a>. If the height of the list of items is larger than the maximum height of the <strong>PopupMenu</strong>, a <a class=\"reference internal\" href=\"class_scrollcontainer.html#class-scrollcontainer\"><span class=\"std std-ref\">ScrollContainer</span></a> within the popup will allow the user to scroll the contents. If no maximum size is set, or if it is set to <code class=\"docutils literal notranslate\"><span class=\"pre\">0</span></code>, the <strong>PopupMenu</strong> height will be limited by its parent rect.</p>\n<p>All <code class=\"docutils literal notranslate\"><span class=\"pre\">set_*</span></code> methods allow negative item indices, i.e. <code class=\"docutils literal notranslate\"><span class=\"pre\">-1</span></code> to access the last item, <code class=\"docutils literal notranslate\"><span class=\"pre\">-2</span></code> to select the second-to-last item, and so on.</p>\n<p><strong>Incremental search:</strong> Like <a class=\"reference internal\" href=\"class_itemlist.html#class-itemlist\"><span class=\"std std-ref\">ItemList</span></a> and <a class=\"reference internal\" href=\"class_tree.html#class-tree\"><span class=\"std std-ref\">Tree</span></a>, <strong>PopupMenu</strong> supports searching within the list while the control is focused. Press a key that matches the first letter of an item's name to select the first item starting with the given letter. After that point, there are two ways to perform incremental search: 1) Press the same key again before the timeout duration to select the next item starting with the same letter. 2) Press letter keys that match the rest of the word before the timeout duration to match to select the item in question directly. Both of these actions will be reset to the beginning of the list if the timeout duration has passed since the last keystroke was registered. You can adjust the timeout duration by changing <a class=\"reference internal\" href=\"class_projectsettings.html#class-projectsettings-property-gui-timers-incremental-search-max-interval-msec\"><span class=\"std std-ref\">ProjectSettings.gui/timers/incremental_search_max_interval_msec</span></a>.</p>\n<p><strong>Note:</strong> The ID values used for items are limited to 32 bits, not full 64 bits of <a class=\"reference internal\" href=\"class_int.html#class-int\"><span class=\"std std-ref\">int</span></a>. This has a range of <code class=\"docutils literal notranslate\"><span class=\"pre\">-2^32</span></code> to <code class=\"docutils literal notranslate\"><span class=\"pre\">2^32</span> <span class=\"pre\">-</span> <span class=\"pre\">1</span></code>, i.e. <code class=\"docutils literal notranslate\"><span class=\"pre\">-2147483648</span></code> to <code class=\"docutils literal notranslate\"><span class=\"pre\">2147483647</span></code>.</p>\n"
            },
            "class_popuppanel": {
                "url": "https://docs.godotengine.org/en/4.1/classes/class_popuppanel.html",
                "title": "PopupPanel",
                "blurb": "<p><strong>Inherits:</strong> <a class=\"reference internal\" href=\"class_popup.html#class-popup\"><span class=\"std std-ref\">Popup</span></a> <strong>&lt;</strong> <a class=\"reference internal\" href=\"class_window.html#class-window\"><span class=\"std std-ref\">Window</span></a> <strong>&lt;</strong> <a class=\"reference internal\" href=\"class_viewport.html#class-viewport\"><span class=\"std std-ref\">Viewport</span></a> <strong>&lt;</strong> <a class=\"reference internal\" href=\"class_node.html#class-node\"><span class=\"std std-ref\">Node</span></a> <strong>&lt;</strong> <a class=\"reference internal\" href=\"class_object.html#class-object\"><span class=\"std std-ref\">Object</span></a></p><p>A popup with a panel background.</p>",
                "description": "\n\n<p>A popup with a configurable panel background. Any child controls added to this node will be stretched to fit the panel's size (similar to how <a class=\"reference internal\" href=\"class_panelcontainer.html#class-panelcontainer\"><span class=\"std std-ref\">PanelContainer</span></a> works). If you are making windows, see <a class=\"reference internal\" href=\"class_window.html#class-window\"><span class=\"std std-ref\">Window</span></a>.</p>\n"
            },
            "class_progressbar": {
                "url": "https://docs.godotengine.org/en/4.1/classes/class_progressbar.html",
                "title": "ProgressBar",
                "blurb": "<p><strong>Inherits:</strong> <a class=\"reference internal\" href=\"class_range.html#class-range\"><span class=\"std std-ref\">Range</span></a> <strong>&lt;</strong> <a class=\"reference internal\" href=\"class_control.html#class-control\"><span class=\"std std-ref\">Control</span></a> <strong>&lt;</strong> <a class=\"reference internal\" href=\"class_canvasitem.html#class-canvasitem\"><span class=\"std std-ref\">CanvasItem</span></a> <strong>&lt;</strong> <a class=\"reference internal\" href=\"class_node.html#class-node\"><span class=\"std std-ref\">Node</span></a> <strong>&lt;</strong> <a class=\"reference internal\" href=\"class_object.html#class-object\"><span class=\"std std-ref\">Object</span></a></p><p>A control used for visual representation of a percentage.</p>",
                "description": "\n\n<p>A control used for visual representation of a percentage. Shows fill percentage from right to left.</p>\n"
            },
            "class_range": {
                "url": "https://docs.godotengine.org/en/4.1/classes/class_range.html",
                "title": "Range",
                "blurb": "<p><strong>Inherits:</strong> <a class=\"reference internal\" href=\"class_control.html#class-control\"><span class=\"std std-ref\">Control</span></a> <strong>&lt;</strong> <a class=\"reference internal\" href=\"class_canvasitem.html#class-canvasitem\"><span class=\"std std-ref\">CanvasItem</span></a> <strong>&lt;</strong> <a class=\"reference internal\" href=\"class_node.html#class-node\"><span class=\"std std-ref\">Node</span></a> <strong>&lt;</strong> <a class=\"reference internal\" href=\"class_object.html#class-object\"><span class=\"std std-ref\">Object</span></a></p><p><strong>Inherited By:</strong> <a class=\"reference internal\" href=\"class_editorspinslider.html#class-editorspinslider\"><span class=\"std std-ref\">EditorSpinSlider</span></a>, <a class=\"reference internal\" href=\"class_progressbar.html#class-progressbar\"><span class=\"std std-ref\">ProgressBar</span></a>, <a class=\"reference internal\" href=\"class_scrollbar.html#class-scrollbar\"><span class=\"std std-ref\">ScrollBar</span></a>, <a class=\"reference internal\" href=\"class_slider.html#class-slider\"><span class=\"std std-ref\">Slider</span></a>, <a class=\"reference internal\" href=\"class_spinbox.html#class-spinbox\"><span class=\"std std-ref\">SpinBox</span></a>, <a class=\"reference internal\" href=\"class_textureprogressbar.html#class-textureprogressbar\"><span class=\"std std-ref\">TextureProgressBar</span></a></p><p>Abstract base class for controls that represent a number within a range.</p>",
                "description": "\n\n<p>Range is an abstract base class for controls that represent a number within a range, using a configured <a class=\"reference internal\" href=\"#class-range-property-step\"><span class=\"std std-ref\">step</span></a> and <a class=\"reference internal\" href=\"#class-range-property-page\"><span class=\"std std-ref\">page</span></a> size. See e.g. <a class=\"reference internal\" href=\"class_scrollbar.html#class-scrollbar\"><span class=\"std std-ref\">ScrollBar</span></a> and <a class=\"reference internal\" href=\"class_slider.html#class-slider\"><span class=\"std std-ref\">Slider</span></a> for examples of higher-level nodes using Range.</p>\n"
            },
            "class_raycast2d": {
                "url": "https://docs.godotengine.org/en/4.1/classes/class_raycast2d.html",
                "title": "RayCast2D",
                "blurb": "<p><strong>Inherits:</strong> <a class=\"reference internal\" href=\"class_node2d.html#class-node2d\"><span class=\"std std-ref\">Node2D</span></a> <strong>&lt;</strong> <a class=\"reference internal\" href=\"class_canvasitem.html#class-canvasitem\"><span class=\"std std-ref\">CanvasItem</span></a> <strong>&lt;</strong> <a class=\"reference internal\" href=\"class_node.html#class-node\"><span class=\"std std-ref\">Node</span></a> <strong>&lt;</strong> <a class=\"reference internal\" href=\"class_object.html#class-object\"><span class=\"std std-ref\">Object</span></a></p><p>A ray in 2D space, used to find the first <a class=\"reference internal\" href=\"class_collisionobject2d.html#class-collisionobject2d\"><span class=\"std std-ref\">CollisionObject2D</span></a> it intersects.</p>",
                "description": "\n\n<p>A raycast represents a ray from its origin to its <a class=\"reference internal\" href=\"#class-raycast2d-property-target-position\"><span class=\"std std-ref\">target_position</span></a> that finds the closest <a class=\"reference internal\" href=\"class_collisionobject2d.html#class-collisionobject2d\"><span class=\"std std-ref\">CollisionObject2D</span></a> along its path, if it intersects any. This is useful for a lot of things, such as</p>\n<p><strong>RayCast2D</strong> can ignore some objects by adding them to an exception list, by making its detection reporting ignore <a class=\"reference internal\" href=\"class_area2d.html#class-area2d\"><span class=\"std std-ref\">Area2D</span></a>s (<a class=\"reference internal\" href=\"#class-raycast2d-property-collide-with-areas\"><span class=\"std std-ref\">collide_with_areas</span></a>) or <a class=\"reference internal\" href=\"class_physicsbody2d.html#class-physicsbody2d\"><span class=\"std std-ref\">PhysicsBody2D</span></a>s (<a class=\"reference internal\" href=\"#class-raycast2d-property-collide-with-bodies\"><span class=\"std std-ref\">collide_with_bodies</span></a>), or by configuring physics layers.</p>\n<p><strong>RayCast2D</strong> calculates intersection every physics frame, and it holds the result until the next physics frame. For an immediate raycast, or if you want to configure a <strong>RayCast2D</strong> multiple times within the same physics frame, use <a class=\"reference internal\" href=\"#class-raycast2d-method-force-raycast-update\"><span class=\"std std-ref\">force_raycast_update</span></a>.</p>\n<p>To sweep over a region of 2D space, you can approximate the region with multiple <strong>RayCast2D</strong>s or use <a class=\"reference internal\" href=\"class_shapecast2d.html#class-shapecast2d\"><span class=\"std std-ref\">ShapeCast2D</span></a>.</p>\n"
            },
            "class_raycast3d": {
                "url": "https://docs.godotengine.org/en/4.1/classes/class_raycast3d.html",
                "title": "RayCast3D",
                "blurb": "<p><strong>Inherits:</strong> <a class=\"reference internal\" href=\"class_node3d.html#class-node3d\"><span class=\"std std-ref\">Node3D</span></a> <strong>&lt;</strong> <a class=\"reference internal\" href=\"class_node.html#class-node\"><span class=\"std std-ref\">Node</span></a> <strong>&lt;</strong> <a class=\"reference internal\" href=\"class_object.html#class-object\"><span class=\"std std-ref\">Object</span></a></p><p>A ray in 3D space, used to find the first <a class=\"reference internal\" href=\"class_collisionobject3d.html#class-collisionobject3d\"><span class=\"std std-ref\">CollisionObject3D</span></a> it intersects.</p>",
                "description": "\n\n<p>A raycast represents a ray from its origin to its <a class=\"reference internal\" href=\"#class-raycast3d-property-target-position\"><span class=\"std std-ref\">target_position</span></a> that finds the closest <a class=\"reference internal\" href=\"class_collisionobject3d.html#class-collisionobject3d\"><span class=\"std std-ref\">CollisionObject3D</span></a> along its path, if it intersects any. This is useful for a lot of things, such as</p>\n<p><strong>RayCast3D</strong> can ignore some objects by adding them to an exception list, by making its detection reporting ignore <a class=\"reference internal\" href=\"class_area3d.html#class-area3d\"><span class=\"std std-ref\">Area3D</span></a>s (<a class=\"reference internal\" href=\"#class-raycast3d-property-collide-with-areas\"><span class=\"std std-ref\">collide_with_areas</span></a>) or <a class=\"reference internal\" href=\"class_physicsbody3d.html#class-physicsbody3d\"><span class=\"std std-ref\">PhysicsBody3D</span></a>s (<a class=\"reference internal\" href=\"#class-raycast3d-property-collide-with-bodies\"><span class=\"std std-ref\">collide_with_bodies</span></a>), or by configuring physics layers.</p>\n<p><strong>RayCast3D</strong> calculates intersection every physics frame, and it holds the result until the next physics frame. For an immediate raycast, or if you want to configure a <strong>RayCast3D</strong> multiple times within the same physics frame, use <a class=\"reference internal\" href=\"#class-raycast3d-method-force-raycast-update\"><span class=\"std std-ref\">force_raycast_update</span></a>.</p>\n<p>To sweep over a region of 3D space, you can approximate the region with multiple <strong>RayCast3D</strong>s or use <a class=\"reference internal\" href=\"class_shapecast3d.html#class-shapecast3d\"><span class=\"std std-ref\">ShapeCast3D</span></a>.</p>\n"
            },
            "class_referencerect": {
                "url": "https://docs.godotengine.org/en/4.1/classes/class_referencerect.html",
                "title": "ReferenceRect",
                "blurb": "<p><strong>Inherits:</strong> <a class=\"reference internal\" href=\"class_control.html#class-control\"><span class=\"std std-ref\">Control</span></a> <strong>&lt;</strong> <a class=\"reference internal\" href=\"class_canvasitem.html#class-canvasitem\"><span class=\"std std-ref\">CanvasItem</span></a> <strong>&lt;</strong> <a class=\"reference internal\" href=\"class_node.html#class-node\"><span class=\"std std-ref\">Node</span></a> <strong>&lt;</strong> <a class=\"reference internal\" href=\"class_object.html#class-object\"><span class=\"std std-ref\">Object</span></a></p><p>A rectangle hint for designing UIs.</p>",
                "description": "\n\n<p>A rectangle box that displays only a colored border around its rectangle. It is used to visualize the extents of a <a class=\"reference internal\" href=\"class_control.html#class-control\"><span class=\"std std-ref\">Control</span></a>.</p>\n"
            },
            "class_reflectionprobe": {
                "url": "https://docs.godotengine.org/en/4.1/classes/class_reflectionprobe.html",
                "title": "ReflectionProbe",
                "blurb": "<p><strong>Inherits:</strong> <a class=\"reference internal\" href=\"class_visualinstance3d.html#class-visualinstance3d\"><span class=\"std std-ref\">VisualInstance3D</span></a> <strong>&lt;</strong> <a class=\"reference internal\" href=\"class_node3d.html#class-node3d\"><span class=\"std std-ref\">Node3D</span></a> <strong>&lt;</strong> <a class=\"reference internal\" href=\"class_node.html#class-node\"><span class=\"std std-ref\">Node</span></a> <strong>&lt;</strong> <a class=\"reference internal\" href=\"class_object.html#class-object\"><span class=\"std std-ref\">Object</span></a></p><p>Captures its surroundings to create fast, accurate reflections from a given point.</p>",
                "description": "\n\n<p>Captures its surroundings as a cubemap, and stores versions of it with increasing levels of blur to simulate different material roughnesses.</p>\n<p>The <strong>ReflectionProbe</strong> is used to create high-quality reflections at a low performance cost (when <a class=\"reference internal\" href=\"#class-reflectionprobe-property-update-mode\"><span class=\"std std-ref\">update_mode</span></a> is <a class=\"reference internal\" href=\"#class-reflectionprobe-constant-update-once\"><span class=\"std std-ref\">UPDATE_ONCE</span></a>). <strong>ReflectionProbe</strong>s can be blended together and with the rest of the scene smoothly. <strong>ReflectionProbe</strong>s can also be combined with <a class=\"reference internal\" href=\"class_voxelgi.html#class-voxelgi\"><span class=\"std std-ref\">VoxelGI</span></a>, SDFGI (<a class=\"reference internal\" href=\"class_environment.html#class-environment-property-sdfgi-enabled\"><span class=\"std std-ref\">Environment.sdfgi_enabled</span></a>) and screen-space reflections (<a class=\"reference internal\" href=\"class_environment.html#class-environment-property-ssr-enabled\"><span class=\"std std-ref\">Environment.ssr_enabled</span></a>) to get more accurate reflections in specific areas. <strong>ReflectionProbe</strong>s render all objects within their <a class=\"reference internal\" href=\"#class-reflectionprobe-property-cull-mask\"><span class=\"std std-ref\">cull_mask</span></a>, so updating them can be quite expensive. It is best to update them once with the important static objects and then leave them as-is.</p>\n<p><strong>Note:</strong> Unlike <a class=\"reference internal\" href=\"class_voxelgi.html#class-voxelgi\"><span class=\"std std-ref\">VoxelGI</span></a> and SDFGI, <strong>ReflectionProbe</strong>s only source their environment from a <a class=\"reference internal\" href=\"class_worldenvironment.html#class-worldenvironment\"><span class=\"std std-ref\">WorldEnvironment</span></a> node. If you specify an <a class=\"reference internal\" href=\"class_environment.html#class-environment\"><span class=\"std std-ref\">Environment</span></a> resource within a <a class=\"reference internal\" href=\"class_camera3d.html#class-camera3d\"><span class=\"std std-ref\">Camera3D</span></a> node, it will be ignored by the <strong>ReflectionProbe</strong>. This can lead to incorrect lighting within the <strong>ReflectionProbe</strong>.</p>\n<p><strong>Note:</strong> Reflection probes are only supported in the Forward+ and Mobile rendering methods, not Compatibility. When using the Mobile rendering method, only 8 reflection probes can be displayed on each mesh resource. Attempting to display more than 8 reflection probes on a single mesh resource will result in reflection probes flickering in and out as the camera moves.</p>\n<p><strong>Note:</strong> When using the Mobile rendering method, reflection probes will only correctly affect meshes whose visibility AABB intersects with the reflection probe's AABB. If using a shader to deform the mesh in a way that makes it go outside its AABB, <a class=\"reference internal\" href=\"class_geometryinstance3d.html#class-geometryinstance3d-property-extra-cull-margin\"><span class=\"std std-ref\">GeometryInstance3D.extra_cull_margin</span></a> must be increased on the mesh. Otherwise, the reflection probe may not be visible on the mesh.</p>\n"
            },
            "class_remotetransform2d": {
                "url": "https://docs.godotengine.org/en/4.1/classes/class_remotetransform2d.html",
                "title": "RemoteTransform2D",
                "blurb": "<p><strong>Inherits:</strong> <a class=\"reference internal\" href=\"class_node2d.html#class-node2d\"><span class=\"std std-ref\">Node2D</span></a> <strong>&lt;</strong> <a class=\"reference internal\" href=\"class_canvasitem.html#class-canvasitem\"><span class=\"std std-ref\">CanvasItem</span></a> <strong>&lt;</strong> <a class=\"reference internal\" href=\"class_node.html#class-node\"><span class=\"std std-ref\">Node</span></a> <strong>&lt;</strong> <a class=\"reference internal\" href=\"class_object.html#class-object\"><span class=\"std std-ref\">Object</span></a></p><p>RemoteTransform2D pushes its own <a class=\"reference internal\" href=\"class_transform2d.html#class-transform2d\"><span class=\"std std-ref\">Transform2D</span></a> to another <a class=\"reference internal\" href=\"class_node2d.html#class-node2d\"><span class=\"std std-ref\">Node2D</span></a> derived node in the scene.</p>",
                "description": "\n\n<p>RemoteTransform2D pushes its own <a class=\"reference internal\" href=\"class_transform2d.html#class-transform2d\"><span class=\"std std-ref\">Transform2D</span></a> to another <a class=\"reference internal\" href=\"class_node2d.html#class-node2d\"><span class=\"std std-ref\">Node2D</span></a> derived node (called the remote node) in the scene.</p>\n<p>It can be set to update another node's position, rotation and/or scale. It can use either global or local coordinates.</p>\n"
            },
            "class_remotetransform3d": {
                "url": "https://docs.godotengine.org/en/4.1/classes/class_remotetransform3d.html",
                "title": "RemoteTransform3D",
                "blurb": "<p><strong>Inherits:</strong> <a class=\"reference internal\" href=\"class_node3d.html#class-node3d\"><span class=\"std std-ref\">Node3D</span></a> <strong>&lt;</strong> <a class=\"reference internal\" href=\"class_node.html#class-node\"><span class=\"std std-ref\">Node</span></a> <strong>&lt;</strong> <a class=\"reference internal\" href=\"class_object.html#class-object\"><span class=\"std std-ref\">Object</span></a></p><p>RemoteTransform3D pushes its own <a class=\"reference internal\" href=\"class_transform3d.html#class-transform3d\"><span class=\"std std-ref\">Transform3D</span></a> to another <a class=\"reference internal\" href=\"class_node3d.html#class-node3d\"><span class=\"std std-ref\">Node3D</span></a> derived Node in the scene.</p>",
                "description": "\n\n<p>RemoteTransform3D pushes its own <a class=\"reference internal\" href=\"class_transform3d.html#class-transform3d\"><span class=\"std std-ref\">Transform3D</span></a> to another <a class=\"reference internal\" href=\"class_node3d.html#class-node3d\"><span class=\"std std-ref\">Node3D</span></a> derived Node (called the remote node) in the scene.</p>\n<p>It can be set to update another Node's position, rotation and/or scale. It can use either global or local coordinates.</p>\n"
            },
            "class_resourcepreloader": {
                "url": "https://docs.godotengine.org/en/4.1/classes/class_resourcepreloader.html",
                "title": "ResourcePreloader",
                "blurb": "<p><strong>Inherits:</strong> <a class=\"reference internal\" href=\"class_node.html#class-node\"><span class=\"std std-ref\">Node</span></a> <strong>&lt;</strong> <a class=\"reference internal\" href=\"class_object.html#class-object\"><span class=\"std std-ref\">Object</span></a></p><p>A node used to preload sub-resources inside a scene.</p>",
                "description": "\n\n<p>This node is used to preload sub-resources inside a scene, so when the scene is loaded, all the resources are ready to use and can be retrieved from the preloader. You can add the resources using the ResourcePreloader tab when the node is selected.</p>\n<p>GDScript has a simplified <a class=\"reference internal\" href=\"class_%40gdscript.html#class-gdscript-method-preload\"><span class=\"std std-ref\">@GDScript.preload</span></a> built-in method which can be used in most situations, leaving the use of <strong>ResourcePreloader</strong> for more advanced scenarios.</p>\n"
            },
            "class_richtextlabel": {
                "url": "https://docs.godotengine.org/en/4.1/classes/class_richtextlabel.html",
                "title": "RichTextLabel",
                "blurb": "<p><strong>Inherits:</strong> <a class=\"reference internal\" href=\"class_control.html#class-control\"><span class=\"std std-ref\">Control</span></a> <strong>&lt;</strong> <a class=\"reference internal\" href=\"class_canvasitem.html#class-canvasitem\"><span class=\"std std-ref\">CanvasItem</span></a> <strong>&lt;</strong> <a class=\"reference internal\" href=\"class_node.html#class-node\"><span class=\"std std-ref\">Node</span></a> <strong>&lt;</strong> <a class=\"reference internal\" href=\"class_object.html#class-object\"><span class=\"std std-ref\">Object</span></a></p><p>A control for displaying text that can contain different font styles, images, and basic formatting.</p>",
                "description": "\n\n<p>A control for displaying text that can contain custom fonts, images, and basic formatting. <strong>RichTextLabel</strong> manages these as an internal tag stack. It also adapts itself to given width/heights.</p>\n<p><strong>Note:</strong> Assignments to <a class=\"reference internal\" href=\"#class-richtextlabel-property-text\"><span class=\"std std-ref\">text</span></a> clear the tag stack and reconstruct it from the property's contents. Any edits made to <a class=\"reference internal\" href=\"#class-richtextlabel-property-text\"><span class=\"std std-ref\">text</span></a> will erase previous edits made from other manual sources such as <a class=\"reference internal\" href=\"#class-richtextlabel-method-append-text\"><span class=\"std std-ref\">append_text</span></a> and the <code class=\"docutils literal notranslate\"><span class=\"pre\">push_*</span></code> / <a class=\"reference internal\" href=\"#class-richtextlabel-method-pop\"><span class=\"std std-ref\">pop</span></a> methods.</p>\n<p><strong>Note:</strong> RichTextLabel doesn't support entangled BBCode tags. For example, instead of using <code class=\"docutils literal notranslate\"><span class=\"pre\">[b]bold[i]bold</span> <span class=\"pre\">italic[/b]italic[/i]</span></code>, use <code class=\"docutils literal notranslate\"><span class=\"pre\">[b]bold[i]bold</span> <span class=\"pre\">italic[/i][/b][i]italic[/i]</span></code>.</p>\n<p><strong>Note:</strong> <code class=\"docutils literal notranslate\"><span class=\"pre\">push_*/pop_*</span></code> functions won't affect BBCode.</p>\n<p><strong>Note:</strong> Unlike <a class=\"reference internal\" href=\"class_label.html#class-label\"><span class=\"std std-ref\">Label</span></a>, <strong>RichTextLabel</strong> doesn't have a <em>property</em> to horizontally align text to the center. Instead, enable <a class=\"reference internal\" href=\"#class-richtextlabel-property-bbcode-enabled\"><span class=\"std std-ref\">bbcode_enabled</span></a> and surround the text in a <code class=\"docutils literal notranslate\"><span class=\"pre\">[center]</span></code> tag as follows: <code class=\"docutils literal notranslate\"><span class=\"pre\">[center]Example[/center]</span></code>. There is currently no built-in way to vertically align text either, but this can be emulated by relying on anchors/containers and the <a class=\"reference internal\" href=\"#class-richtextlabel-property-fit-content\"><span class=\"std std-ref\">fit_content</span></a> property.</p>\n"
            },
            "class_rigidbody2d": {
                "url": "https://docs.godotengine.org/en/4.1/classes/class_rigidbody2d.html",
                "title": "RigidBody2D",
                "blurb": "<p><strong>Inherits:</strong> <a class=\"reference internal\" href=\"class_physicsbody2d.html#class-physicsbody2d\"><span class=\"std std-ref\">PhysicsBody2D</span></a> <strong>&lt;</strong> <a class=\"reference internal\" href=\"class_collisionobject2d.html#class-collisionobject2d\"><span class=\"std std-ref\">CollisionObject2D</span></a> <strong>&lt;</strong> <a class=\"reference internal\" href=\"class_node2d.html#class-node2d\"><span class=\"std std-ref\">Node2D</span></a> <strong>&lt;</strong> <a class=\"reference internal\" href=\"class_canvasitem.html#class-canvasitem\"><span class=\"std std-ref\">CanvasItem</span></a> <strong>&lt;</strong> <a class=\"reference internal\" href=\"class_node.html#class-node\"><span class=\"std std-ref\">Node</span></a> <strong>&lt;</strong> <a class=\"reference internal\" href=\"class_object.html#class-object\"><span class=\"std std-ref\">Object</span></a></p><p><strong>Inherited By:</strong> <a class=\"reference internal\" href=\"class_physicalbone2d.html#class-physicalbone2d\"><span class=\"std std-ref\">PhysicalBone2D</span></a></p><p>A 2D physics body that is moved by a physics simulation.</p>",
                "description": "\n\n<p><strong>RigidBody2D</strong> implements full 2D physics. It cannot be controlled directly, instead, you must apply forces to it (gravity, impulses, etc.), and the physics simulation will calculate the resulting movement, rotation, react to collisions, and affect other physics bodies in its path.</p>\n<p>The body's behavior can be adjusted via <a class=\"reference internal\" href=\"#class-rigidbody2d-property-lock-rotation\"><span class=\"std std-ref\">lock_rotation</span></a>, <a class=\"reference internal\" href=\"#class-rigidbody2d-property-freeze\"><span class=\"std std-ref\">freeze</span></a>, and <a class=\"reference internal\" href=\"#class-rigidbody2d-property-freeze-mode\"><span class=\"std std-ref\">freeze_mode</span></a>. By changing various properties of the object, such as <a class=\"reference internal\" href=\"#class-rigidbody2d-property-mass\"><span class=\"std std-ref\">mass</span></a>, you can control how the physics simulation acts on it.</p>\n<p>A rigid body will always maintain its shape and size, even when forces are applied to it. It is useful for objects that can be interacted with in an environment, such as a tree that can be knocked over or a stack of crates that can be pushed around.</p>\n<p>If you need to override the default physics behavior, you can write a custom force integration function. See <a class=\"reference internal\" href=\"#class-rigidbody2d-property-custom-integrator\"><span class=\"std std-ref\">custom_integrator</span></a>.</p>\n<p><strong>Note:</strong> Changing the 2D transform or <a class=\"reference internal\" href=\"#class-rigidbody2d-property-linear-velocity\"><span class=\"std std-ref\">linear_velocity</span></a> of a <strong>RigidBody2D</strong> very often may lead to some unpredictable behaviors. If you need to directly affect the body, prefer <a class=\"reference internal\" href=\"#class-rigidbody2d-method-integrate-forces\"><span class=\"std std-ref\">_integrate_forces</span></a> as it allows you to directly access the physics state.</p>\n"
            },
            "class_rigidbody3d": {
                "url": "https://docs.godotengine.org/en/4.1/classes/class_rigidbody3d.html",
                "title": "RigidBody3D",
                "blurb": "<p><strong>Inherits:</strong> <a class=\"reference internal\" href=\"class_physicsbody3d.html#class-physicsbody3d\"><span class=\"std std-ref\">PhysicsBody3D</span></a> <strong>&lt;</strong> <a class=\"reference internal\" href=\"class_collisionobject3d.html#class-collisionobject3d\"><span class=\"std std-ref\">CollisionObject3D</span></a> <strong>&lt;</strong> <a class=\"reference internal\" href=\"class_node3d.html#class-node3d\"><span class=\"std std-ref\">Node3D</span></a> <strong>&lt;</strong> <a class=\"reference internal\" href=\"class_node.html#class-node\"><span class=\"std std-ref\">Node</span></a> <strong>&lt;</strong> <a class=\"reference internal\" href=\"class_object.html#class-object\"><span class=\"std std-ref\">Object</span></a></p><p><strong>Inherited By:</strong> <a class=\"reference internal\" href=\"class_vehiclebody3d.html#class-vehiclebody3d\"><span class=\"std std-ref\">VehicleBody3D</span></a></p><p>A 3D physics body that is moved by a physics simulation.</p>",
                "description": "\n\n<p><strong>RigidBody3D</strong> implements full 3D physics. It cannot be controlled directly, instead, you must apply forces to it (gravity, impulses, etc.), and the physics simulation will calculate the resulting movement, rotation, react to collisions, and affect other physics bodies in its path.</p>\n<p>The body's behavior can be adjusted via <a class=\"reference internal\" href=\"#class-rigidbody3d-property-lock-rotation\"><span class=\"std std-ref\">lock_rotation</span></a>, <a class=\"reference internal\" href=\"#class-rigidbody3d-property-freeze\"><span class=\"std std-ref\">freeze</span></a>, and <a class=\"reference internal\" href=\"#class-rigidbody3d-property-freeze-mode\"><span class=\"std std-ref\">freeze_mode</span></a>. By changing various properties of the object, such as <a class=\"reference internal\" href=\"#class-rigidbody3d-property-mass\"><span class=\"std std-ref\">mass</span></a>, you can control how the physics simulation acts on it.</p>\n<p>A rigid body will always maintain its shape and size, even when forces are applied to it. It is useful for objects that can be interacted with in an environment, such as a tree that can be knocked over or a stack of crates that can be pushed around.</p>\n<p>If you need to override the default physics behavior, you can write a custom force integration function. See <a class=\"reference internal\" href=\"#class-rigidbody3d-property-custom-integrator\"><span class=\"std std-ref\">custom_integrator</span></a>.</p>\n<p><strong>Note:</strong> Changing the 3D transform or <a class=\"reference internal\" href=\"#class-rigidbody3d-property-linear-velocity\"><span class=\"std std-ref\">linear_velocity</span></a> of a <strong>RigidBody3D</strong> very often may lead to some unpredictable behaviors. If you need to directly affect the body, prefer <a class=\"reference internal\" href=\"#class-rigidbody3d-method-integrate-forces\"><span class=\"std std-ref\">_integrate_forces</span></a> as it allows you to directly access the physics state.</p>\n"
            },
            "class_rootmotionview": {
                "url": "https://docs.godotengine.org/en/4.1/classes/class_rootmotionview.html",
                "title": "RootMotionView",
                "blurb": "<p><strong>Inherits:</strong> <a class=\"reference internal\" href=\"class_visualinstance3d.html#class-visualinstance3d\"><span class=\"std std-ref\">VisualInstance3D</span></a> <strong>&lt;</strong> <a class=\"reference internal\" href=\"class_node3d.html#class-node3d\"><span class=\"std std-ref\">Node3D</span></a> <strong>&lt;</strong> <a class=\"reference internal\" href=\"class_node.html#class-node\"><span class=\"std std-ref\">Node</span></a> <strong>&lt;</strong> <a class=\"reference internal\" href=\"class_object.html#class-object\"><span class=\"std std-ref\">Object</span></a></p><p>Editor-only helper for setting up root motion in <a class=\"reference internal\" href=\"class_animationtree.html#class-animationtree\"><span class=\"std std-ref\">AnimationTree</span></a>.</p>",
                "description": "\n\n<p><em>Root motion</em> refers to an animation technique where a mesh's skeleton is used to give impulse to a character. When working with 3D animations, a popular technique is for animators to use the root skeleton bone to give motion to the rest of the skeleton. This allows animating characters in a way where steps actually match the floor below. It also allows precise interaction with objects during cinematics. See also <a class=\"reference internal\" href=\"class_animationtree.html#class-animationtree\"><span class=\"std std-ref\">AnimationTree</span></a>.</p>\n<p><strong>Note:</strong> <strong>RootMotionView</strong> is only visible in the editor. It will be hidden automatically in the running project.</p>\n"
            },
            "class_scriptcreatedialog": {
                "url": "https://docs.godotengine.org/en/4.1/classes/class_scriptcreatedialog.html",
                "title": "ScriptCreateDialog",
                "blurb": "<p><strong>Inherits:</strong> <a class=\"reference internal\" href=\"class_confirmationdialog.html#class-confirmationdialog\"><span class=\"std std-ref\">ConfirmationDialog</span></a> <strong>&lt;</strong> <a class=\"reference internal\" href=\"class_acceptdialog.html#class-acceptdialog\"><span class=\"std std-ref\">AcceptDialog</span></a> <strong>&lt;</strong> <a class=\"reference internal\" href=\"class_window.html#class-window\"><span class=\"std std-ref\">Window</span></a> <strong>&lt;</strong> <a class=\"reference internal\" href=\"class_viewport.html#class-viewport\"><span class=\"std std-ref\">Viewport</span></a> <strong>&lt;</strong> <a class=\"reference internal\" href=\"class_node.html#class-node\"><span class=\"std std-ref\">Node</span></a> <strong>&lt;</strong> <a class=\"reference internal\" href=\"class_object.html#class-object\"><span class=\"std std-ref\">Object</span></a></p><p>Godot editor's popup dialog for creating new <a class=\"reference internal\" href=\"class_script.html#class-script\"><span class=\"std std-ref\">Script</span></a> files.</p>",
                "description": "\n\n<p>The <strong>ScriptCreateDialog</strong> creates script files according to a given template for a given scripting language. The standard use is to configure its fields prior to calling one of the <a class=\"reference internal\" href=\"class_window.html#class-window-method-popup\"><span class=\"std std-ref\">Window.popup</span></a> methods.</p>\n<div class=\"sphinx-tabs docutils container\">\n<div aria-label=\"Tabbed content\" class=\"closeable\" role=\"tablist\"><button aria-controls=\"panel-0-R0RTY3JpcHQ=\" aria-selected=\"true\" class=\"sphinx-tabs-tab code-tab group-tab\" id=\"tab-0-R0RTY3JpcHQ=\" name=\"R0RTY3JpcHQ=\" role=\"tab\" tabindex=\"0\">GDScript</button><button aria-controls=\"panel-0-QyM=\" aria-selected=\"false\" class=\"sphinx-tabs-tab code-tab group-tab\" id=\"tab-0-QyM=\" name=\"QyM=\" role=\"tab\" tabindex=\"-1\">C#</button></div><div aria-labelledby=\"tab-0-R0RTY3JpcHQ=\" class=\"sphinx-tabs-panel code-tab group-tab\" id=\"panel-0-R0RTY3JpcHQ=\" name=\"R0RTY3JpcHQ=\" role=\"tabpanel\" tabindex=\"0\"><div class=\"highlight-gdscript notranslate\"><div class=\"highlight\"><pre><span></span><span class=\"k\">func</span> <span class=\"n\">_ready</span><span class=\"p\">():</span>\n    <span class=\"k\">var</span> <span class=\"n\">dialog</span> <span class=\"o\">=</span> <span class=\"n\">ScriptCreateDialog</span><span class=\"o\">.</span><span class=\"n\">new</span><span class=\"p\">();</span>\n    <span class=\"n\">dialog</span><span class=\"o\">.</span><span class=\"n\">config</span><span class=\"p\">(</span><span class=\"s2\">\"Node\"</span><span class=\"p\">,</span> <span class=\"s2\">\"res://new_node.gd\"</span><span class=\"p\">)</span> <span class=\"c1\"># For in-engine types.</span>\n    <span class=\"n\">dialog</span><span class=\"o\">.</span><span class=\"n\">config</span><span class=\"p\">(</span><span class=\"s2\">\"</span><span class=\"se\">\\\"</span><span class=\"s2\">res://base_node.gd</span><span class=\"se\">\\\"</span><span class=\"s2\">\"</span><span class=\"p\">,</span> <span class=\"s2\">\"res://derived_node.gd\"</span><span class=\"p\">)</span> <span class=\"c1\"># For script types.</span>\n    <span class=\"n\">dialog</span><span class=\"o\">.</span><span class=\"n\">popup_centered</span><span class=\"p\">()</span>\n</pre></div>\n</div>\n</div><div aria-labelledby=\"tab-0-QyM=\" class=\"sphinx-tabs-panel code-tab group-tab\" hidden=\"true\" id=\"panel-0-QyM=\" name=\"QyM=\" role=\"tabpanel\" tabindex=\"0\"><div class=\"highlight-csharp notranslate\"><div class=\"highlight\"><pre><span></span><span class=\"k\">public</span><span class=\"w\"> </span><span class=\"k\">override</span><span class=\"w\"> </span><span class=\"k\">void</span><span class=\"w\"> </span><span class=\"nf\">_Ready</span><span class=\"p\">()</span>\n<span class=\"p\">{</span>\n<span class=\"w\">    </span><span class=\"kt\">var</span><span class=\"w\"> </span><span class=\"n\">dialog</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"k\">new</span><span class=\"w\"> </span><span class=\"n\">ScriptCreateDialog</span><span class=\"p\">();</span>\n<span class=\"w\">    </span><span class=\"n\">dialog</span><span class=\"p\">.</span><span class=\"n\">Config</span><span class=\"p\">(</span><span class=\"s\">\"Node\"</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"s\">\"res://NewNode.cs\"</span><span class=\"p\">);</span><span class=\"w\"> </span><span class=\"c1\">// For in-engine types.</span>\n<span class=\"w\">    </span><span class=\"n\">dialog</span><span class=\"p\">.</span><span class=\"n\">Config</span><span class=\"p\">(</span><span class=\"s\">\"\\\"res://BaseNode.cs\\\"\"</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"s\">\"res://DerivedNode.cs\"</span><span class=\"p\">);</span><span class=\"w\"> </span><span class=\"c1\">// For script types.</span>\n<span class=\"w\">    </span><span class=\"n\">dialog</span><span class=\"p\">.</span><span class=\"n\">PopupCentered</span><span class=\"p\">();</span>\n<span class=\"p\">}</span>\n</pre></div>\n</div>\n</div></div>\n"
            },
            "class_scripteditor": {
                "url": "https://docs.godotengine.org/en/4.1/classes/class_scripteditor.html",
                "title": "ScriptEditor",
                "blurb": "<p><strong>Inherits:</strong> <a class=\"reference internal\" href=\"class_panelcontainer.html#class-panelcontainer\"><span class=\"std std-ref\">PanelContainer</span></a> <strong>&lt;</strong> <a class=\"reference internal\" href=\"class_container.html#class-container\"><span class=\"std std-ref\">Container</span></a> <strong>&lt;</strong> <a class=\"reference internal\" href=\"class_control.html#class-control\"><span class=\"std std-ref\">Control</span></a> <strong>&lt;</strong> <a class=\"reference internal\" href=\"class_canvasitem.html#class-canvasitem\"><span class=\"std std-ref\">CanvasItem</span></a> <strong>&lt;</strong> <a class=\"reference internal\" href=\"class_node.html#class-node\"><span class=\"std std-ref\">Node</span></a> <strong>&lt;</strong> <a class=\"reference internal\" href=\"class_object.html#class-object\"><span class=\"std std-ref\">Object</span></a></p><p>Godot editor's script editor.</p>",
                "description": "\n\n<p>Godot editor's script editor.</p>\n<p><strong>Note:</strong> This class shouldn't be instantiated directly. Instead, access the singleton using <a class=\"reference internal\" href=\"class_editorinterface.html#class-editorinterface-method-get-script-editor\"><span class=\"std std-ref\">EditorInterface.get_script_editor</span></a>.</p>\n"
            },
            "class_scripteditorbase": {
                "url": "https://docs.godotengine.org/en/4.1/classes/class_scripteditorbase.html",
                "title": "ScriptEditorBase",
                "blurb": "<p><strong>Inherits:</strong> <a class=\"reference internal\" href=\"class_vboxcontainer.html#class-vboxcontainer\"><span class=\"std std-ref\">VBoxContainer</span></a> <strong>&lt;</strong> <a class=\"reference internal\" href=\"class_boxcontainer.html#class-boxcontainer\"><span class=\"std std-ref\">BoxContainer</span></a> <strong>&lt;</strong> <a class=\"reference internal\" href=\"class_container.html#class-container\"><span class=\"std std-ref\">Container</span></a> <strong>&lt;</strong> <a class=\"reference internal\" href=\"class_control.html#class-control\"><span class=\"std std-ref\">Control</span></a> <strong>&lt;</strong> <a class=\"reference internal\" href=\"class_canvasitem.html#class-canvasitem\"><span class=\"std std-ref\">CanvasItem</span></a> <strong>&lt;</strong> <a class=\"reference internal\" href=\"class_node.html#class-node\"><span class=\"std std-ref\">Node</span></a> <strong>&lt;</strong> <a class=\"reference internal\" href=\"class_object.html#class-object\"><span class=\"std std-ref\">Object</span></a></p><p>Base editor for editing scripts in the <a class=\"reference internal\" href=\"class_scripteditor.html#class-scripteditor\"><span class=\"std std-ref\">ScriptEditor</span></a>.</p>",
                "description": "\n\n<p>Base editor for editing scripts in the <a class=\"reference internal\" href=\"class_scripteditor.html#class-scripteditor\"><span class=\"std std-ref\">ScriptEditor</span></a>. This does not include documentation items.</p>\n"
            },
            "class_scrollbar": {
                "url": "https://docs.godotengine.org/en/4.1/classes/class_scrollbar.html",
                "title": "ScrollBar",
                "blurb": "<p><strong>Inherits:</strong> <a class=\"reference internal\" href=\"class_range.html#class-range\"><span class=\"std std-ref\">Range</span></a> <strong>&lt;</strong> <a class=\"reference internal\" href=\"class_control.html#class-control\"><span class=\"std std-ref\">Control</span></a> <strong>&lt;</strong> <a class=\"reference internal\" href=\"class_canvasitem.html#class-canvasitem\"><span class=\"std std-ref\">CanvasItem</span></a> <strong>&lt;</strong> <a class=\"reference internal\" href=\"class_node.html#class-node\"><span class=\"std std-ref\">Node</span></a> <strong>&lt;</strong> <a class=\"reference internal\" href=\"class_object.html#class-object\"><span class=\"std std-ref\">Object</span></a></p><p><strong>Inherited By:</strong> <a class=\"reference internal\" href=\"class_hscrollbar.html#class-hscrollbar\"><span class=\"std std-ref\">HScrollBar</span></a>, <a class=\"reference internal\" href=\"class_vscrollbar.html#class-vscrollbar\"><span class=\"std std-ref\">VScrollBar</span></a></p><p>Abstract base class for scrollbars.</p>",
                "description": "\n\n<p>Abstract base class for scrollbars, typically used to navigate through content that extends beyond the visible area of a control. Scrollbars are <a class=\"reference internal\" href=\"class_range.html#class-range\"><span class=\"std std-ref\">Range</span></a>-based controls.</p>\n"
            },
            "class_scrollcontainer": {
                "url": "https://docs.godotengine.org/en/4.1/classes/class_scrollcontainer.html",
                "title": "ScrollContainer",
                "blurb": "<p><strong>Inherits:</strong> <a class=\"reference internal\" href=\"class_container.html#class-container\"><span class=\"std std-ref\">Container</span></a> <strong>&lt;</strong> <a class=\"reference internal\" href=\"class_control.html#class-control\"><span class=\"std std-ref\">Control</span></a> <strong>&lt;</strong> <a class=\"reference internal\" href=\"class_canvasitem.html#class-canvasitem\"><span class=\"std std-ref\">CanvasItem</span></a> <strong>&lt;</strong> <a class=\"reference internal\" href=\"class_node.html#class-node\"><span class=\"std std-ref\">Node</span></a> <strong>&lt;</strong> <a class=\"reference internal\" href=\"class_object.html#class-object\"><span class=\"std std-ref\">Object</span></a></p><p><strong>Inherited By:</strong> <a class=\"reference internal\" href=\"class_editorinspector.html#class-editorinspector\"><span class=\"std std-ref\">EditorInspector</span></a></p><p>A container used to provide scrollbars to a child control when needed.</p>",
                "description": "\n\n<p>A container used to provide a child control with scrollbars when needed. Scrollbars will automatically be drawn at the right (for vertical) or bottom (for horizontal) and will enable dragging to move the viewable Control (and its children) within the ScrollContainer. Scrollbars will also automatically resize the grabber based on the <a class=\"reference internal\" href=\"class_control.html#class-control-property-custom-minimum-size\"><span class=\"std std-ref\">Control.custom_minimum_size</span></a> of the Control relative to the ScrollContainer.</p>\n"
            },
            "class_separator": {
                "url": "https://docs.godotengine.org/en/4.1/classes/class_separator.html",
                "title": "Separator",
                "blurb": "<p><strong>Inherits:</strong> <a class=\"reference internal\" href=\"class_control.html#class-control\"><span class=\"std std-ref\">Control</span></a> <strong>&lt;</strong> <a class=\"reference internal\" href=\"class_canvasitem.html#class-canvasitem\"><span class=\"std std-ref\">CanvasItem</span></a> <strong>&lt;</strong> <a class=\"reference internal\" href=\"class_node.html#class-node\"><span class=\"std std-ref\">Node</span></a> <strong>&lt;</strong> <a class=\"reference internal\" href=\"class_object.html#class-object\"><span class=\"std std-ref\">Object</span></a></p><p><strong>Inherited By:</strong> <a class=\"reference internal\" href=\"class_hseparator.html#class-hseparator\"><span class=\"std std-ref\">HSeparator</span></a>, <a class=\"reference internal\" href=\"class_vseparator.html#class-vseparator\"><span class=\"std std-ref\">VSeparator</span></a></p><p>Abstract base class for separators.</p>",
                "description": "\n\n<p>Abstract base class for separators, used for separating other controls. <strong>Separator</strong>s are purely visual and normally drawn as a <a class=\"reference internal\" href=\"class_styleboxline.html#class-styleboxline\"><span class=\"std std-ref\">StyleBoxLine</span></a>.</p>\n"
            },
            "class_shaderglobalsoverride": {
                "url": "https://docs.godotengine.org/en/4.1/classes/class_shaderglobalsoverride.html",
                "title": "ShaderGlobalsOverride",
                "blurb": "<p><strong>Inherits:</strong> <a class=\"reference internal\" href=\"class_node.html#class-node\"><span class=\"std std-ref\">Node</span></a> <strong>&lt;</strong> <a class=\"reference internal\" href=\"class_object.html#class-object\"><span class=\"std std-ref\">Object</span></a></p><p>Overrides global shader parameters' values in a specific scene.</p>",
                "description": "\n\n<p>Similar to how a <a class=\"reference internal\" href=\"class_worldenvironment.html#class-worldenvironment\"><span class=\"std std-ref\">WorldEnvironment</span></a> node can be used to override the environment while a specific scene is loaded, <strong>ShaderGlobalsOverride</strong> can be used to override global shader parameters temporarily. Once the node is removed, the project-wide values for the global shader parameters are restored. See the <a class=\"reference internal\" href=\"class_renderingserver.html#class-renderingserver\"><span class=\"std std-ref\">RenderingServer</span></a> <code class=\"docutils literal notranslate\"><span class=\"pre\">global_shader_parameter_*</span></code> methods for more information.</p>\n<p><strong>Note:</strong> Only one <strong>ShaderGlobalsOverride</strong> can be used per scene. If there is more than one <strong>ShaderGlobalsOverride</strong> node in the scene tree, only the first node (in tree order) will be taken into account.</p>\n<p><strong>Note:</strong> All <strong>ShaderGlobalsOverride</strong> nodes are made part of a <code class=\"docutils literal notranslate\"><span class=\"pre\">\"shader_overrides_group\"</span></code> group when they are added to the scene tree. The currently active <strong>ShaderGlobalsOverride</strong> node also has a <code class=\"docutils literal notranslate\"><span class=\"pre\">\"shader_overrides_group_active\"</span></code> group added to it. You can use this to check which <strong>ShaderGlobalsOverride</strong> node is currently active.</p>\n"
            },
            "class_shapecast2d": {
                "url": "https://docs.godotengine.org/en/4.1/classes/class_shapecast2d.html",
                "title": "ShapeCast2D",
                "blurb": "<p><strong>Inherits:</strong> <a class=\"reference internal\" href=\"class_node2d.html#class-node2d\"><span class=\"std std-ref\">Node2D</span></a> <strong>&lt;</strong> <a class=\"reference internal\" href=\"class_canvasitem.html#class-canvasitem\"><span class=\"std std-ref\">CanvasItem</span></a> <strong>&lt;</strong> <a class=\"reference internal\" href=\"class_node.html#class-node\"><span class=\"std std-ref\">Node</span></a> <strong>&lt;</strong> <a class=\"reference internal\" href=\"class_object.html#class-object\"><span class=\"std std-ref\">Object</span></a></p><p>A 2D shape that sweeps a region of space to detect <a class=\"reference internal\" href=\"class_collisionobject2d.html#class-collisionobject2d\"><span class=\"std std-ref\">CollisionObject2D</span></a>s.</p>",
                "description": "\n\n<p>Shape casting allows to detect collision objects by sweeping its <a class=\"reference internal\" href=\"#class-shapecast2d-property-shape\"><span class=\"std std-ref\">shape</span></a> along the cast direction determined by <a class=\"reference internal\" href=\"#class-shapecast2d-property-target-position\"><span class=\"std std-ref\">target_position</span></a>. This is similar to <a class=\"reference internal\" href=\"class_raycast2d.html#class-raycast2d\"><span class=\"std std-ref\">RayCast2D</span></a>, but it allows for sweeping a region of space, rather than just a straight line. <strong>ShapeCast2D</strong> can detect multiple collision objects. It is useful for things like wide laser beams or snapping a simple shape to a floor.</p>\n<p>Immediate collision overlaps can be done with the <a class=\"reference internal\" href=\"#class-shapecast2d-property-target-position\"><span class=\"std std-ref\">target_position</span></a> set to <code class=\"docutils literal notranslate\"><span class=\"pre\">Vector2(0,</span> <span class=\"pre\">0)</span></code> and by calling <a class=\"reference internal\" href=\"#class-shapecast2d-method-force-shapecast-update\"><span class=\"std std-ref\">force_shapecast_update</span></a> within the same physics frame. This helps to overcome some limitations of <a class=\"reference internal\" href=\"class_area2d.html#class-area2d\"><span class=\"std std-ref\">Area2D</span></a> when used as an instantaneous detection area, as collision information isn't immediately available to it.</p>\n<p><strong>Note:</strong> Shape casting is more computationally expensive than ray casting.</p>\n"
            },
            "class_shapecast3d": {
                "url": "https://docs.godotengine.org/en/4.1/classes/class_shapecast3d.html",
                "title": "ShapeCast3D",
                "blurb": "<p><strong>Inherits:</strong> <a class=\"reference internal\" href=\"class_node3d.html#class-node3d\"><span class=\"std std-ref\">Node3D</span></a> <strong>&lt;</strong> <a class=\"reference internal\" href=\"class_node.html#class-node\"><span class=\"std std-ref\">Node</span></a> <strong>&lt;</strong> <a class=\"reference internal\" href=\"class_object.html#class-object\"><span class=\"std std-ref\">Object</span></a></p><p>A 3D shape that sweeps a region of space to detect <a class=\"reference internal\" href=\"class_collisionobject3d.html#class-collisionobject3d\"><span class=\"std std-ref\">CollisionObject3D</span></a>s.</p>",
                "description": "\n\n<p>Shape casting allows to detect collision objects by sweeping its <a class=\"reference internal\" href=\"#class-shapecast3d-property-shape\"><span class=\"std std-ref\">shape</span></a> along the cast direction determined by <a class=\"reference internal\" href=\"#class-shapecast3d-property-target-position\"><span class=\"std std-ref\">target_position</span></a>. This is similar to <a class=\"reference internal\" href=\"class_raycast3d.html#class-raycast3d\"><span class=\"std std-ref\">RayCast3D</span></a>, but it allows for sweeping a region of space, rather than just a straight line. <strong>ShapeCast3D</strong> can detect multiple collision objects. It is useful for things like wide laser beams or snapping a simple shape to a floor.</p>\n<p>Immediate collision overlaps can be done with the <a class=\"reference internal\" href=\"#class-shapecast3d-property-target-position\"><span class=\"std std-ref\">target_position</span></a> set to <code class=\"docutils literal notranslate\"><span class=\"pre\">Vector3(0,</span> <span class=\"pre\">0,</span> <span class=\"pre\">0)</span></code> and by calling <a class=\"reference internal\" href=\"#class-shapecast3d-method-force-shapecast-update\"><span class=\"std std-ref\">force_shapecast_update</span></a> within the same physics frame. This helps to overcome some limitations of <a class=\"reference internal\" href=\"class_area3d.html#class-area3d\"><span class=\"std std-ref\">Area3D</span></a> when used as an instantaneous detection area, as collision information isn't immediately available to it.</p>\n<p><strong>Note:</strong> Shape casting is more computationally expensive than ray casting.</p>\n"
            },
            "class_skeleton2d": {
                "url": "https://docs.godotengine.org/en/4.1/classes/class_skeleton2d.html",
                "title": "Skeleton2D",
                "blurb": "<p><strong>Inherits:</strong> <a class=\"reference internal\" href=\"class_node2d.html#class-node2d\"><span class=\"std std-ref\">Node2D</span></a> <strong>&lt;</strong> <a class=\"reference internal\" href=\"class_canvasitem.html#class-canvasitem\"><span class=\"std std-ref\">CanvasItem</span></a> <strong>&lt;</strong> <a class=\"reference internal\" href=\"class_node.html#class-node\"><span class=\"std std-ref\">Node</span></a> <strong>&lt;</strong> <a class=\"reference internal\" href=\"class_object.html#class-object\"><span class=\"std std-ref\">Object</span></a></p><p>The parent of a hierarchy of <a class=\"reference internal\" href=\"class_bone2d.html#class-bone2d\"><span class=\"std std-ref\">Bone2D</span></a>s, used to create a 2D skeletal animation.</p>",
                "description": "\n\n<p><strong>Skeleton2D</strong> parents a hierarchy of <a class=\"reference internal\" href=\"class_bone2d.html#class-bone2d\"><span class=\"std std-ref\">Bone2D</span></a> nodes. It holds a reference to each <a class=\"reference internal\" href=\"class_bone2d.html#class-bone2d\"><span class=\"std std-ref\">Bone2D</span></a>'s rest pose and acts as a single point of access to its bones.</p>\n<p>To set up different types of inverse kinematics for the given Skeleton2D, a <a class=\"reference internal\" href=\"class_skeletonmodificationstack2d.html#class-skeletonmodificationstack2d\"><span class=\"std std-ref\">SkeletonModificationStack2D</span></a> should be created. The inverse kinematics be applied by increasing <a class=\"reference internal\" href=\"class_skeletonmodificationstack2d.html#class-skeletonmodificationstack2d-property-modification-count\"><span class=\"std std-ref\">SkeletonModificationStack2D.modification_count</span></a> and creating the desired number of modifications.</p>\n"
            },
            "class_skeleton3d": {
                "url": "https://docs.godotengine.org/en/4.1/classes/class_skeleton3d.html",
                "title": "Skeleton3D",
                "blurb": "<p><strong>Inherits:</strong> <a class=\"reference internal\" href=\"class_node3d.html#class-node3d\"><span class=\"std std-ref\">Node3D</span></a> <strong>&lt;</strong> <a class=\"reference internal\" href=\"class_node.html#class-node\"><span class=\"std std-ref\">Node</span></a> <strong>&lt;</strong> <a class=\"reference internal\" href=\"class_object.html#class-object\"><span class=\"std std-ref\">Object</span></a></p><p>A node containing a bone hierarchy, used to create a 3D skeletal animation.</p>",
                "description": "\n\n<p><strong>Skeleton3D</strong> provides an interface for managing a hierarchy of bones, including pose, rest and animation (see <a class=\"reference internal\" href=\"class_animation.html#class-animation\"><span class=\"std std-ref\">Animation</span></a>). It can also use ragdoll physics.</p>\n<p>The overall transform of a bone with respect to the skeleton is determined by bone pose. Bone rest defines the initial transform of the bone pose.</p>\n<p>Note that \"global pose\" below refers to the overall transform of the bone with respect to skeleton, so it is not the actual global/world transform of the bone.</p>\n<p>To setup different types of inverse kinematics, consider using <a class=\"reference internal\" href=\"class_skeletonik3d.html#class-skeletonik3d\"><span class=\"std std-ref\">SkeletonIK3D</span></a>, or add a custom IK implementation in <a class=\"reference internal\" href=\"class_node.html#class-node-method-process\"><span class=\"std std-ref\">Node._process</span></a> as a child node.</p>\n"
            },
            "class_skeletonik3d": {
                "url": "https://docs.godotengine.org/en/4.1/classes/class_skeletonik3d.html",
                "title": "SkeletonIK3D",
                "blurb": "<p><strong>Inherits:</strong> <a class=\"reference internal\" href=\"class_node.html#class-node\"><span class=\"std std-ref\">Node</span></a> <strong>&lt;</strong> <a class=\"reference internal\" href=\"class_object.html#class-object\"><span class=\"std std-ref\">Object</span></a></p><p>A node used to rotate all bones of a <a class=\"reference internal\" href=\"class_skeleton3d.html#class-skeleton3d\"><span class=\"std std-ref\">Skeleton3D</span></a> bone chain a way that places the end bone at a desired 3D position.</p>",
                "description": "\n\n<p>SkeletonIK3D is used to rotate all bones of a <a class=\"reference internal\" href=\"class_skeleton3d.html#class-skeleton3d\"><span class=\"std std-ref\">Skeleton3D</span></a> bone chain a way that places the end bone at a desired 3D position. A typical scenario for IK in games is to place a character's feet on the ground or a character's hands on a currently held object. SkeletonIK uses FabrikInverseKinematic internally to solve the bone chain and applies the results to the <a class=\"reference internal\" href=\"class_skeleton3d.html#class-skeleton3d\"><span class=\"std std-ref\">Skeleton3D</span></a> <code class=\"docutils literal notranslate\"><span class=\"pre\">bones_global_pose_override</span></code> property for all affected bones in the chain. If fully applied, this overwrites any bone transform from <a class=\"reference internal\" href=\"class_animation.html#class-animation\"><span class=\"std std-ref\">Animation</span></a>s or bone custom poses set by users. The applied amount can be controlled with the <a class=\"reference internal\" href=\"#class-skeletonik3d-property-interpolation\"><span class=\"std std-ref\">interpolation</span></a> property.</p>\n<div class=\"highlight-gdscript notranslate\"><div class=\"highlight\"><pre><span></span><span class=\"c1\"># Apply IK effect automatically on every new frame (not the current)</span>\n<span class=\"n\">skeleton_ik_node</span><span class=\"o\">.</span><span class=\"n\">start</span><span class=\"p\">()</span>\n\n<span class=\"c1\"># Apply IK effect only on the current frame</span>\n<span class=\"n\">skeleton_ik_node</span><span class=\"o\">.</span><span class=\"n\">start</span><span class=\"p\">(</span><span class=\"bp\">true</span><span class=\"p\">)</span>\n\n<span class=\"c1\"># Stop IK effect and reset bones_global_pose_override on Skeleton</span>\n<span class=\"n\">skeleton_ik_node</span><span class=\"o\">.</span><span class=\"n\">stop</span><span class=\"p\">()</span>\n\n<span class=\"c1\"># Apply full IK effect</span>\n<span class=\"n\">skeleton_ik_node</span><span class=\"o\">.</span><span class=\"n\">set_interpolation</span><span class=\"p\">(</span><span class=\"mf\">1.0</span><span class=\"p\">)</span>\n\n<span class=\"c1\"># Apply half IK effect</span>\n<span class=\"n\">skeleton_ik_node</span><span class=\"o\">.</span><span class=\"n\">set_interpolation</span><span class=\"p\">(</span><span class=\"mf\">0.5</span><span class=\"p\">)</span>\n\n<span class=\"c1\"># Apply zero IK effect (a value at or below 0.01 also removes bones_global_pose_override on Skeleton)</span>\n<span class=\"n\">skeleton_ik_node</span><span class=\"o\">.</span><span class=\"n\">set_interpolation</span><span class=\"p\">(</span><span class=\"mf\">0.0</span><span class=\"p\">)</span>\n</pre></div>\n</div>\n<p><em>Deprecated.</em> This class is deprecated, and might be removed in a future release.</p>\n"
            },
            "class_slider": {
                "url": "https://docs.godotengine.org/en/4.1/classes/class_slider.html",
                "title": "Slider",
                "blurb": "<p><strong>Inherits:</strong> <a class=\"reference internal\" href=\"class_range.html#class-range\"><span class=\"std std-ref\">Range</span></a> <strong>&lt;</strong> <a class=\"reference internal\" href=\"class_control.html#class-control\"><span class=\"std std-ref\">Control</span></a> <strong>&lt;</strong> <a class=\"reference internal\" href=\"class_canvasitem.html#class-canvasitem\"><span class=\"std std-ref\">CanvasItem</span></a> <strong>&lt;</strong> <a class=\"reference internal\" href=\"class_node.html#class-node\"><span class=\"std std-ref\">Node</span></a> <strong>&lt;</strong> <a class=\"reference internal\" href=\"class_object.html#class-object\"><span class=\"std std-ref\">Object</span></a></p><p><strong>Inherited By:</strong> <a class=\"reference internal\" href=\"class_hslider.html#class-hslider\"><span class=\"std std-ref\">HSlider</span></a>, <a class=\"reference internal\" href=\"class_vslider.html#class-vslider\"><span class=\"std std-ref\">VSlider</span></a></p><p>Abstract base class for sliders.</p>",
                "description": "\n\n<p>Abstract base class for sliders, used to adjust a value by moving a grabber along a horizontal or vertical axis. Sliders are <a class=\"reference internal\" href=\"class_range.html#class-range\"><span class=\"std std-ref\">Range</span></a>-based controls.</p>\n"
            },
            "class_sliderjoint3d": {
                "url": "https://docs.godotengine.org/en/4.1/classes/class_sliderjoint3d.html",
                "title": "SliderJoint3D",
                "blurb": "<p><strong>Inherits:</strong> <a class=\"reference internal\" href=\"class_joint3d.html#class-joint3d\"><span class=\"std std-ref\">Joint3D</span></a> <strong>&lt;</strong> <a class=\"reference internal\" href=\"class_node3d.html#class-node3d\"><span class=\"std std-ref\">Node3D</span></a> <strong>&lt;</strong> <a class=\"reference internal\" href=\"class_node.html#class-node\"><span class=\"std std-ref\">Node</span></a> <strong>&lt;</strong> <a class=\"reference internal\" href=\"class_object.html#class-object\"><span class=\"std std-ref\">Object</span></a></p><p>A physics joint that restricts the movement of a 3D physics body along an axis relative to another physics body.</p>",
                "description": "\n\n<p>A physics joint that restricts the movement of a 3D physics body along an axis relative to another physics body. For example, Body A could be a <a class=\"reference internal\" href=\"class_staticbody3d.html#class-staticbody3d\"><span class=\"std std-ref\">StaticBody3D</span></a> representing a piston base, while Body B could be a <a class=\"reference internal\" href=\"class_rigidbody3d.html#class-rigidbody3d\"><span class=\"std std-ref\">RigidBody3D</span></a> representing the piston head, moving up and down.</p>\n"
            },
            "class_softbody3d": {
                "url": "https://docs.godotengine.org/en/4.1/classes/class_softbody3d.html",
                "title": "SoftBody3D",
                "blurb": "<p><strong>Inherits:</strong> <a class=\"reference internal\" href=\"class_meshinstance3d.html#class-meshinstance3d\"><span class=\"std std-ref\">MeshInstance3D</span></a> <strong>&lt;</strong> <a class=\"reference internal\" href=\"class_geometryinstance3d.html#class-geometryinstance3d\"><span class=\"std std-ref\">GeometryInstance3D</span></a> <strong>&lt;</strong> <a class=\"reference internal\" href=\"class_visualinstance3d.html#class-visualinstance3d\"><span class=\"std std-ref\">VisualInstance3D</span></a> <strong>&lt;</strong> <a class=\"reference internal\" href=\"class_node3d.html#class-node3d\"><span class=\"std std-ref\">Node3D</span></a> <strong>&lt;</strong> <a class=\"reference internal\" href=\"class_node.html#class-node\"><span class=\"std std-ref\">Node</span></a> <strong>&lt;</strong> <a class=\"reference internal\" href=\"class_object.html#class-object\"><span class=\"std std-ref\">Object</span></a></p><p>A deformable 3D physics mesh.</p>",
                "description": "\n\n<p>A deformable 3D physics mesh. Used to create elastic or deformable objects such as cloth, rubber, or other flexible materials.</p>\n<p><strong>Note:</strong> There are many known bugs in <strong>SoftBody3D</strong>. Therefore, it's not recommended to use them for things that can affect gameplay (such as trampolines).</p>\n"
            },
            "class_spinbox": {
                "url": "https://docs.godotengine.org/en/4.1/classes/class_spinbox.html",
                "title": "SpinBox",
                "blurb": "<p><strong>Inherits:</strong> <a class=\"reference internal\" href=\"class_range.html#class-range\"><span class=\"std std-ref\">Range</span></a> <strong>&lt;</strong> <a class=\"reference internal\" href=\"class_control.html#class-control\"><span class=\"std std-ref\">Control</span></a> <strong>&lt;</strong> <a class=\"reference internal\" href=\"class_canvasitem.html#class-canvasitem\"><span class=\"std std-ref\">CanvasItem</span></a> <strong>&lt;</strong> <a class=\"reference internal\" href=\"class_node.html#class-node\"><span class=\"std std-ref\">Node</span></a> <strong>&lt;</strong> <a class=\"reference internal\" href=\"class_object.html#class-object\"><span class=\"std std-ref\">Object</span></a></p><p>An input field for numbers.</p>",
                "description": "\n\n<p><strong>SpinBox</strong> is a numerical input text field. It allows entering integers and floating point numbers.</p>\n<p><strong>Example:</strong></p>\n<div class=\"sphinx-tabs docutils container\">\n<div aria-label=\"Tabbed content\" class=\"closeable\" role=\"tablist\"><button aria-controls=\"panel-0-R0RTY3JpcHQ=\" aria-selected=\"true\" class=\"sphinx-tabs-tab code-tab group-tab\" id=\"tab-0-R0RTY3JpcHQ=\" name=\"R0RTY3JpcHQ=\" role=\"tab\" tabindex=\"0\">GDScript</button><button aria-controls=\"panel-0-QyM=\" aria-selected=\"false\" class=\"sphinx-tabs-tab code-tab group-tab\" id=\"tab-0-QyM=\" name=\"QyM=\" role=\"tab\" tabindex=\"-1\">C#</button></div><div aria-labelledby=\"tab-0-R0RTY3JpcHQ=\" class=\"sphinx-tabs-panel code-tab group-tab\" id=\"panel-0-R0RTY3JpcHQ=\" name=\"R0RTY3JpcHQ=\" role=\"tabpanel\" tabindex=\"0\"><div class=\"highlight-gdscript notranslate\"><div class=\"highlight\"><pre><span></span><span class=\"k\">var</span> <span class=\"n\">spin_box</span> <span class=\"o\">=</span> <span class=\"n\">SpinBox</span><span class=\"o\">.</span><span class=\"n\">new</span><span class=\"p\">()</span>\n<span class=\"n\">add_child</span><span class=\"p\">(</span><span class=\"n\">spin_box</span><span class=\"p\">)</span>\n<span class=\"k\">var</span> <span class=\"n\">line_edit</span> <span class=\"o\">=</span> <span class=\"n\">spin_box</span><span class=\"o\">.</span><span class=\"n\">get_line_edit</span><span class=\"p\">()</span>\n<span class=\"n\">line_edit</span><span class=\"o\">.</span><span class=\"n\">context_menu_enabled</span> <span class=\"o\">=</span> <span class=\"bp\">false</span>\n<span class=\"n\">spin_box</span><span class=\"o\">.</span><span class=\"n\">horizontal_alignment</span> <span class=\"o\">=</span> <span class=\"n\">LineEdit</span><span class=\"o\">.</span><span class=\"n\">HORIZONTAL_ALIGNMENT_RIGHT</span>\n</pre></div>\n</div>\n</div><div aria-labelledby=\"tab-0-QyM=\" class=\"sphinx-tabs-panel code-tab group-tab\" hidden=\"true\" id=\"panel-0-QyM=\" name=\"QyM=\" role=\"tabpanel\" tabindex=\"0\"><div class=\"highlight-csharp notranslate\"><div class=\"highlight\"><pre><span></span><span class=\"kt\">var</span><span class=\"w\"> </span><span class=\"n\">spinBox</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"k\">new</span><span class=\"w\"> </span><span class=\"n\">SpinBox</span><span class=\"p\">();</span>\n<span class=\"n\">AddChild</span><span class=\"p\">(</span><span class=\"n\">spinBox</span><span class=\"p\">);</span>\n<span class=\"kt\">var</span><span class=\"w\"> </span><span class=\"n\">lineEdit</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"n\">spinBox</span><span class=\"p\">.</span><span class=\"n\">GetLineEdit</span><span class=\"p\">();</span>\n<span class=\"n\">lineEdit</span><span class=\"p\">.</span><span class=\"n\">ContextMenuEnabled</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"k\">false</span><span class=\"p\">;</span>\n<span class=\"n\">spinBox</span><span class=\"p\">.</span><span class=\"n\">AlignHorizontal</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"n\">LineEdit</span><span class=\"p\">.</span><span class=\"n\">HorizontalAlignEnum</span><span class=\"p\">.</span><span class=\"n\">Right</span><span class=\"p\">;</span>\n</pre></div>\n</div>\n</div></div>\n<p>The above code will create a <strong>SpinBox</strong>, disable context menu on it and set the text alignment to right.</p>\n<p>See <a class=\"reference internal\" href=\"class_range.html#class-range\"><span class=\"std std-ref\">Range</span></a> class for more options over the <strong>SpinBox</strong>.</p>\n<p><strong>Note:</strong> <strong>SpinBox</strong> relies on an underlying <a class=\"reference internal\" href=\"class_lineedit.html#class-lineedit\"><span class=\"std std-ref\">LineEdit</span></a> node. To theme a <strong>SpinBox</strong>'s background, add theme items for <a class=\"reference internal\" href=\"class_lineedit.html#class-lineedit\"><span class=\"std std-ref\">LineEdit</span></a> and customize them.</p>\n<p><strong>Note:</strong> If you want to implement drag and drop for the underlying <a class=\"reference internal\" href=\"class_lineedit.html#class-lineedit\"><span class=\"std std-ref\">LineEdit</span></a>, you can use <a class=\"reference internal\" href=\"class_control.html#class-control-method-set-drag-forwarding\"><span class=\"std std-ref\">Control.set_drag_forwarding</span></a> on the node returned by <a class=\"reference internal\" href=\"#class-spinbox-method-get-line-edit\"><span class=\"std std-ref\">get_line_edit</span></a>.</p>\n"
            },
            "class_splitcontainer": {
                "url": "https://docs.godotengine.org/en/4.1/classes/class_splitcontainer.html",
                "title": "SplitContainer",
                "blurb": "<p><strong>Inherits:</strong> <a class=\"reference internal\" href=\"class_container.html#class-container\"><span class=\"std std-ref\">Container</span></a> <strong>&lt;</strong> <a class=\"reference internal\" href=\"class_control.html#class-control\"><span class=\"std std-ref\">Control</span></a> <strong>&lt;</strong> <a class=\"reference internal\" href=\"class_canvasitem.html#class-canvasitem\"><span class=\"std std-ref\">CanvasItem</span></a> <strong>&lt;</strong> <a class=\"reference internal\" href=\"class_node.html#class-node\"><span class=\"std std-ref\">Node</span></a> <strong>&lt;</strong> <a class=\"reference internal\" href=\"class_object.html#class-object\"><span class=\"std std-ref\">Object</span></a></p><p><strong>Inherited By:</strong> <a class=\"reference internal\" href=\"class_hsplitcontainer.html#class-hsplitcontainer\"><span class=\"std std-ref\">HSplitContainer</span></a>, <a class=\"reference internal\" href=\"class_vsplitcontainer.html#class-vsplitcontainer\"><span class=\"std std-ref\">VSplitContainer</span></a></p><p>A container that splits two child controls horizontally or vertically and provides a grabber for adjusting the split ratio.</p>",
                "description": "\n\n<p>A container that accepts only two child controls, then arranges them horizontally or vertically and creates a divisor between them. The divisor can be dragged around to change the size relation between the child controls.</p>\n"
            },
            "class_spotlight3d": {
                "url": "https://docs.godotengine.org/en/4.1/classes/class_spotlight3d.html",
                "title": "SpotLight3D",
                "blurb": "<p><strong>Inherits:</strong> <a class=\"reference internal\" href=\"class_light3d.html#class-light3d\"><span class=\"std std-ref\">Light3D</span></a> <strong>&lt;</strong> <a class=\"reference internal\" href=\"class_visualinstance3d.html#class-visualinstance3d\"><span class=\"std std-ref\">VisualInstance3D</span></a> <strong>&lt;</strong> <a class=\"reference internal\" href=\"class_node3d.html#class-node3d\"><span class=\"std std-ref\">Node3D</span></a> <strong>&lt;</strong> <a class=\"reference internal\" href=\"class_node.html#class-node\"><span class=\"std std-ref\">Node</span></a> <strong>&lt;</strong> <a class=\"reference internal\" href=\"class_object.html#class-object\"><span class=\"std std-ref\">Object</span></a></p><p>A spotlight, such as a reflector spotlight or a lantern.</p>",
                "description": "\n\n<p>A Spotlight is a type of <a class=\"reference internal\" href=\"class_light3d.html#class-light3d\"><span class=\"std std-ref\">Light3D</span></a> node that emits lights in a specific direction, in the shape of a cone. The light is attenuated through the distance. This attenuation can be configured by changing the energy, radius and attenuation parameters of <a class=\"reference internal\" href=\"class_light3d.html#class-light3d\"><span class=\"std std-ref\">Light3D</span></a>.</p>\n<p><strong>Note:</strong> When using the Mobile rendering method, only 8 spot lights can be displayed on each mesh resource. Attempting to display more than 8 spot lights on a single mesh resource will result in spot lights flickering in and out as the camera moves. When using the Compatibility rendering method, only 8 spot lights can be displayed on each mesh resource by default, but this can be increased by adjusting <a class=\"reference internal\" href=\"class_projectsettings.html#class-projectsettings-property-rendering-limits-opengl-max-lights-per-object\"><span class=\"std std-ref\">ProjectSettings.rendering/limits/opengl/max_lights_per_object</span></a>.</p>\n<p><strong>Note:</strong> When using the Mobile or Compatibility rendering methods, spot lights will only correctly affect meshes whose visibility AABB intersects with the light's AABB. If using a shader to deform the mesh in a way that makes it go outside its AABB, <a class=\"reference internal\" href=\"class_geometryinstance3d.html#class-geometryinstance3d-property-extra-cull-margin\"><span class=\"std std-ref\">GeometryInstance3D.extra_cull_margin</span></a> must be increased on the mesh. Otherwise, the light may not be visible on the mesh.</p>\n"
            },
            "class_springarm3d": {
                "url": "https://docs.godotengine.org/en/4.1/classes/class_springarm3d.html",
                "title": "SpringArm3D",
                "blurb": "<p><strong>Inherits:</strong> <a class=\"reference internal\" href=\"class_node3d.html#class-node3d\"><span class=\"std std-ref\">Node3D</span></a> <strong>&lt;</strong> <a class=\"reference internal\" href=\"class_node.html#class-node\"><span class=\"std std-ref\">Node</span></a> <strong>&lt;</strong> <a class=\"reference internal\" href=\"class_object.html#class-object\"><span class=\"std std-ref\">Object</span></a></p><p>A 3D raycast that dynamically moves its children near the collision point.</p>",
                "description": "\n\n<p><strong>SpringArm3D</strong> casts a ray or a shape along its Z axis and moves all its direct children to the collision point, with an optional margin. This is useful for 3rd person cameras that move closer to the player when inside a tight space (you may need to exclude the player's collider from the <strong>SpringArm3D</strong>'s collision check.</p>\n"
            },
            "class_sprite2d": {
                "url": "https://docs.godotengine.org/en/4.1/classes/class_sprite2d.html",
                "title": "Sprite2D",
                "blurb": "<p><strong>Inherits:</strong> <a class=\"reference internal\" href=\"class_node2d.html#class-node2d\"><span class=\"std std-ref\">Node2D</span></a> <strong>&lt;</strong> <a class=\"reference internal\" href=\"class_canvasitem.html#class-canvasitem\"><span class=\"std std-ref\">CanvasItem</span></a> <strong>&lt;</strong> <a class=\"reference internal\" href=\"class_node.html#class-node\"><span class=\"std std-ref\">Node</span></a> <strong>&lt;</strong> <a class=\"reference internal\" href=\"class_object.html#class-object\"><span class=\"std std-ref\">Object</span></a></p><p>General-purpose sprite node.</p>",
                "description": "\n\n<p>A node that displays a 2D texture. The texture displayed can be a region from a larger atlas texture, or a frame from a sprite sheet animation.</p>\n"
            },
            "class_sprite3d": {
                "url": "https://docs.godotengine.org/en/4.1/classes/class_sprite3d.html",
                "title": "Sprite3D",
                "blurb": "<p><strong>Inherits:</strong> <a class=\"reference internal\" href=\"class_spritebase3d.html#class-spritebase3d\"><span class=\"std std-ref\">SpriteBase3D</span></a> <strong>&lt;</strong> <a class=\"reference internal\" href=\"class_geometryinstance3d.html#class-geometryinstance3d\"><span class=\"std std-ref\">GeometryInstance3D</span></a> <strong>&lt;</strong> <a class=\"reference internal\" href=\"class_visualinstance3d.html#class-visualinstance3d\"><span class=\"std std-ref\">VisualInstance3D</span></a> <strong>&lt;</strong> <a class=\"reference internal\" href=\"class_node3d.html#class-node3d\"><span class=\"std std-ref\">Node3D</span></a> <strong>&lt;</strong> <a class=\"reference internal\" href=\"class_node.html#class-node\"><span class=\"std std-ref\">Node</span></a> <strong>&lt;</strong> <a class=\"reference internal\" href=\"class_object.html#class-object\"><span class=\"std std-ref\">Object</span></a></p><p>2D sprite node in a 3D world.</p>",
                "description": "\n\n<p>A node that displays a 2D texture in a 3D environment. The texture displayed can be a region from a larger atlas texture, or a frame from a sprite sheet animation. See also <a class=\"reference internal\" href=\"class_spritebase3d.html#class-spritebase3d\"><span class=\"std std-ref\">SpriteBase3D</span></a> where properties such as the billboard mode are defined.</p>\n"
            },
            "class_spritebase3d": {
                "url": "https://docs.godotengine.org/en/4.1/classes/class_spritebase3d.html",
                "title": "SpriteBase3D",
                "blurb": "<p><strong>Inherits:</strong> <a class=\"reference internal\" href=\"class_geometryinstance3d.html#class-geometryinstance3d\"><span class=\"std std-ref\">GeometryInstance3D</span></a> <strong>&lt;</strong> <a class=\"reference internal\" href=\"class_visualinstance3d.html#class-visualinstance3d\"><span class=\"std std-ref\">VisualInstance3D</span></a> <strong>&lt;</strong> <a class=\"reference internal\" href=\"class_node3d.html#class-node3d\"><span class=\"std std-ref\">Node3D</span></a> <strong>&lt;</strong> <a class=\"reference internal\" href=\"class_node.html#class-node\"><span class=\"std std-ref\">Node</span></a> <strong>&lt;</strong> <a class=\"reference internal\" href=\"class_object.html#class-object\"><span class=\"std std-ref\">Object</span></a></p><p><strong>Inherited By:</strong> <a class=\"reference internal\" href=\"class_animatedsprite3d.html#class-animatedsprite3d\"><span class=\"std std-ref\">AnimatedSprite3D</span></a>, <a class=\"reference internal\" href=\"class_sprite3d.html#class-sprite3d\"><span class=\"std std-ref\">Sprite3D</span></a></p><p>2D sprite node in 3D environment.</p>",
                "description": "\n\n<p>A node that displays 2D texture information in a 3D environment. See also <a class=\"reference internal\" href=\"class_sprite3d.html#class-sprite3d\"><span class=\"std std-ref\">Sprite3D</span></a> where many other properties are defined.</p>\n"
            },
            "class_staticbody2d": {
                "url": "https://docs.godotengine.org/en/4.1/classes/class_staticbody2d.html",
                "title": "StaticBody2D",
                "blurb": "<p><strong>Inherits:</strong> <a class=\"reference internal\" href=\"class_physicsbody2d.html#class-physicsbody2d\"><span class=\"std std-ref\">PhysicsBody2D</span></a> <strong>&lt;</strong> <a class=\"reference internal\" href=\"class_collisionobject2d.html#class-collisionobject2d\"><span class=\"std std-ref\">CollisionObject2D</span></a> <strong>&lt;</strong> <a class=\"reference internal\" href=\"class_node2d.html#class-node2d\"><span class=\"std std-ref\">Node2D</span></a> <strong>&lt;</strong> <a class=\"reference internal\" href=\"class_canvasitem.html#class-canvasitem\"><span class=\"std std-ref\">CanvasItem</span></a> <strong>&lt;</strong> <a class=\"reference internal\" href=\"class_node.html#class-node\"><span class=\"std std-ref\">Node</span></a> <strong>&lt;</strong> <a class=\"reference internal\" href=\"class_object.html#class-object\"><span class=\"std std-ref\">Object</span></a></p><p><strong>Inherited By:</strong> <a class=\"reference internal\" href=\"class_animatablebody2d.html#class-animatablebody2d\"><span class=\"std std-ref\">AnimatableBody2D</span></a></p><p>A 2D physics body that can't be moved by external forces. When moved manually, it doesn't affect other bodies in its path.</p>",
                "description": "\n\n<p>A static 2D physics body. It can't be moved by external forces or contacts, but can be moved manually by other means such as code, <a class=\"reference internal\" href=\"class_animationplayer.html#class-animationplayer\"><span class=\"std std-ref\">AnimationPlayer</span></a>s (with <a class=\"reference internal\" href=\"class_animationplayer.html#class-animationplayer-property-playback-process-mode\"><span class=\"std std-ref\">AnimationPlayer.playback_process_mode</span></a> set to <code class=\"docutils literal notranslate\"><span class=\"pre\">ANIMATION_PROCESS_PHYSICS</span></code>), and <a class=\"reference internal\" href=\"class_remotetransform2d.html#class-remotetransform2d\"><span class=\"std std-ref\">RemoteTransform2D</span></a>.</p>\n<p>When <strong>StaticBody2D</strong> is moved, it is teleported to its new position without affecting other physics bodies in its path. If this is not desired, use <a class=\"reference internal\" href=\"class_animatablebody2d.html#class-animatablebody2d\"><span class=\"std std-ref\">AnimatableBody2D</span></a> instead.</p>\n<p><strong>StaticBody2D</strong> is useful for completely static objects like floors and walls, as well as moving surfaces like conveyor belts and circular revolving platforms (by using <a class=\"reference internal\" href=\"#class-staticbody2d-property-constant-linear-velocity\"><span class=\"std std-ref\">constant_linear_velocity</span></a> and <a class=\"reference internal\" href=\"#class-staticbody2d-property-constant-angular-velocity\"><span class=\"std std-ref\">constant_angular_velocity</span></a>).</p>\n"
            },
            "class_staticbody3d": {
                "url": "https://docs.godotengine.org/en/4.1/classes/class_staticbody3d.html",
                "title": "StaticBody3D",
                "blurb": "<p><strong>Inherits:</strong> <a class=\"reference internal\" href=\"class_physicsbody3d.html#class-physicsbody3d\"><span class=\"std std-ref\">PhysicsBody3D</span></a> <strong>&lt;</strong> <a class=\"reference internal\" href=\"class_collisionobject3d.html#class-collisionobject3d\"><span class=\"std std-ref\">CollisionObject3D</span></a> <strong>&lt;</strong> <a class=\"reference internal\" href=\"class_node3d.html#class-node3d\"><span class=\"std std-ref\">Node3D</span></a> <strong>&lt;</strong> <a class=\"reference internal\" href=\"class_node.html#class-node\"><span class=\"std std-ref\">Node</span></a> <strong>&lt;</strong> <a class=\"reference internal\" href=\"class_object.html#class-object\"><span class=\"std std-ref\">Object</span></a></p><p><strong>Inherited By:</strong> <a class=\"reference internal\" href=\"class_animatablebody3d.html#class-animatablebody3d\"><span class=\"std std-ref\">AnimatableBody3D</span></a></p><p>A 3D physics body that can't be moved by external forces. When moved manually, it doesn't affect other bodies in its path.</p>",
                "description": "\n\n<p>A static 3D physics body. It can't be moved by external forces or contacts, but can be moved manually by other means such as code, <a class=\"reference internal\" href=\"class_animationplayer.html#class-animationplayer\"><span class=\"std std-ref\">AnimationPlayer</span></a>s (with <a class=\"reference internal\" href=\"class_animationplayer.html#class-animationplayer-property-playback-process-mode\"><span class=\"std std-ref\">AnimationPlayer.playback_process_mode</span></a> set to <code class=\"docutils literal notranslate\"><span class=\"pre\">ANIMATION_PROCESS_PHYSICS</span></code>), and <a class=\"reference internal\" href=\"class_remotetransform3d.html#class-remotetransform3d\"><span class=\"std std-ref\">RemoteTransform3D</span></a>.</p>\n<p>When <strong>StaticBody3D</strong> is moved, it is teleported to its new position without affecting other physics bodies in its path. If this is not desired, use <a class=\"reference internal\" href=\"class_animatablebody3d.html#class-animatablebody3d\"><span class=\"std std-ref\">AnimatableBody3D</span></a> instead.</p>\n<p><strong>StaticBody3D</strong> is useful for completely static objects like floors and walls, as well as moving surfaces like conveyor belts and circular revolving platforms (by using <a class=\"reference internal\" href=\"#class-staticbody3d-property-constant-linear-velocity\"><span class=\"std std-ref\">constant_linear_velocity</span></a> and <a class=\"reference internal\" href=\"#class-staticbody3d-property-constant-angular-velocity\"><span class=\"std std-ref\">constant_angular_velocity</span></a>).</p>\n"
            },
            "class_subviewport": {
                "url": "https://docs.godotengine.org/en/4.1/classes/class_subviewport.html",
                "title": "SubViewport",
                "blurb": "<p><strong>Inherits:</strong> <a class=\"reference internal\" href=\"class_viewport.html#class-viewport\"><span class=\"std std-ref\">Viewport</span></a> <strong>&lt;</strong> <a class=\"reference internal\" href=\"class_node.html#class-node\"><span class=\"std std-ref\">Node</span></a> <strong>&lt;</strong> <a class=\"reference internal\" href=\"class_object.html#class-object\"><span class=\"std std-ref\">Object</span></a></p><p>An interface to a game world that doesn't create a window or draw to the screen directly.</p>",
                "description": "\n\n<p><strong>SubViewport</strong> Isolates a rectangular region of a scene to be displayed independently. This can be used, for example, to display UI in 3D space.</p>\n<p><strong>Note:</strong> <strong>SubViewport</strong> is a <a class=\"reference internal\" href=\"class_viewport.html#class-viewport\"><span class=\"std std-ref\">Viewport</span></a> that isn't a <a class=\"reference internal\" href=\"class_window.html#class-window\"><span class=\"std std-ref\">Window</span></a>, i.e. it doesn't draw anything by itself. To display anything, <strong>SubViewport</strong> must have a non-zero size and be either put inside a <a class=\"reference internal\" href=\"class_subviewportcontainer.html#class-subviewportcontainer\"><span class=\"std std-ref\">SubViewportContainer</span></a> or assigned to a <a class=\"reference internal\" href=\"class_viewporttexture.html#class-viewporttexture\"><span class=\"std std-ref\">ViewportTexture</span></a>.</p>\n"
            },
            "class_subviewportcontainer": {
                "url": "https://docs.godotengine.org/en/4.1/classes/class_subviewportcontainer.html",
                "title": "SubViewportContainer",
                "blurb": "<p><strong>Inherits:</strong> <a class=\"reference internal\" href=\"class_container.html#class-container\"><span class=\"std std-ref\">Container</span></a> <strong>&lt;</strong> <a class=\"reference internal\" href=\"class_control.html#class-control\"><span class=\"std std-ref\">Control</span></a> <strong>&lt;</strong> <a class=\"reference internal\" href=\"class_canvasitem.html#class-canvasitem\"><span class=\"std std-ref\">CanvasItem</span></a> <strong>&lt;</strong> <a class=\"reference internal\" href=\"class_node.html#class-node\"><span class=\"std std-ref\">Node</span></a> <strong>&lt;</strong> <a class=\"reference internal\" href=\"class_object.html#class-object\"><span class=\"std std-ref\">Object</span></a></p><p>A container used for displaying the contents of a <a class=\"reference internal\" href=\"class_subviewport.html#class-subviewport\"><span class=\"std std-ref\">SubViewport</span></a>.</p>",
                "description": "\n\n<p>A container that displays the contents of underlying <a class=\"reference internal\" href=\"class_subviewport.html#class-subviewport\"><span class=\"std std-ref\">SubViewport</span></a> child nodes. It uses the combined size of the <a class=\"reference internal\" href=\"class_subviewport.html#class-subviewport\"><span class=\"std std-ref\">SubViewport</span></a>s as minimum size, unless <a class=\"reference internal\" href=\"#class-subviewportcontainer-property-stretch\"><span class=\"std std-ref\">stretch</span></a> is enabled.</p>\n<p><strong>Note:</strong> Changing a <strong>SubViewportContainer</strong>'s <a class=\"reference internal\" href=\"class_control.html#class-control-property-scale\"><span class=\"std std-ref\">Control.scale</span></a> will cause its contents to appear distorted. To change its visual size without causing distortion, adjust the node's margins instead (if it's not already in a container).</p>\n<p><strong>Note:</strong> The <strong>SubViewportContainer</strong> forwards mouse-enter and mouse-exit notifications to its sub-viewports.</p>\n"
            },
            "class_tabbar": {
                "url": "https://docs.godotengine.org/en/4.1/classes/class_tabbar.html",
                "title": "TabBar",
                "blurb": "<p><strong>Inherits:</strong> <a class=\"reference internal\" href=\"class_control.html#class-control\"><span class=\"std std-ref\">Control</span></a> <strong>&lt;</strong> <a class=\"reference internal\" href=\"class_canvasitem.html#class-canvasitem\"><span class=\"std std-ref\">CanvasItem</span></a> <strong>&lt;</strong> <a class=\"reference internal\" href=\"class_node.html#class-node\"><span class=\"std std-ref\">Node</span></a> <strong>&lt;</strong> <a class=\"reference internal\" href=\"class_object.html#class-object\"><span class=\"std std-ref\">Object</span></a></p><p>A control that provides a horizontal bar with tabs.</p>",
                "description": "\n\n<p>A control that provides a horizontal bar with tabs. Similar to <a class=\"reference internal\" href=\"class_tabcontainer.html#class-tabcontainer\"><span class=\"std std-ref\">TabContainer</span></a> but is only in charge of drawing tabs, not interacting with children.</p>\n"
            },
            "class_tabcontainer": {
                "url": "https://docs.godotengine.org/en/4.1/classes/class_tabcontainer.html",
                "title": "TabContainer",
                "blurb": "<p><strong>Inherits:</strong> <a class=\"reference internal\" href=\"class_container.html#class-container\"><span class=\"std std-ref\">Container</span></a> <strong>&lt;</strong> <a class=\"reference internal\" href=\"class_control.html#class-control\"><span class=\"std std-ref\">Control</span></a> <strong>&lt;</strong> <a class=\"reference internal\" href=\"class_canvasitem.html#class-canvasitem\"><span class=\"std std-ref\">CanvasItem</span></a> <strong>&lt;</strong> <a class=\"reference internal\" href=\"class_node.html#class-node\"><span class=\"std std-ref\">Node</span></a> <strong>&lt;</strong> <a class=\"reference internal\" href=\"class_object.html#class-object\"><span class=\"std std-ref\">Object</span></a></p><p>A container that creates a tab for each child control, displaying only the active tab's control.</p>",
                "description": "\n\n<p>Arranges child controls into a tabbed view, creating a tab for each one. The active tab's corresponding control is made visible, while all other child controls are hidden. Ignores non-control children.</p>\n<p><strong>Note:</strong> The drawing of the clickable tabs is handled by this node; <a class=\"reference internal\" href=\"class_tabbar.html#class-tabbar\"><span class=\"std std-ref\">TabBar</span></a> is not needed.</p>\n"
            },
            "class_textedit": {
                "url": "https://docs.godotengine.org/en/4.1/classes/class_textedit.html",
                "title": "TextEdit",
                "blurb": "<p><strong>Inherits:</strong> <a class=\"reference internal\" href=\"class_control.html#class-control\"><span class=\"std std-ref\">Control</span></a> <strong>&lt;</strong> <a class=\"reference internal\" href=\"class_canvasitem.html#class-canvasitem\"><span class=\"std std-ref\">CanvasItem</span></a> <strong>&lt;</strong> <a class=\"reference internal\" href=\"class_node.html#class-node\"><span class=\"std std-ref\">Node</span></a> <strong>&lt;</strong> <a class=\"reference internal\" href=\"class_object.html#class-object\"><span class=\"std std-ref\">Object</span></a></p><p><strong>Inherited By:</strong> <a class=\"reference internal\" href=\"class_codeedit.html#class-codeedit\"><span class=\"std std-ref\">CodeEdit</span></a></p><p>A multiline text editor.</p>",
                "description": "\n\n<p>A multiline text editor. It also has limited facilities for editing code, such as syntax highlighting support. For more advanced facilities for editing code, see <a class=\"reference internal\" href=\"class_codeedit.html#class-codeedit\"><span class=\"std std-ref\">CodeEdit</span></a>.</p>\n<p><strong>Note:</strong> Most viewport, caret and edit methods contain a <code class=\"docutils literal notranslate\"><span class=\"pre\">caret_index</span></code> argument for <a class=\"reference internal\" href=\"#class-textedit-property-caret-multiple\"><span class=\"std std-ref\">caret_multiple</span></a> support. The argument should be one of the following: <code class=\"docutils literal notranslate\"><span class=\"pre\">-1</span></code> for all carets, <code class=\"docutils literal notranslate\"><span class=\"pre\">0</span></code> for the main caret, or greater than <code class=\"docutils literal notranslate\"><span class=\"pre\">0</span></code> for secondary carets.</p>\n<p><strong>Note:</strong> When holding down <kbd class=\"kbd docutils literal notranslate\">Alt</kbd>, the vertical scroll wheel will scroll 5 times as fast as it would normally do. This also works in the Godot script editor.</p>\n"
            },
            "class_texturebutton": {
                "url": "https://docs.godotengine.org/en/4.1/classes/class_texturebutton.html",
                "title": "TextureButton",
                "blurb": "<p><strong>Inherits:</strong> <a class=\"reference internal\" href=\"class_basebutton.html#class-basebutton\"><span class=\"std std-ref\">BaseButton</span></a> <strong>&lt;</strong> <a class=\"reference internal\" href=\"class_control.html#class-control\"><span class=\"std std-ref\">Control</span></a> <strong>&lt;</strong> <a class=\"reference internal\" href=\"class_canvasitem.html#class-canvasitem\"><span class=\"std std-ref\">CanvasItem</span></a> <strong>&lt;</strong> <a class=\"reference internal\" href=\"class_node.html#class-node\"><span class=\"std std-ref\">Node</span></a> <strong>&lt;</strong> <a class=\"reference internal\" href=\"class_object.html#class-object\"><span class=\"std std-ref\">Object</span></a></p><p>Texture-based button. Supports Pressed, Hover, Disabled and Focused states.</p>",
                "description": "\n\n<p><strong>TextureButton</strong> has the same functionality as <a class=\"reference internal\" href=\"class_button.html#class-button\"><span class=\"std std-ref\">Button</span></a>, except it uses sprites instead of Godot's <a class=\"reference internal\" href=\"class_theme.html#class-theme\"><span class=\"std std-ref\">Theme</span></a> resource. It is faster to create, but it doesn't support localization like more complex <a class=\"reference internal\" href=\"class_control.html#class-control\"><span class=\"std std-ref\">Control</span></a>s.</p>\n<p>The \"normal\" state must contain a texture (<a class=\"reference internal\" href=\"#class-texturebutton-property-texture-normal\"><span class=\"std std-ref\">texture_normal</span></a>); other textures are optional.</p>\n<p>See also <a class=\"reference internal\" href=\"class_basebutton.html#class-basebutton\"><span class=\"std std-ref\">BaseButton</span></a> which contains common properties and methods associated with this node.</p>\n"
            },
            "class_textureprogressbar": {
                "url": "https://docs.godotengine.org/en/4.1/classes/class_textureprogressbar.html",
                "title": "TextureProgressBar",
                "blurb": "<p><strong>Inherits:</strong> <a class=\"reference internal\" href=\"class_range.html#class-range\"><span class=\"std std-ref\">Range</span></a> <strong>&lt;</strong> <a class=\"reference internal\" href=\"class_control.html#class-control\"><span class=\"std std-ref\">Control</span></a> <strong>&lt;</strong> <a class=\"reference internal\" href=\"class_canvasitem.html#class-canvasitem\"><span class=\"std std-ref\">CanvasItem</span></a> <strong>&lt;</strong> <a class=\"reference internal\" href=\"class_node.html#class-node\"><span class=\"std std-ref\">Node</span></a> <strong>&lt;</strong> <a class=\"reference internal\" href=\"class_object.html#class-object\"><span class=\"std std-ref\">Object</span></a></p><p>Texture-based progress bar. Useful for loading screens and life or stamina bars.</p>",
                "description": "\n\n<p>TextureProgressBar works like <a class=\"reference internal\" href=\"class_progressbar.html#class-progressbar\"><span class=\"std std-ref\">ProgressBar</span></a>, but uses up to 3 textures instead of Godot's <a class=\"reference internal\" href=\"class_theme.html#class-theme\"><span class=\"std std-ref\">Theme</span></a> resource. It can be used to create horizontal, vertical and radial progress bars.</p>\n"
            },
            "class_texturerect": {
                "url": "https://docs.godotengine.org/en/4.1/classes/class_texturerect.html",
                "title": "TextureRect",
                "blurb": "<p><strong>Inherits:</strong> <a class=\"reference internal\" href=\"class_control.html#class-control\"><span class=\"std std-ref\">Control</span></a> <strong>&lt;</strong> <a class=\"reference internal\" href=\"class_canvasitem.html#class-canvasitem\"><span class=\"std std-ref\">CanvasItem</span></a> <strong>&lt;</strong> <a class=\"reference internal\" href=\"class_node.html#class-node\"><span class=\"std std-ref\">Node</span></a> <strong>&lt;</strong> <a class=\"reference internal\" href=\"class_object.html#class-object\"><span class=\"std std-ref\">Object</span></a></p><p>A control that displays a texture.</p>",
                "description": "\n\n<p>A control that displays a texture, for example an icon inside a GUI. The texture's placement can be controlled with the <a class=\"reference internal\" href=\"#class-texturerect-property-stretch-mode\"><span class=\"std std-ref\">stretch_mode</span></a> property. It can scale, tile, or stay centered inside its bounding rectangle.</p>\n"
            },
            "class_tilemap": {
                "url": "https://docs.godotengine.org/en/4.1/classes/class_tilemap.html",
                "title": "TileMap",
                "blurb": "<p><strong>Inherits:</strong> <a class=\"reference internal\" href=\"class_node2d.html#class-node2d\"><span class=\"std std-ref\">Node2D</span></a> <strong>&lt;</strong> <a class=\"reference internal\" href=\"class_canvasitem.html#class-canvasitem\"><span class=\"std std-ref\">CanvasItem</span></a> <strong>&lt;</strong> <a class=\"reference internal\" href=\"class_node.html#class-node\"><span class=\"std std-ref\">Node</span></a> <strong>&lt;</strong> <a class=\"reference internal\" href=\"class_object.html#class-object\"><span class=\"std std-ref\">Object</span></a></p><p>Node for 2D tile-based maps.</p>",
                "description": "\n\n<p>Node for 2D tile-based maps. Tilemaps use a <a class=\"reference internal\" href=\"class_tileset.html#class-tileset\"><span class=\"std std-ref\">TileSet</span></a> which contain a list of tiles which are used to create grid-based maps. A TileMap may have several layers, layouting tiles on top of each other.</p>\n"
            },
            "class_timer": {
                "url": "https://docs.godotengine.org/en/4.1/classes/class_timer.html",
                "title": "Timer",
                "blurb": "<p><strong>Inherits:</strong> <a class=\"reference internal\" href=\"class_node.html#class-node\"><span class=\"std std-ref\">Node</span></a> <strong>&lt;</strong> <a class=\"reference internal\" href=\"class_object.html#class-object\"><span class=\"std std-ref\">Object</span></a></p><p>A countdown timer.</p>",
                "description": "\n\n<p>Counts down a specified interval and emits a signal on reaching 0. Can be set to repeat or \"one-shot\" mode.</p>\n<p><strong>Note:</strong> Timers are affected by <a class=\"reference internal\" href=\"class_engine.html#class-engine-property-time-scale\"><span class=\"std std-ref\">Engine.time_scale</span></a>, a higher scale means quicker timeouts, and vice versa.</p>\n<p><strong>Note:</strong> To create a one-shot timer without instantiating a node, use <a class=\"reference internal\" href=\"class_scenetree.html#class-scenetree-method-create-timer\"><span class=\"std std-ref\">SceneTree.create_timer</span></a>.</p>\n"
            },
            "class_touchscreenbutton": {
                "url": "https://docs.godotengine.org/en/4.1/classes/class_touchscreenbutton.html",
                "title": "TouchScreenButton",
                "blurb": "<p><strong>Inherits:</strong> <a class=\"reference internal\" href=\"class_node2d.html#class-node2d\"><span class=\"std std-ref\">Node2D</span></a> <strong>&lt;</strong> <a class=\"reference internal\" href=\"class_canvasitem.html#class-canvasitem\"><span class=\"std std-ref\">CanvasItem</span></a> <strong>&lt;</strong> <a class=\"reference internal\" href=\"class_node.html#class-node\"><span class=\"std std-ref\">Node</span></a> <strong>&lt;</strong> <a class=\"reference internal\" href=\"class_object.html#class-object\"><span class=\"std std-ref\">Object</span></a></p><p>Button for touch screen devices for gameplay use.</p>",
                "description": "\n\n<p>TouchScreenButton allows you to create on-screen buttons for touch devices. It's intended for gameplay use, such as a unit you have to touch to move. Unlike <a class=\"reference internal\" href=\"class_button.html#class-button\"><span class=\"std std-ref\">Button</span></a>, TouchScreenButton supports multitouch out of the box. Several TouchScreenButtons can be pressed at the same time with touch input.</p>\n<p>This node inherits from <a class=\"reference internal\" href=\"class_node2d.html#class-node2d\"><span class=\"std std-ref\">Node2D</span></a>. Unlike with <a class=\"reference internal\" href=\"class_control.html#class-control\"><span class=\"std std-ref\">Control</span></a> nodes, you cannot set anchors on it. If you want to create menus or user interfaces, you may want to use <a class=\"reference internal\" href=\"class_button.html#class-button\"><span class=\"std std-ref\">Button</span></a> nodes instead. To make button nodes react to touch events, you can enable the Emulate Mouse option in the Project Settings.</p>\n<p>You can configure TouchScreenButton to be visible only on touch devices, helping you develop your game both for desktop and mobile devices.</p>\n"
            },
            "class_tree": {
                "url": "https://docs.godotengine.org/en/4.1/classes/class_tree.html",
                "title": "Tree",
                "blurb": "<p><strong>Inherits:</strong> <a class=\"reference internal\" href=\"class_control.html#class-control\"><span class=\"std std-ref\">Control</span></a> <strong>&lt;</strong> <a class=\"reference internal\" href=\"class_canvasitem.html#class-canvasitem\"><span class=\"std std-ref\">CanvasItem</span></a> <strong>&lt;</strong> <a class=\"reference internal\" href=\"class_node.html#class-node\"><span class=\"std std-ref\">Node</span></a> <strong>&lt;</strong> <a class=\"reference internal\" href=\"class_object.html#class-object\"><span class=\"std std-ref\">Object</span></a></p><p>A control used to show a set of internal <a class=\"reference internal\" href=\"class_treeitem.html#class-treeitem\"><span class=\"std std-ref\">TreeItem</span></a>s in a hierarchical structure.</p>",
                "description": "\n\n<p>A control used to show a set of internal <a class=\"reference internal\" href=\"class_treeitem.html#class-treeitem\"><span class=\"std std-ref\">TreeItem</span></a>s in a hierarchical structure. The tree items can be selected, expanded and collapsed. The tree can have multiple columns with custom controls like <a class=\"reference internal\" href=\"class_lineedit.html#class-lineedit\"><span class=\"std std-ref\">LineEdit</span></a>s, buttons and popups. It can be useful for structured displays and interactions.</p>\n<p>Trees are built via code, using <a class=\"reference internal\" href=\"class_treeitem.html#class-treeitem\"><span class=\"std std-ref\">TreeItem</span></a> objects to create the structure. They have a single root, but multiple roots can be simulated with <a class=\"reference internal\" href=\"#class-tree-property-hide-root\"><span class=\"std std-ref\">hide_root</span></a>:</p>\n<div class=\"sphinx-tabs docutils container\">\n<div aria-label=\"Tabbed content\" class=\"closeable\" role=\"tablist\"><button aria-controls=\"panel-0-R0RTY3JpcHQ=\" aria-selected=\"true\" class=\"sphinx-tabs-tab code-tab group-tab\" id=\"tab-0-R0RTY3JpcHQ=\" name=\"R0RTY3JpcHQ=\" role=\"tab\" tabindex=\"0\">GDScript</button><button aria-controls=\"panel-0-QyM=\" aria-selected=\"false\" class=\"sphinx-tabs-tab code-tab group-tab\" id=\"tab-0-QyM=\" name=\"QyM=\" role=\"tab\" tabindex=\"-1\">C#</button></div><div aria-labelledby=\"tab-0-R0RTY3JpcHQ=\" class=\"sphinx-tabs-panel code-tab group-tab\" id=\"panel-0-R0RTY3JpcHQ=\" name=\"R0RTY3JpcHQ=\" role=\"tabpanel\" tabindex=\"0\"><div class=\"highlight-gdscript notranslate\"><div class=\"highlight\"><pre><span></span><span class=\"k\">func</span> <span class=\"n\">_ready</span><span class=\"p\">():</span>\n    <span class=\"k\">var</span> <span class=\"n\">tree</span> <span class=\"o\">=</span> <span class=\"n\">Tree</span><span class=\"o\">.</span><span class=\"n\">new</span><span class=\"p\">()</span>\n    <span class=\"k\">var</span> <span class=\"n\">root</span> <span class=\"o\">=</span> <span class=\"n\">tree</span><span class=\"o\">.</span><span class=\"n\">create_item</span><span class=\"p\">()</span>\n    <span class=\"n\">tree</span><span class=\"o\">.</span><span class=\"n\">hide_root</span> <span class=\"o\">=</span> <span class=\"bp\">true</span>\n    <span class=\"k\">var</span> <span class=\"n\">child1</span> <span class=\"o\">=</span> <span class=\"n\">tree</span><span class=\"o\">.</span><span class=\"n\">create_item</span><span class=\"p\">(</span><span class=\"n\">root</span><span class=\"p\">)</span>\n    <span class=\"k\">var</span> <span class=\"n\">child2</span> <span class=\"o\">=</span> <span class=\"n\">tree</span><span class=\"o\">.</span><span class=\"n\">create_item</span><span class=\"p\">(</span><span class=\"n\">root</span><span class=\"p\">)</span>\n    <span class=\"k\">var</span> <span class=\"n\">subchild1</span> <span class=\"o\">=</span> <span class=\"n\">tree</span><span class=\"o\">.</span><span class=\"n\">create_item</span><span class=\"p\">(</span><span class=\"n\">child1</span><span class=\"p\">)</span>\n    <span class=\"n\">subchild1</span><span class=\"o\">.</span><span class=\"n\">set_text</span><span class=\"p\">(</span><span class=\"mi\">0</span><span class=\"p\">,</span> <span class=\"s2\">\"Subchild1\"</span><span class=\"p\">)</span>\n</pre></div>\n</div>\n</div><div aria-labelledby=\"tab-0-QyM=\" class=\"sphinx-tabs-panel code-tab group-tab\" hidden=\"true\" id=\"panel-0-QyM=\" name=\"QyM=\" role=\"tabpanel\" tabindex=\"0\"><div class=\"highlight-csharp notranslate\"><div class=\"highlight\"><pre><span></span><span class=\"k\">public</span><span class=\"w\"> </span><span class=\"k\">override</span><span class=\"w\"> </span><span class=\"k\">void</span><span class=\"w\"> </span><span class=\"nf\">_Ready</span><span class=\"p\">()</span>\n<span class=\"p\">{</span>\n<span class=\"w\">    </span><span class=\"kt\">var</span><span class=\"w\"> </span><span class=\"n\">tree</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"k\">new</span><span class=\"w\"> </span><span class=\"n\">Tree</span><span class=\"p\">();</span>\n<span class=\"w\">    </span><span class=\"n\">TreeItem</span><span class=\"w\"> </span><span class=\"n\">root</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"n\">tree</span><span class=\"p\">.</span><span class=\"n\">CreateItem</span><span class=\"p\">();</span>\n<span class=\"w\">    </span><span class=\"n\">tree</span><span class=\"p\">.</span><span class=\"n\">HideRoot</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"k\">true</span><span class=\"p\">;</span>\n<span class=\"w\">    </span><span class=\"n\">TreeItem</span><span class=\"w\"> </span><span class=\"n\">child1</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"n\">tree</span><span class=\"p\">.</span><span class=\"n\">CreateItem</span><span class=\"p\">(</span><span class=\"n\">root</span><span class=\"p\">);</span>\n<span class=\"w\">    </span><span class=\"n\">TreeItem</span><span class=\"w\"> </span><span class=\"n\">child2</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"n\">tree</span><span class=\"p\">.</span><span class=\"n\">CreateItem</span><span class=\"p\">(</span><span class=\"n\">root</span><span class=\"p\">);</span>\n<span class=\"w\">    </span><span class=\"n\">TreeItem</span><span class=\"w\"> </span><span class=\"n\">subchild1</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"n\">tree</span><span class=\"p\">.</span><span class=\"n\">CreateItem</span><span class=\"p\">(</span><span class=\"n\">child1</span><span class=\"p\">);</span>\n<span class=\"w\">    </span><span class=\"n\">subchild1</span><span class=\"p\">.</span><span class=\"n\">SetText</span><span class=\"p\">(</span><span class=\"m\">0</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"s\">\"Subchild1\"</span><span class=\"p\">);</span>\n<span class=\"p\">}</span>\n</pre></div>\n</div>\n</div></div>\n<p>To iterate over all the <a class=\"reference internal\" href=\"class_treeitem.html#class-treeitem\"><span class=\"std std-ref\">TreeItem</span></a> objects in a <strong>Tree</strong> object, use <a class=\"reference internal\" href=\"class_treeitem.html#class-treeitem-method-get-next\"><span class=\"std std-ref\">TreeItem.get_next</span></a> and <a class=\"reference internal\" href=\"class_treeitem.html#class-treeitem-method-get-first-child\"><span class=\"std std-ref\">TreeItem.get_first_child</span></a> after getting the root through <a class=\"reference internal\" href=\"#class-tree-method-get-root\"><span class=\"std std-ref\">get_root</span></a>. You can use <a class=\"reference internal\" href=\"class_object.html#class-object-method-free\"><span class=\"std std-ref\">Object.free</span></a> on a <a class=\"reference internal\" href=\"class_treeitem.html#class-treeitem\"><span class=\"std std-ref\">TreeItem</span></a> to remove it from the <strong>Tree</strong>.</p>\n<p><strong>Incremental search:</strong> Like <a class=\"reference internal\" href=\"class_itemlist.html#class-itemlist\"><span class=\"std std-ref\">ItemList</span></a> and <a class=\"reference internal\" href=\"class_popupmenu.html#class-popupmenu\"><span class=\"std std-ref\">PopupMenu</span></a>, <strong>Tree</strong> supports searching within the list while the control is focused. Press a key that matches the first letter of an item's name to select the first item starting with the given letter. After that point, there are two ways to perform incremental search: 1) Press the same key again before the timeout duration to select the next item starting with the same letter. 2) Press letter keys that match the rest of the word before the timeout duration to match to select the item in question directly. Both of these actions will be reset to the beginning of the list if the timeout duration has passed since the last keystroke was registered. You can adjust the timeout duration by changing <a class=\"reference internal\" href=\"class_projectsettings.html#class-projectsettings-property-gui-timers-incremental-search-max-interval-msec\"><span class=\"std std-ref\">ProjectSettings.gui/timers/incremental_search_max_interval_msec</span></a>.</p>\n"
            },
            "class_vboxcontainer": {
                "url": "https://docs.godotengine.org/en/4.1/classes/class_vboxcontainer.html",
                "title": "VBoxContainer",
                "blurb": "<p><strong>Inherits:</strong> <a class=\"reference internal\" href=\"class_boxcontainer.html#class-boxcontainer\"><span class=\"std std-ref\">BoxContainer</span></a> <strong>&lt;</strong> <a class=\"reference internal\" href=\"class_container.html#class-container\"><span class=\"std std-ref\">Container</span></a> <strong>&lt;</strong> <a class=\"reference internal\" href=\"class_control.html#class-control\"><span class=\"std std-ref\">Control</span></a> <strong>&lt;</strong> <a class=\"reference internal\" href=\"class_canvasitem.html#class-canvasitem\"><span class=\"std std-ref\">CanvasItem</span></a> <strong>&lt;</strong> <a class=\"reference internal\" href=\"class_node.html#class-node\"><span class=\"std std-ref\">Node</span></a> <strong>&lt;</strong> <a class=\"reference internal\" href=\"class_object.html#class-object\"><span class=\"std std-ref\">Object</span></a></p><p><strong>Inherited By:</strong> <a class=\"reference internal\" href=\"class_colorpicker.html#class-colorpicker\"><span class=\"std std-ref\">ColorPicker</span></a>, <a class=\"reference internal\" href=\"class_filesystemdock.html#class-filesystemdock\"><span class=\"std std-ref\">FileSystemDock</span></a>, <a class=\"reference internal\" href=\"class_scripteditorbase.html#class-scripteditorbase\"><span class=\"std std-ref\">ScriptEditorBase</span></a></p><p>A container that arranges its child controls vertically.</p>",
                "description": "\n\n<p>A variant of <a class=\"reference internal\" href=\"class_boxcontainer.html#class-boxcontainer\"><span class=\"std std-ref\">BoxContainer</span></a> that can only arrange its child controls vertically. Child controls are rearranged automatically when their minimum size changes.</p>\n"
            },
            "class_vehiclebody3d": {
                "url": "https://docs.godotengine.org/en/4.1/classes/class_vehiclebody3d.html",
                "title": "VehicleBody3D",
                "blurb": "<p><strong>Inherits:</strong> <a class=\"reference internal\" href=\"class_rigidbody3d.html#class-rigidbody3d\"><span class=\"std std-ref\">RigidBody3D</span></a> <strong>&lt;</strong> <a class=\"reference internal\" href=\"class_physicsbody3d.html#class-physicsbody3d\"><span class=\"std std-ref\">PhysicsBody3D</span></a> <strong>&lt;</strong> <a class=\"reference internal\" href=\"class_collisionobject3d.html#class-collisionobject3d\"><span class=\"std std-ref\">CollisionObject3D</span></a> <strong>&lt;</strong> <a class=\"reference internal\" href=\"class_node3d.html#class-node3d\"><span class=\"std std-ref\">Node3D</span></a> <strong>&lt;</strong> <a class=\"reference internal\" href=\"class_node.html#class-node\"><span class=\"std std-ref\">Node</span></a> <strong>&lt;</strong> <a class=\"reference internal\" href=\"class_object.html#class-object\"><span class=\"std std-ref\">Object</span></a></p><p>A 3D physics body that simulates the behavior of a car.</p>",
                "description": "\n\n<p>This physics body implements all the physics logic needed to simulate a car. It is based on the raycast vehicle system commonly found in physics engines. Aside from a <a class=\"reference internal\" href=\"class_collisionshape3d.html#class-collisionshape3d\"><span class=\"std std-ref\">CollisionShape3D</span></a> for the main body of the vehicle, you must also add a <a class=\"reference internal\" href=\"class_vehiclewheel3d.html#class-vehiclewheel3d\"><span class=\"std std-ref\">VehicleWheel3D</span></a> node for each wheel. You should also add a <a class=\"reference internal\" href=\"class_meshinstance3d.html#class-meshinstance3d\"><span class=\"std std-ref\">MeshInstance3D</span></a> to this node for the 3D model of the vehicle, but this model should generally not include meshes for the wheels. You can control the vehicle by using the <a class=\"reference internal\" href=\"#class-vehiclebody3d-property-brake\"><span class=\"std std-ref\">brake</span></a>, <a class=\"reference internal\" href=\"#class-vehiclebody3d-property-engine-force\"><span class=\"std std-ref\">engine_force</span></a>, and <a class=\"reference internal\" href=\"#class-vehiclebody3d-property-steering\"><span class=\"std std-ref\">steering</span></a> properties. The position or orientation of this node shouldn't be changed directly.</p>\n<p><strong>Note:</strong> The origin point of your VehicleBody3D will determine the center of gravity of your vehicle. To make the vehicle more grounded, the origin point is usually kept low, moving the <a class=\"reference internal\" href=\"class_collisionshape3d.html#class-collisionshape3d\"><span class=\"std std-ref\">CollisionShape3D</span></a> and <a class=\"reference internal\" href=\"class_meshinstance3d.html#class-meshinstance3d\"><span class=\"std std-ref\">MeshInstance3D</span></a> upwards.</p>\n<p><strong>Note:</strong> This class has known issues and isn't designed to provide realistic 3D vehicle physics. If you want advanced vehicle physics, you may have to write your own physics integration using <a class=\"reference internal\" href=\"class_characterbody3d.html#class-characterbody3d\"><span class=\"std std-ref\">CharacterBody3D</span></a> or <a class=\"reference internal\" href=\"class_rigidbody3d.html#class-rigidbody3d\"><span class=\"std std-ref\">RigidBody3D</span></a>.</p>\n"
            },
            "class_vehiclewheel3d": {
                "url": "https://docs.godotengine.org/en/4.1/classes/class_vehiclewheel3d.html",
                "title": "VehicleWheel3D",
                "blurb": "<p><strong>Inherits:</strong> <a class=\"reference internal\" href=\"class_node3d.html#class-node3d\"><span class=\"std std-ref\">Node3D</span></a> <strong>&lt;</strong> <a class=\"reference internal\" href=\"class_node.html#class-node\"><span class=\"std std-ref\">Node</span></a> <strong>&lt;</strong> <a class=\"reference internal\" href=\"class_object.html#class-object\"><span class=\"std std-ref\">Object</span></a></p><p>A 3D physics body for a <a class=\"reference internal\" href=\"class_vehiclebody3d.html#class-vehiclebody3d\"><span class=\"std std-ref\">VehicleBody3D</span></a> that simulates the behavior of a wheel.</p>",
                "description": "\n\n<p>A node used as a child of a <a class=\"reference internal\" href=\"class_vehiclebody3d.html#class-vehiclebody3d\"><span class=\"std std-ref\">VehicleBody3D</span></a> parent to simulate the behavior of one of its wheels. This node also acts as a collider to detect if the wheel is touching a surface.</p>\n<p><strong>Note:</strong> This class has known issues and isn't designed to provide realistic 3D vehicle physics. If you want advanced vehicle physics, you may need to write your own physics integration using another <a class=\"reference internal\" href=\"class_physicsbody3d.html#class-physicsbody3d\"><span class=\"std std-ref\">PhysicsBody3D</span></a> class.</p>\n"
            },
            "class_vflowcontainer": {
                "url": "https://docs.godotengine.org/en/4.1/classes/class_vflowcontainer.html",
                "title": "VFlowContainer",
                "blurb": "<p><strong>Inherits:</strong> <a class=\"reference internal\" href=\"class_flowcontainer.html#class-flowcontainer\"><span class=\"std std-ref\">FlowContainer</span></a> <strong>&lt;</strong> <a class=\"reference internal\" href=\"class_container.html#class-container\"><span class=\"std std-ref\">Container</span></a> <strong>&lt;</strong> <a class=\"reference internal\" href=\"class_control.html#class-control\"><span class=\"std std-ref\">Control</span></a> <strong>&lt;</strong> <a class=\"reference internal\" href=\"class_canvasitem.html#class-canvasitem\"><span class=\"std std-ref\">CanvasItem</span></a> <strong>&lt;</strong> <a class=\"reference internal\" href=\"class_node.html#class-node\"><span class=\"std std-ref\">Node</span></a> <strong>&lt;</strong> <a class=\"reference internal\" href=\"class_object.html#class-object\"><span class=\"std std-ref\">Object</span></a></p><p>A container that arranges its child controls vertically and wraps them around at the borders.</p>",
                "description": "\n\n<p>A variant of <a class=\"reference internal\" href=\"class_flowcontainer.html#class-flowcontainer\"><span class=\"std std-ref\">FlowContainer</span></a> that can only arrange its child controls vertically, wrapping them around at the borders. This is similar to how text in a book wraps around when no more words can fit on a line, except vertically.</p>\n"
            },
            "class_videostreamplayer": {
                "url": "https://docs.godotengine.org/en/4.1/classes/class_videostreamplayer.html",
                "title": "VideoStreamPlayer",
                "blurb": "<p><strong>Inherits:</strong> <a class=\"reference internal\" href=\"class_control.html#class-control\"><span class=\"std std-ref\">Control</span></a> <strong>&lt;</strong> <a class=\"reference internal\" href=\"class_canvasitem.html#class-canvasitem\"><span class=\"std std-ref\">CanvasItem</span></a> <strong>&lt;</strong> <a class=\"reference internal\" href=\"class_node.html#class-node\"><span class=\"std std-ref\">Node</span></a> <strong>&lt;</strong> <a class=\"reference internal\" href=\"class_object.html#class-object\"><span class=\"std std-ref\">Object</span></a></p><p>A control used for video playback.</p>",
                "description": "\n\n<p>A control used for playback of <a class=\"reference internal\" href=\"class_videostream.html#class-videostream\"><span class=\"std std-ref\">VideoStream</span></a> resources.</p>\n<p>Supported video formats are <a class=\"reference external\" href=\"https://www.theora.org/\">Ogg Theora</a> (<code class=\"docutils literal notranslate\"><span class=\"pre\">.ogv</span></code>, <a class=\"reference internal\" href=\"class_videostreamtheora.html#class-videostreamtheora\"><span class=\"std std-ref\">VideoStreamTheora</span></a>) and any format exposed via a GDExtension plugin.</p>\n<p><strong>Note:</strong> Due to a bug, VideoStreamPlayer does not support localization remapping yet.</p>\n<p><strong>Warning:</strong> On Web, video playback <em>will</em> perform poorly due to missing architecture-specific assembly optimizations.</p>\n"
            },
            "class_viewport": {
                "url": "https://docs.godotengine.org/en/4.1/classes/class_viewport.html",
                "title": "Viewport",
                "blurb": "<p><strong>Inherits:</strong> <a class=\"reference internal\" href=\"class_node.html#class-node\"><span class=\"std std-ref\">Node</span></a> <strong>&lt;</strong> <a class=\"reference internal\" href=\"class_object.html#class-object\"><span class=\"std std-ref\">Object</span></a></p><p><strong>Inherited By:</strong> <a class=\"reference internal\" href=\"class_subviewport.html#class-subviewport\"><span class=\"std std-ref\">SubViewport</span></a>, <a class=\"reference internal\" href=\"class_window.html#class-window\"><span class=\"std std-ref\">Window</span></a></p><p>Abstract base class for viewports. Encapsulates drawing and interaction with a game world.</p>",
                "description": "\n\n<p>A Viewport creates a different view into the screen, or a sub-view inside another viewport. Children 2D Nodes will display on it, and children Camera3D 3D nodes will render on it too.</p>\n<p>Optionally, a viewport can have its own 2D or 3D world, so it doesn't share what it draws with other viewports.</p>\n<p>Viewports can also choose to be audio listeners, so they generate positional audio depending on a 2D or 3D camera child of it.</p>\n<p>Also, viewports can be assigned to different screens in case the devices have multiple screens.</p>\n<p>Finally, viewports can also behave as render targets, in which case they will not be visible unless the associated texture is used to draw.</p>\n"
            },
            "class_visibleonscreenenabler2d": {
                "url": "https://docs.godotengine.org/en/4.1/classes/class_visibleonscreenenabler2d.html",
                "title": "VisibleOnScreenEnabler2D",
                "blurb": "<p><strong>Inherits:</strong> <a class=\"reference internal\" href=\"class_visibleonscreennotifier2d.html#class-visibleonscreennotifier2d\"><span class=\"std std-ref\">VisibleOnScreenNotifier2D</span></a> <strong>&lt;</strong> <a class=\"reference internal\" href=\"class_node2d.html#class-node2d\"><span class=\"std std-ref\">Node2D</span></a> <strong>&lt;</strong> <a class=\"reference internal\" href=\"class_canvasitem.html#class-canvasitem\"><span class=\"std std-ref\">CanvasItem</span></a> <strong>&lt;</strong> <a class=\"reference internal\" href=\"class_node.html#class-node\"><span class=\"std std-ref\">Node</span></a> <strong>&lt;</strong> <a class=\"reference internal\" href=\"class_object.html#class-object\"><span class=\"std std-ref\">Object</span></a></p><p>Automatically disables another node if not visible on screen.</p>",
                "description": "\n\n<p>VisibleOnScreenEnabler2D detects when it is visible on screen (just like <a class=\"reference internal\" href=\"class_visibleonscreennotifier2d.html#class-visibleonscreennotifier2d\"><span class=\"std std-ref\">VisibleOnScreenNotifier2D</span></a>) and automatically enables or disables the target node. The target node is disabled when <strong>VisibleOnScreenEnabler2D</strong> is not visible on screen (including when <a class=\"reference internal\" href=\"class_canvasitem.html#class-canvasitem-property-visible\"><span class=\"std std-ref\">CanvasItem.visible</span></a> is <code class=\"docutils literal notranslate\"><span class=\"pre\">false</span></code>), and enabled when the enabler is visible. The disabling is achieved by changing <a class=\"reference internal\" href=\"class_node.html#class-node-property-process-mode\"><span class=\"std std-ref\">Node.process_mode</span></a>.</p>\n"
            },
            "class_visibleonscreenenabler3d": {
                "url": "https://docs.godotengine.org/en/4.1/classes/class_visibleonscreenenabler3d.html",
                "title": "VisibleOnScreenEnabler3D",
                "blurb": "<p><strong>Inherits:</strong> <a class=\"reference internal\" href=\"class_visibleonscreennotifier3d.html#class-visibleonscreennotifier3d\"><span class=\"std std-ref\">VisibleOnScreenNotifier3D</span></a> <strong>&lt;</strong> <a class=\"reference internal\" href=\"class_visualinstance3d.html#class-visualinstance3d\"><span class=\"std std-ref\">VisualInstance3D</span></a> <strong>&lt;</strong> <a class=\"reference internal\" href=\"class_node3d.html#class-node3d\"><span class=\"std std-ref\">Node3D</span></a> <strong>&lt;</strong> <a class=\"reference internal\" href=\"class_node.html#class-node\"><span class=\"std std-ref\">Node</span></a> <strong>&lt;</strong> <a class=\"reference internal\" href=\"class_object.html#class-object\"><span class=\"std std-ref\">Object</span></a></p><p>Enables certain nodes only when approximately visible.</p>",
                "description": "\n\n<p>The VisibleOnScreenEnabler3D will disable <a class=\"reference internal\" href=\"class_rigidbody3d.html#class-rigidbody3d\"><span class=\"std std-ref\">RigidBody3D</span></a> and <a class=\"reference internal\" href=\"class_animationplayer.html#class-animationplayer\"><span class=\"std std-ref\">AnimationPlayer</span></a> nodes when they are not visible. It will only affect other nodes within the same scene as the VisibleOnScreenEnabler3D itself.</p>\n<p>If you just want to receive notifications, use <a class=\"reference internal\" href=\"class_visibleonscreennotifier3d.html#class-visibleonscreennotifier3d\"><span class=\"std std-ref\">VisibleOnScreenNotifier3D</span></a> instead.</p>\n<p><strong>Note:</strong> VisibleOnScreenEnabler3D uses an approximate heuristic for performance reasons. It doesn't take walls and other occlusion into account. The heuristic is an implementation detail and may change in future versions. If you need precise visibility checking, use another method such as adding an <a class=\"reference internal\" href=\"class_area3d.html#class-area3d\"><span class=\"std std-ref\">Area3D</span></a> node as a child of a <a class=\"reference internal\" href=\"class_camera3d.html#class-camera3d\"><span class=\"std std-ref\">Camera3D</span></a> node and/or <a class=\"reference internal\" href=\"class_vector3.html#class-vector3-method-dot\"><span class=\"std std-ref\">Vector3.dot</span></a>.</p>\n<p><strong>Note:</strong> VisibleOnScreenEnabler3D will not affect nodes added after scene initialization.</p>\n"
            },
            "class_visibleonscreennotifier2d": {
                "url": "https://docs.godotengine.org/en/4.1/classes/class_visibleonscreennotifier2d.html",
                "title": "VisibleOnScreenNotifier2D",
                "blurb": "<p><strong>Inherits:</strong> <a class=\"reference internal\" href=\"class_node2d.html#class-node2d\"><span class=\"std std-ref\">Node2D</span></a> <strong>&lt;</strong> <a class=\"reference internal\" href=\"class_canvasitem.html#class-canvasitem\"><span class=\"std std-ref\">CanvasItem</span></a> <strong>&lt;</strong> <a class=\"reference internal\" href=\"class_node.html#class-node\"><span class=\"std std-ref\">Node</span></a> <strong>&lt;</strong> <a class=\"reference internal\" href=\"class_object.html#class-object\"><span class=\"std std-ref\">Object</span></a></p><p><strong>Inherited By:</strong> <a class=\"reference internal\" href=\"class_visibleonscreenenabler2d.html#class-visibleonscreenenabler2d\"><span class=\"std std-ref\">VisibleOnScreenEnabler2D</span></a></p><p>Detects when the node extents are visible on screen.</p>",
                "description": "\n\n<p>The VisibleOnScreenNotifier2D detects when it is visible on the screen. It also notifies when its bounding rectangle enters or exits the screen or a viewport.</p>\n<p>If you want nodes to be disabled automatically when they exit the screen, use <a class=\"reference internal\" href=\"class_visibleonscreenenabler2d.html#class-visibleonscreenenabler2d\"><span class=\"std std-ref\">VisibleOnScreenEnabler2D</span></a> instead.</p>\n<p><strong>Note:</strong> VisibleOnScreenNotifier2D uses the render culling code to determine whether it's visible on screen, which also means that its <a class=\"reference internal\" href=\"class_canvasitem.html#class-canvasitem-property-visible\"><span class=\"std std-ref\">CanvasItem.visible</span></a> must be <code class=\"docutils literal notranslate\"><span class=\"pre\">true</span></code> to work correctly.</p>\n"
            },
            "class_visibleonscreennotifier3d": {
                "url": "https://docs.godotengine.org/en/4.1/classes/class_visibleonscreennotifier3d.html",
                "title": "VisibleOnScreenNotifier3D",
                "blurb": "<p><strong>Inherits:</strong> <a class=\"reference internal\" href=\"class_visualinstance3d.html#class-visualinstance3d\"><span class=\"std std-ref\">VisualInstance3D</span></a> <strong>&lt;</strong> <a class=\"reference internal\" href=\"class_node3d.html#class-node3d\"><span class=\"std std-ref\">Node3D</span></a> <strong>&lt;</strong> <a class=\"reference internal\" href=\"class_node.html#class-node\"><span class=\"std std-ref\">Node</span></a> <strong>&lt;</strong> <a class=\"reference internal\" href=\"class_object.html#class-object\"><span class=\"std std-ref\">Object</span></a></p><p><strong>Inherited By:</strong> <a class=\"reference internal\" href=\"class_visibleonscreenenabler3d.html#class-visibleonscreenenabler3d\"><span class=\"std std-ref\">VisibleOnScreenEnabler3D</span></a></p><p>Detects approximately when the node is visible on screen.</p>",
                "description": "\n\n<p>The VisibleOnScreenNotifier3D detects when it is visible on the screen. It also notifies when its bounding rectangle enters or exits the screen or a <a class=\"reference internal\" href=\"class_camera3d.html#class-camera3d\"><span class=\"std std-ref\">Camera3D</span></a>'s view.</p>\n<p>If you want nodes to be disabled automatically when they exit the screen, use <a class=\"reference internal\" href=\"class_visibleonscreenenabler3d.html#class-visibleonscreenenabler3d\"><span class=\"std std-ref\">VisibleOnScreenEnabler3D</span></a> instead.</p>\n<p><strong>Note:</strong> VisibleOnScreenNotifier3D uses the render culling code to determine whether it's visible on screen, which also means that its <a class=\"reference internal\" href=\"class_node3d.html#class-node3d-property-visible\"><span class=\"std std-ref\">Node3D.visible</span></a> must be <code class=\"docutils literal notranslate\"><span class=\"pre\">true</span></code> to work correctly.</p>\n"
            },
            "class_visualinstance3d": {
                "url": "https://docs.godotengine.org/en/4.1/classes/class_visualinstance3d.html",
                "title": "VisualInstance3D",
                "blurb": "<p><strong>Inherits:</strong> <a class=\"reference internal\" href=\"class_node3d.html#class-node3d\"><span class=\"std std-ref\">Node3D</span></a> <strong>&lt;</strong> <a class=\"reference internal\" href=\"class_node.html#class-node\"><span class=\"std std-ref\">Node</span></a> <strong>&lt;</strong> <a class=\"reference internal\" href=\"class_object.html#class-object\"><span class=\"std std-ref\">Object</span></a></p><p><strong>Inherited By:</strong> <a class=\"reference internal\" href=\"class_decal.html#class-decal\"><span class=\"std std-ref\">Decal</span></a>, <a class=\"reference internal\" href=\"class_fogvolume.html#class-fogvolume\"><span class=\"std std-ref\">FogVolume</span></a>, <a class=\"reference internal\" href=\"class_geometryinstance3d.html#class-geometryinstance3d\"><span class=\"std std-ref\">GeometryInstance3D</span></a>, <a class=\"reference internal\" href=\"class_gpuparticlesattractor3d.html#class-gpuparticlesattractor3d\"><span class=\"std std-ref\">GPUParticlesAttractor3D</span></a>, <a class=\"reference internal\" href=\"class_gpuparticlescollision3d.html#class-gpuparticlescollision3d\"><span class=\"std std-ref\">GPUParticlesCollision3D</span></a>, <a class=\"reference internal\" href=\"class_light3d.html#class-light3d\"><span class=\"std std-ref\">Light3D</span></a>, <a class=\"reference internal\" href=\"class_lightmapgi.html#class-lightmapgi\"><span class=\"std std-ref\">LightmapGI</span></a>, <a class=\"reference internal\" href=\"class_reflectionprobe.html#class-reflectionprobe\"><span class=\"std std-ref\">ReflectionProbe</span></a>, <a class=\"reference internal\" href=\"class_rootmotionview.html#class-rootmotionview\"><span class=\"std std-ref\">RootMotionView</span></a>, <a class=\"reference internal\" href=\"class_visibleonscreennotifier3d.html#class-visibleonscreennotifier3d\"><span class=\"std std-ref\">VisibleOnScreenNotifier3D</span></a>, <a class=\"reference internal\" href=\"class_voxelgi.html#class-voxelgi\"><span class=\"std std-ref\">VoxelGI</span></a></p><p>Parent of all visual 3D nodes.</p>",
                "description": "\n\n<p>The <strong>VisualInstance3D</strong> is used to connect a resource to a visual representation. All visual 3D nodes inherit from the <strong>VisualInstance3D</strong>. In general, you should not access the <strong>VisualInstance3D</strong> properties directly as they are accessed and managed by the nodes that inherit from <strong>VisualInstance3D</strong>. <strong>VisualInstance3D</strong> is the node representation of the <a class=\"reference internal\" href=\"class_renderingserver.html#class-renderingserver\"><span class=\"std std-ref\">RenderingServer</span></a> instance.</p>\n"
            },
            "class_voxelgi": {
                "url": "https://docs.godotengine.org/en/4.1/classes/class_voxelgi.html",
                "title": "VoxelGI",
                "blurb": "<p><strong>Inherits:</strong> <a class=\"reference internal\" href=\"class_visualinstance3d.html#class-visualinstance3d\"><span class=\"std std-ref\">VisualInstance3D</span></a> <strong>&lt;</strong> <a class=\"reference internal\" href=\"class_node3d.html#class-node3d\"><span class=\"std std-ref\">Node3D</span></a> <strong>&lt;</strong> <a class=\"reference internal\" href=\"class_node.html#class-node\"><span class=\"std std-ref\">Node</span></a> <strong>&lt;</strong> <a class=\"reference internal\" href=\"class_object.html#class-object\"><span class=\"std std-ref\">Object</span></a></p><p>Real-time global illumination (GI) probe.</p>",
                "description": "\n\n<p><strong>VoxelGI</strong>s are used to provide high-quality real-time indirect light and reflections to scenes. They precompute the effect of objects that emit light and the effect of static geometry to simulate the behavior of complex light in real-time. <strong>VoxelGI</strong>s need to be baked before having a visible effect. However, once baked, dynamic objects will receive light from them. Furthermore, lights can be fully dynamic or baked.</p>\n<p><strong>Note:</strong> <strong>VoxelGI</strong> is only supported in the Forward+ rendering method, not Mobile or Compatibility.</p>\n<p><strong>Procedural generation:</strong> <strong>VoxelGI</strong> can be baked in an exported project, which makes it suitable for procedurally generated or user-built levels as long as all the geometry is generated in advance. For games where geometry is generated at any time during gameplay, SDFGI is more suitable (see <a class=\"reference internal\" href=\"class_environment.html#class-environment-property-sdfgi-enabled\"><span class=\"std std-ref\">Environment.sdfgi_enabled</span></a>).</p>\n<p><strong>Performance:</strong> <strong>VoxelGI</strong> is relatively demanding on the GPU and is not suited to low-end hardware such as integrated graphics (consider <a class=\"reference internal\" href=\"class_lightmapgi.html#class-lightmapgi\"><span class=\"std std-ref\">LightmapGI</span></a> instead). To improve performance, adjust <a class=\"reference internal\" href=\"class_projectsettings.html#class-projectsettings-property-rendering-global-illumination-voxel-gi-quality\"><span class=\"std std-ref\">ProjectSettings.rendering/global_illumination/voxel_gi/quality</span></a> and enable <a class=\"reference internal\" href=\"class_projectsettings.html#class-projectsettings-property-rendering-global-illumination-gi-use-half-resolution\"><span class=\"std std-ref\">ProjectSettings.rendering/global_illumination/gi/use_half_resolution</span></a> in the Project Settings. To provide a fallback for low-end hardware, consider adding an option to disable <strong>VoxelGI</strong> in your project's options menus. A <strong>VoxelGI</strong> node can be disabled by hiding it.</p>\n<p><strong>Note:</strong> Meshes should have sufficiently thick walls to avoid light leaks (avoid one-sided walls). For interior levels, enclose your level geometry in a sufficiently large box and bridge the loops to close the mesh. To further prevent light leaks, you can also strategically place temporary <a class=\"reference internal\" href=\"class_meshinstance3d.html#class-meshinstance3d\"><span class=\"std std-ref\">MeshInstance3D</span></a> nodes with their <a class=\"reference internal\" href=\"class_geometryinstance3d.html#class-geometryinstance3d-property-gi-mode\"><span class=\"std std-ref\">GeometryInstance3D.gi_mode</span></a> set to <a class=\"reference internal\" href=\"class_geometryinstance3d.html#class-geometryinstance3d-constant-gi-mode-static\"><span class=\"std std-ref\">GeometryInstance3D.GI_MODE_STATIC</span></a>. These temporary nodes can then be hidden after baking the <strong>VoxelGI</strong> node.</p>\n"
            },
            "class_vscrollbar": {
                "url": "https://docs.godotengine.org/en/4.1/classes/class_vscrollbar.html",
                "title": "VScrollBar",
                "blurb": "<p><strong>Inherits:</strong> <a class=\"reference internal\" href=\"class_scrollbar.html#class-scrollbar\"><span class=\"std std-ref\">ScrollBar</span></a> <strong>&lt;</strong> <a class=\"reference internal\" href=\"class_range.html#class-range\"><span class=\"std std-ref\">Range</span></a> <strong>&lt;</strong> <a class=\"reference internal\" href=\"class_control.html#class-control\"><span class=\"std std-ref\">Control</span></a> <strong>&lt;</strong> <a class=\"reference internal\" href=\"class_canvasitem.html#class-canvasitem\"><span class=\"std std-ref\">CanvasItem</span></a> <strong>&lt;</strong> <a class=\"reference internal\" href=\"class_node.html#class-node\"><span class=\"std std-ref\">Node</span></a> <strong>&lt;</strong> <a class=\"reference internal\" href=\"class_object.html#class-object\"><span class=\"std std-ref\">Object</span></a></p><p>A vertical scrollbar that goes from top (min) to bottom (max).</p>",
                "description": "\n\n<p>A vertical scrollbar, typically used to navigate through content that extends beyond the visible height of a control. It is a <a class=\"reference internal\" href=\"class_range.html#class-range\"><span class=\"std std-ref\">Range</span></a>-based control and goes from top (min) to bottom (max). Note that this direction is the opposite of <a class=\"reference internal\" href=\"class_vslider.html#class-vslider\"><span class=\"std std-ref\">VSlider</span></a>'s.</p>\n"
            },
            "class_vseparator": {
                "url": "https://docs.godotengine.org/en/4.1/classes/class_vseparator.html",
                "title": "VSeparator",
                "blurb": "<p><strong>Inherits:</strong> <a class=\"reference internal\" href=\"class_separator.html#class-separator\"><span class=\"std std-ref\">Separator</span></a> <strong>&lt;</strong> <a class=\"reference internal\" href=\"class_control.html#class-control\"><span class=\"std std-ref\">Control</span></a> <strong>&lt;</strong> <a class=\"reference internal\" href=\"class_canvasitem.html#class-canvasitem\"><span class=\"std std-ref\">CanvasItem</span></a> <strong>&lt;</strong> <a class=\"reference internal\" href=\"class_node.html#class-node\"><span class=\"std std-ref\">Node</span></a> <strong>&lt;</strong> <a class=\"reference internal\" href=\"class_object.html#class-object\"><span class=\"std std-ref\">Object</span></a></p><p>A vertical line used for separating other controls.</p>",
                "description": "\n\n<p>A vertical separator used for separating other controls that are arranged <strong>horizontally</strong>. <strong>VSeparator</strong> is purely visual and normally drawn as a <a class=\"reference internal\" href=\"class_styleboxline.html#class-styleboxline\"><span class=\"std std-ref\">StyleBoxLine</span></a>.</p>\n"
            },
            "class_vslider": {
                "url": "https://docs.godotengine.org/en/4.1/classes/class_vslider.html",
                "title": "VSlider",
                "blurb": "<p><strong>Inherits:</strong> <a class=\"reference internal\" href=\"class_slider.html#class-slider\"><span class=\"std std-ref\">Slider</span></a> <strong>&lt;</strong> <a class=\"reference internal\" href=\"class_range.html#class-range\"><span class=\"std std-ref\">Range</span></a> <strong>&lt;</strong> <a class=\"reference internal\" href=\"class_control.html#class-control\"><span class=\"std std-ref\">Control</span></a> <strong>&lt;</strong> <a class=\"reference internal\" href=\"class_canvasitem.html#class-canvasitem\"><span class=\"std std-ref\">CanvasItem</span></a> <strong>&lt;</strong> <a class=\"reference internal\" href=\"class_node.html#class-node\"><span class=\"std std-ref\">Node</span></a> <strong>&lt;</strong> <a class=\"reference internal\" href=\"class_object.html#class-object\"><span class=\"std std-ref\">Object</span></a></p><p>A vertical slider that goes from bottom (min) to top (max).</p>",
                "description": "\n\n<p>A vertical slider, used to adjust a value by moving a grabber along a vertical axis. It is a <a class=\"reference internal\" href=\"class_range.html#class-range\"><span class=\"std std-ref\">Range</span></a>-based control and goes from bottom (min) to top (max). Note that this direction is the opposite of <a class=\"reference internal\" href=\"class_vscrollbar.html#class-vscrollbar\"><span class=\"std std-ref\">VScrollBar</span></a>'s.</p>\n"
            },
            "class_vsplitcontainer": {
                "url": "https://docs.godotengine.org/en/4.1/classes/class_vsplitcontainer.html",
                "title": "VSplitContainer",
                "blurb": "<p><strong>Inherits:</strong> <a class=\"reference internal\" href=\"class_splitcontainer.html#class-splitcontainer\"><span class=\"std std-ref\">SplitContainer</span></a> <strong>&lt;</strong> <a class=\"reference internal\" href=\"class_container.html#class-container\"><span class=\"std std-ref\">Container</span></a> <strong>&lt;</strong> <a class=\"reference internal\" href=\"class_control.html#class-control\"><span class=\"std std-ref\">Control</span></a> <strong>&lt;</strong> <a class=\"reference internal\" href=\"class_canvasitem.html#class-canvasitem\"><span class=\"std std-ref\">CanvasItem</span></a> <strong>&lt;</strong> <a class=\"reference internal\" href=\"class_node.html#class-node\"><span class=\"std std-ref\">Node</span></a> <strong>&lt;</strong> <a class=\"reference internal\" href=\"class_object.html#class-object\"><span class=\"std std-ref\">Object</span></a></p><p>A container that splits two child controls vertically and provides a grabber for adjusting the split ratio.</p>",
                "description": "\n\n<p>A container that accepts only two child controls, then arranges them vertically and creates a divisor between them. The divisor can be dragged around to change the size relation between the child controls.</p>\n"
            },
            "class_window": {
                "url": "https://docs.godotengine.org/en/4.1/classes/class_window.html",
                "title": "Window",
                "blurb": "<p><strong>Inherits:</strong> <a class=\"reference internal\" href=\"class_viewport.html#class-viewport\"><span class=\"std std-ref\">Viewport</span></a> <strong>&lt;</strong> <a class=\"reference internal\" href=\"class_node.html#class-node\"><span class=\"std std-ref\">Node</span></a> <strong>&lt;</strong> <a class=\"reference internal\" href=\"class_object.html#class-object\"><span class=\"std std-ref\">Object</span></a></p><p><strong>Inherited By:</strong> <a class=\"reference internal\" href=\"class_acceptdialog.html#class-acceptdialog\"><span class=\"std std-ref\">AcceptDialog</span></a>, <a class=\"reference internal\" href=\"class_popup.html#class-popup\"><span class=\"std std-ref\">Popup</span></a></p><p>Base class for all windows, dialogs, and popups.</p>",
                "description": "\n\n<p>A node that creates a window. The window can either be a native system window or embedded inside another <strong>Window</strong> (see <a class=\"reference internal\" href=\"class_viewport.html#class-viewport-property-gui-embed-subwindows\"><span class=\"std std-ref\">Viewport.gui_embed_subwindows</span></a>).</p>\n<p>At runtime, <strong>Window</strong>s will not close automatically when requested. You need to handle it manually using the <a class=\"reference internal\" href=\"#class-window-signal-close-requested\"><span class=\"std std-ref\">close_requested</span></a> signal (this applies both to pressing the close button and clicking outside of a popup).</p>\n"
            },
            "class_worldenvironment": {
                "url": "https://docs.godotengine.org/en/4.1/classes/class_worldenvironment.html",
                "title": "WorldEnvironment",
                "blurb": "<p><strong>Inherits:</strong> <a class=\"reference internal\" href=\"class_node.html#class-node\"><span class=\"std std-ref\">Node</span></a> <strong>&lt;</strong> <a class=\"reference internal\" href=\"class_object.html#class-object\"><span class=\"std std-ref\">Object</span></a></p><p>Default environment properties for the entire scene (post-processing effects, lighting and background settings).</p>",
                "description": "\n\n<p>The <strong>WorldEnvironment</strong> node is used to configure the default <a class=\"reference internal\" href=\"class_environment.html#class-environment\"><span class=\"std std-ref\">Environment</span></a> for the scene.</p>\n<p>The parameters defined in the <strong>WorldEnvironment</strong> can be overridden by an <a class=\"reference internal\" href=\"class_environment.html#class-environment\"><span class=\"std std-ref\">Environment</span></a> node set on the current <a class=\"reference internal\" href=\"class_camera3d.html#class-camera3d\"><span class=\"std std-ref\">Camera3D</span></a>. Additionally, only one <strong>WorldEnvironment</strong> may be instantiated in a given scene at a time.</p>\n<p>The <strong>WorldEnvironment</strong> allows the user to specify default lighting parameters (e.g. ambient lighting), various post-processing effects (e.g. SSAO, DOF, Tonemapping), and how to draw the background (e.g. solid color, skybox). Usually, these are added in order to improve the realism/color balance of the scene.</p>\n"
            },
            "class_xranchor3d": {
                "url": "https://docs.godotengine.org/en/4.1/classes/class_xranchor3d.html",
                "title": "XRAnchor3D",
                "blurb": "<p><strong>Inherits:</strong> <a class=\"reference internal\" href=\"class_xrnode3d.html#class-xrnode3d\"><span class=\"std std-ref\">XRNode3D</span></a> <strong>&lt;</strong> <a class=\"reference internal\" href=\"class_node3d.html#class-node3d\"><span class=\"std std-ref\">Node3D</span></a> <strong>&lt;</strong> <a class=\"reference internal\" href=\"class_node.html#class-node\"><span class=\"std std-ref\">Node</span></a> <strong>&lt;</strong> <a class=\"reference internal\" href=\"class_object.html#class-object\"><span class=\"std std-ref\">Object</span></a></p><p>An anchor point in AR space.</p>",
                "description": "\n\n<p>The <strong>XRAnchor3D</strong> point is a spatial node that maps a real world location identified by the AR platform to a position within the game world. For example, as long as plane detection in ARKit is on, ARKit will identify and update the position of planes (tables, floors, etc) and create anchors for them.</p>\n<p>This node is mapped to one of the anchors through its unique ID. When you receive a signal that a new anchor is available, you should add this node to your scene for that anchor. You can predefine nodes and set the ID; the nodes will simply remain on 0,0,0 until a plane is recognized.</p>\n<p>Keep in mind that, as long as plane detection is enabled, the size, placing and orientation of an anchor will be updated as the detection logic learns more about the real world out there especially if only part of the surface is in view.</p>\n"
            },
            "class_xrcamera3d": {
                "url": "https://docs.godotengine.org/en/4.1/classes/class_xrcamera3d.html",
                "title": "XRCamera3D",
                "blurb": "<p><strong>Inherits:</strong> <a class=\"reference internal\" href=\"class_camera3d.html#class-camera3d\"><span class=\"std std-ref\">Camera3D</span></a> <strong>&lt;</strong> <a class=\"reference internal\" href=\"class_node3d.html#class-node3d\"><span class=\"std std-ref\">Node3D</span></a> <strong>&lt;</strong> <a class=\"reference internal\" href=\"class_node.html#class-node\"><span class=\"std std-ref\">Node</span></a> <strong>&lt;</strong> <a class=\"reference internal\" href=\"class_object.html#class-object\"><span class=\"std std-ref\">Object</span></a></p><p>A camera node with a few overrules for AR/VR applied, such as location tracking.</p>",
                "description": "\n\n<p>This is a helper spatial node for our camera; note that, if stereoscopic rendering is applicable (VR-HMD), most of the camera properties are ignored, as the HMD information overrides them. The only properties that can be trusted are the near and far planes.</p>\n<p>The position and orientation of this node is automatically updated by the XR Server to represent the location of the HMD if such tracking is available and can thus be used by game logic. Note that, in contrast to the XR Controller, the render thread has access to the most up-to-date tracking data of the HMD and the location of the XRCamera3D can lag a few milliseconds behind what is used for rendering as a result.</p>\n"
            },
            "class_xrcontroller3d": {
                "url": "https://docs.godotengine.org/en/4.1/classes/class_xrcontroller3d.html",
                "title": "XRController3D",
                "blurb": "<p><strong>Inherits:</strong> <a class=\"reference internal\" href=\"class_xrnode3d.html#class-xrnode3d\"><span class=\"std std-ref\">XRNode3D</span></a> <strong>&lt;</strong> <a class=\"reference internal\" href=\"class_node3d.html#class-node3d\"><span class=\"std std-ref\">Node3D</span></a> <strong>&lt;</strong> <a class=\"reference internal\" href=\"class_node.html#class-node\"><span class=\"std std-ref\">Node</span></a> <strong>&lt;</strong> <a class=\"reference internal\" href=\"class_object.html#class-object\"><span class=\"std std-ref\">Object</span></a></p><p>A spatial node representing a spatially-tracked controller.</p>",
                "description": "\n\n<p>This is a helper spatial node that is linked to the tracking of controllers. It also offers several handy passthroughs to the state of buttons and such on the controllers.</p>\n<p>Controllers are linked by their ID. You can create controller nodes before the controllers are available. If your game always uses two controllers (one for each hand), you can predefine the controllers with ID 1 and 2; they will become active as soon as the controllers are identified. If you expect additional controllers to be used, you should react to the signals and add XRController3D nodes to your scene.</p>\n<p>The position of the controller node is automatically updated by the <a class=\"reference internal\" href=\"class_xrserver.html#class-xrserver\"><span class=\"std std-ref\">XRServer</span></a>. This makes this node ideal to add child nodes to visualize the controller.</p>\n<p>As many XR runtimes now use a configurable action map all inputs are named.</p>\n"
            },
            "class_xrnode3d": {
                "url": "https://docs.godotengine.org/en/4.1/classes/class_xrnode3d.html",
                "title": "XRNode3D",
                "blurb": "<p><strong>Inherits:</strong> <a class=\"reference internal\" href=\"class_node3d.html#class-node3d\"><span class=\"std std-ref\">Node3D</span></a> <strong>&lt;</strong> <a class=\"reference internal\" href=\"class_node.html#class-node\"><span class=\"std std-ref\">Node</span></a> <strong>&lt;</strong> <a class=\"reference internal\" href=\"class_object.html#class-object\"><span class=\"std std-ref\">Object</span></a></p><p><strong>Inherited By:</strong> <a class=\"reference internal\" href=\"class_xranchor3d.html#class-xranchor3d\"><span class=\"std std-ref\">XRAnchor3D</span></a>, <a class=\"reference internal\" href=\"class_xrcontroller3d.html#class-xrcontroller3d\"><span class=\"std std-ref\">XRController3D</span></a></p><p>A spatial node that has its position automatically updated by the <a class=\"reference internal\" href=\"class_xrserver.html#class-xrserver\"><span class=\"std std-ref\">XRServer</span></a>.</p>",
                "description": "\n\n<p>This node can be bound to a specific pose of a <a class=\"reference internal\" href=\"class_xrpositionaltracker.html#class-xrpositionaltracker\"><span class=\"std std-ref\">XRPositionalTracker</span></a> and will automatically have its <a class=\"reference internal\" href=\"class_node3d.html#class-node3d-property-transform\"><span class=\"std std-ref\">Node3D.transform</span></a> updated by the <a class=\"reference internal\" href=\"class_xrserver.html#class-xrserver\"><span class=\"std std-ref\">XRServer</span></a>. Nodes of this type must be added as children of the <a class=\"reference internal\" href=\"class_xrorigin3d.html#class-xrorigin3d\"><span class=\"std std-ref\">XROrigin3D</span></a> node.</p>\n"
            },
            "class_xrorigin3d": {
                "url": "https://docs.godotengine.org/en/4.1/classes/class_xrorigin3d.html",
                "title": "XROrigin3D",
                "blurb": "<p><strong>Inherits:</strong> <a class=\"reference internal\" href=\"class_node3d.html#class-node3d\"><span class=\"std std-ref\">Node3D</span></a> <strong>&lt;</strong> <a class=\"reference internal\" href=\"class_node.html#class-node\"><span class=\"std std-ref\">Node</span></a> <strong>&lt;</strong> <a class=\"reference internal\" href=\"class_object.html#class-object\"><span class=\"std std-ref\">Object</span></a></p><p>The origin point in AR/VR.</p>",
                "description": "\n\n<p>This is a special node within the AR/VR system that maps the physical location of the center of our tracking space to the virtual location within our game world.</p>\n<p>There should be only one of these nodes in your scene and you must have one. All the XRCamera3D, XRController3D and XRAnchor3D nodes should be direct children of this node for spatial tracking to work correctly.</p>\n<p>It is the position of this node that you update when your character needs to move through your game world while we're not moving in the real world. Movement in the real world is always in relation to this origin point.</p>\n<p>For example, if your character is driving a car, the XROrigin3D node should be a child node of this car. Or, if you're implementing a teleport system to move your character, you should change the position of this node.</p>\n"
            },
            "class_resource": {
                "url": "https://docs.godotengine.org/en/4.1/classes/class_resource.html",
                "title": "Resource",
                "blurb": "<p><strong>Inherits:</strong> <a class=\"reference internal\" href=\"class_refcounted.html#class-refcounted\"><span class=\"std std-ref\">RefCounted</span></a> <strong>&lt;</strong> <a class=\"reference internal\" href=\"class_object.html#class-object\"><span class=\"std std-ref\">Object</span></a></p><p><strong>Inherited By:</strong> <a class=\"reference internal\" href=\"class_animation.html#class-animation\"><span class=\"std std-ref\">Animation</span></a>, <a class=\"reference internal\" href=\"class_animationlibrary.html#class-animationlibrary\"><span class=\"std std-ref\">AnimationLibrary</span></a>, <a class=\"reference internal\" href=\"class_animationnode.html#class-animationnode\"><span class=\"std std-ref\">AnimationNode</span></a>, <a class=\"reference internal\" href=\"class_animationnodestatemachineplayback.html#class-animationnodestatemachineplayback\"><span class=\"std std-ref\">AnimationNodeStateMachinePlayback</span></a>, <a class=\"reference internal\" href=\"class_animationnodestatemachinetransition.html#class-animationnodestatemachinetransition\"><span class=\"std std-ref\">AnimationNodeStateMachineTransition</span></a>, <a class=\"reference internal\" href=\"class_audiobuslayout.html#class-audiobuslayout\"><span class=\"std std-ref\">AudioBusLayout</span></a>, <a class=\"reference internal\" href=\"class_audioeffect.html#class-audioeffect\"><span class=\"std std-ref\">AudioEffect</span></a>, <a class=\"reference internal\" href=\"class_audiostream.html#class-audiostream\"><span class=\"std std-ref\">AudioStream</span></a>, <a class=\"reference internal\" href=\"class_bitmap.html#class-bitmap\"><span class=\"std std-ref\">BitMap</span></a>, <a class=\"reference internal\" href=\"class_bonemap.html#class-bonemap\"><span class=\"std std-ref\">BoneMap</span></a>, <a class=\"reference internal\" href=\"class_buttongroup.html#class-buttongroup\"><span class=\"std std-ref\">ButtonGroup</span></a>, <a class=\"reference internal\" href=\"class_cameraattributes.html#class-cameraattributes\"><span class=\"std std-ref\">CameraAttributes</span></a>, <a class=\"reference internal\" href=\"class_cryptokey.html#class-cryptokey\"><span class=\"std std-ref\">CryptoKey</span></a>, <a class=\"reference internal\" href=\"class_curve.html#class-curve\"><span class=\"std std-ref\">Curve</span></a>, <a class=\"reference internal\" href=\"class_curve2d.html#class-curve2d\"><span class=\"std std-ref\">Curve2D</span></a>, <a class=\"reference internal\" href=\"class_curve3d.html#class-curve3d\"><span class=\"std std-ref\">Curve3D</span></a>, <a class=\"reference internal\" href=\"class_editornode3dgizmoplugin.html#class-editornode3dgizmoplugin\"><span class=\"std std-ref\">EditorNode3DGizmoPlugin</span></a>, <a class=\"reference internal\" href=\"class_editorsettings.html#class-editorsettings\"><span class=\"std std-ref\">EditorSettings</span></a>, <a class=\"reference internal\" href=\"class_environment.html#class-environment\"><span class=\"std std-ref\">Environment</span></a>, <a class=\"reference internal\" href=\"class_font.html#class-font\"><span class=\"std std-ref\">Font</span></a>, <a class=\"reference internal\" href=\"class_gdextension.html#class-gdextension\"><span class=\"std std-ref\">GDExtension</span></a>, <a class=\"reference internal\" href=\"class_gltfaccessor.html#class-gltfaccessor\"><span class=\"std std-ref\">GLTFAccessor</span></a>, <a class=\"reference internal\" href=\"class_gltfanimation.html#class-gltfanimation\"><span class=\"std std-ref\">GLTFAnimation</span></a>, <a class=\"reference internal\" href=\"class_gltfbufferview.html#class-gltfbufferview\"><span class=\"std std-ref\">GLTFBufferView</span></a>, <a class=\"reference internal\" href=\"class_gltfcamera.html#class-gltfcamera\"><span class=\"std std-ref\">GLTFCamera</span></a>, <a class=\"reference internal\" href=\"class_gltfdocument.html#class-gltfdocument\"><span class=\"std std-ref\">GLTFDocument</span></a>, <a class=\"reference internal\" href=\"class_gltfdocumentextension.html#class-gltfdocumentextension\"><span class=\"std std-ref\">GLTFDocumentExtension</span></a>, <a class=\"reference internal\" href=\"class_gltflight.html#class-gltflight\"><span class=\"std std-ref\">GLTFLight</span></a>, <a class=\"reference internal\" href=\"class_gltfmesh.html#class-gltfmesh\"><span class=\"std std-ref\">GLTFMesh</span></a>, <a class=\"reference internal\" href=\"class_gltfnode.html#class-gltfnode\"><span class=\"std std-ref\">GLTFNode</span></a>, <a class=\"reference internal\" href=\"class_gltfphysicsbody.html#class-gltfphysicsbody\"><span class=\"std std-ref\">GLTFPhysicsBody</span></a>, <a class=\"reference internal\" href=\"class_gltfphysicsshape.html#class-gltfphysicsshape\"><span class=\"std std-ref\">GLTFPhysicsShape</span></a>, <a class=\"reference internal\" href=\"class_gltfskeleton.html#class-gltfskeleton\"><span class=\"std std-ref\">GLTFSkeleton</span></a>, <a class=\"reference internal\" href=\"class_gltfskin.html#class-gltfskin\"><span class=\"std std-ref\">GLTFSkin</span></a>, <a class=\"reference internal\" href=\"class_gltfspecgloss.html#class-gltfspecgloss\"><span class=\"std std-ref\">GLTFSpecGloss</span></a>, <a class=\"reference internal\" href=\"class_gltfstate.html#class-gltfstate\"><span class=\"std std-ref\">GLTFState</span></a>, <a class=\"reference internal\" href=\"class_gltftexture.html#class-gltftexture\"><span class=\"std std-ref\">GLTFTexture</span></a>, <a class=\"reference internal\" href=\"class_gltftexturesampler.html#class-gltftexturesampler\"><span class=\"std std-ref\">GLTFTextureSampler</span></a>, <a class=\"reference internal\" href=\"class_gradient.html#class-gradient\"><span class=\"std std-ref\">Gradient</span></a>, <a class=\"reference internal\" href=\"class_image.html#class-image\"><span class=\"std std-ref\">Image</span></a>, <a class=\"reference internal\" href=\"class_importermesh.html#class-importermesh\"><span class=\"std std-ref\">ImporterMesh</span></a>, <a class=\"reference internal\" href=\"class_inputevent.html#class-inputevent\"><span class=\"std std-ref\">InputEvent</span></a>, <a class=\"reference internal\" href=\"class_json.html#class-json\"><span class=\"std std-ref\">JSON</span></a>, <a class=\"reference internal\" href=\"class_labelsettings.html#class-labelsettings\"><span class=\"std std-ref\">LabelSettings</span></a>, <a class=\"reference internal\" href=\"class_lightmapgidata.html#class-lightmapgidata\"><span class=\"std std-ref\">LightmapGIData</span></a>, <a class=\"reference internal\" href=\"class_material.html#class-material\"><span class=\"std std-ref\">Material</span></a>, <a class=\"reference internal\" href=\"class_mesh.html#class-mesh\"><span class=\"std std-ref\">Mesh</span></a>, <a class=\"reference internal\" href=\"class_meshlibrary.html#class-meshlibrary\"><span class=\"std std-ref\">MeshLibrary</span></a>, <a class=\"reference internal\" href=\"class_missingresource.html#class-missingresource\"><span class=\"std std-ref\">MissingResource</span></a>, <a class=\"reference internal\" href=\"class_multimesh.html#class-multimesh\"><span class=\"std std-ref\">MultiMesh</span></a>, <a class=\"reference internal\" href=\"class_navigationmesh.html#class-navigationmesh\"><span class=\"std std-ref\">NavigationMesh</span></a>, <a class=\"reference internal\" href=\"class_navigationmeshsourcegeometrydata3d.html#class-navigationmeshsourcegeometrydata3d\"><span class=\"std std-ref\">NavigationMeshSourceGeometryData3D</span></a>, <a class=\"reference internal\" href=\"class_navigationpolygon.html#class-navigationpolygon\"><span class=\"std std-ref\">NavigationPolygon</span></a>, <a class=\"reference internal\" href=\"class_noise.html#class-noise\"><span class=\"std std-ref\">Noise</span></a>, <a class=\"reference internal\" href=\"class_occluder3d.html#class-occluder3d\"><span class=\"std std-ref\">Occluder3D</span></a>, <a class=\"reference internal\" href=\"class_occluderpolygon2d.html#class-occluderpolygon2d\"><span class=\"std std-ref\">OccluderPolygon2D</span></a>, <a class=\"reference internal\" href=\"class_oggpacketsequence.html#class-oggpacketsequence\"><span class=\"std std-ref\">OggPacketSequence</span></a>, <a class=\"reference internal\" href=\"class_openxraction.html#class-openxraction\"><span class=\"std std-ref\">OpenXRAction</span></a>, <a class=\"reference internal\" href=\"class_openxractionmap.html#class-openxractionmap\"><span class=\"std std-ref\">OpenXRActionMap</span></a>, <a class=\"reference internal\" href=\"class_openxractionset.html#class-openxractionset\"><span class=\"std std-ref\">OpenXRActionSet</span></a>, <a class=\"reference internal\" href=\"class_openxrinteractionprofile.html#class-openxrinteractionprofile\"><span class=\"std std-ref\">OpenXRInteractionProfile</span></a>, <a class=\"reference internal\" href=\"class_openxripbinding.html#class-openxripbinding\"><span class=\"std std-ref\">OpenXRIPBinding</span></a>, <a class=\"reference internal\" href=\"class_packeddatacontainer.html#class-packeddatacontainer\"><span class=\"std std-ref\">PackedDataContainer</span></a>, <a class=\"reference internal\" href=\"class_packedscene.html#class-packedscene\"><span class=\"std std-ref\">PackedScene</span></a>, <a class=\"reference internal\" href=\"class_physicsmaterial.html#class-physicsmaterial\"><span class=\"std std-ref\">PhysicsMaterial</span></a>, <a class=\"reference internal\" href=\"class_polygonpathfinder.html#class-polygonpathfinder\"><span class=\"std std-ref\">PolygonPathFinder</span></a>, <a class=\"reference internal\" href=\"class_rdshaderfile.html#class-rdshaderfile\"><span class=\"std std-ref\">RDShaderFile</span></a>, <a class=\"reference internal\" href=\"class_rdshaderspirv.html#class-rdshaderspirv\"><span class=\"std std-ref\">RDShaderSPIRV</span></a>, <a class=\"reference internal\" href=\"class_richtexteffect.html#class-richtexteffect\"><span class=\"std std-ref\">RichTextEffect</span></a>, <a class=\"reference internal\" href=\"class_scenereplicationconfig.html#class-scenereplicationconfig\"><span class=\"std std-ref\">SceneReplicationConfig</span></a>, <a class=\"reference internal\" href=\"class_script.html#class-script\"><span class=\"std std-ref\">Script</span></a>, <a class=\"reference internal\" href=\"class_shader.html#class-shader\"><span class=\"std std-ref\">Shader</span></a>, <a class=\"reference internal\" href=\"class_shaderinclude.html#class-shaderinclude\"><span class=\"std std-ref\">ShaderInclude</span></a>, <a class=\"reference internal\" href=\"class_shape2d.html#class-shape2d\"><span class=\"std std-ref\">Shape2D</span></a>, <a class=\"reference internal\" href=\"class_shape3d.html#class-shape3d\"><span class=\"std std-ref\">Shape3D</span></a>, <a class=\"reference internal\" href=\"class_shortcut.html#class-shortcut\"><span class=\"std std-ref\">Shortcut</span></a>, <a class=\"reference internal\" href=\"class_skeletonmodification2d.html#class-skeletonmodification2d\"><span class=\"std std-ref\">SkeletonModification2D</span></a>, <a class=\"reference internal\" href=\"class_skeletonmodificationstack2d.html#class-skeletonmodificationstack2d\"><span class=\"std std-ref\">SkeletonModificationStack2D</span></a>, <a class=\"reference internal\" href=\"class_skeletonprofile.html#class-skeletonprofile\"><span class=\"std std-ref\">SkeletonProfile</span></a>, <a class=\"reference internal\" href=\"class_skin.html#class-skin\"><span class=\"std std-ref\">Skin</span></a>, <a class=\"reference internal\" href=\"class_sky.html#class-sky\"><span class=\"std std-ref\">Sky</span></a>, <a class=\"reference internal\" href=\"class_spriteframes.html#class-spriteframes\"><span class=\"std std-ref\">SpriteFrames</span></a>, <a class=\"reference internal\" href=\"class_stylebox.html#class-stylebox\"><span class=\"std std-ref\">StyleBox</span></a>, <a class=\"reference internal\" href=\"class_syntaxhighlighter.html#class-syntaxhighlighter\"><span class=\"std std-ref\">SyntaxHighlighter</span></a>, <a class=\"reference internal\" href=\"class_texture.html#class-texture\"><span class=\"std std-ref\">Texture</span></a>, <a class=\"reference internal\" href=\"class_theme.html#class-theme\"><span class=\"std std-ref\">Theme</span></a>, <a class=\"reference internal\" href=\"class_tilemappattern.html#class-tilemappattern\"><span class=\"std std-ref\">TileMapPattern</span></a>, <a class=\"reference internal\" href=\"class_tileset.html#class-tileset\"><span class=\"std std-ref\">TileSet</span></a>, <a class=\"reference internal\" href=\"class_tilesetsource.html#class-tilesetsource\"><span class=\"std std-ref\">TileSetSource</span></a>, <a class=\"reference internal\" href=\"class_translation.html#class-translation\"><span class=\"std std-ref\">Translation</span></a>, <a class=\"reference internal\" href=\"class_videostream.html#class-videostream\"><span class=\"std std-ref\">VideoStream</span></a>, <a class=\"reference internal\" href=\"class_videostreamplayback.html#class-videostreamplayback\"><span class=\"std std-ref\">VideoStreamPlayback</span></a>, <a class=\"reference internal\" href=\"class_visualshadernode.html#class-visualshadernode\"><span class=\"std std-ref\">VisualShaderNode</span></a>, <a class=\"reference internal\" href=\"class_voxelgidata.html#class-voxelgidata\"><span class=\"std std-ref\">VoxelGIData</span></a>, <a class=\"reference internal\" href=\"class_world2d.html#class-world2d\"><span class=\"std std-ref\">World2D</span></a>, <a class=\"reference internal\" href=\"class_world3d.html#class-world3d\"><span class=\"std std-ref\">World3D</span></a>, <a class=\"reference internal\" href=\"class_x509certificate.html#class-x509certificate\"><span class=\"std std-ref\">X509Certificate</span></a></p><p>Base class for serializable objects.</p>",
                "description": "\n\n<p>Resource is the base class for all Godot-specific resource types, serving primarily as data containers. Since they inherit from <a class=\"reference internal\" href=\"class_refcounted.html#class-refcounted\"><span class=\"std std-ref\">RefCounted</span></a>, resources are reference-counted and freed when no longer in use. They can also be nested within other resources, and saved on disk. Once loaded from disk, further attempts to load a resource by <a class=\"reference internal\" href=\"#class-resource-property-resource-path\"><span class=\"std std-ref\">resource_path</span></a> returns the same reference. <a class=\"reference internal\" href=\"class_packedscene.html#class-packedscene\"><span class=\"std std-ref\">PackedScene</span></a>, one of the most common <a class=\"reference internal\" href=\"class_object.html#class-object\"><span class=\"std std-ref\">Object</span></a>s in a Godot project, is also a resource, uniquely capable of storing and instantiating the <a class=\"reference internal\" href=\"class_node.html#class-node\"><span class=\"std std-ref\">Node</span></a>s it contains as many times as desired.</p>\n<p>In GDScript, resources can loaded from disk by their <a class=\"reference internal\" href=\"#class-resource-property-resource-path\"><span class=\"std std-ref\">resource_path</span></a> using <a class=\"reference internal\" href=\"class_%40gdscript.html#class-gdscript-method-load\"><span class=\"std std-ref\">@GDScript.load</span></a> or <a class=\"reference internal\" href=\"class_%40gdscript.html#class-gdscript-method-preload\"><span class=\"std std-ref\">@GDScript.preload</span></a>.</p>\n<p><strong>Note:</strong> In C#, resources will not be freed instantly after they are no longer in use. Instead, garbage collection will run periodically and will free resources that are no longer in use. This means that unused resources will linger on for a while before being removed.</p>\n"
            },
            "class_animatedtexture": {
                "url": "https://docs.godotengine.org/en/4.1/classes/class_animatedtexture.html",
                "title": "AnimatedTexture",
                "blurb": "<p><strong>Inherits:</strong> <a class=\"reference internal\" href=\"class_texture2d.html#class-texture2d\"><span class=\"std std-ref\">Texture2D</span></a> <strong>&lt;</strong> <a class=\"reference internal\" href=\"class_texture.html#class-texture\"><span class=\"std std-ref\">Texture</span></a> <strong>&lt;</strong> <a class=\"reference internal\" href=\"class_resource.html#class-resource\"><span class=\"std std-ref\">Resource</span></a> <strong>&lt;</strong> <a class=\"reference internal\" href=\"class_refcounted.html#class-refcounted\"><span class=\"std std-ref\">RefCounted</span></a> <strong>&lt;</strong> <a class=\"reference internal\" href=\"class_object.html#class-object\"><span class=\"std std-ref\">Object</span></a></p><p>Proxy texture for simple frame-based animations.</p>",
                "description": "\n\n<p><strong>AnimatedTexture</strong> is a resource format for frame-based animations, where multiple textures can be chained automatically with a predefined delay for each frame. Unlike <a class=\"reference internal\" href=\"class_animationplayer.html#class-animationplayer\"><span class=\"std std-ref\">AnimationPlayer</span></a> or <a class=\"reference internal\" href=\"class_animatedsprite2d.html#class-animatedsprite2d\"><span class=\"std std-ref\">AnimatedSprite2D</span></a>, it isn't a <a class=\"reference internal\" href=\"class_node.html#class-node\"><span class=\"std std-ref\">Node</span></a>, but has the advantage of being usable anywhere a <a class=\"reference internal\" href=\"class_texture2d.html#class-texture2d\"><span class=\"std std-ref\">Texture2D</span></a> resource can be used, e.g. in a <a class=\"reference internal\" href=\"class_tileset.html#class-tileset\"><span class=\"std std-ref\">TileSet</span></a>.</p>\n<p>The playback of the animation is controlled by the <a class=\"reference internal\" href=\"#class-animatedtexture-property-speed-scale\"><span class=\"std std-ref\">speed_scale</span></a> property, as well as each frame's duration (see <a class=\"reference internal\" href=\"#class-animatedtexture-method-set-frame-duration\"><span class=\"std std-ref\">set_frame_duration</span></a>). The animation loops, i.e. it will restart at frame 0 automatically after playing the last frame.</p>\n<p><strong>AnimatedTexture</strong> currently requires all frame textures to have the same size, otherwise the bigger ones will be cropped to match the smallest one.</p>\n<p><strong>Note:</strong> AnimatedTexture doesn't support using <a class=\"reference internal\" href=\"class_atlastexture.html#class-atlastexture\"><span class=\"std std-ref\">AtlasTexture</span></a>s. Each frame needs to be a separate <a class=\"reference internal\" href=\"class_texture2d.html#class-texture2d\"><span class=\"std std-ref\">Texture2D</span></a>.</p>\n<p><strong>Warning:</strong> The current implementation is not efficient for the modern renderers.</p>\n<p><em>Deprecated.</em> This class is deprecated, and might be removed in a future release.</p>\n"
            },
            "class_animation": {
                "url": "https://docs.godotengine.org/en/4.1/classes/class_animation.html",
                "title": "Animation",
                "blurb": "<p><strong>Inherits:</strong> <a class=\"reference internal\" href=\"class_resource.html#class-resource\"><span class=\"std std-ref\">Resource</span></a> <strong>&lt;</strong> <a class=\"reference internal\" href=\"class_refcounted.html#class-refcounted\"><span class=\"std std-ref\">RefCounted</span></a> <strong>&lt;</strong> <a class=\"reference internal\" href=\"class_object.html#class-object\"><span class=\"std std-ref\">Object</span></a></p><p>Holds data that can be used to animate anything in the engine.</p>",
                "description": "\n\n<p>This resource holds data that can be used to animate anything in the engine. Animations are divided into tracks and each track must be linked to a node. The state of that node can be changed through time, by adding timed keys (events) to the track.</p>\n<div class=\"sphinx-tabs docutils container\">\n<div aria-label=\"Tabbed content\" class=\"closeable\" role=\"tablist\"><button aria-controls=\"panel-0-R0RTY3JpcHQ=\" aria-selected=\"true\" class=\"sphinx-tabs-tab code-tab group-tab\" id=\"tab-0-R0RTY3JpcHQ=\" name=\"R0RTY3JpcHQ=\" role=\"tab\" tabindex=\"0\">GDScript</button><button aria-controls=\"panel-0-QyM=\" aria-selected=\"false\" class=\"sphinx-tabs-tab code-tab group-tab\" id=\"tab-0-QyM=\" name=\"QyM=\" role=\"tab\" tabindex=\"-1\">C#</button></div><div aria-labelledby=\"tab-0-R0RTY3JpcHQ=\" class=\"sphinx-tabs-panel code-tab group-tab\" id=\"panel-0-R0RTY3JpcHQ=\" name=\"R0RTY3JpcHQ=\" role=\"tabpanel\" tabindex=\"0\"><div class=\"highlight-gdscript notranslate\"><div class=\"highlight\"><pre><span></span><span class=\"c1\"># This creates an animation that makes the node \"Enemy\" move to the right by</span>\n<span class=\"c1\"># 100 pixels in 0.5 seconds.</span>\n<span class=\"k\">var</span> <span class=\"n\">animation</span> <span class=\"o\">=</span> <span class=\"n\">Animation</span><span class=\"o\">.</span><span class=\"n\">new</span><span class=\"p\">()</span>\n<span class=\"k\">var</span> <span class=\"n\">track_index</span> <span class=\"o\">=</span> <span class=\"n\">animation</span><span class=\"o\">.</span><span class=\"n\">add_track</span><span class=\"p\">(</span><span class=\"n\">Animation</span><span class=\"o\">.</span><span class=\"n\">TYPE_VALUE</span><span class=\"p\">)</span>\n<span class=\"n\">animation</span><span class=\"o\">.</span><span class=\"n\">track_set_path</span><span class=\"p\">(</span><span class=\"n\">track_index</span><span class=\"p\">,</span> <span class=\"s2\">\"Enemy:position:x\"</span><span class=\"p\">)</span>\n<span class=\"n\">animation</span><span class=\"o\">.</span><span class=\"n\">track_insert_key</span><span class=\"p\">(</span><span class=\"n\">track_index</span><span class=\"p\">,</span> <span class=\"mf\">0.0</span><span class=\"p\">,</span> <span class=\"mi\">0</span><span class=\"p\">)</span>\n<span class=\"n\">animation</span><span class=\"o\">.</span><span class=\"n\">track_insert_key</span><span class=\"p\">(</span><span class=\"n\">track_index</span><span class=\"p\">,</span> <span class=\"mf\">0.5</span><span class=\"p\">,</span> <span class=\"mi\">100</span><span class=\"p\">)</span>\n</pre></div>\n</div>\n</div><div aria-labelledby=\"tab-0-QyM=\" class=\"sphinx-tabs-panel code-tab group-tab\" hidden=\"true\" id=\"panel-0-QyM=\" name=\"QyM=\" role=\"tabpanel\" tabindex=\"0\"><div class=\"highlight-csharp notranslate\"><div class=\"highlight\"><pre><span></span><span class=\"c1\">// This creates an animation that makes the node \"Enemy\" move to the right by</span>\n<span class=\"c1\">// 100 pixels in 0.5 seconds.</span>\n<span class=\"kt\">var</span><span class=\"w\"> </span><span class=\"n\">animation</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"k\">new</span><span class=\"w\"> </span><span class=\"n\">Animation</span><span class=\"p\">();</span>\n<span class=\"kt\">int</span><span class=\"w\"> </span><span class=\"n\">trackIndex</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"n\">animation</span><span class=\"p\">.</span><span class=\"n\">AddTrack</span><span class=\"p\">(</span><span class=\"n\">Animation</span><span class=\"p\">.</span><span class=\"n\">TrackType</span><span class=\"p\">.</span><span class=\"n\">Value</span><span class=\"p\">);</span>\n<span class=\"n\">animation</span><span class=\"p\">.</span><span class=\"n\">TrackSetPath</span><span class=\"p\">(</span><span class=\"n\">trackIndex</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"s\">\"Enemy:position:x\"</span><span class=\"p\">);</span>\n<span class=\"n\">animation</span><span class=\"p\">.</span><span class=\"n\">TrackInsertKey</span><span class=\"p\">(</span><span class=\"n\">trackIndex</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"m\">0.0f</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"m\">0</span><span class=\"p\">);</span>\n<span class=\"n\">animation</span><span class=\"p\">.</span><span class=\"n\">TrackInsertKey</span><span class=\"p\">(</span><span class=\"n\">trackIndex</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"m\">0.5f</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"m\">100</span><span class=\"p\">);</span>\n</pre></div>\n</div>\n</div></div>\n<p>Animations are just data containers, and must be added to nodes such as an <a class=\"reference internal\" href=\"class_animationplayer.html#class-animationplayer\"><span class=\"std std-ref\">AnimationPlayer</span></a> to be played back. Animation tracks have different types, each with its own set of dedicated methods. Check <a class=\"reference internal\" href=\"#enum-animation-tracktype\"><span class=\"std std-ref\">TrackType</span></a> to see available types.</p>\n<p><strong>Note:</strong> For 3D position/rotation/scale, using the dedicated <a class=\"reference internal\" href=\"#class-animation-constant-type-position-3d\"><span class=\"std std-ref\">TYPE_POSITION_3D</span></a>, <a class=\"reference internal\" href=\"#class-animation-constant-type-rotation-3d\"><span class=\"std std-ref\">TYPE_ROTATION_3D</span></a> and <a class=\"reference internal\" href=\"#class-animation-constant-type-scale-3d\"><span class=\"std std-ref\">TYPE_SCALE_3D</span></a> track types instead of <a class=\"reference internal\" href=\"#class-animation-constant-type-value\"><span class=\"std std-ref\">TYPE_VALUE</span></a> is recommended for performance reasons.</p>\n"
            },
            "class_animationlibrary": {
                "url": "https://docs.godotengine.org/en/4.1/classes/class_animationlibrary.html",
                "title": "AnimationLibrary",
                "blurb": "<p><strong>Inherits:</strong> <a class=\"reference internal\" href=\"class_resource.html#class-resource\"><span class=\"std std-ref\">Resource</span></a> <strong>&lt;</strong> <a class=\"reference internal\" href=\"class_refcounted.html#class-refcounted\"><span class=\"std std-ref\">RefCounted</span></a> <strong>&lt;</strong> <a class=\"reference internal\" href=\"class_object.html#class-object\"><span class=\"std std-ref\">Object</span></a></p><p>Container for <a class=\"reference internal\" href=\"class_animation.html#class-animation\"><span class=\"std std-ref\">Animation</span></a> resources.</p>",
                "description": "\n\n<p>An animation library stores a set of animations accessible through <a class=\"reference internal\" href=\"class_stringname.html#class-stringname\"><span class=\"std std-ref\">StringName</span></a> keys, for use with <a class=\"reference internal\" href=\"class_animationplayer.html#class-animationplayer\"><span class=\"std std-ref\">AnimationPlayer</span></a> nodes.</p>\n"
            },
            "class_animationnode": {
                "url": "https://docs.godotengine.org/en/4.1/classes/class_animationnode.html",
                "title": "AnimationNode",
                "blurb": "<p><strong>Inherits:</strong> <a class=\"reference internal\" href=\"class_resource.html#class-resource\"><span class=\"std std-ref\">Resource</span></a> <strong>&lt;</strong> <a class=\"reference internal\" href=\"class_refcounted.html#class-refcounted\"><span class=\"std std-ref\">RefCounted</span></a> <strong>&lt;</strong> <a class=\"reference internal\" href=\"class_object.html#class-object\"><span class=\"std std-ref\">Object</span></a></p><p><strong>Inherited By:</strong> <a class=\"reference internal\" href=\"class_animationnodeoutput.html#class-animationnodeoutput\"><span class=\"std std-ref\">AnimationNodeOutput</span></a>, <a class=\"reference internal\" href=\"class_animationnodesync.html#class-animationnodesync\"><span class=\"std std-ref\">AnimationNodeSync</span></a>, <a class=\"reference internal\" href=\"class_animationnodetimescale.html#class-animationnodetimescale\"><span class=\"std std-ref\">AnimationNodeTimeScale</span></a>, <a class=\"reference internal\" href=\"class_animationnodetimeseek.html#class-animationnodetimeseek\"><span class=\"std std-ref\">AnimationNodeTimeSeek</span></a>, <a class=\"reference internal\" href=\"class_animationrootnode.html#class-animationrootnode\"><span class=\"std std-ref\">AnimationRootNode</span></a></p><p>Base class for <a class=\"reference internal\" href=\"class_animationtree.html#class-animationtree\"><span class=\"std std-ref\">AnimationTree</span></a> nodes. Not related to scene nodes.</p>",
                "description": "\n\n<p>Base resource for <a class=\"reference internal\" href=\"class_animationtree.html#class-animationtree\"><span class=\"std std-ref\">AnimationTree</span></a> nodes. In general, it's not used directly, but you can create custom ones with custom blending formulas.</p>\n<p>Inherit this when creating animation nodes mainly for use in <a class=\"reference internal\" href=\"class_animationnodeblendtree.html#class-animationnodeblendtree\"><span class=\"std std-ref\">AnimationNodeBlendTree</span></a>, otherwise <a class=\"reference internal\" href=\"class_animationrootnode.html#class-animationrootnode\"><span class=\"std std-ref\">AnimationRootNode</span></a> should be used instead.</p>\n"
            },
            "class_animationnodeadd2": {
                "url": "https://docs.godotengine.org/en/4.1/classes/class_animationnodeadd2.html",
                "title": "AnimationNodeAdd2",
                "blurb": "<p><strong>Inherits:</strong> <a class=\"reference internal\" href=\"class_animationnodesync.html#class-animationnodesync\"><span class=\"std std-ref\">AnimationNodeSync</span></a> <strong>&lt;</strong> <a class=\"reference internal\" href=\"class_animationnode.html#class-animationnode\"><span class=\"std std-ref\">AnimationNode</span></a> <strong>&lt;</strong> <a class=\"reference internal\" href=\"class_resource.html#class-resource\"><span class=\"std std-ref\">Resource</span></a> <strong>&lt;</strong> <a class=\"reference internal\" href=\"class_refcounted.html#class-refcounted\"><span class=\"std std-ref\">RefCounted</span></a> <strong>&lt;</strong> <a class=\"reference internal\" href=\"class_object.html#class-object\"><span class=\"std std-ref\">Object</span></a></p><p>Blends two animations additively inside of an <a class=\"reference internal\" href=\"class_animationnodeblendtree.html#class-animationnodeblendtree\"><span class=\"std std-ref\">AnimationNodeBlendTree</span></a>.</p>",
                "description": "\n\n<p>A resource to add to an <a class=\"reference internal\" href=\"class_animationnodeblendtree.html#class-animationnodeblendtree\"><span class=\"std std-ref\">AnimationNodeBlendTree</span></a>. Blends two animations additively based on the amount value.</p>\n<p>If the amount is greater than <code class=\"docutils literal notranslate\"><span class=\"pre\">1.0</span></code>, the animation connected to \"in\" port is blended with the amplified animation connected to \"add\" port.</p>\n<p>If the amount is less than <code class=\"docutils literal notranslate\"><span class=\"pre\">0.0</span></code>, the animation connected to \"in\" port is blended with the inverted animation connected to \"add\" port.</p>\n"
            },
            "class_animationnodeadd3": {
                "url": "https://docs.godotengine.org/en/4.1/classes/class_animationnodeadd3.html",
                "title": "AnimationNodeAdd3",
                "blurb": "<p><strong>Inherits:</strong> <a class=\"reference internal\" href=\"class_animationnodesync.html#class-animationnodesync\"><span class=\"std std-ref\">AnimationNodeSync</span></a> <strong>&lt;</strong> <a class=\"reference internal\" href=\"class_animationnode.html#class-animationnode\"><span class=\"std std-ref\">AnimationNode</span></a> <strong>&lt;</strong> <a class=\"reference internal\" href=\"class_resource.html#class-resource\"><span class=\"std std-ref\">Resource</span></a> <strong>&lt;</strong> <a class=\"reference internal\" href=\"class_refcounted.html#class-refcounted\"><span class=\"std std-ref\">RefCounted</span></a> <strong>&lt;</strong> <a class=\"reference internal\" href=\"class_object.html#class-object\"><span class=\"std std-ref\">Object</span></a></p><p>Blends two of three animations additively inside of an <a class=\"reference internal\" href=\"class_animationnodeblendtree.html#class-animationnodeblendtree\"><span class=\"std std-ref\">AnimationNodeBlendTree</span></a>.</p>",
                "description": "\n\n<p>A resource to add to an <a class=\"reference internal\" href=\"class_animationnodeblendtree.html#class-animationnodeblendtree\"><span class=\"std std-ref\">AnimationNodeBlendTree</span></a>. Blends two animations out of three additively out of three based on the amount value.</p>\n<p>This animation node has three inputs:</p>\n<ul class=\"simple\">\n<li><p>The base animation to add to</p></li>\n<li><p>A \"-add\" animation to blend with when the blend amount is negative</p></li>\n<li><p>A \"+add\" animation to blend with when the blend amount is positive</p></li>\n</ul>\n<p>If the absolute value of the amount is greater than <code class=\"docutils literal notranslate\"><span class=\"pre\">1.0</span></code>, the animation connected to \"in\" port is blended with the amplified animation connected to \"-add\"/\"+add\" port.</p>\n"
            },
            "class_animationnodeanimation": {
                "url": "https://docs.godotengine.org/en/4.1/classes/class_animationnodeanimation.html",
                "title": "AnimationNodeAnimation",
                "blurb": "<p><strong>Inherits:</strong> <a class=\"reference internal\" href=\"class_animationrootnode.html#class-animationrootnode\"><span class=\"std std-ref\">AnimationRootNode</span></a> <strong>&lt;</strong> <a class=\"reference internal\" href=\"class_animationnode.html#class-animationnode\"><span class=\"std std-ref\">AnimationNode</span></a> <strong>&lt;</strong> <a class=\"reference internal\" href=\"class_resource.html#class-resource\"><span class=\"std std-ref\">Resource</span></a> <strong>&lt;</strong> <a class=\"reference internal\" href=\"class_refcounted.html#class-refcounted\"><span class=\"std std-ref\">RefCounted</span></a> <strong>&lt;</strong> <a class=\"reference internal\" href=\"class_object.html#class-object\"><span class=\"std std-ref\">Object</span></a></p><p>An input animation for an <a class=\"reference internal\" href=\"class_animationnodeblendtree.html#class-animationnodeblendtree\"><span class=\"std std-ref\">AnimationNodeBlendTree</span></a>.</p>",
                "description": "\n\n<p>A resource to add to an <a class=\"reference internal\" href=\"class_animationnodeblendtree.html#class-animationnodeblendtree\"><span class=\"std std-ref\">AnimationNodeBlendTree</span></a>. Only has one output port using the <a class=\"reference internal\" href=\"#class-animationnodeanimation-property-animation\"><span class=\"std std-ref\">animation</span></a> property. Used as an input for <a class=\"reference internal\" href=\"class_animationnode.html#class-animationnode\"><span class=\"std std-ref\">AnimationNode</span></a>s that blend animations together.</p>\n"
            },
            "class_animationnodeblend2": {
                "url": "https://docs.godotengine.org/en/4.1/classes/class_animationnodeblend2.html",
                "title": "AnimationNodeBlend2",
                "blurb": "<p><strong>Inherits:</strong> <a class=\"reference internal\" href=\"class_animationnodesync.html#class-animationnodesync\"><span class=\"std std-ref\">AnimationNodeSync</span></a> <strong>&lt;</strong> <a class=\"reference internal\" href=\"class_animationnode.html#class-animationnode\"><span class=\"std std-ref\">AnimationNode</span></a> <strong>&lt;</strong> <a class=\"reference internal\" href=\"class_resource.html#class-resource\"><span class=\"std std-ref\">Resource</span></a> <strong>&lt;</strong> <a class=\"reference internal\" href=\"class_refcounted.html#class-refcounted\"><span class=\"std std-ref\">RefCounted</span></a> <strong>&lt;</strong> <a class=\"reference internal\" href=\"class_object.html#class-object\"><span class=\"std std-ref\">Object</span></a></p><p>Blends two animations linearly inside of an <a class=\"reference internal\" href=\"class_animationnodeblendtree.html#class-animationnodeblendtree\"><span class=\"std std-ref\">AnimationNodeBlendTree</span></a>.</p>",
                "description": "\n\n<p>A resource to add to an <a class=\"reference internal\" href=\"class_animationnodeblendtree.html#class-animationnodeblendtree\"><span class=\"std std-ref\">AnimationNodeBlendTree</span></a>. Blends two animations linearly based on the amount value.</p>\n<p>In general, the blend value should be in the <code class=\"docutils literal notranslate\"><span class=\"pre\">[0.0,</span> <span class=\"pre\">1.0]</span></code> range. Values outside of this range can blend amplified or inverted animations, however, <a class=\"reference internal\" href=\"class_animationnodeadd2.html#class-animationnodeadd2\"><span class=\"std std-ref\">AnimationNodeAdd2</span></a> works better for this purpose.</p>\n"
            },
            "class_animationnodeblend3": {
                "url": "https://docs.godotengine.org/en/4.1/classes/class_animationnodeblend3.html",
                "title": "AnimationNodeBlend3",
                "blurb": "<p><strong>Inherits:</strong> <a class=\"reference internal\" href=\"class_animationnodesync.html#class-animationnodesync\"><span class=\"std std-ref\">AnimationNodeSync</span></a> <strong>&lt;</strong> <a class=\"reference internal\" href=\"class_animationnode.html#class-animationnode\"><span class=\"std std-ref\">AnimationNode</span></a> <strong>&lt;</strong> <a class=\"reference internal\" href=\"class_resource.html#class-resource\"><span class=\"std std-ref\">Resource</span></a> <strong>&lt;</strong> <a class=\"reference internal\" href=\"class_refcounted.html#class-refcounted\"><span class=\"std std-ref\">RefCounted</span></a> <strong>&lt;</strong> <a class=\"reference internal\" href=\"class_object.html#class-object\"><span class=\"std std-ref\">Object</span></a></p><p>Blends two of three animations linearly inside of an <a class=\"reference internal\" href=\"class_animationnodeblendtree.html#class-animationnodeblendtree\"><span class=\"std std-ref\">AnimationNodeBlendTree</span></a>.</p>",
                "description": "\n\n<p>A resource to add to an <a class=\"reference internal\" href=\"class_animationnodeblendtree.html#class-animationnodeblendtree\"><span class=\"std std-ref\">AnimationNodeBlendTree</span></a>. Blends two animations out of three linearly out of three based on the amount value.</p>\n<p>This animation node has three inputs:</p>\n<ul class=\"simple\">\n<li><p>The base animation to blend with</p></li>\n<li><p>A \"-blend\" animation to blend with when the blend amount is negative value</p></li>\n<li><p>A \"+blend\" animation to blend with when the blend amount is positive value</p></li>\n</ul>\n<p>In general, the blend value should be in the <code class=\"docutils literal notranslate\"><span class=\"pre\">[-1.0,</span> <span class=\"pre\">1.0]</span></code> range. Values outside of this range can blend amplified animations, however, <a class=\"reference internal\" href=\"class_animationnodeadd3.html#class-animationnodeadd3\"><span class=\"std std-ref\">AnimationNodeAdd3</span></a> works better for this purpose.</p>\n"
            },
            "class_animationnodeblendspace1d": {
                "url": "https://docs.godotengine.org/en/4.1/classes/class_animationnodeblendspace1d.html",
                "title": "AnimationNodeBlendSpace1D",
                "blurb": "<p><strong>Inherits:</strong> <a class=\"reference internal\" href=\"class_animationrootnode.html#class-animationrootnode\"><span class=\"std std-ref\">AnimationRootNode</span></a> <strong>&lt;</strong> <a class=\"reference internal\" href=\"class_animationnode.html#class-animationnode\"><span class=\"std std-ref\">AnimationNode</span></a> <strong>&lt;</strong> <a class=\"reference internal\" href=\"class_resource.html#class-resource\"><span class=\"std std-ref\">Resource</span></a> <strong>&lt;</strong> <a class=\"reference internal\" href=\"class_refcounted.html#class-refcounted\"><span class=\"std std-ref\">RefCounted</span></a> <strong>&lt;</strong> <a class=\"reference internal\" href=\"class_object.html#class-object\"><span class=\"std std-ref\">Object</span></a></p><p>A set of <a class=\"reference internal\" href=\"class_animationrootnode.html#class-animationrootnode\"><span class=\"std std-ref\">AnimationRootNode</span></a>s placed on a virtual axis, crossfading between the two adjacent ones. Used by <a class=\"reference internal\" href=\"class_animationtree.html#class-animationtree\"><span class=\"std std-ref\">AnimationTree</span></a>.</p>",
                "description": "\n\n<p>A resource used by <a class=\"reference internal\" href=\"class_animationnodeblendtree.html#class-animationnodeblendtree\"><span class=\"std std-ref\">AnimationNodeBlendTree</span></a>.</p>\n<p><strong>AnimationNodeBlendSpace1D</strong> represents a virtual axis on which any type of <a class=\"reference internal\" href=\"class_animationrootnode.html#class-animationrootnode\"><span class=\"std std-ref\">AnimationRootNode</span></a>s can be added using <a class=\"reference internal\" href=\"#class-animationnodeblendspace1d-method-add-blend-point\"><span class=\"std std-ref\">add_blend_point</span></a>. Outputs the linear blend of the two <a class=\"reference internal\" href=\"class_animationrootnode.html#class-animationrootnode\"><span class=\"std std-ref\">AnimationRootNode</span></a>s adjacent to the current value.</p>\n<p>You can set the extents of the axis with <a class=\"reference internal\" href=\"#class-animationnodeblendspace1d-property-min-space\"><span class=\"std std-ref\">min_space</span></a> and <a class=\"reference internal\" href=\"#class-animationnodeblendspace1d-property-max-space\"><span class=\"std std-ref\">max_space</span></a>.</p>\n"
            },
            "class_animationnodeblendspace2d": {
                "url": "https://docs.godotengine.org/en/4.1/classes/class_animationnodeblendspace2d.html",
                "title": "AnimationNodeBlendSpace2D",
                "blurb": "<p><strong>Inherits:</strong> <a class=\"reference internal\" href=\"class_animationrootnode.html#class-animationrootnode\"><span class=\"std std-ref\">AnimationRootNode</span></a> <strong>&lt;</strong> <a class=\"reference internal\" href=\"class_animationnode.html#class-animationnode\"><span class=\"std std-ref\">AnimationNode</span></a> <strong>&lt;</strong> <a class=\"reference internal\" href=\"class_resource.html#class-resource\"><span class=\"std std-ref\">Resource</span></a> <strong>&lt;</strong> <a class=\"reference internal\" href=\"class_refcounted.html#class-refcounted\"><span class=\"std std-ref\">RefCounted</span></a> <strong>&lt;</strong> <a class=\"reference internal\" href=\"class_object.html#class-object\"><span class=\"std std-ref\">Object</span></a></p><p>A set of <a class=\"reference internal\" href=\"class_animationrootnode.html#class-animationrootnode\"><span class=\"std std-ref\">AnimationRootNode</span></a>s placed on 2D coordinates, crossfading between the three adjacent ones. Used by <a class=\"reference internal\" href=\"class_animationtree.html#class-animationtree\"><span class=\"std std-ref\">AnimationTree</span></a>.</p>",
                "description": "\n\n<p>A resource used by <a class=\"reference internal\" href=\"class_animationnodeblendtree.html#class-animationnodeblendtree\"><span class=\"std std-ref\">AnimationNodeBlendTree</span></a>.</p>\n<p><a class=\"reference internal\" href=\"class_animationnodeblendspace1d.html#class-animationnodeblendspace1d\"><span class=\"std std-ref\">AnimationNodeBlendSpace1D</span></a> represents a virtual 2D space on which <a class=\"reference internal\" href=\"class_animationrootnode.html#class-animationrootnode\"><span class=\"std std-ref\">AnimationRootNode</span></a>s are placed. Outputs the linear blend of the three adjacent animations using a <a class=\"reference internal\" href=\"class_vector2.html#class-vector2\"><span class=\"std std-ref\">Vector2</span></a> weight. Adjacent in this context means the three <a class=\"reference internal\" href=\"class_animationrootnode.html#class-animationrootnode\"><span class=\"std std-ref\">AnimationRootNode</span></a>s making up the triangle that contains the current value.</p>\n<p>You can add vertices to the blend space with <a class=\"reference internal\" href=\"#class-animationnodeblendspace2d-method-add-blend-point\"><span class=\"std std-ref\">add_blend_point</span></a> and automatically triangulate it by setting <a class=\"reference internal\" href=\"#class-animationnodeblendspace2d-property-auto-triangles\"><span class=\"std std-ref\">auto_triangles</span></a> to <code class=\"docutils literal notranslate\"><span class=\"pre\">true</span></code>. Otherwise, use <a class=\"reference internal\" href=\"#class-animationnodeblendspace2d-method-add-triangle\"><span class=\"std std-ref\">add_triangle</span></a> and <a class=\"reference internal\" href=\"#class-animationnodeblendspace2d-method-remove-triangle\"><span class=\"std std-ref\">remove_triangle</span></a> to triangulate the blend space by hand.</p>\n"
            },
            "class_animationnodeblendtree": {
                "url": "https://docs.godotengine.org/en/4.1/classes/class_animationnodeblendtree.html",
                "title": "AnimationNodeBlendTree",
                "blurb": "<p><strong>Inherits:</strong> <a class=\"reference internal\" href=\"class_animationrootnode.html#class-animationrootnode\"><span class=\"std std-ref\">AnimationRootNode</span></a> <strong>&lt;</strong> <a class=\"reference internal\" href=\"class_animationnode.html#class-animationnode\"><span class=\"std std-ref\">AnimationNode</span></a> <strong>&lt;</strong> <a class=\"reference internal\" href=\"class_resource.html#class-resource\"><span class=\"std std-ref\">Resource</span></a> <strong>&lt;</strong> <a class=\"reference internal\" href=\"class_refcounted.html#class-refcounted\"><span class=\"std std-ref\">RefCounted</span></a> <strong>&lt;</strong> <a class=\"reference internal\" href=\"class_object.html#class-object\"><span class=\"std std-ref\">Object</span></a></p><p>A sub-tree of many type <a class=\"reference internal\" href=\"class_animationnode.html#class-animationnode\"><span class=\"std std-ref\">AnimationNode</span></a>s used for complex animations. Used by <a class=\"reference internal\" href=\"class_animationtree.html#class-animationtree\"><span class=\"std std-ref\">AnimationTree</span></a>.</p>",
                "description": "\n\n<p>This animation node may contain a sub-tree of any other type animation nodes, such as <a class=\"reference internal\" href=\"class_animationnodetransition.html#class-animationnodetransition\"><span class=\"std std-ref\">AnimationNodeTransition</span></a>, <a class=\"reference internal\" href=\"class_animationnodeblend2.html#class-animationnodeblend2\"><span class=\"std std-ref\">AnimationNodeBlend2</span></a>, <a class=\"reference internal\" href=\"class_animationnodeblend3.html#class-animationnodeblend3\"><span class=\"std std-ref\">AnimationNodeBlend3</span></a>, <a class=\"reference internal\" href=\"class_animationnodeoneshot.html#class-animationnodeoneshot\"><span class=\"std std-ref\">AnimationNodeOneShot</span></a>, etc. This is one of the most commonly used animation node roots.</p>\n<p>An <a class=\"reference internal\" href=\"class_animationnodeoutput.html#class-animationnodeoutput\"><span class=\"std std-ref\">AnimationNodeOutput</span></a> node named <code class=\"docutils literal notranslate\"><span class=\"pre\">output</span></code> is created by default.</p>\n"
            },
            "class_animationnodeoneshot": {
                "url": "https://docs.godotengine.org/en/4.1/classes/class_animationnodeoneshot.html",
                "title": "AnimationNodeOneShot",
                "blurb": "<p><strong>Inherits:</strong> <a class=\"reference internal\" href=\"class_animationnodesync.html#class-animationnodesync\"><span class=\"std std-ref\">AnimationNodeSync</span></a> <strong>&lt;</strong> <a class=\"reference internal\" href=\"class_animationnode.html#class-animationnode\"><span class=\"std std-ref\">AnimationNode</span></a> <strong>&lt;</strong> <a class=\"reference internal\" href=\"class_resource.html#class-resource\"><span class=\"std std-ref\">Resource</span></a> <strong>&lt;</strong> <a class=\"reference internal\" href=\"class_refcounted.html#class-refcounted\"><span class=\"std std-ref\">RefCounted</span></a> <strong>&lt;</strong> <a class=\"reference internal\" href=\"class_object.html#class-object\"><span class=\"std std-ref\">Object</span></a></p><p>Plays an animation once in an <a class=\"reference internal\" href=\"class_animationnodeblendtree.html#class-animationnodeblendtree\"><span class=\"std std-ref\">AnimationNodeBlendTree</span></a>.</p>",
                "description": "\n\n<p>A resource to add to an <a class=\"reference internal\" href=\"class_animationnodeblendtree.html#class-animationnodeblendtree\"><span class=\"std std-ref\">AnimationNodeBlendTree</span></a>. This animation node will execute a sub-animation and return once it finishes. Blend times for fading in and out can be customized, as well as filters.</p>\n<p>After setting the request and changing the animation playback, the one-shot node automatically clears the request on the next process frame by setting its <code class=\"docutils literal notranslate\"><span class=\"pre\">request</span></code> value to <a class=\"reference internal\" href=\"#class-animationnodeoneshot-constant-one-shot-request-none\"><span class=\"std std-ref\">ONE_SHOT_REQUEST_NONE</span></a>.</p>\n<div class=\"sphinx-tabs docutils container\">\n<div aria-label=\"Tabbed content\" class=\"closeable\" role=\"tablist\"><button aria-controls=\"panel-0-R0RTY3JpcHQ=\" aria-selected=\"true\" class=\"sphinx-tabs-tab code-tab group-tab\" id=\"tab-0-R0RTY3JpcHQ=\" name=\"R0RTY3JpcHQ=\" role=\"tab\" tabindex=\"0\">GDScript</button><button aria-controls=\"panel-0-QyM=\" aria-selected=\"false\" class=\"sphinx-tabs-tab code-tab group-tab\" id=\"tab-0-QyM=\" name=\"QyM=\" role=\"tab\" tabindex=\"-1\">C#</button></div><div aria-labelledby=\"tab-0-R0RTY3JpcHQ=\" class=\"sphinx-tabs-panel code-tab group-tab\" id=\"panel-0-R0RTY3JpcHQ=\" name=\"R0RTY3JpcHQ=\" role=\"tabpanel\" tabindex=\"0\"><div class=\"highlight-gdscript notranslate\"><div class=\"highlight\"><pre><span></span><span class=\"c1\"># Play child animation connected to \"shot\" port.</span>\n<span class=\"n\">animation_tree</span><span class=\"o\">.</span><span class=\"k\">set</span><span class=\"p\">(</span><span class=\"s2\">\"parameters/OneShot/request\"</span><span class=\"p\">,</span> <span class=\"n\">AnimationNodeOneShot</span><span class=\"o\">.</span><span class=\"n\">ONE_SHOT_REQUEST_FIRE</span><span class=\"p\">)</span>\n<span class=\"c1\"># Alternative syntax (same result as above).</span>\n<span class=\"n\">animation_tree</span><span class=\"p\">[</span><span class=\"s2\">\"parameters/OneShot/request\"</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"n\">AnimationNodeOneShot</span><span class=\"o\">.</span><span class=\"n\">ONE_SHOT_REQUEST_FIRE</span>\n\n<span class=\"c1\"># Abort child animation connected to \"shot\" port.</span>\n<span class=\"n\">animation_tree</span><span class=\"o\">.</span><span class=\"k\">set</span><span class=\"p\">(</span><span class=\"s2\">\"parameters/OneShot/request\"</span><span class=\"p\">,</span> <span class=\"n\">AnimationNodeOneShot</span><span class=\"o\">.</span><span class=\"n\">ONE_SHOT_REQUEST_ABORT</span><span class=\"p\">)</span>\n<span class=\"c1\"># Alternative syntax (same result as above).</span>\n<span class=\"n\">animation_tree</span><span class=\"p\">[</span><span class=\"s2\">\"parameters/OneShot/request\"</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"n\">AnimationNodeOneShot</span><span class=\"o\">.</span><span class=\"n\">ONE_SHOT_REQUEST_ABORT</span>\n\n<span class=\"c1\"># Abort child animation with fading out connected to \"shot\" port.</span>\n<span class=\"n\">animation_tree</span><span class=\"o\">.</span><span class=\"k\">set</span><span class=\"p\">(</span><span class=\"s2\">\"parameters/OneShot/request\"</span><span class=\"p\">,</span> <span class=\"n\">AnimationNodeOneShot</span><span class=\"o\">.</span><span class=\"n\">ONE_SHOT_REQUEST_FADE_OUT</span><span class=\"p\">)</span>\n<span class=\"c1\"># Alternative syntax (same result as above).</span>\n<span class=\"n\">animation_tree</span><span class=\"p\">[</span><span class=\"s2\">\"parameters/OneShot/request\"</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"n\">AnimationNodeOneShot</span><span class=\"o\">.</span><span class=\"n\">ONE_SHOT_REQUEST_FADE_OUT</span>\n\n<span class=\"c1\"># Get current state (read-only).</span>\n<span class=\"n\">animation_tree</span><span class=\"o\">.</span><span class=\"k\">get</span><span class=\"p\">(</span><span class=\"s2\">\"parameters/OneShot/active\"</span><span class=\"p\">)</span>\n<span class=\"c1\"># Alternative syntax (same result as above).</span>\n<span class=\"n\">animation_tree</span><span class=\"p\">[</span><span class=\"s2\">\"parameters/OneShot/active\"</span><span class=\"p\">]</span>\n\n<span class=\"c1\"># Get current internal state (read-only).</span>\n<span class=\"n\">animation_tree</span><span class=\"o\">.</span><span class=\"k\">get</span><span class=\"p\">(</span><span class=\"s2\">\"parameters/OneShot/internal_active\"</span><span class=\"p\">)</span>\n<span class=\"c1\"># Alternative syntax (same result as above).</span>\n<span class=\"n\">animation_tree</span><span class=\"p\">[</span><span class=\"s2\">\"parameters/OneShot/internal_active\"</span><span class=\"p\">]</span>\n</pre></div>\n</div>\n</div><div aria-labelledby=\"tab-0-QyM=\" class=\"sphinx-tabs-panel code-tab group-tab\" hidden=\"true\" id=\"panel-0-QyM=\" name=\"QyM=\" role=\"tabpanel\" tabindex=\"0\"><div class=\"highlight-csharp notranslate\"><div class=\"highlight\"><pre><span></span><span class=\"c1\">// Play child animation connected to \"shot\" port.</span>\n<span class=\"n\">animationTree</span><span class=\"p\">.</span><span class=\"n\">Set</span><span class=\"p\">(</span><span class=\"s\">\"parameters/OneShot/request\"</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"p\">(</span><span class=\"kt\">int</span><span class=\"p\">)</span><span class=\"n\">AnimationNodeOneShot</span><span class=\"p\">.</span><span class=\"n\">OneShotRequest</span><span class=\"p\">.</span><span class=\"n\">Fire</span><span class=\"p\">);</span>\n\n<span class=\"c1\">// Abort child animation connected to \"shot\" port.</span>\n<span class=\"n\">animationTree</span><span class=\"p\">.</span><span class=\"n\">Set</span><span class=\"p\">(</span><span class=\"s\">\"parameters/OneShot/request\"</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"p\">(</span><span class=\"kt\">int</span><span class=\"p\">)</span><span class=\"n\">AnimationNodeOneShot</span><span class=\"p\">.</span><span class=\"n\">OneShotRequest</span><span class=\"p\">.</span><span class=\"n\">Abort</span><span class=\"p\">);</span>\n\n<span class=\"c1\">// Abort child animation with fading out connected to \"shot\" port.</span>\n<span class=\"n\">animationTree</span><span class=\"p\">.</span><span class=\"n\">Set</span><span class=\"p\">(</span><span class=\"s\">\"parameters/OneShot/request\"</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"p\">(</span><span class=\"kt\">int</span><span class=\"p\">)</span><span class=\"n\">AnimationNodeOneShot</span><span class=\"p\">.</span><span class=\"n\">OneShotRequest</span><span class=\"p\">.</span><span class=\"n\">FadeOut</span><span class=\"p\">);</span>\n\n<span class=\"c1\">// Get current state (read-only).</span>\n<span class=\"n\">animationTree</span><span class=\"p\">.</span><span class=\"n\">Get</span><span class=\"p\">(</span><span class=\"s\">\"parameters/OneShot/active\"</span><span class=\"p\">);</span>\n\n<span class=\"c1\">// Get current internal state (read-only).</span>\n<span class=\"n\">animationTree</span><span class=\"p\">.</span><span class=\"n\">Get</span><span class=\"p\">(</span><span class=\"s\">\"parameters/OneShot/internal_active\"</span><span class=\"p\">);</span>\n</pre></div>\n</div>\n</div></div>\n"
            },
            "class_animationnodeoutput": {
                "url": "https://docs.godotengine.org/en/4.1/classes/class_animationnodeoutput.html",
                "title": "AnimationNodeOutput",
                "blurb": "<p><strong>Inherits:</strong> <a class=\"reference internal\" href=\"class_animationnode.html#class-animationnode\"><span class=\"std std-ref\">AnimationNode</span></a> <strong>&lt;</strong> <a class=\"reference internal\" href=\"class_resource.html#class-resource\"><span class=\"std std-ref\">Resource</span></a> <strong>&lt;</strong> <a class=\"reference internal\" href=\"class_refcounted.html#class-refcounted\"><span class=\"std std-ref\">RefCounted</span></a> <strong>&lt;</strong> <a class=\"reference internal\" href=\"class_object.html#class-object\"><span class=\"std std-ref\">Object</span></a></p><p>The animation output node of an <a class=\"reference internal\" href=\"class_animationnodeblendtree.html#class-animationnodeblendtree\"><span class=\"std std-ref\">AnimationNodeBlendTree</span></a>.</p>",
                "description": "\n\n<p>A node created automatically in an <a class=\"reference internal\" href=\"class_animationnodeblendtree.html#class-animationnodeblendtree\"><span class=\"std std-ref\">AnimationNodeBlendTree</span></a> that outputs the final animation.</p>\n"
            },
            "class_animationnodestatemachine": {
                "url": "https://docs.godotengine.org/en/4.1/classes/class_animationnodestatemachine.html",
                "title": "AnimationNodeStateMachine",
                "blurb": "<p><strong>Inherits:</strong> <a class=\"reference internal\" href=\"class_animationrootnode.html#class-animationrootnode\"><span class=\"std std-ref\">AnimationRootNode</span></a> <strong>&lt;</strong> <a class=\"reference internal\" href=\"class_animationnode.html#class-animationnode\"><span class=\"std std-ref\">AnimationNode</span></a> <strong>&lt;</strong> <a class=\"reference internal\" href=\"class_resource.html#class-resource\"><span class=\"std std-ref\">Resource</span></a> <strong>&lt;</strong> <a class=\"reference internal\" href=\"class_refcounted.html#class-refcounted\"><span class=\"std std-ref\">RefCounted</span></a> <strong>&lt;</strong> <a class=\"reference internal\" href=\"class_object.html#class-object\"><span class=\"std std-ref\">Object</span></a></p><p>A state machine with multiple <a class=\"reference internal\" href=\"class_animationrootnode.html#class-animationrootnode\"><span class=\"std std-ref\">AnimationRootNode</span></a>s, used by <a class=\"reference internal\" href=\"class_animationtree.html#class-animationtree\"><span class=\"std std-ref\">AnimationTree</span></a>.</p>",
                "description": "\n\n<p>Contains multiple <a class=\"reference internal\" href=\"class_animationrootnode.html#class-animationrootnode\"><span class=\"std std-ref\">AnimationRootNode</span></a>s representing animation states, connected in a graph. State transitions can be configured to happen automatically or via code, using a shortest-path algorithm. Retrieve the <a class=\"reference internal\" href=\"class_animationnodestatemachineplayback.html#class-animationnodestatemachineplayback\"><span class=\"std std-ref\">AnimationNodeStateMachinePlayback</span></a> object from the <a class=\"reference internal\" href=\"class_animationtree.html#class-animationtree\"><span class=\"std std-ref\">AnimationTree</span></a> node to control it programmatically.</p>\n<p><strong>Example:</strong></p>\n<div class=\"sphinx-tabs docutils container\">\n<div aria-label=\"Tabbed content\" class=\"closeable\" role=\"tablist\"><button aria-controls=\"panel-0-R0RTY3JpcHQ=\" aria-selected=\"true\" class=\"sphinx-tabs-tab code-tab group-tab\" id=\"tab-0-R0RTY3JpcHQ=\" name=\"R0RTY3JpcHQ=\" role=\"tab\" tabindex=\"0\">GDScript</button><button aria-controls=\"panel-0-QyM=\" aria-selected=\"false\" class=\"sphinx-tabs-tab code-tab group-tab\" id=\"tab-0-QyM=\" name=\"QyM=\" role=\"tab\" tabindex=\"-1\">C#</button></div><div aria-labelledby=\"tab-0-R0RTY3JpcHQ=\" class=\"sphinx-tabs-panel code-tab group-tab\" id=\"panel-0-R0RTY3JpcHQ=\" name=\"R0RTY3JpcHQ=\" role=\"tabpanel\" tabindex=\"0\"><div class=\"highlight-gdscript notranslate\"><div class=\"highlight\"><pre><span></span><span class=\"k\">var</span> <span class=\"n\">state_machine</span> <span class=\"o\">=</span> <span class=\"o\">$</span><span class=\"n\">AnimationTree</span><span class=\"o\">.</span><span class=\"k\">get</span><span class=\"p\">(</span><span class=\"s2\">\"parameters/playback\"</span><span class=\"p\">)</span>\n<span class=\"n\">state_machine</span><span class=\"o\">.</span><span class=\"n\">travel</span><span class=\"p\">(</span><span class=\"s2\">\"some_state\"</span><span class=\"p\">)</span>\n</pre></div>\n</div>\n</div><div aria-labelledby=\"tab-0-QyM=\" class=\"sphinx-tabs-panel code-tab group-tab\" hidden=\"true\" id=\"panel-0-QyM=\" name=\"QyM=\" role=\"tabpanel\" tabindex=\"0\"><div class=\"highlight-csharp notranslate\"><div class=\"highlight\"><pre><span></span><span class=\"kt\">var</span><span class=\"w\"> </span><span class=\"n\">stateMachine</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"n\">GetNode</span><span class=\"o\">&lt;</span><span class=\"n\">AnimationTree</span><span class=\"o\">&gt;</span><span class=\"p\">(</span><span class=\"s\">\"AnimationTree\"</span><span class=\"p\">).</span><span class=\"n\">Get</span><span class=\"p\">(</span><span class=\"s\">\"parameters/playback\"</span><span class=\"p\">)</span><span class=\"w\"> </span><span class=\"k\">as</span><span class=\"w\"> </span><span class=\"n\">AnimationNodeStateMachinePlayback</span><span class=\"p\">;</span>\n<span class=\"n\">stateMachine</span><span class=\"p\">.</span><span class=\"n\">Travel</span><span class=\"p\">(</span><span class=\"s\">\"some_state\"</span><span class=\"p\">);</span>\n</pre></div>\n</div>\n</div></div>\n"
            },
            "class_animationnodestatemachineplayback": {
                "url": "https://docs.godotengine.org/en/4.1/classes/class_animationnodestatemachineplayback.html",
                "title": "AnimationNodeStateMachinePlayback",
                "blurb": "<p><strong>Inherits:</strong> <a class=\"reference internal\" href=\"class_resource.html#class-resource\"><span class=\"std std-ref\">Resource</span></a> <strong>&lt;</strong> <a class=\"reference internal\" href=\"class_refcounted.html#class-refcounted\"><span class=\"std std-ref\">RefCounted</span></a> <strong>&lt;</strong> <a class=\"reference internal\" href=\"class_object.html#class-object\"><span class=\"std std-ref\">Object</span></a></p><p>Provides playback control for an <a class=\"reference internal\" href=\"class_animationnodestatemachine.html#class-animationnodestatemachine\"><span class=\"std std-ref\">AnimationNodeStateMachine</span></a>.</p>",
                "description": "\n\n<p>Allows control of <a class=\"reference internal\" href=\"class_animationtree.html#class-animationtree\"><span class=\"std std-ref\">AnimationTree</span></a> state machines created with <a class=\"reference internal\" href=\"class_animationnodestatemachine.html#class-animationnodestatemachine\"><span class=\"std std-ref\">AnimationNodeStateMachine</span></a>. Retrieve with <code class=\"docutils literal notranslate\"><span class=\"pre\">$AnimationTree.get(\"parameters/playback\")</span></code>.</p>\n<p><strong>Example:</strong></p>\n<div class=\"sphinx-tabs docutils container\">\n<div aria-label=\"Tabbed content\" class=\"closeable\" role=\"tablist\"><button aria-controls=\"panel-0-R0RTY3JpcHQ=\" aria-selected=\"true\" class=\"sphinx-tabs-tab code-tab group-tab\" id=\"tab-0-R0RTY3JpcHQ=\" name=\"R0RTY3JpcHQ=\" role=\"tab\" tabindex=\"0\">GDScript</button><button aria-controls=\"panel-0-QyM=\" aria-selected=\"false\" class=\"sphinx-tabs-tab code-tab group-tab\" id=\"tab-0-QyM=\" name=\"QyM=\" role=\"tab\" tabindex=\"-1\">C#</button></div><div aria-labelledby=\"tab-0-R0RTY3JpcHQ=\" class=\"sphinx-tabs-panel code-tab group-tab\" id=\"panel-0-R0RTY3JpcHQ=\" name=\"R0RTY3JpcHQ=\" role=\"tabpanel\" tabindex=\"0\"><div class=\"highlight-gdscript notranslate\"><div class=\"highlight\"><pre><span></span><span class=\"k\">var</span> <span class=\"n\">state_machine</span> <span class=\"o\">=</span> <span class=\"o\">$</span><span class=\"n\">AnimationTree</span><span class=\"o\">.</span><span class=\"k\">get</span><span class=\"p\">(</span><span class=\"s2\">\"parameters/playback\"</span><span class=\"p\">)</span>\n<span class=\"n\">state_machine</span><span class=\"o\">.</span><span class=\"n\">travel</span><span class=\"p\">(</span><span class=\"s2\">\"some_state\"</span><span class=\"p\">)</span>\n</pre></div>\n</div>\n</div><div aria-labelledby=\"tab-0-QyM=\" class=\"sphinx-tabs-panel code-tab group-tab\" hidden=\"true\" id=\"panel-0-QyM=\" name=\"QyM=\" role=\"tabpanel\" tabindex=\"0\"><div class=\"highlight-csharp notranslate\"><div class=\"highlight\"><pre><span></span><span class=\"kt\">var</span><span class=\"w\"> </span><span class=\"n\">stateMachine</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"n\">GetNode</span><span class=\"o\">&lt;</span><span class=\"n\">AnimationTree</span><span class=\"o\">&gt;</span><span class=\"p\">(</span><span class=\"s\">\"AnimationTree\"</span><span class=\"p\">).</span><span class=\"n\">Get</span><span class=\"p\">(</span><span class=\"s\">\"parameters/playback\"</span><span class=\"p\">).</span><span class=\"n\">As</span><span class=\"o\">&lt;</span><span class=\"n\">AnimationNodeStateMachinePlayback</span><span class=\"o\">&gt;</span><span class=\"p\">();</span>\n<span class=\"n\">stateMachine</span><span class=\"p\">.</span><span class=\"n\">Travel</span><span class=\"p\">(</span><span class=\"s\">\"some_state\"</span><span class=\"p\">);</span>\n</pre></div>\n</div>\n</div></div>\n"
            },
            "class_animationnodestatemachinetransition": {
                "url": "https://docs.godotengine.org/en/4.1/classes/class_animationnodestatemachinetransition.html",
                "title": "AnimationNodeStateMachineTransition",
                "blurb": "<p><strong>Inherits:</strong> <a class=\"reference internal\" href=\"class_resource.html#class-resource\"><span class=\"std std-ref\">Resource</span></a> <strong>&lt;</strong> <a class=\"reference internal\" href=\"class_refcounted.html#class-refcounted\"><span class=\"std std-ref\">RefCounted</span></a> <strong>&lt;</strong> <a class=\"reference internal\" href=\"class_object.html#class-object\"><span class=\"std std-ref\">Object</span></a></p><p>A transition within an <a class=\"reference internal\" href=\"class_animationnodestatemachine.html#class-animationnodestatemachine\"><span class=\"std std-ref\">AnimationNodeStateMachine</span></a> connecting two <a class=\"reference internal\" href=\"class_animationrootnode.html#class-animationrootnode\"><span class=\"std std-ref\">AnimationRootNode</span></a>s.</p>",
                "description": "\n\n<p>The path generated when using <a class=\"reference internal\" href=\"class_animationnodestatemachineplayback.html#class-animationnodestatemachineplayback-method-travel\"><span class=\"std std-ref\">AnimationNodeStateMachinePlayback.travel</span></a> is limited to the nodes connected by <strong>AnimationNodeStateMachineTransition</strong>.</p>\n<p>You can set the timing and conditions of the transition in detail.</p>\n"
            },
            "class_animationnodesub2": {
                "url": "https://docs.godotengine.org/en/4.1/classes/class_animationnodesub2.html",
                "title": "AnimationNodeSub2",
                "blurb": "<p><strong>Inherits:</strong> <a class=\"reference internal\" href=\"class_animationnodesync.html#class-animationnodesync\"><span class=\"std std-ref\">AnimationNodeSync</span></a> <strong>&lt;</strong> <a class=\"reference internal\" href=\"class_animationnode.html#class-animationnode\"><span class=\"std std-ref\">AnimationNode</span></a> <strong>&lt;</strong> <a class=\"reference internal\" href=\"class_resource.html#class-resource\"><span class=\"std std-ref\">Resource</span></a> <strong>&lt;</strong> <a class=\"reference internal\" href=\"class_refcounted.html#class-refcounted\"><span class=\"std std-ref\">RefCounted</span></a> <strong>&lt;</strong> <a class=\"reference internal\" href=\"class_object.html#class-object\"><span class=\"std std-ref\">Object</span></a></p><p>Blends two animations subtractively inside of an <a class=\"reference internal\" href=\"class_animationnodeblendtree.html#class-animationnodeblendtree\"><span class=\"std std-ref\">AnimationNodeBlendTree</span></a>.</p>",
                "description": "\n\n<p>A resource to add to an <a class=\"reference internal\" href=\"class_animationnodeblendtree.html#class-animationnodeblendtree\"><span class=\"std std-ref\">AnimationNodeBlendTree</span></a>. Blends two animations subtractively based on the amount value.</p>\n<p>This animation node is usually used for pre-calculation to cancel out any extra poses from the animation for the \"add\" animation source in <a class=\"reference internal\" href=\"class_animationnodeadd2.html#class-animationnodeadd2\"><span class=\"std std-ref\">AnimationNodeAdd2</span></a> or <a class=\"reference internal\" href=\"class_animationnodeadd3.html#class-animationnodeadd3\"><span class=\"std std-ref\">AnimationNodeAdd3</span></a>.</p>\n<p>In general, the blend value should be in the <code class=\"docutils literal notranslate\"><span class=\"pre\">[0.0,</span> <span class=\"pre\">1.0]</span></code> range, but values outside of this range can be used for amplified or inverted animations.</p>\n<p><strong>Note:</strong> This calculation is different from using a negative value in <a class=\"reference internal\" href=\"class_animationnodeadd2.html#class-animationnodeadd2\"><span class=\"std std-ref\">AnimationNodeAdd2</span></a>, since the transformation matrices do not satisfy the commutative law. <strong>AnimationNodeSub2</strong> multiplies the transformation matrix of the inverted animation from the left side, while negative <a class=\"reference internal\" href=\"class_animationnodeadd2.html#class-animationnodeadd2\"><span class=\"std std-ref\">AnimationNodeAdd2</span></a> multiplies it from the right side.</p>\n"
            },
            "class_animationnodesync": {
                "url": "https://docs.godotengine.org/en/4.1/classes/class_animationnodesync.html",
                "title": "AnimationNodeSync",
                "blurb": "<p><strong>Inherits:</strong> <a class=\"reference internal\" href=\"class_animationnode.html#class-animationnode\"><span class=\"std std-ref\">AnimationNode</span></a> <strong>&lt;</strong> <a class=\"reference internal\" href=\"class_resource.html#class-resource\"><span class=\"std std-ref\">Resource</span></a> <strong>&lt;</strong> <a class=\"reference internal\" href=\"class_refcounted.html#class-refcounted\"><span class=\"std std-ref\">RefCounted</span></a> <strong>&lt;</strong> <a class=\"reference internal\" href=\"class_object.html#class-object\"><span class=\"std std-ref\">Object</span></a></p><p><strong>Inherited By:</strong> <a class=\"reference internal\" href=\"class_animationnodeadd2.html#class-animationnodeadd2\"><span class=\"std std-ref\">AnimationNodeAdd2</span></a>, <a class=\"reference internal\" href=\"class_animationnodeadd3.html#class-animationnodeadd3\"><span class=\"std std-ref\">AnimationNodeAdd3</span></a>, <a class=\"reference internal\" href=\"class_animationnodeblend2.html#class-animationnodeblend2\"><span class=\"std std-ref\">AnimationNodeBlend2</span></a>, <a class=\"reference internal\" href=\"class_animationnodeblend3.html#class-animationnodeblend3\"><span class=\"std std-ref\">AnimationNodeBlend3</span></a>, <a class=\"reference internal\" href=\"class_animationnodeoneshot.html#class-animationnodeoneshot\"><span class=\"std std-ref\">AnimationNodeOneShot</span></a>, <a class=\"reference internal\" href=\"class_animationnodesub2.html#class-animationnodesub2\"><span class=\"std std-ref\">AnimationNodeSub2</span></a>, <a class=\"reference internal\" href=\"class_animationnodetransition.html#class-animationnodetransition\"><span class=\"std std-ref\">AnimationNodeTransition</span></a></p><p>Base class for <a class=\"reference internal\" href=\"class_animationnode.html#class-animationnode\"><span class=\"std std-ref\">AnimationNode</span></a>s with more than two input ports that must be synchronized.</p>",
                "description": "\n\n<p>An animation node used to combine, mix, or blend two or more animations together while keeping them synchronized within an <a class=\"reference internal\" href=\"class_animationtree.html#class-animationtree\"><span class=\"std std-ref\">AnimationTree</span></a>.</p>\n"
            },
            "class_animationnodetimescale": {
                "url": "https://docs.godotengine.org/en/4.1/classes/class_animationnodetimescale.html",
                "title": "AnimationNodeTimeScale",
                "blurb": "<p><strong>Inherits:</strong> <a class=\"reference internal\" href=\"class_animationnode.html#class-animationnode\"><span class=\"std std-ref\">AnimationNode</span></a> <strong>&lt;</strong> <a class=\"reference internal\" href=\"class_resource.html#class-resource\"><span class=\"std std-ref\">Resource</span></a> <strong>&lt;</strong> <a class=\"reference internal\" href=\"class_refcounted.html#class-refcounted\"><span class=\"std std-ref\">RefCounted</span></a> <strong>&lt;</strong> <a class=\"reference internal\" href=\"class_object.html#class-object\"><span class=\"std std-ref\">Object</span></a></p><p>A time-scaling animation node used in <a class=\"reference internal\" href=\"class_animationtree.html#class-animationtree\"><span class=\"std std-ref\">AnimationTree</span></a>.</p>",
                "description": "\n\n<p>Allows to scale the speed of the animation (or reverse it) in any children <a class=\"reference internal\" href=\"class_animationnode.html#class-animationnode\"><span class=\"std std-ref\">AnimationNode</span></a>s. Setting it to <code class=\"docutils literal notranslate\"><span class=\"pre\">0.0</span></code> will pause the animation.</p>\n"
            },
            "class_animationnodetimeseek": {
                "url": "https://docs.godotengine.org/en/4.1/classes/class_animationnodetimeseek.html",
                "title": "AnimationNodeTimeSeek",
                "blurb": "<p><strong>Inherits:</strong> <a class=\"reference internal\" href=\"class_animationnode.html#class-animationnode\"><span class=\"std std-ref\">AnimationNode</span></a> <strong>&lt;</strong> <a class=\"reference internal\" href=\"class_resource.html#class-resource\"><span class=\"std std-ref\">Resource</span></a> <strong>&lt;</strong> <a class=\"reference internal\" href=\"class_refcounted.html#class-refcounted\"><span class=\"std std-ref\">RefCounted</span></a> <strong>&lt;</strong> <a class=\"reference internal\" href=\"class_object.html#class-object\"><span class=\"std std-ref\">Object</span></a></p><p>A time-seeking animation node used in <a class=\"reference internal\" href=\"class_animationtree.html#class-animationtree\"><span class=\"std std-ref\">AnimationTree</span></a>.</p>",
                "description": "\n\n<p>This animation node can be used to cause a seek command to happen to any sub-children of the animation graph. Use to play an <a class=\"reference internal\" href=\"class_animation.html#class-animation\"><span class=\"std std-ref\">Animation</span></a> from the start or a certain playback position inside the <a class=\"reference internal\" href=\"class_animationnodeblendtree.html#class-animationnodeblendtree\"><span class=\"std std-ref\">AnimationNodeBlendTree</span></a>.</p>\n<p>After setting the time and changing the animation playback, the time seek node automatically goes into sleep mode on the next process frame by setting its <code class=\"docutils literal notranslate\"><span class=\"pre\">seek_request</span></code> value to <code class=\"docutils literal notranslate\"><span class=\"pre\">-1.0</span></code>.</p>\n<div class=\"sphinx-tabs docutils container\">\n<div aria-label=\"Tabbed content\" class=\"closeable\" role=\"tablist\"><button aria-controls=\"panel-0-R0RTY3JpcHQ=\" aria-selected=\"true\" class=\"sphinx-tabs-tab code-tab group-tab\" id=\"tab-0-R0RTY3JpcHQ=\" name=\"R0RTY3JpcHQ=\" role=\"tab\" tabindex=\"0\">GDScript</button><button aria-controls=\"panel-0-QyM=\" aria-selected=\"false\" class=\"sphinx-tabs-tab code-tab group-tab\" id=\"tab-0-QyM=\" name=\"QyM=\" role=\"tab\" tabindex=\"-1\">C#</button></div><div aria-labelledby=\"tab-0-R0RTY3JpcHQ=\" class=\"sphinx-tabs-panel code-tab group-tab\" id=\"panel-0-R0RTY3JpcHQ=\" name=\"R0RTY3JpcHQ=\" role=\"tabpanel\" tabindex=\"0\"><div class=\"highlight-gdscript notranslate\"><div class=\"highlight\"><pre><span></span><span class=\"c1\"># Play child animation from the start.</span>\n<span class=\"n\">animation_tree</span><span class=\"o\">.</span><span class=\"k\">set</span><span class=\"p\">(</span><span class=\"s2\">\"parameters/TimeSeek/seek_request\"</span><span class=\"p\">,</span> <span class=\"mf\">0.0</span><span class=\"p\">)</span>\n<span class=\"c1\"># Alternative syntax (same result as above).</span>\n<span class=\"n\">animation_tree</span><span class=\"p\">[</span><span class=\"s2\">\"parameters/TimeSeek/seek_request\"</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"mf\">0.0</span>\n\n<span class=\"c1\"># Play child animation from 12 second timestamp.</span>\n<span class=\"n\">animation_tree</span><span class=\"o\">.</span><span class=\"k\">set</span><span class=\"p\">(</span><span class=\"s2\">\"parameters/TimeSeek/seek_request\"</span><span class=\"p\">,</span> <span class=\"mf\">12.0</span><span class=\"p\">)</span>\n<span class=\"c1\"># Alternative syntax (same result as above).</span>\n<span class=\"n\">animation_tree</span><span class=\"p\">[</span><span class=\"s2\">\"parameters/TimeSeek/seek_request\"</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"mf\">12.0</span>\n</pre></div>\n</div>\n</div><div aria-labelledby=\"tab-0-QyM=\" class=\"sphinx-tabs-panel code-tab group-tab\" hidden=\"true\" id=\"panel-0-QyM=\" name=\"QyM=\" role=\"tabpanel\" tabindex=\"0\"><div class=\"highlight-csharp notranslate\"><div class=\"highlight\"><pre><span></span><span class=\"c1\">// Play child animation from the start.</span>\n<span class=\"n\">animationTree</span><span class=\"p\">.</span><span class=\"n\">Set</span><span class=\"p\">(</span><span class=\"s\">\"parameters/TimeSeek/seek_request\"</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"m\">0.0</span><span class=\"p\">);</span>\n\n<span class=\"c1\">// Play child animation from 12 second timestamp.</span>\n<span class=\"n\">animationTree</span><span class=\"p\">.</span><span class=\"n\">Set</span><span class=\"p\">(</span><span class=\"s\">\"parameters/TimeSeek/seek_request\"</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"m\">12.0</span><span class=\"p\">);</span>\n</pre></div>\n</div>\n</div></div>\n"
            },
            "class_animationnodetransition": {
                "url": "https://docs.godotengine.org/en/4.1/classes/class_animationnodetransition.html",
                "title": "AnimationNodeTransition",
                "blurb": "<p><strong>Inherits:</strong> <a class=\"reference internal\" href=\"class_animationnodesync.html#class-animationnodesync\"><span class=\"std std-ref\">AnimationNodeSync</span></a> <strong>&lt;</strong> <a class=\"reference internal\" href=\"class_animationnode.html#class-animationnode\"><span class=\"std std-ref\">AnimationNode</span></a> <strong>&lt;</strong> <a class=\"reference internal\" href=\"class_resource.html#class-resource\"><span class=\"std std-ref\">Resource</span></a> <strong>&lt;</strong> <a class=\"reference internal\" href=\"class_refcounted.html#class-refcounted\"><span class=\"std std-ref\">RefCounted</span></a> <strong>&lt;</strong> <a class=\"reference internal\" href=\"class_object.html#class-object\"><span class=\"std std-ref\">Object</span></a></p><p>A transition within an <a class=\"reference internal\" href=\"class_animationtree.html#class-animationtree\"><span class=\"std std-ref\">AnimationTree</span></a> connecting two <a class=\"reference internal\" href=\"class_animationnode.html#class-animationnode\"><span class=\"std std-ref\">AnimationNode</span></a>s.</p>",
                "description": "\n\n<p>Simple state machine for cases which don't require a more advanced <a class=\"reference internal\" href=\"class_animationnodestatemachine.html#class-animationnodestatemachine\"><span class=\"std std-ref\">AnimationNodeStateMachine</span></a>. Animations can be connected to the inputs and transition times can be specified.</p>\n<p>After setting the request and changing the animation playback, the transition node automatically clears the request on the next process frame by setting its <code class=\"docutils literal notranslate\"><span class=\"pre\">transition_request</span></code> value to empty.</p>\n<p><strong>Note:</strong> When using a cross-fade, <code class=\"docutils literal notranslate\"><span class=\"pre\">current_state</span></code> and <code class=\"docutils literal notranslate\"><span class=\"pre\">current_index</span></code> change to the next state immediately after the cross-fade begins.</p>\n<div class=\"sphinx-tabs docutils container\">\n<div aria-label=\"Tabbed content\" class=\"closeable\" role=\"tablist\"><button aria-controls=\"panel-0-R0RTY3JpcHQ=\" aria-selected=\"true\" class=\"sphinx-tabs-tab code-tab group-tab\" id=\"tab-0-R0RTY3JpcHQ=\" name=\"R0RTY3JpcHQ=\" role=\"tab\" tabindex=\"0\">GDScript</button><button aria-controls=\"panel-0-QyM=\" aria-selected=\"false\" class=\"sphinx-tabs-tab code-tab group-tab\" id=\"tab-0-QyM=\" name=\"QyM=\" role=\"tab\" tabindex=\"-1\">C#</button></div><div aria-labelledby=\"tab-0-R0RTY3JpcHQ=\" class=\"sphinx-tabs-panel code-tab group-tab\" id=\"panel-0-R0RTY3JpcHQ=\" name=\"R0RTY3JpcHQ=\" role=\"tabpanel\" tabindex=\"0\"><div class=\"highlight-gdscript notranslate\"><div class=\"highlight\"><pre><span></span><span class=\"c1\"># Play child animation connected to \"state_2\" port.</span>\n<span class=\"n\">animation_tree</span><span class=\"o\">.</span><span class=\"k\">set</span><span class=\"p\">(</span><span class=\"s2\">\"parameters/Transition/transition_request\"</span><span class=\"p\">,</span> <span class=\"s2\">\"state_2\"</span><span class=\"p\">)</span>\n<span class=\"c1\"># Alternative syntax (same result as above).</span>\n<span class=\"n\">animation_tree</span><span class=\"p\">[</span><span class=\"s2\">\"parameters/Transition/transition_request\"</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"s2\">\"state_2\"</span>\n\n<span class=\"c1\"># Get current state name (read-only).</span>\n<span class=\"n\">animation_tree</span><span class=\"o\">.</span><span class=\"k\">get</span><span class=\"p\">(</span><span class=\"s2\">\"parameters/Transition/current_state\"</span><span class=\"p\">)</span>\n<span class=\"c1\"># Alternative syntax (same result as above).</span>\n<span class=\"n\">animation_tree</span><span class=\"p\">[</span><span class=\"s2\">\"parameters/Transition/current_state\"</span><span class=\"p\">]</span>\n\n<span class=\"c1\"># Get current state index (read-only).</span>\n<span class=\"n\">animation_tree</span><span class=\"o\">.</span><span class=\"k\">get</span><span class=\"p\">(</span><span class=\"s2\">\"parameters/Transition/current_index\"</span><span class=\"p\">)</span>\n<span class=\"c1\"># Alternative syntax (same result as above).</span>\n<span class=\"n\">animation_tree</span><span class=\"p\">[</span><span class=\"s2\">\"parameters/Transition/current_index\"</span><span class=\"p\">]</span>\n</pre></div>\n</div>\n</div><div aria-labelledby=\"tab-0-QyM=\" class=\"sphinx-tabs-panel code-tab group-tab\" hidden=\"true\" id=\"panel-0-QyM=\" name=\"QyM=\" role=\"tabpanel\" tabindex=\"0\"><div class=\"highlight-csharp notranslate\"><div class=\"highlight\"><pre><span></span><span class=\"c1\">// Play child animation connected to \"state_2\" port.</span>\n<span class=\"n\">animationTree</span><span class=\"p\">.</span><span class=\"n\">Set</span><span class=\"p\">(</span><span class=\"s\">\"parameters/Transition/transition_request\"</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"s\">\"state_2\"</span><span class=\"p\">);</span>\n\n<span class=\"c1\">// Get current state name (read-only).</span>\n<span class=\"n\">animationTree</span><span class=\"p\">.</span><span class=\"n\">Get</span><span class=\"p\">(</span><span class=\"s\">\"parameters/Transition/current_state\"</span><span class=\"p\">);</span>\n\n<span class=\"c1\">// Get current state index (read-only).</span>\n<span class=\"n\">animationTree</span><span class=\"p\">.</span><span class=\"n\">Get</span><span class=\"p\">(</span><span class=\"s\">\"parameters/Transition/current_index\"</span><span class=\"p\">);</span>\n</pre></div>\n</div>\n</div></div>\n"
            },
            "class_animationrootnode": {
                "url": "https://docs.godotengine.org/en/4.1/classes/class_animationrootnode.html",
                "title": "AnimationRootNode",
                "blurb": "<p><strong>Inherits:</strong> <a class=\"reference internal\" href=\"class_animationnode.html#class-animationnode\"><span class=\"std std-ref\">AnimationNode</span></a> <strong>&lt;</strong> <a class=\"reference internal\" href=\"class_resource.html#class-resource\"><span class=\"std std-ref\">Resource</span></a> <strong>&lt;</strong> <a class=\"reference internal\" href=\"class_refcounted.html#class-refcounted\"><span class=\"std std-ref\">RefCounted</span></a> <strong>&lt;</strong> <a class=\"reference internal\" href=\"class_object.html#class-object\"><span class=\"std std-ref\">Object</span></a></p><p><strong>Inherited By:</strong> <a class=\"reference internal\" href=\"class_animationnodeanimation.html#class-animationnodeanimation\"><span class=\"std std-ref\">AnimationNodeAnimation</span></a>, <a class=\"reference internal\" href=\"class_animationnodeblendspace1d.html#class-animationnodeblendspace1d\"><span class=\"std std-ref\">AnimationNodeBlendSpace1D</span></a>, <a class=\"reference internal\" href=\"class_animationnodeblendspace2d.html#class-animationnodeblendspace2d\"><span class=\"std std-ref\">AnimationNodeBlendSpace2D</span></a>, <a class=\"reference internal\" href=\"class_animationnodeblendtree.html#class-animationnodeblendtree\"><span class=\"std std-ref\">AnimationNodeBlendTree</span></a>, <a class=\"reference internal\" href=\"class_animationnodestatemachine.html#class-animationnodestatemachine\"><span class=\"std std-ref\">AnimationNodeStateMachine</span></a></p><p>Base class for <a class=\"reference internal\" href=\"class_animationnode.html#class-animationnode\"><span class=\"std std-ref\">AnimationNode</span></a>s that hold one or multiple composite animations. Usually used for <a class=\"reference internal\" href=\"class_animationtree.html#class-animationtree-property-tree-root\"><span class=\"std std-ref\">AnimationTree.tree_root</span></a>.</p>",
                "description": "\n\n<p><strong>AnimationRootNode</strong> is a base class for <a class=\"reference internal\" href=\"class_animationnode.html#class-animationnode\"><span class=\"std std-ref\">AnimationNode</span></a>s that hold a complete animation. A complete animation refers to the output of an <a class=\"reference internal\" href=\"class_animationnodeoutput.html#class-animationnodeoutput\"><span class=\"std std-ref\">AnimationNodeOutput</span></a> in an <a class=\"reference internal\" href=\"class_animationnodeblendtree.html#class-animationnodeblendtree\"><span class=\"std std-ref\">AnimationNodeBlendTree</span></a> or the output of another <strong>AnimationRootNode</strong>. Used for <a class=\"reference internal\" href=\"class_animationtree.html#class-animationtree-property-tree-root\"><span class=\"std std-ref\">AnimationTree.tree_root</span></a> or in other <strong>AnimationRootNode</strong>s.</p>\n<p>Examples of built-in root nodes include <a class=\"reference internal\" href=\"class_animationnodeblendtree.html#class-animationnodeblendtree\"><span class=\"std std-ref\">AnimationNodeBlendTree</span></a> (allows blending nodes between each other using various modes), <a class=\"reference internal\" href=\"class_animationnodestatemachine.html#class-animationnodestatemachine\"><span class=\"std std-ref\">AnimationNodeStateMachine</span></a> (allows to configure blending and transitions between nodes using a state machine pattern), <a class=\"reference internal\" href=\"class_animationnodeblendspace2d.html#class-animationnodeblendspace2d\"><span class=\"std std-ref\">AnimationNodeBlendSpace2D</span></a> (allows linear blending between <strong>three</strong> <a class=\"reference internal\" href=\"class_animationnode.html#class-animationnode\"><span class=\"std std-ref\">AnimationNode</span></a>s), <a class=\"reference internal\" href=\"class_animationnodeblendspace1d.html#class-animationnodeblendspace1d\"><span class=\"std std-ref\">AnimationNodeBlendSpace1D</span></a> (allows linear blending only between <strong>two</strong> <a class=\"reference internal\" href=\"class_animationnode.html#class-animationnode\"><span class=\"std std-ref\">AnimationNode</span></a>s).</p>\n"
            },
            "class_arraymesh": {
                "url": "https://docs.godotengine.org/en/4.1/classes/class_arraymesh.html",
                "title": "ArrayMesh",
                "blurb": "<p><strong>Inherits:</strong> <a class=\"reference internal\" href=\"class_mesh.html#class-mesh\"><span class=\"std std-ref\">Mesh</span></a> <strong>&lt;</strong> <a class=\"reference internal\" href=\"class_resource.html#class-resource\"><span class=\"std std-ref\">Resource</span></a> <strong>&lt;</strong> <a class=\"reference internal\" href=\"class_refcounted.html#class-refcounted\"><span class=\"std std-ref\">RefCounted</span></a> <strong>&lt;</strong> <a class=\"reference internal\" href=\"class_object.html#class-object\"><span class=\"std std-ref\">Object</span></a></p><p><a class=\"reference internal\" href=\"class_mesh.html#class-mesh\"><span class=\"std std-ref\">Mesh</span></a> type that provides utility for constructing a surface from arrays.</p>",
                "description": "\n\n<p>The <strong>ArrayMesh</strong> is used to construct a <a class=\"reference internal\" href=\"class_mesh.html#class-mesh\"><span class=\"std std-ref\">Mesh</span></a> by specifying the attributes as arrays.</p>\n<p>The most basic example is the creation of a single triangle:</p>\n<div class=\"sphinx-tabs docutils container\">\n<div aria-label=\"Tabbed content\" class=\"closeable\" role=\"tablist\"><button aria-controls=\"panel-0-R0RTY3JpcHQ=\" aria-selected=\"true\" class=\"sphinx-tabs-tab code-tab group-tab\" id=\"tab-0-R0RTY3JpcHQ=\" name=\"R0RTY3JpcHQ=\" role=\"tab\" tabindex=\"0\">GDScript</button><button aria-controls=\"panel-0-QyM=\" aria-selected=\"false\" class=\"sphinx-tabs-tab code-tab group-tab\" id=\"tab-0-QyM=\" name=\"QyM=\" role=\"tab\" tabindex=\"-1\">C#</button></div><div aria-labelledby=\"tab-0-R0RTY3JpcHQ=\" class=\"sphinx-tabs-panel code-tab group-tab\" id=\"panel-0-R0RTY3JpcHQ=\" name=\"R0RTY3JpcHQ=\" role=\"tabpanel\" tabindex=\"0\"><div class=\"highlight-gdscript notranslate\"><div class=\"highlight\"><pre><span></span><span class=\"k\">var</span> <span class=\"n\">vertices</span> <span class=\"o\">=</span> <span class=\"nb nb-Type\">PackedVector3Array</span><span class=\"p\">()</span>\n<span class=\"n\">vertices</span><span class=\"o\">.</span><span class=\"n\">push_back</span><span class=\"p\">(</span><span class=\"nb nb-Type\">Vector3</span><span class=\"p\">(</span><span class=\"mi\">0</span><span class=\"p\">,</span> <span class=\"mi\">1</span><span class=\"p\">,</span> <span class=\"mi\">0</span><span class=\"p\">))</span>\n<span class=\"n\">vertices</span><span class=\"o\">.</span><span class=\"n\">push_back</span><span class=\"p\">(</span><span class=\"nb nb-Type\">Vector3</span><span class=\"p\">(</span><span class=\"mi\">1</span><span class=\"p\">,</span> <span class=\"mi\">0</span><span class=\"p\">,</span> <span class=\"mi\">0</span><span class=\"p\">))</span>\n<span class=\"n\">vertices</span><span class=\"o\">.</span><span class=\"n\">push_back</span><span class=\"p\">(</span><span class=\"nb nb-Type\">Vector3</span><span class=\"p\">(</span><span class=\"mi\">0</span><span class=\"p\">,</span> <span class=\"mi\">0</span><span class=\"p\">,</span> <span class=\"mi\">1</span><span class=\"p\">))</span>\n\n<span class=\"c1\"># Initialize the ArrayMesh.</span>\n<span class=\"k\">var</span> <span class=\"n\">arr_mesh</span> <span class=\"o\">=</span> <span class=\"n\">ArrayMesh</span><span class=\"o\">.</span><span class=\"n\">new</span><span class=\"p\">()</span>\n<span class=\"k\">var</span> <span class=\"n\">arrays</span> <span class=\"o\">=</span> <span class=\"p\">[]</span>\n<span class=\"n\">arrays</span><span class=\"o\">.</span><span class=\"n\">resize</span><span class=\"p\">(</span><span class=\"n\">Mesh</span><span class=\"o\">.</span><span class=\"n\">ARRAY_MAX</span><span class=\"p\">)</span>\n<span class=\"n\">arrays</span><span class=\"p\">[</span><span class=\"n\">Mesh</span><span class=\"o\">.</span><span class=\"n\">ARRAY_VERTEX</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"n\">vertices</span>\n\n<span class=\"c1\"># Create the Mesh.</span>\n<span class=\"n\">arr_mesh</span><span class=\"o\">.</span><span class=\"n\">add_surface_from_arrays</span><span class=\"p\">(</span><span class=\"n\">Mesh</span><span class=\"o\">.</span><span class=\"n\">PRIMITIVE_TRIANGLES</span><span class=\"p\">,</span> <span class=\"n\">arrays</span><span class=\"p\">)</span>\n<span class=\"k\">var</span> <span class=\"n\">m</span> <span class=\"o\">=</span> <span class=\"n\">MeshInstance3D</span><span class=\"o\">.</span><span class=\"n\">new</span><span class=\"p\">()</span>\n<span class=\"n\">m</span><span class=\"o\">.</span><span class=\"n\">mesh</span> <span class=\"o\">=</span> <span class=\"n\">arr_mesh</span>\n</pre></div>\n</div>\n</div><div aria-labelledby=\"tab-0-QyM=\" class=\"sphinx-tabs-panel code-tab group-tab\" hidden=\"true\" id=\"panel-0-QyM=\" name=\"QyM=\" role=\"tabpanel\" tabindex=\"0\"><div class=\"highlight-csharp notranslate\"><div class=\"highlight\"><pre><span></span><span class=\"kt\">var</span><span class=\"w\"> </span><span class=\"n\">vertices</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"k\">new</span><span class=\"w\"> </span><span class=\"n\">Vector3</span><span class=\"p\">[]</span>\n<span class=\"p\">{</span>\n<span class=\"w\">    </span><span class=\"k\">new</span><span class=\"w\"> </span><span class=\"nf\">Vector3</span><span class=\"p\">(</span><span class=\"m\">0</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"m\">1</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"m\">0</span><span class=\"p\">),</span>\n<span class=\"w\">    </span><span class=\"k\">new</span><span class=\"w\"> </span><span class=\"nf\">Vector3</span><span class=\"p\">(</span><span class=\"m\">1</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"m\">0</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"m\">0</span><span class=\"p\">),</span>\n<span class=\"w\">    </span><span class=\"k\">new</span><span class=\"w\"> </span><span class=\"nf\">Vector3</span><span class=\"p\">(</span><span class=\"m\">0</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"m\">0</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"m\">1</span><span class=\"p\">),</span>\n<span class=\"p\">};</span>\n\n<span class=\"c1\">// Initialize the ArrayMesh.</span>\n<span class=\"kt\">var</span><span class=\"w\"> </span><span class=\"n\">arrMesh</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"k\">new</span><span class=\"w\"> </span><span class=\"n\">ArrayMesh</span><span class=\"p\">();</span>\n<span class=\"kt\">var</span><span class=\"w\"> </span><span class=\"n\">arrays</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"k\">new</span><span class=\"w\"> </span><span class=\"n\">Godot</span><span class=\"p\">.</span><span class=\"n\">Collections</span><span class=\"p\">.</span><span class=\"n\">Array</span><span class=\"p\">();</span>\n<span class=\"n\">arrays</span><span class=\"p\">.</span><span class=\"n\">Resize</span><span class=\"p\">((</span><span class=\"kt\">int</span><span class=\"p\">)</span><span class=\"n\">Mesh</span><span class=\"p\">.</span><span class=\"n\">ArrayType</span><span class=\"p\">.</span><span class=\"n\">Max</span><span class=\"p\">);</span>\n<span class=\"n\">arrays</span><span class=\"p\">[(</span><span class=\"kt\">int</span><span class=\"p\">)</span><span class=\"n\">Mesh</span><span class=\"p\">.</span><span class=\"n\">ArrayType</span><span class=\"p\">.</span><span class=\"n\">Vertex</span><span class=\"p\">]</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"n\">vertices</span><span class=\"p\">;</span>\n\n<span class=\"c1\">// Create the Mesh.</span>\n<span class=\"n\">arrMesh</span><span class=\"p\">.</span><span class=\"n\">AddSurfaceFromArrays</span><span class=\"p\">(</span><span class=\"n\">Mesh</span><span class=\"p\">.</span><span class=\"n\">PrimitiveType</span><span class=\"p\">.</span><span class=\"n\">Triangles</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">arrays</span><span class=\"p\">);</span>\n<span class=\"kt\">var</span><span class=\"w\"> </span><span class=\"n\">m</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"k\">new</span><span class=\"w\"> </span><span class=\"n\">MeshInstance3D</span><span class=\"p\">();</span>\n<span class=\"n\">m</span><span class=\"p\">.</span><span class=\"n\">Mesh</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"n\">arrMesh</span><span class=\"p\">;</span>\n</pre></div>\n</div>\n</div></div>\n<p>The <a class=\"reference internal\" href=\"class_meshinstance3d.html#class-meshinstance3d\"><span class=\"std std-ref\">MeshInstance3D</span></a> is ready to be added to the <a class=\"reference internal\" href=\"class_scenetree.html#class-scenetree\"><span class=\"std std-ref\">SceneTree</span></a> to be shown.</p>\n<p>See also <a class=\"reference internal\" href=\"class_immediatemesh.html#class-immediatemesh\"><span class=\"std std-ref\">ImmediateMesh</span></a>, <a class=\"reference internal\" href=\"class_meshdatatool.html#class-meshdatatool\"><span class=\"std std-ref\">MeshDataTool</span></a> and <a class=\"reference internal\" href=\"class_surfacetool.html#class-surfacetool\"><span class=\"std std-ref\">SurfaceTool</span></a> for procedural geometry generation.</p>\n<p><strong>Note:</strong> Godot uses clockwise <a class=\"reference external\" href=\"https://learnopengl.com/Advanced-OpenGL/Face-culling\">winding order</a> for front faces of triangle primitive modes.</p>\n"
            },
            "class_arrayoccluder3d": {
                "url": "https://docs.godotengine.org/en/4.1/classes/class_arrayoccluder3d.html",
                "title": "ArrayOccluder3D",
                "blurb": "<p><strong>Inherits:</strong> <a class=\"reference internal\" href=\"class_occluder3d.html#class-occluder3d\"><span class=\"std std-ref\">Occluder3D</span></a> <strong>&lt;</strong> <a class=\"reference internal\" href=\"class_resource.html#class-resource\"><span class=\"std std-ref\">Resource</span></a> <strong>&lt;</strong> <a class=\"reference internal\" href=\"class_refcounted.html#class-refcounted\"><span class=\"std std-ref\">RefCounted</span></a> <strong>&lt;</strong> <a class=\"reference internal\" href=\"class_object.html#class-object\"><span class=\"std std-ref\">Object</span></a></p><p>3D polygon shape for use with occlusion culling in <a class=\"reference internal\" href=\"class_occluderinstance3d.html#class-occluderinstance3d\"><span class=\"std std-ref\">OccluderInstance3D</span></a>.</p>",
                "description": "\n\n<p><strong>ArrayOccluder3D</strong> stores an arbitrary 3D polygon shape that can be used by the engine's occlusion culling system. This is analogous to <a class=\"reference internal\" href=\"class_arraymesh.html#class-arraymesh\"><span class=\"std std-ref\">ArrayMesh</span></a>, but for occluders.</p>\n<p>See <a class=\"reference internal\" href=\"class_occluderinstance3d.html#class-occluderinstance3d\"><span class=\"std std-ref\">OccluderInstance3D</span></a>'s documentation for instructions on setting up occlusion culling.</p>\n"
            },
            "class_atlastexture": {
                "url": "https://docs.godotengine.org/en/4.1/classes/class_atlastexture.html",
                "title": "AtlasTexture",
                "blurb": "<p><strong>Inherits:</strong> <a class=\"reference internal\" href=\"class_texture2d.html#class-texture2d\"><span class=\"std std-ref\">Texture2D</span></a> <strong>&lt;</strong> <a class=\"reference internal\" href=\"class_texture.html#class-texture\"><span class=\"std std-ref\">Texture</span></a> <strong>&lt;</strong> <a class=\"reference internal\" href=\"class_resource.html#class-resource\"><span class=\"std std-ref\">Resource</span></a> <strong>&lt;</strong> <a class=\"reference internal\" href=\"class_refcounted.html#class-refcounted\"><span class=\"std std-ref\">RefCounted</span></a> <strong>&lt;</strong> <a class=\"reference internal\" href=\"class_object.html#class-object\"><span class=\"std std-ref\">Object</span></a></p><p>A texture that crops out part of another Texture2D.</p>",
                "description": "\n\n<p><a class=\"reference internal\" href=\"class_texture2d.html#class-texture2d\"><span class=\"std std-ref\">Texture2D</span></a> resource that draws only part of its <a class=\"reference internal\" href=\"#class-atlastexture-property-atlas\"><span class=\"std std-ref\">atlas</span></a> texture, as defined by the <a class=\"reference internal\" href=\"#class-atlastexture-property-region\"><span class=\"std std-ref\">region</span></a>. An additional <a class=\"reference internal\" href=\"#class-atlastexture-property-margin\"><span class=\"std std-ref\">margin</span></a> can also be set, which is useful for small adjustments.</p>\n<p>Multiple <strong>AtlasTexture</strong> resources can be cropped from the same <a class=\"reference internal\" href=\"#class-atlastexture-property-atlas\"><span class=\"std std-ref\">atlas</span></a>. Packing many smaller textures into a singular large texture helps to optimize video memory costs and render calls.</p>\n<p><strong>Note:</strong> <strong>AtlasTexture</strong> cannot be used in an <a class=\"reference internal\" href=\"class_animatedtexture.html#class-animatedtexture\"><span class=\"std std-ref\">AnimatedTexture</span></a>, and may not tile properly in nodes such as <a class=\"reference internal\" href=\"class_texturerect.html#class-texturerect\"><span class=\"std std-ref\">TextureRect</span></a>, when inside other <strong>AtlasTexture</strong> resources.</p>\n"
            },
            "class_audiobuslayout": {
                "url": "https://docs.godotengine.org/en/4.1/classes/class_audiobuslayout.html",
                "title": "AudioBusLayout",
                "blurb": "<p><strong>Inherits:</strong> <a class=\"reference internal\" href=\"class_resource.html#class-resource\"><span class=\"std std-ref\">Resource</span></a> <strong>&lt;</strong> <a class=\"reference internal\" href=\"class_refcounted.html#class-refcounted\"><span class=\"std std-ref\">RefCounted</span></a> <strong>&lt;</strong> <a class=\"reference internal\" href=\"class_object.html#class-object\"><span class=\"std std-ref\">Object</span></a></p><p>Stores information about the audio buses.</p>",
                "description": "\n\n<p>Stores position, muting, solo, bypass, effects, effect position, volume, and the connections between buses. See <a class=\"reference internal\" href=\"class_audioserver.html#class-audioserver\"><span class=\"std std-ref\">AudioServer</span></a> for usage.</p>\n"
            },
            "class_audioeffect": {
                "url": "https://docs.godotengine.org/en/4.1/classes/class_audioeffect.html",
                "title": "AudioEffect",
                "blurb": "<p><strong>Inherits:</strong> <a class=\"reference internal\" href=\"class_resource.html#class-resource\"><span class=\"std std-ref\">Resource</span></a> <strong>&lt;</strong> <a class=\"reference internal\" href=\"class_refcounted.html#class-refcounted\"><span class=\"std std-ref\">RefCounted</span></a> <strong>&lt;</strong> <a class=\"reference internal\" href=\"class_object.html#class-object\"><span class=\"std std-ref\">Object</span></a></p><p><strong>Inherited By:</strong> <a class=\"reference internal\" href=\"class_audioeffectamplify.html#class-audioeffectamplify\"><span class=\"std std-ref\">AudioEffectAmplify</span></a>, <a class=\"reference internal\" href=\"class_audioeffectcapture.html#class-audioeffectcapture\"><span class=\"std std-ref\">AudioEffectCapture</span></a>, <a class=\"reference internal\" href=\"class_audioeffectchorus.html#class-audioeffectchorus\"><span class=\"std std-ref\">AudioEffectChorus</span></a>, <a class=\"reference internal\" href=\"class_audioeffectcompressor.html#class-audioeffectcompressor\"><span class=\"std std-ref\">AudioEffectCompressor</span></a>, <a class=\"reference internal\" href=\"class_audioeffectdelay.html#class-audioeffectdelay\"><span class=\"std std-ref\">AudioEffectDelay</span></a>, <a class=\"reference internal\" href=\"class_audioeffectdistortion.html#class-audioeffectdistortion\"><span class=\"std std-ref\">AudioEffectDistortion</span></a>, <a class=\"reference internal\" href=\"class_audioeffecteq.html#class-audioeffecteq\"><span class=\"std std-ref\">AudioEffectEQ</span></a>, <a class=\"reference internal\" href=\"class_audioeffectfilter.html#class-audioeffectfilter\"><span class=\"std std-ref\">AudioEffectFilter</span></a>, <a class=\"reference internal\" href=\"class_audioeffectlimiter.html#class-audioeffectlimiter\"><span class=\"std std-ref\">AudioEffectLimiter</span></a>, <a class=\"reference internal\" href=\"class_audioeffectpanner.html#class-audioeffectpanner\"><span class=\"std std-ref\">AudioEffectPanner</span></a>, <a class=\"reference internal\" href=\"class_audioeffectphaser.html#class-audioeffectphaser\"><span class=\"std std-ref\">AudioEffectPhaser</span></a>, <a class=\"reference internal\" href=\"class_audioeffectpitchshift.html#class-audioeffectpitchshift\"><span class=\"std std-ref\">AudioEffectPitchShift</span></a>, <a class=\"reference internal\" href=\"class_audioeffectrecord.html#class-audioeffectrecord\"><span class=\"std std-ref\">AudioEffectRecord</span></a>, <a class=\"reference internal\" href=\"class_audioeffectreverb.html#class-audioeffectreverb\"><span class=\"std std-ref\">AudioEffectReverb</span></a>, <a class=\"reference internal\" href=\"class_audioeffectspectrumanalyzer.html#class-audioeffectspectrumanalyzer\"><span class=\"std std-ref\">AudioEffectSpectrumAnalyzer</span></a>, <a class=\"reference internal\" href=\"class_audioeffectstereoenhance.html#class-audioeffectstereoenhance\"><span class=\"std std-ref\">AudioEffectStereoEnhance</span></a></p><p>Audio effect for audio.</p>",
                "description": "\n\n<p>Base resource for audio bus. Applies an audio effect on the bus that the resource is applied on.</p>\n"
            },
            "class_audioeffectamplify": {
                "url": "https://docs.godotengine.org/en/4.1/classes/class_audioeffectamplify.html",
                "title": "AudioEffectAmplify",
                "blurb": "<p><strong>Inherits:</strong> <a class=\"reference internal\" href=\"class_audioeffect.html#class-audioeffect\"><span class=\"std std-ref\">AudioEffect</span></a> <strong>&lt;</strong> <a class=\"reference internal\" href=\"class_resource.html#class-resource\"><span class=\"std std-ref\">Resource</span></a> <strong>&lt;</strong> <a class=\"reference internal\" href=\"class_refcounted.html#class-refcounted\"><span class=\"std std-ref\">RefCounted</span></a> <strong>&lt;</strong> <a class=\"reference internal\" href=\"class_object.html#class-object\"><span class=\"std std-ref\">Object</span></a></p><p>Adds an amplifying audio effect to an audio bus.</p>",
                "description": "\n\n<p>Increases or decreases the volume being routed through the audio bus.</p>\n"
            },
            "class_audioeffectbandlimitfilter": {
                "url": "https://docs.godotengine.org/en/4.1/classes/class_audioeffectbandlimitfilter.html",
                "title": "AudioEffectBandLimitFilter",
                "blurb": "<p><strong>Inherits:</strong> <a class=\"reference internal\" href=\"class_audioeffectfilter.html#class-audioeffectfilter\"><span class=\"std std-ref\">AudioEffectFilter</span></a> <strong>&lt;</strong> <a class=\"reference internal\" href=\"class_audioeffect.html#class-audioeffect\"><span class=\"std std-ref\">AudioEffect</span></a> <strong>&lt;</strong> <a class=\"reference internal\" href=\"class_resource.html#class-resource\"><span class=\"std std-ref\">Resource</span></a> <strong>&lt;</strong> <a class=\"reference internal\" href=\"class_refcounted.html#class-refcounted\"><span class=\"std std-ref\">RefCounted</span></a> <strong>&lt;</strong> <a class=\"reference internal\" href=\"class_object.html#class-object\"><span class=\"std std-ref\">Object</span></a></p><p>Adds a band limit filter to the audio bus.</p>",
                "description": "\n\n<p>Limits the frequencies in a range around the <a class=\"reference internal\" href=\"class_audioeffectfilter.html#class-audioeffectfilter-property-cutoff-hz\"><span class=\"std std-ref\">AudioEffectFilter.cutoff_hz</span></a> and allows frequencies outside of this range to pass.</p>\n"
            },
            "class_audioeffectbandpassfilter": {
                "url": "https://docs.godotengine.org/en/4.1/classes/class_audioeffectbandpassfilter.html",
                "title": "AudioEffectBandPassFilter",
                "blurb": "<p><strong>Inherits:</strong> <a class=\"reference internal\" href=\"class_audioeffectfilter.html#class-audioeffectfilter\"><span class=\"std std-ref\">AudioEffectFilter</span></a> <strong>&lt;</strong> <a class=\"reference internal\" href=\"class_audioeffect.html#class-audioeffect\"><span class=\"std std-ref\">AudioEffect</span></a> <strong>&lt;</strong> <a class=\"reference internal\" href=\"class_resource.html#class-resource\"><span class=\"std std-ref\">Resource</span></a> <strong>&lt;</strong> <a class=\"reference internal\" href=\"class_refcounted.html#class-refcounted\"><span class=\"std std-ref\">RefCounted</span></a> <strong>&lt;</strong> <a class=\"reference internal\" href=\"class_object.html#class-object\"><span class=\"std std-ref\">Object</span></a></p><p>Adds a band pass filter to the audio bus.</p>",
                "description": "\n\n<p>Attenuates the frequencies inside of a range around the <a class=\"reference internal\" href=\"class_audioeffectfilter.html#class-audioeffectfilter-property-cutoff-hz\"><span class=\"std std-ref\">AudioEffectFilter.cutoff_hz</span></a> and cuts frequencies outside of this band.</p>\n"
            },
            "class_audioeffectcapture": {
                "url": "https://docs.godotengine.org/en/4.1/classes/class_audioeffectcapture.html",
                "title": "AudioEffectCapture",
                "blurb": "<p><strong>Inherits:</strong> <a class=\"reference internal\" href=\"class_audioeffect.html#class-audioeffect\"><span class=\"std std-ref\">AudioEffect</span></a> <strong>&lt;</strong> <a class=\"reference internal\" href=\"class_resource.html#class-resource\"><span class=\"std std-ref\">Resource</span></a> <strong>&lt;</strong> <a class=\"reference internal\" href=\"class_refcounted.html#class-refcounted\"><span class=\"std std-ref\">RefCounted</span></a> <strong>&lt;</strong> <a class=\"reference internal\" href=\"class_object.html#class-object\"><span class=\"std std-ref\">Object</span></a></p><p>Captures audio from an audio bus in real-time.</p>",
                "description": "\n\n<p>AudioEffectCapture is an AudioEffect which copies all audio frames from the attached audio effect bus into its internal ring buffer.</p>\n<p>Application code should consume these audio frames from this ring buffer using <a class=\"reference internal\" href=\"#class-audioeffectcapture-method-get-buffer\"><span class=\"std std-ref\">get_buffer</span></a> and process it as needed, for example to capture data from an <a class=\"reference internal\" href=\"class_audiostreammicrophone.html#class-audiostreammicrophone\"><span class=\"std std-ref\">AudioStreamMicrophone</span></a>, implement application-defined effects, or to transmit audio over the network. When capturing audio data from a microphone, the format of the samples will be stereo 32-bit floating point PCM.</p>\n<p><strong>Note:</strong> <a class=\"reference internal\" href=\"class_projectsettings.html#class-projectsettings-property-audio-driver-enable-input\"><span class=\"std std-ref\">ProjectSettings.audio/driver/enable_input</span></a> must be <code class=\"docutils literal notranslate\"><span class=\"pre\">true</span></code> for audio input to work. See also that setting's description for caveats related to permissions and operating system privacy settings.</p>\n"
            },
            "class_audioeffectchorus": {
                "url": "https://docs.godotengine.org/en/4.1/classes/class_audioeffectchorus.html",
                "title": "AudioEffectChorus",
                "blurb": "<p><strong>Inherits:</strong> <a class=\"reference internal\" href=\"class_audioeffect.html#class-audioeffect\"><span class=\"std std-ref\">AudioEffect</span></a> <strong>&lt;</strong> <a class=\"reference internal\" href=\"class_resource.html#class-resource\"><span class=\"std std-ref\">Resource</span></a> <strong>&lt;</strong> <a class=\"reference internal\" href=\"class_refcounted.html#class-refcounted\"><span class=\"std std-ref\">RefCounted</span></a> <strong>&lt;</strong> <a class=\"reference internal\" href=\"class_object.html#class-object\"><span class=\"std std-ref\">Object</span></a></p><p>Adds a chorus audio effect.</p>",
                "description": "\n\n<p>Adds a chorus audio effect. The effect applies a filter with voices to duplicate the audio source and manipulate it through the filter.</p>\n"
            },
            "class_audioeffectcompressor": {
                "url": "https://docs.godotengine.org/en/4.1/classes/class_audioeffectcompressor.html",
                "title": "AudioEffectCompressor",
                "blurb": "<p><strong>Inherits:</strong> <a class=\"reference internal\" href=\"class_audioeffect.html#class-audioeffect\"><span class=\"std std-ref\">AudioEffect</span></a> <strong>&lt;</strong> <a class=\"reference internal\" href=\"class_resource.html#class-resource\"><span class=\"std std-ref\">Resource</span></a> <strong>&lt;</strong> <a class=\"reference internal\" href=\"class_refcounted.html#class-refcounted\"><span class=\"std std-ref\">RefCounted</span></a> <strong>&lt;</strong> <a class=\"reference internal\" href=\"class_object.html#class-object\"><span class=\"std std-ref\">Object</span></a></p><p>Adds a compressor audio effect to an audio bus.</p><p>Reduces sounds that exceed a certain threshold level, smooths out the dynamics and increases the overall volume.</p>",
                "description": "\n\n<p>Dynamic range compressor reduces the level of the sound when the amplitude goes over a certain threshold in Decibels. One of the main uses of a compressor is to increase the dynamic range by clipping as little as possible (when sound goes over 0dB).</p>\n<p>Compressor has many uses in the mix:</p>\n<ul class=\"simple\">\n<li><p>In the Master bus to compress the whole output (although an <a class=\"reference internal\" href=\"class_audioeffectlimiter.html#class-audioeffectlimiter\"><span class=\"std std-ref\">AudioEffectLimiter</span></a> is probably better).</p></li>\n<li><p>In voice channels to ensure they sound as balanced as possible.</p></li>\n<li><p>Sidechained. This can reduce the sound level sidechained with another audio bus for threshold detection. This technique is common in video game mixing to the level of music and SFX while voices are being heard.</p></li>\n<li><p>Accentuates transients by using a wider attack, making effects sound more punchy.</p></li>\n</ul>\n"
            },
            "class_audioeffectdelay": {
                "url": "https://docs.godotengine.org/en/4.1/classes/class_audioeffectdelay.html",
                "title": "AudioEffectDelay",
                "blurb": "<p><strong>Inherits:</strong> <a class=\"reference internal\" href=\"class_audioeffect.html#class-audioeffect\"><span class=\"std std-ref\">AudioEffect</span></a> <strong>&lt;</strong> <a class=\"reference internal\" href=\"class_resource.html#class-resource\"><span class=\"std std-ref\">Resource</span></a> <strong>&lt;</strong> <a class=\"reference internal\" href=\"class_refcounted.html#class-refcounted\"><span class=\"std std-ref\">RefCounted</span></a> <strong>&lt;</strong> <a class=\"reference internal\" href=\"class_object.html#class-object\"><span class=\"std std-ref\">Object</span></a></p><p>Adds a delay audio effect to an audio bus. Plays input signal back after a period of time.</p><p>Two tap delay and feedback options.</p>",
                "description": "\n\n<p>Plays input signal back after a period of time. The delayed signal may be played back multiple times to create the sound of a repeating, decaying echo. Delay effects range from a subtle echo effect to a pronounced blending of previous sounds with new sounds.</p>\n"
            },
            "class_audioeffectdistortion": {
                "url": "https://docs.godotengine.org/en/4.1/classes/class_audioeffectdistortion.html",
                "title": "AudioEffectDistortion",
                "blurb": "<p><strong>Inherits:</strong> <a class=\"reference internal\" href=\"class_audioeffect.html#class-audioeffect\"><span class=\"std std-ref\">AudioEffect</span></a> <strong>&lt;</strong> <a class=\"reference internal\" href=\"class_resource.html#class-resource\"><span class=\"std std-ref\">Resource</span></a> <strong>&lt;</strong> <a class=\"reference internal\" href=\"class_refcounted.html#class-refcounted\"><span class=\"std std-ref\">RefCounted</span></a> <strong>&lt;</strong> <a class=\"reference internal\" href=\"class_object.html#class-object\"><span class=\"std std-ref\">Object</span></a></p><p>Adds a distortion audio effect to an Audio bus.</p><p>Modifies the sound to make it distorted.</p>",
                "description": "\n\n<p>Different types are available: clip, tan, lo-fi (bit crushing), overdrive, or waveshape.</p>\n<p>By distorting the waveform the frequency content changes, which will often make the sound \"crunchy\" or \"abrasive\". For games, it can simulate sound coming from some saturated device or speaker very efficiently.</p>\n"
            },
            "class_audioeffecteq": {
                "url": "https://docs.godotengine.org/en/4.1/classes/class_audioeffecteq.html",
                "title": "AudioEffectEQ",
                "blurb": "<p><strong>Inherits:</strong> <a class=\"reference internal\" href=\"class_audioeffect.html#class-audioeffect\"><span class=\"std std-ref\">AudioEffect</span></a> <strong>&lt;</strong> <a class=\"reference internal\" href=\"class_resource.html#class-resource\"><span class=\"std std-ref\">Resource</span></a> <strong>&lt;</strong> <a class=\"reference internal\" href=\"class_refcounted.html#class-refcounted\"><span class=\"std std-ref\">RefCounted</span></a> <strong>&lt;</strong> <a class=\"reference internal\" href=\"class_object.html#class-object\"><span class=\"std std-ref\">Object</span></a></p><p><strong>Inherited By:</strong> <a class=\"reference internal\" href=\"class_audioeffecteq10.html#class-audioeffecteq10\"><span class=\"std std-ref\">AudioEffectEQ10</span></a>, <a class=\"reference internal\" href=\"class_audioeffecteq21.html#class-audioeffecteq21\"><span class=\"std std-ref\">AudioEffectEQ21</span></a>, <a class=\"reference internal\" href=\"class_audioeffecteq6.html#class-audioeffecteq6\"><span class=\"std std-ref\">AudioEffectEQ6</span></a></p><p>Base class for audio equalizers. Gives you control over frequencies.</p><p>Use it to create a custom equalizer if <a class=\"reference internal\" href=\"class_audioeffecteq6.html#class-audioeffecteq6\"><span class=\"std std-ref\">AudioEffectEQ6</span></a>, <a class=\"reference internal\" href=\"class_audioeffecteq10.html#class-audioeffecteq10\"><span class=\"std std-ref\">AudioEffectEQ10</span></a> or <a class=\"reference internal\" href=\"class_audioeffecteq21.html#class-audioeffecteq21\"><span class=\"std std-ref\">AudioEffectEQ21</span></a> don't fit your needs.</p>",
                "description": "\n\n<p>AudioEffectEQ gives you control over frequencies. Use it to compensate for existing deficiencies in audio. AudioEffectEQs are useful on the Master bus to completely master a mix and give it more character. They are also useful when a game is run on a mobile device, to adjust the mix to that kind of speakers (it can be added but disabled when headphones are plugged).</p>\n"
            },
            "class_audioeffecteq10": {
                "url": "https://docs.godotengine.org/en/4.1/classes/class_audioeffecteq10.html",
                "title": "AudioEffectEQ10",
                "blurb": "<p><strong>Inherits:</strong> <a class=\"reference internal\" href=\"class_audioeffecteq.html#class-audioeffecteq\"><span class=\"std std-ref\">AudioEffectEQ</span></a> <strong>&lt;</strong> <a class=\"reference internal\" href=\"class_audioeffect.html#class-audioeffect\"><span class=\"std std-ref\">AudioEffect</span></a> <strong>&lt;</strong> <a class=\"reference internal\" href=\"class_resource.html#class-resource\"><span class=\"std std-ref\">Resource</span></a> <strong>&lt;</strong> <a class=\"reference internal\" href=\"class_refcounted.html#class-refcounted\"><span class=\"std std-ref\">RefCounted</span></a> <strong>&lt;</strong> <a class=\"reference internal\" href=\"class_object.html#class-object\"><span class=\"std std-ref\">Object</span></a></p><p>Adds a 10-band equalizer audio effect to an Audio bus. Gives you control over frequencies from 31 Hz to 16000 Hz.</p><p>Each frequency can be modulated between -60/+24 dB.</p>",
                "description": "\n\n<p>Frequency bands:</p>\n<p>Band 1: 31 Hz</p>\n<p>Band 2: 62 Hz</p>\n<p>Band 3: 125 Hz</p>\n<p>Band 4: 250 Hz</p>\n<p>Band 5: 500 Hz</p>\n<p>Band 6: 1000 Hz</p>\n<p>Band 7: 2000 Hz</p>\n<p>Band 8: 4000 Hz</p>\n<p>Band 9: 8000 Hz</p>\n<p>Band 10: 16000 Hz</p>\n<p>See also <a class=\"reference internal\" href=\"class_audioeffecteq.html#class-audioeffecteq\"><span class=\"std std-ref\">AudioEffectEQ</span></a>, <a class=\"reference internal\" href=\"class_audioeffecteq6.html#class-audioeffecteq6\"><span class=\"std std-ref\">AudioEffectEQ6</span></a>, <a class=\"reference internal\" href=\"class_audioeffecteq21.html#class-audioeffecteq21\"><span class=\"std std-ref\">AudioEffectEQ21</span></a>.</p>\n"
            },
            "class_audioeffecteq21": {
                "url": "https://docs.godotengine.org/en/4.1/classes/class_audioeffecteq21.html",
                "title": "AudioEffectEQ21",
                "blurb": "<p><strong>Inherits:</strong> <a class=\"reference internal\" href=\"class_audioeffecteq.html#class-audioeffecteq\"><span class=\"std std-ref\">AudioEffectEQ</span></a> <strong>&lt;</strong> <a class=\"reference internal\" href=\"class_audioeffect.html#class-audioeffect\"><span class=\"std std-ref\">AudioEffect</span></a> <strong>&lt;</strong> <a class=\"reference internal\" href=\"class_resource.html#class-resource\"><span class=\"std std-ref\">Resource</span></a> <strong>&lt;</strong> <a class=\"reference internal\" href=\"class_refcounted.html#class-refcounted\"><span class=\"std std-ref\">RefCounted</span></a> <strong>&lt;</strong> <a class=\"reference internal\" href=\"class_object.html#class-object\"><span class=\"std std-ref\">Object</span></a></p><p>Adds a 21-band equalizer audio effect to an Audio bus. Gives you control over frequencies from 22 Hz to 22000 Hz.</p><p>Each frequency can be modulated between -60/+24 dB.</p>",
                "description": "\n\n<p>Frequency bands:</p>\n<p>Band 1: 22 Hz</p>\n<p>Band 2: 32 Hz</p>\n<p>Band 3: 44 Hz</p>\n<p>Band 4: 63 Hz</p>\n<p>Band 5: 90 Hz</p>\n<p>Band 6: 125 Hz</p>\n<p>Band 7: 175 Hz</p>\n<p>Band 8: 250 Hz</p>\n<p>Band 9: 350 Hz</p>\n<p>Band 10: 500 Hz</p>\n<p>Band 11: 700 Hz</p>\n<p>Band 12: 1000 Hz</p>\n<p>Band 13: 1400 Hz</p>\n<p>Band 14: 2000 Hz</p>\n<p>Band 15: 2800 Hz</p>\n<p>Band 16: 4000 Hz</p>\n<p>Band 17: 5600 Hz</p>\n<p>Band 18: 8000 Hz</p>\n<p>Band 19: 11000 Hz</p>\n<p>Band 20: 16000 Hz</p>\n<p>Band 21: 22000 Hz</p>\n<p>See also <a class=\"reference internal\" href=\"class_audioeffecteq.html#class-audioeffecteq\"><span class=\"std std-ref\">AudioEffectEQ</span></a>, <a class=\"reference internal\" href=\"class_audioeffecteq6.html#class-audioeffecteq6\"><span class=\"std std-ref\">AudioEffectEQ6</span></a>, <a class=\"reference internal\" href=\"class_audioeffecteq10.html#class-audioeffecteq10\"><span class=\"std std-ref\">AudioEffectEQ10</span></a>.</p>\n"
            },
            "class_audioeffecteq6": {
                "url": "https://docs.godotengine.org/en/4.1/classes/class_audioeffecteq6.html",
                "title": "AudioEffectEQ6",
                "blurb": "<p><strong>Inherits:</strong> <a class=\"reference internal\" href=\"class_audioeffecteq.html#class-audioeffecteq\"><span class=\"std std-ref\">AudioEffectEQ</span></a> <strong>&lt;</strong> <a class=\"reference internal\" href=\"class_audioeffect.html#class-audioeffect\"><span class=\"std std-ref\">AudioEffect</span></a> <strong>&lt;</strong> <a class=\"reference internal\" href=\"class_resource.html#class-resource\"><span class=\"std std-ref\">Resource</span></a> <strong>&lt;</strong> <a class=\"reference internal\" href=\"class_refcounted.html#class-refcounted\"><span class=\"std std-ref\">RefCounted</span></a> <strong>&lt;</strong> <a class=\"reference internal\" href=\"class_object.html#class-object\"><span class=\"std std-ref\">Object</span></a></p><p>Adds a 6-band equalizer audio effect to an audio bus. Gives you control over frequencies from 32 Hz to 10000 Hz.</p><p>Each frequency can be modulated between -60/+24 dB.</p>",
                "description": "\n\n<p>Frequency bands:</p>\n<p>Band 1: 32 Hz</p>\n<p>Band 2: 100 Hz</p>\n<p>Band 3: 320 Hz</p>\n<p>Band 4: 1000 Hz</p>\n<p>Band 5: 3200 Hz</p>\n<p>Band 6: 10000 Hz</p>\n<p>See also <a class=\"reference internal\" href=\"class_audioeffecteq.html#class-audioeffecteq\"><span class=\"std std-ref\">AudioEffectEQ</span></a>, <a class=\"reference internal\" href=\"class_audioeffecteq10.html#class-audioeffecteq10\"><span class=\"std std-ref\">AudioEffectEQ10</span></a>, <a class=\"reference internal\" href=\"class_audioeffecteq21.html#class-audioeffecteq21\"><span class=\"std std-ref\">AudioEffectEQ21</span></a>.</p>\n"
            },
            "class_audioeffectfilter": {
                "url": "https://docs.godotengine.org/en/4.1/classes/class_audioeffectfilter.html",
                "title": "AudioEffectFilter",
                "blurb": "<p><strong>Inherits:</strong> <a class=\"reference internal\" href=\"class_audioeffect.html#class-audioeffect\"><span class=\"std std-ref\">AudioEffect</span></a> <strong>&lt;</strong> <a class=\"reference internal\" href=\"class_resource.html#class-resource\"><span class=\"std std-ref\">Resource</span></a> <strong>&lt;</strong> <a class=\"reference internal\" href=\"class_refcounted.html#class-refcounted\"><span class=\"std std-ref\">RefCounted</span></a> <strong>&lt;</strong> <a class=\"reference internal\" href=\"class_object.html#class-object\"><span class=\"std std-ref\">Object</span></a></p><p><strong>Inherited By:</strong> <a class=\"reference internal\" href=\"class_audioeffectbandlimitfilter.html#class-audioeffectbandlimitfilter\"><span class=\"std std-ref\">AudioEffectBandLimitFilter</span></a>, <a class=\"reference internal\" href=\"class_audioeffectbandpassfilter.html#class-audioeffectbandpassfilter\"><span class=\"std std-ref\">AudioEffectBandPassFilter</span></a>, <a class=\"reference internal\" href=\"class_audioeffecthighpassfilter.html#class-audioeffecthighpassfilter\"><span class=\"std std-ref\">AudioEffectHighPassFilter</span></a>, <a class=\"reference internal\" href=\"class_audioeffecthighshelffilter.html#class-audioeffecthighshelffilter\"><span class=\"std std-ref\">AudioEffectHighShelfFilter</span></a>, <a class=\"reference internal\" href=\"class_audioeffectlowpassfilter.html#class-audioeffectlowpassfilter\"><span class=\"std std-ref\">AudioEffectLowPassFilter</span></a>, <a class=\"reference internal\" href=\"class_audioeffectlowshelffilter.html#class-audioeffectlowshelffilter\"><span class=\"std std-ref\">AudioEffectLowShelfFilter</span></a>, <a class=\"reference internal\" href=\"class_audioeffectnotchfilter.html#class-audioeffectnotchfilter\"><span class=\"std std-ref\">AudioEffectNotchFilter</span></a></p><p>Adds a filter to the audio bus.</p>",
                "description": "\n\n<p>Allows frequencies other than the <a class=\"reference internal\" href=\"#class-audioeffectfilter-property-cutoff-hz\"><span class=\"std std-ref\">cutoff_hz</span></a> to pass.</p>\n"
            },
            "class_audioeffecthighpassfilter": {
                "url": "https://docs.godotengine.org/en/4.1/classes/class_audioeffecthighpassfilter.html",
                "title": "AudioEffectHighPassFilter",
                "blurb": "<p><strong>Inherits:</strong> <a class=\"reference internal\" href=\"class_audioeffectfilter.html#class-audioeffectfilter\"><span class=\"std std-ref\">AudioEffectFilter</span></a> <strong>&lt;</strong> <a class=\"reference internal\" href=\"class_audioeffect.html#class-audioeffect\"><span class=\"std std-ref\">AudioEffect</span></a> <strong>&lt;</strong> <a class=\"reference internal\" href=\"class_resource.html#class-resource\"><span class=\"std std-ref\">Resource</span></a> <strong>&lt;</strong> <a class=\"reference internal\" href=\"class_refcounted.html#class-refcounted\"><span class=\"std std-ref\">RefCounted</span></a> <strong>&lt;</strong> <a class=\"reference internal\" href=\"class_object.html#class-object\"><span class=\"std std-ref\">Object</span></a></p><p>Adds a high-pass filter to the audio bus.</p>",
                "description": "\n\n<p>Cuts frequencies lower than the <a class=\"reference internal\" href=\"class_audioeffectfilter.html#class-audioeffectfilter-property-cutoff-hz\"><span class=\"std std-ref\">AudioEffectFilter.cutoff_hz</span></a> and allows higher frequencies to pass.</p>\n"
            },
            "class_audioeffecthighshelffilter": {
                "url": "https://docs.godotengine.org/en/4.1/classes/class_audioeffecthighshelffilter.html",
                "title": "AudioEffectHighShelfFilter",
                "blurb": "<p><strong>Inherits:</strong> <a class=\"reference internal\" href=\"class_audioeffectfilter.html#class-audioeffectfilter\"><span class=\"std std-ref\">AudioEffectFilter</span></a> <strong>&lt;</strong> <a class=\"reference internal\" href=\"class_audioeffect.html#class-audioeffect\"><span class=\"std std-ref\">AudioEffect</span></a> <strong>&lt;</strong> <a class=\"reference internal\" href=\"class_resource.html#class-resource\"><span class=\"std std-ref\">Resource</span></a> <strong>&lt;</strong> <a class=\"reference internal\" href=\"class_refcounted.html#class-refcounted\"><span class=\"std std-ref\">RefCounted</span></a> <strong>&lt;</strong> <a class=\"reference internal\" href=\"class_object.html#class-object\"><span class=\"std std-ref\">Object</span></a></p><p>Adds a high-shelf filter to the audio bus.</p>",
                "description": "\n\n<p>Reduces all frequencies above the <a class=\"reference internal\" href=\"class_audioeffectfilter.html#class-audioeffectfilter-property-cutoff-hz\"><span class=\"std std-ref\">AudioEffectFilter.cutoff_hz</span></a>.</p>\n"
            },
            "class_audioeffectlimiter": {
                "url": "https://docs.godotengine.org/en/4.1/classes/class_audioeffectlimiter.html",
                "title": "AudioEffectLimiter",
                "blurb": "<p><strong>Inherits:</strong> <a class=\"reference internal\" href=\"class_audioeffect.html#class-audioeffect\"><span class=\"std std-ref\">AudioEffect</span></a> <strong>&lt;</strong> <a class=\"reference internal\" href=\"class_resource.html#class-resource\"><span class=\"std std-ref\">Resource</span></a> <strong>&lt;</strong> <a class=\"reference internal\" href=\"class_refcounted.html#class-refcounted\"><span class=\"std std-ref\">RefCounted</span></a> <strong>&lt;</strong> <a class=\"reference internal\" href=\"class_object.html#class-object\"><span class=\"std std-ref\">Object</span></a></p><p>Adds a soft-clip limiter audio effect to an Audio bus.</p>",
                "description": "\n\n<p>A limiter is similar to a compressor, but it's less flexible and designed to disallow sound going over a given dB threshold. Adding one in the Master bus is always recommended to reduce the effects of clipping.</p>\n<p>Soft clipping starts to reduce the peaks a little below the threshold level and progressively increases its effect as the input level increases such that the threshold is never exceeded.</p>\n"
            },
            "class_audioeffectlowpassfilter": {
                "url": "https://docs.godotengine.org/en/4.1/classes/class_audioeffectlowpassfilter.html",
                "title": "AudioEffectLowPassFilter",
                "blurb": "<p><strong>Inherits:</strong> <a class=\"reference internal\" href=\"class_audioeffectfilter.html#class-audioeffectfilter\"><span class=\"std std-ref\">AudioEffectFilter</span></a> <strong>&lt;</strong> <a class=\"reference internal\" href=\"class_audioeffect.html#class-audioeffect\"><span class=\"std std-ref\">AudioEffect</span></a> <strong>&lt;</strong> <a class=\"reference internal\" href=\"class_resource.html#class-resource\"><span class=\"std std-ref\">Resource</span></a> <strong>&lt;</strong> <a class=\"reference internal\" href=\"class_refcounted.html#class-refcounted\"><span class=\"std std-ref\">RefCounted</span></a> <strong>&lt;</strong> <a class=\"reference internal\" href=\"class_object.html#class-object\"><span class=\"std std-ref\">Object</span></a></p><p>Adds a low-pass filter to the audio bus.</p>",
                "description": "\n\n<p>Cuts frequencies higher than the <a class=\"reference internal\" href=\"class_audioeffectfilter.html#class-audioeffectfilter-property-cutoff-hz\"><span class=\"std std-ref\">AudioEffectFilter.cutoff_hz</span></a> and allows lower frequencies to pass.</p>\n"
            },
            "class_audioeffectlowshelffilter": {
                "url": "https://docs.godotengine.org/en/4.1/classes/class_audioeffectlowshelffilter.html",
                "title": "AudioEffectLowShelfFilter",
                "blurb": "<p><strong>Inherits:</strong> <a class=\"reference internal\" href=\"class_audioeffectfilter.html#class-audioeffectfilter\"><span class=\"std std-ref\">AudioEffectFilter</span></a> <strong>&lt;</strong> <a class=\"reference internal\" href=\"class_audioeffect.html#class-audioeffect\"><span class=\"std std-ref\">AudioEffect</span></a> <strong>&lt;</strong> <a class=\"reference internal\" href=\"class_resource.html#class-resource\"><span class=\"std std-ref\">Resource</span></a> <strong>&lt;</strong> <a class=\"reference internal\" href=\"class_refcounted.html#class-refcounted\"><span class=\"std std-ref\">RefCounted</span></a> <strong>&lt;</strong> <a class=\"reference internal\" href=\"class_object.html#class-object\"><span class=\"std std-ref\">Object</span></a></p><p>Adds a low-shelf filter to the audio bus.</p>",
                "description": "\n\n<p>Reduces all frequencies below the <a class=\"reference internal\" href=\"class_audioeffectfilter.html#class-audioeffectfilter-property-cutoff-hz\"><span class=\"std std-ref\">AudioEffectFilter.cutoff_hz</span></a>.</p>\n"
            },
            "class_audioeffectnotchfilter": {
                "url": "https://docs.godotengine.org/en/4.1/classes/class_audioeffectnotchfilter.html",
                "title": "AudioEffectNotchFilter",
                "blurb": "<p><strong>Inherits:</strong> <a class=\"reference internal\" href=\"class_audioeffectfilter.html#class-audioeffectfilter\"><span class=\"std std-ref\">AudioEffectFilter</span></a> <strong>&lt;</strong> <a class=\"reference internal\" href=\"class_audioeffect.html#class-audioeffect\"><span class=\"std std-ref\">AudioEffect</span></a> <strong>&lt;</strong> <a class=\"reference internal\" href=\"class_resource.html#class-resource\"><span class=\"std std-ref\">Resource</span></a> <strong>&lt;</strong> <a class=\"reference internal\" href=\"class_refcounted.html#class-refcounted\"><span class=\"std std-ref\">RefCounted</span></a> <strong>&lt;</strong> <a class=\"reference internal\" href=\"class_object.html#class-object\"><span class=\"std std-ref\">Object</span></a></p><p>Adds a notch filter to the Audio bus.</p>",
                "description": "\n\n<p>Attenuates frequencies in a narrow band around the <a class=\"reference internal\" href=\"class_audioeffectfilter.html#class-audioeffectfilter-property-cutoff-hz\"><span class=\"std std-ref\">AudioEffectFilter.cutoff_hz</span></a> and cuts frequencies outside of this range.</p>\n"
            },
            "class_audioeffectpanner": {
                "url": "https://docs.godotengine.org/en/4.1/classes/class_audioeffectpanner.html",
                "title": "AudioEffectPanner",
                "blurb": "<p><strong>Inherits:</strong> <a class=\"reference internal\" href=\"class_audioeffect.html#class-audioeffect\"><span class=\"std std-ref\">AudioEffect</span></a> <strong>&lt;</strong> <a class=\"reference internal\" href=\"class_resource.html#class-resource\"><span class=\"std std-ref\">Resource</span></a> <strong>&lt;</strong> <a class=\"reference internal\" href=\"class_refcounted.html#class-refcounted\"><span class=\"std std-ref\">RefCounted</span></a> <strong>&lt;</strong> <a class=\"reference internal\" href=\"class_object.html#class-object\"><span class=\"std std-ref\">Object</span></a></p><p>Adds a panner audio effect to an audio bus. Pans sound left or right.</p>",
                "description": "\n\n<p>Determines how much of an audio signal is sent to the left and right buses.</p>\n"
            },
            "class_audioeffectphaser": {
                "url": "https://docs.godotengine.org/en/4.1/classes/class_audioeffectphaser.html",
                "title": "AudioEffectPhaser",
                "blurb": "<p><strong>Inherits:</strong> <a class=\"reference internal\" href=\"class_audioeffect.html#class-audioeffect\"><span class=\"std std-ref\">AudioEffect</span></a> <strong>&lt;</strong> <a class=\"reference internal\" href=\"class_resource.html#class-resource\"><span class=\"std std-ref\">Resource</span></a> <strong>&lt;</strong> <a class=\"reference internal\" href=\"class_refcounted.html#class-refcounted\"><span class=\"std std-ref\">RefCounted</span></a> <strong>&lt;</strong> <a class=\"reference internal\" href=\"class_object.html#class-object\"><span class=\"std std-ref\">Object</span></a></p><p>Adds a phaser audio effect to an audio bus.</p><p>Combines the original signal with a copy that is slightly out of phase with the original.</p>",
                "description": "\n\n<p>Combines phase-shifted signals with the original signal. The movement of the phase-shifted signals is controlled using a low-frequency oscillator.</p>\n"
            },
            "class_audioeffectpitchshift": {
                "url": "https://docs.godotengine.org/en/4.1/classes/class_audioeffectpitchshift.html",
                "title": "AudioEffectPitchShift",
                "blurb": "<p><strong>Inherits:</strong> <a class=\"reference internal\" href=\"class_audioeffect.html#class-audioeffect\"><span class=\"std std-ref\">AudioEffect</span></a> <strong>&lt;</strong> <a class=\"reference internal\" href=\"class_resource.html#class-resource\"><span class=\"std std-ref\">Resource</span></a> <strong>&lt;</strong> <a class=\"reference internal\" href=\"class_refcounted.html#class-refcounted\"><span class=\"std std-ref\">RefCounted</span></a> <strong>&lt;</strong> <a class=\"reference internal\" href=\"class_object.html#class-object\"><span class=\"std std-ref\">Object</span></a></p><p>Adds a pitch-shifting audio effect to an audio bus.</p><p>Raises or lowers the pitch of original sound.</p>",
                "description": "\n\n<p>Allows modulation of pitch independently of tempo. All frequencies can be increased/decreased with minimal effect on transients.</p>\n"
            },
            "class_audioeffectrecord": {
                "url": "https://docs.godotengine.org/en/4.1/classes/class_audioeffectrecord.html",
                "title": "AudioEffectRecord",
                "blurb": "<p><strong>Inherits:</strong> <a class=\"reference internal\" href=\"class_audioeffect.html#class-audioeffect\"><span class=\"std std-ref\">AudioEffect</span></a> <strong>&lt;</strong> <a class=\"reference internal\" href=\"class_resource.html#class-resource\"><span class=\"std std-ref\">Resource</span></a> <strong>&lt;</strong> <a class=\"reference internal\" href=\"class_refcounted.html#class-refcounted\"><span class=\"std std-ref\">RefCounted</span></a> <strong>&lt;</strong> <a class=\"reference internal\" href=\"class_object.html#class-object\"><span class=\"std std-ref\">Object</span></a></p><p>Audio effect used for recording the sound from an audio bus.</p>",
                "description": "\n\n<p>Allows the user to record the sound from an audio bus. This can include all audio output by Godot when used on the \"Master\" audio bus.</p>\n<p>Can be used (with an <a class=\"reference internal\" href=\"class_audiostreammicrophone.html#class-audiostreammicrophone\"><span class=\"std std-ref\">AudioStreamMicrophone</span></a>) to record from a microphone.</p>\n<p>It sets and gets the format in which the audio file will be recorded (8-bit, 16-bit, or compressed). It checks whether or not the recording is active, and if it is, records the sound. It then returns the recorded sample.</p>\n"
            },
            "class_audioeffectreverb": {
                "url": "https://docs.godotengine.org/en/4.1/classes/class_audioeffectreverb.html",
                "title": "AudioEffectReverb",
                "blurb": "<p><strong>Inherits:</strong> <a class=\"reference internal\" href=\"class_audioeffect.html#class-audioeffect\"><span class=\"std std-ref\">AudioEffect</span></a> <strong>&lt;</strong> <a class=\"reference internal\" href=\"class_resource.html#class-resource\"><span class=\"std std-ref\">Resource</span></a> <strong>&lt;</strong> <a class=\"reference internal\" href=\"class_refcounted.html#class-refcounted\"><span class=\"std std-ref\">RefCounted</span></a> <strong>&lt;</strong> <a class=\"reference internal\" href=\"class_object.html#class-object\"><span class=\"std std-ref\">Object</span></a></p><p>Adds a reverberation audio effect to an Audio bus.</p>",
                "description": "\n\n<p>Simulates the sound of acoustic environments such as rooms, concert halls, caverns, or an open spaces.</p>\n"
            },
            "class_audioeffectspectrumanalyzer": {
                "url": "https://docs.godotengine.org/en/4.1/classes/class_audioeffectspectrumanalyzer.html",
                "title": "AudioEffectSpectrumAnalyzer",
                "blurb": "<p><strong>Inherits:</strong> <a class=\"reference internal\" href=\"class_audioeffect.html#class-audioeffect\"><span class=\"std std-ref\">AudioEffect</span></a> <strong>&lt;</strong> <a class=\"reference internal\" href=\"class_resource.html#class-resource\"><span class=\"std std-ref\">Resource</span></a> <strong>&lt;</strong> <a class=\"reference internal\" href=\"class_refcounted.html#class-refcounted\"><span class=\"std std-ref\">RefCounted</span></a> <strong>&lt;</strong> <a class=\"reference internal\" href=\"class_object.html#class-object\"><span class=\"std std-ref\">Object</span></a></p><p>Audio effect that can be used for real-time audio visualizations.</p>",
                "description": "\n\n<p>This audio effect does not affect sound output, but can be used for real-time audio visualizations.</p>\n<p>See also <a class=\"reference internal\" href=\"class_audiostreamgenerator.html#class-audiostreamgenerator\"><span class=\"std std-ref\">AudioStreamGenerator</span></a> for procedurally generating sounds.</p>\n"
            },
            "class_audioeffectstereoenhance": {
                "url": "https://docs.godotengine.org/en/4.1/classes/class_audioeffectstereoenhance.html",
                "title": "AudioEffectStereoEnhance",
                "blurb": "<p><strong>Inherits:</strong> <a class=\"reference internal\" href=\"class_audioeffect.html#class-audioeffect\"><span class=\"std std-ref\">AudioEffect</span></a> <strong>&lt;</strong> <a class=\"reference internal\" href=\"class_resource.html#class-resource\"><span class=\"std std-ref\">Resource</span></a> <strong>&lt;</strong> <a class=\"reference internal\" href=\"class_refcounted.html#class-refcounted\"><span class=\"std std-ref\">RefCounted</span></a> <strong>&lt;</strong> <a class=\"reference internal\" href=\"class_object.html#class-object\"><span class=\"std std-ref\">Object</span></a></p><p>An audio effect that can be used to adjust the intensity of stereo panning.</p>",
                "description": "\n\n<p>An audio effect that can be used to adjust the intensity of stereo panning.</p>\n"
            },
            "class_audiostream": {
                "url": "https://docs.godotengine.org/en/4.1/classes/class_audiostream.html",
                "title": "AudioStream",
                "blurb": "<p><strong>Inherits:</strong> <a class=\"reference internal\" href=\"class_resource.html#class-resource\"><span class=\"std std-ref\">Resource</span></a> <strong>&lt;</strong> <a class=\"reference internal\" href=\"class_refcounted.html#class-refcounted\"><span class=\"std std-ref\">RefCounted</span></a> <strong>&lt;</strong> <a class=\"reference internal\" href=\"class_object.html#class-object\"><span class=\"std std-ref\">Object</span></a></p><p><strong>Inherited By:</strong> <a class=\"reference internal\" href=\"class_audiostreamgenerator.html#class-audiostreamgenerator\"><span class=\"std std-ref\">AudioStreamGenerator</span></a>, <a class=\"reference internal\" href=\"class_audiostreammicrophone.html#class-audiostreammicrophone\"><span class=\"std std-ref\">AudioStreamMicrophone</span></a>, <a class=\"reference internal\" href=\"class_audiostreammp3.html#class-audiostreammp3\"><span class=\"std std-ref\">AudioStreamMP3</span></a>, <a class=\"reference internal\" href=\"class_audiostreamoggvorbis.html#class-audiostreamoggvorbis\"><span class=\"std std-ref\">AudioStreamOggVorbis</span></a>, <a class=\"reference internal\" href=\"class_audiostreampolyphonic.html#class-audiostreampolyphonic\"><span class=\"std std-ref\">AudioStreamPolyphonic</span></a>, <a class=\"reference internal\" href=\"class_audiostreamrandomizer.html#class-audiostreamrandomizer\"><span class=\"std std-ref\">AudioStreamRandomizer</span></a>, <a class=\"reference internal\" href=\"class_audiostreamwav.html#class-audiostreamwav\"><span class=\"std std-ref\">AudioStreamWAV</span></a></p><p>Base class for audio streams.</p>",
                "description": "\n\n<p>Base class for audio streams. Audio streams are used for sound effects and music playback, and support WAV (via <a class=\"reference internal\" href=\"class_audiostreamwav.html#class-audiostreamwav\"><span class=\"std std-ref\">AudioStreamWAV</span></a>) and Ogg (via <a class=\"reference internal\" href=\"class_audiostreamoggvorbis.html#class-audiostreamoggvorbis\"><span class=\"std std-ref\">AudioStreamOggVorbis</span></a>) file formats.</p>\n"
            },
            "class_audiostreamgenerator": {
                "url": "https://docs.godotengine.org/en/4.1/classes/class_audiostreamgenerator.html",
                "title": "AudioStreamGenerator",
                "blurb": "<p><strong>Inherits:</strong> <a class=\"reference internal\" href=\"class_audiostream.html#class-audiostream\"><span class=\"std std-ref\">AudioStream</span></a> <strong>&lt;</strong> <a class=\"reference internal\" href=\"class_resource.html#class-resource\"><span class=\"std std-ref\">Resource</span></a> <strong>&lt;</strong> <a class=\"reference internal\" href=\"class_refcounted.html#class-refcounted\"><span class=\"std std-ref\">RefCounted</span></a> <strong>&lt;</strong> <a class=\"reference internal\" href=\"class_object.html#class-object\"><span class=\"std std-ref\">Object</span></a></p><p>An audio stream with utilities for procedural sound generation.</p>",
                "description": "\n\n<p><strong>AudioStreamGenerator</strong> is a type of audio stream that does not play back sounds on its own; instead, it expects a script to generate audio data for it. See also <a class=\"reference internal\" href=\"class_audiostreamgeneratorplayback.html#class-audiostreamgeneratorplayback\"><span class=\"std std-ref\">AudioStreamGeneratorPlayback</span></a>.</p>\n<p>Here's a sample on how to use it to generate a sine wave:</p>\n<div class=\"highlight-gdscript notranslate\"><div class=\"highlight\"><pre><span></span><span class=\"k\">var</span> <span class=\"n\">playback</span> <span class=\"c1\"># Will hold the AudioStreamGeneratorPlayback.</span>\n<span class=\"nd\">@onready</span> <span class=\"k\">var</span> <span class=\"n\">sample_hz</span> <span class=\"o\">=</span> <span class=\"o\">$</span><span class=\"n\">AudioStreamPlayer</span><span class=\"o\">.</span><span class=\"n\">stream</span><span class=\"o\">.</span><span class=\"n\">mix_rate</span>\n<span class=\"k\">var</span> <span class=\"n\">pulse_hz</span> <span class=\"o\">=</span> <span class=\"mf\">440.0</span> <span class=\"c1\"># The frequency of the sound wave.</span>\n\n<span class=\"k\">func</span> <span class=\"n\">_ready</span><span class=\"p\">():</span>\n    <span class=\"o\">$</span><span class=\"n\">AudioStreamPlayer</span><span class=\"o\">.</span><span class=\"n\">play</span><span class=\"p\">()</span>\n    <span class=\"n\">playback</span> <span class=\"o\">=</span> <span class=\"o\">$</span><span class=\"n\">AudioStreamPlayer</span><span class=\"o\">.</span><span class=\"n\">get_stream_playback</span><span class=\"p\">()</span>\n    <span class=\"n\">fill_buffer</span><span class=\"p\">()</span>\n\n<span class=\"k\">func</span> <span class=\"n\">fill_buffer</span><span class=\"p\">():</span>\n    <span class=\"k\">var</span> <span class=\"n\">phase</span> <span class=\"o\">=</span> <span class=\"mf\">0.0</span>\n    <span class=\"k\">var</span> <span class=\"n\">increment</span> <span class=\"o\">=</span> <span class=\"n\">pulse_hz</span> <span class=\"o\">/</span> <span class=\"n\">sample_hz</span>\n    <span class=\"k\">var</span> <span class=\"n\">frames_available</span> <span class=\"o\">=</span> <span class=\"n\">playback</span><span class=\"o\">.</span><span class=\"n\">get_frames_available</span><span class=\"p\">()</span>\n\n    <span class=\"k k-ControlFlow\">for</span> <span class=\"n\">i</span> <span class=\"ow\">in</span> <span class=\"nb\">range</span><span class=\"p\">(</span><span class=\"n\">frames_available</span><span class=\"p\">):</span>\n        <span class=\"n\">playback</span><span class=\"o\">.</span><span class=\"n\">push_frame</span><span class=\"p\">(</span><span class=\"nb nb-Type\">Vector2</span><span class=\"o\">.</span><span class=\"n\">ONE</span> <span class=\"o\">*</span> <span class=\"nb\">sin</span><span class=\"p\">(</span><span class=\"n\">phase</span> <span class=\"o\">*</span> <span class=\"bp\">TAU</span><span class=\"p\">))</span>\n        <span class=\"n\">phase</span> <span class=\"o\">=</span> <span class=\"nb\">fmod</span><span class=\"p\">(</span><span class=\"n\">phase</span> <span class=\"o\">+</span> <span class=\"n\">increment</span><span class=\"p\">,</span> <span class=\"mf\">1.0</span><span class=\"p\">)</span>\n</pre></div>\n</div>\n<p>In the example above, the \"AudioStreamPlayer\" node must use an <strong>AudioStreamGenerator</strong> as its stream. The <code class=\"docutils literal notranslate\"><span class=\"pre\">fill_buffer</span></code> function provides audio data for approximating a sine wave.</p>\n<p>See also <a class=\"reference internal\" href=\"class_audioeffectspectrumanalyzer.html#class-audioeffectspectrumanalyzer\"><span class=\"std std-ref\">AudioEffectSpectrumAnalyzer</span></a> for performing real-time audio spectrum analysis.</p>\n<p><strong>Note:</strong> Due to performance constraints, this class is best used from C# or from a compiled language via GDExtension. If you still want to use this class from GDScript, consider using a lower <a class=\"reference internal\" href=\"#class-audiostreamgenerator-property-mix-rate\"><span class=\"std std-ref\">mix_rate</span></a> such as 11,025 Hz or 22,050 Hz.</p>\n"
            },
            "class_audiostreammicrophone": {
                "url": "https://docs.godotengine.org/en/4.1/classes/class_audiostreammicrophone.html",
                "title": "AudioStreamMicrophone",
                "blurb": "<p><strong>Inherits:</strong> <a class=\"reference internal\" href=\"class_audiostream.html#class-audiostream\"><span class=\"std std-ref\">AudioStream</span></a> <strong>&lt;</strong> <a class=\"reference internal\" href=\"class_resource.html#class-resource\"><span class=\"std std-ref\">Resource</span></a> <strong>&lt;</strong> <a class=\"reference internal\" href=\"class_refcounted.html#class-refcounted\"><span class=\"std std-ref\">RefCounted</span></a> <strong>&lt;</strong> <a class=\"reference internal\" href=\"class_object.html#class-object\"><span class=\"std std-ref\">Object</span></a></p><p>Plays real-time audio input data.</p>",
                "description": "\n\n<p>When used directly in an <a class=\"reference internal\" href=\"class_audiostreamplayer.html#class-audiostreamplayer\"><span class=\"std std-ref\">AudioStreamPlayer</span></a> node, <strong>AudioStreamMicrophone</strong> plays back microphone input in real-time. This can be used in conjunction with <a class=\"reference internal\" href=\"class_audioeffectcapture.html#class-audioeffectcapture\"><span class=\"std std-ref\">AudioEffectCapture</span></a> to process the data or save it.</p>\n<p><strong>Note:</strong> <a class=\"reference internal\" href=\"class_projectsettings.html#class-projectsettings-property-audio-driver-enable-input\"><span class=\"std std-ref\">ProjectSettings.audio/driver/enable_input</span></a> must be <code class=\"docutils literal notranslate\"><span class=\"pre\">true</span></code> for audio input to work. See also that setting's description for caveats related to permissions and operating system privacy settings.</p>\n"
            },
            "class_audiostreammp3": {
                "url": "https://docs.godotengine.org/en/4.1/classes/class_audiostreammp3.html",
                "title": "AudioStreamMP3",
                "blurb": "<p><strong>Inherits:</strong> <a class=\"reference internal\" href=\"class_audiostream.html#class-audiostream\"><span class=\"std std-ref\">AudioStream</span></a> <strong>&lt;</strong> <a class=\"reference internal\" href=\"class_resource.html#class-resource\"><span class=\"std std-ref\">Resource</span></a> <strong>&lt;</strong> <a class=\"reference internal\" href=\"class_refcounted.html#class-refcounted\"><span class=\"std std-ref\">RefCounted</span></a> <strong>&lt;</strong> <a class=\"reference internal\" href=\"class_object.html#class-object\"><span class=\"std std-ref\">Object</span></a></p><p>MP3 audio stream driver.</p>",
                "description": "\n\n<p>MP3 audio stream driver. See <a class=\"reference internal\" href=\"#class-audiostreammp3-property-data\"><span class=\"std std-ref\">data</span></a> if you want to load an MP3 file at run-time.</p>\n"
            },
            "class_audiostreamoggvorbis": {
                "url": "https://docs.godotengine.org/en/4.1/classes/class_audiostreamoggvorbis.html",
                "title": "AudioStreamOggVorbis",
                "blurb": "<p><strong>Inherits:</strong> <a class=\"reference internal\" href=\"class_audiostream.html#class-audiostream\"><span class=\"std std-ref\">AudioStream</span></a> <strong>&lt;</strong> <a class=\"reference internal\" href=\"class_resource.html#class-resource\"><span class=\"std std-ref\">Resource</span></a> <strong>&lt;</strong> <a class=\"reference internal\" href=\"class_refcounted.html#class-refcounted\"><span class=\"std std-ref\">RefCounted</span></a> <strong>&lt;</strong> <a class=\"reference internal\" href=\"class_object.html#class-object\"><span class=\"std std-ref\">Object</span></a></p>",
                "description": null
            },
            "class_audiostreampolyphonic": {
                "url": "https://docs.godotengine.org/en/4.1/classes/class_audiostreampolyphonic.html",
                "title": "AudioStreamPolyphonic",
                "blurb": "<p><strong>Inherits:</strong> <a class=\"reference internal\" href=\"class_audiostream.html#class-audiostream\"><span class=\"std std-ref\">AudioStream</span></a> <strong>&lt;</strong> <a class=\"reference internal\" href=\"class_resource.html#class-resource\"><span class=\"std std-ref\">Resource</span></a> <strong>&lt;</strong> <a class=\"reference internal\" href=\"class_refcounted.html#class-refcounted\"><span class=\"std std-ref\">RefCounted</span></a> <strong>&lt;</strong> <a class=\"reference internal\" href=\"class_object.html#class-object\"><span class=\"std std-ref\">Object</span></a></p><p>AudioStream that lets the user play custom streams at any time from code, simultaneously using a single player.</p>",
                "description": "\n\n<p>AudioStream that lets the user play custom streams at any time from code, simultaneously using a single player.</p>\n<p>Playback control is done via the <a class=\"reference internal\" href=\"class_audiostreamplaybackpolyphonic.html#class-audiostreamplaybackpolyphonic\"><span class=\"std std-ref\">AudioStreamPlaybackPolyphonic</span></a> instance set inside the player, which can be obtained via <a class=\"reference internal\" href=\"class_audiostreamplayer.html#class-audiostreamplayer-method-get-stream-playback\"><span class=\"std std-ref\">AudioStreamPlayer.get_stream_playback</span></a>, <a class=\"reference internal\" href=\"class_audiostreamplayer2d.html#class-audiostreamplayer2d-method-get-stream-playback\"><span class=\"std std-ref\">AudioStreamPlayer2D.get_stream_playback</span></a> or <a class=\"reference internal\" href=\"class_audiostreamplayer3d.html#class-audiostreamplayer3d-method-get-stream-playback\"><span class=\"std std-ref\">AudioStreamPlayer3D.get_stream_playback</span></a> methods. Obtaining the playback instance is only valid after the <code class=\"docutils literal notranslate\"><span class=\"pre\">stream</span></code> property is set as an <strong>AudioStreamPolyphonic</strong> in those players.</p>\n"
            },
            "class_audiostreamrandomizer": {
                "url": "https://docs.godotengine.org/en/4.1/classes/class_audiostreamrandomizer.html",
                "title": "AudioStreamRandomizer",
                "blurb": "<p><strong>Inherits:</strong> <a class=\"reference internal\" href=\"class_audiostream.html#class-audiostream\"><span class=\"std std-ref\">AudioStream</span></a> <strong>&lt;</strong> <a class=\"reference internal\" href=\"class_resource.html#class-resource\"><span class=\"std std-ref\">Resource</span></a> <strong>&lt;</strong> <a class=\"reference internal\" href=\"class_refcounted.html#class-refcounted\"><span class=\"std std-ref\">RefCounted</span></a> <strong>&lt;</strong> <a class=\"reference internal\" href=\"class_object.html#class-object\"><span class=\"std std-ref\">Object</span></a></p><p>Wraps a pool of audio streams with pitch and volume shifting.</p>",
                "description": "\n\n<p>Picks a random AudioStream from the pool, depending on the playback mode, and applies random pitch shifting and volume shifting during playback.</p>\n"
            },
            "class_audiostreamwav": {
                "url": "https://docs.godotengine.org/en/4.1/classes/class_audiostreamwav.html",
                "title": "AudioStreamWAV",
                "blurb": "<p><strong>Inherits:</strong> <a class=\"reference internal\" href=\"class_audiostream.html#class-audiostream\"><span class=\"std std-ref\">AudioStream</span></a> <strong>&lt;</strong> <a class=\"reference internal\" href=\"class_resource.html#class-resource\"><span class=\"std std-ref\">Resource</span></a> <strong>&lt;</strong> <a class=\"reference internal\" href=\"class_refcounted.html#class-refcounted\"><span class=\"std std-ref\">RefCounted</span></a> <strong>&lt;</strong> <a class=\"reference internal\" href=\"class_object.html#class-object\"><span class=\"std std-ref\">Object</span></a></p><p>Stores audio data loaded from WAV files.</p>",
                "description": "\n\n<p>AudioStreamWAV stores sound samples loaded from WAV files. To play the stored sound, use an <a class=\"reference internal\" href=\"class_audiostreamplayer.html#class-audiostreamplayer\"><span class=\"std std-ref\">AudioStreamPlayer</span></a> (for non-positional audio) or <a class=\"reference internal\" href=\"class_audiostreamplayer2d.html#class-audiostreamplayer2d\"><span class=\"std std-ref\">AudioStreamPlayer2D</span></a>/<a class=\"reference internal\" href=\"class_audiostreamplayer3d.html#class-audiostreamplayer3d\"><span class=\"std std-ref\">AudioStreamPlayer3D</span></a> (for positional audio). The sound can be looped.</p>\n<p>This class can also be used to store dynamically-generated PCM audio data. See also <a class=\"reference internal\" href=\"class_audiostreamgenerator.html#class-audiostreamgenerator\"><span class=\"std std-ref\">AudioStreamGenerator</span></a> for procedural audio generation.</p>\n"
            },
            "class_basematerial3d": {
                "url": "https://docs.godotengine.org/en/4.1/classes/class_basematerial3d.html",
                "title": "BaseMaterial3D",
                "blurb": "<p><strong>Inherits:</strong> <a class=\"reference internal\" href=\"class_material.html#class-material\"><span class=\"std std-ref\">Material</span></a> <strong>&lt;</strong> <a class=\"reference internal\" href=\"class_resource.html#class-resource\"><span class=\"std std-ref\">Resource</span></a> <strong>&lt;</strong> <a class=\"reference internal\" href=\"class_refcounted.html#class-refcounted\"><span class=\"std std-ref\">RefCounted</span></a> <strong>&lt;</strong> <a class=\"reference internal\" href=\"class_object.html#class-object\"><span class=\"std std-ref\">Object</span></a></p><p><strong>Inherited By:</strong> <a class=\"reference internal\" href=\"class_ormmaterial3d.html#class-ormmaterial3d\"><span class=\"std std-ref\">ORMMaterial3D</span></a>, <a class=\"reference internal\" href=\"class_standardmaterial3d.html#class-standardmaterial3d\"><span class=\"std std-ref\">StandardMaterial3D</span></a></p><p>Default 3D rendering material.</p>",
                "description": "\n\n<p>This provides a default material with a wide variety of rendering features and properties without the need to write shader code. See the tutorial below for details.</p>\n"
            },
            "class_bitmap": {
                "url": "https://docs.godotengine.org/en/4.1/classes/class_bitmap.html",
                "title": "BitMap",
                "blurb": "<p><strong>Inherits:</strong> <a class=\"reference internal\" href=\"class_resource.html#class-resource\"><span class=\"std std-ref\">Resource</span></a> <strong>&lt;</strong> <a class=\"reference internal\" href=\"class_refcounted.html#class-refcounted\"><span class=\"std std-ref\">RefCounted</span></a> <strong>&lt;</strong> <a class=\"reference internal\" href=\"class_object.html#class-object\"><span class=\"std std-ref\">Object</span></a></p><p>Boolean matrix.</p>",
                "description": "\n\n<p>A two-dimensional array of boolean values, can be used to efficiently store a binary matrix (every matrix element takes only one bit) and query the values using natural cartesian coordinates.</p>\n"
            },
            "class_bonemap": {
                "url": "https://docs.godotengine.org/en/4.1/classes/class_bonemap.html",
                "title": "BoneMap",
                "blurb": "<p><strong>Inherits:</strong> <a class=\"reference internal\" href=\"class_resource.html#class-resource\"><span class=\"std std-ref\">Resource</span></a> <strong>&lt;</strong> <a class=\"reference internal\" href=\"class_refcounted.html#class-refcounted\"><span class=\"std std-ref\">RefCounted</span></a> <strong>&lt;</strong> <a class=\"reference internal\" href=\"class_object.html#class-object\"><span class=\"std std-ref\">Object</span></a></p><p>Describes a mapping of bone names for retargeting <a class=\"reference internal\" href=\"class_skeleton3d.html#class-skeleton3d\"><span class=\"std std-ref\">Skeleton3D</span></a> into common names defined by a <a class=\"reference internal\" href=\"class_skeletonprofile.html#class-skeletonprofile\"><span class=\"std std-ref\">SkeletonProfile</span></a>.</p>",
                "description": "\n\n<p>This class contains a dictionary that uses a list of bone names in <a class=\"reference internal\" href=\"class_skeletonprofile.html#class-skeletonprofile\"><span class=\"std std-ref\">SkeletonProfile</span></a> as key names.</p>\n<p>By assigning the actual <a class=\"reference internal\" href=\"class_skeleton3d.html#class-skeleton3d\"><span class=\"std std-ref\">Skeleton3D</span></a> bone name as the key value, it maps the <a class=\"reference internal\" href=\"class_skeleton3d.html#class-skeleton3d\"><span class=\"std std-ref\">Skeleton3D</span></a> to the <a class=\"reference internal\" href=\"class_skeletonprofile.html#class-skeletonprofile\"><span class=\"std std-ref\">SkeletonProfile</span></a>.</p>\n"
            },
            "class_boxmesh": {
                "url": "https://docs.godotengine.org/en/4.1/classes/class_boxmesh.html",
                "title": "BoxMesh",
                "blurb": "<p><strong>Inherits:</strong> <a class=\"reference internal\" href=\"class_primitivemesh.html#class-primitivemesh\"><span class=\"std std-ref\">PrimitiveMesh</span></a> <strong>&lt;</strong> <a class=\"reference internal\" href=\"class_mesh.html#class-mesh\"><span class=\"std std-ref\">Mesh</span></a> <strong>&lt;</strong> <a class=\"reference internal\" href=\"class_resource.html#class-resource\"><span class=\"std std-ref\">Resource</span></a> <strong>&lt;</strong> <a class=\"reference internal\" href=\"class_refcounted.html#class-refcounted\"><span class=\"std std-ref\">RefCounted</span></a> <strong>&lt;</strong> <a class=\"reference internal\" href=\"class_object.html#class-object\"><span class=\"std std-ref\">Object</span></a></p><p>Generate an axis-aligned box <a class=\"reference internal\" href=\"class_primitivemesh.html#class-primitivemesh\"><span class=\"std std-ref\">PrimitiveMesh</span></a>.</p>",
                "description": "\n\n<p>Generate an axis-aligned box <a class=\"reference internal\" href=\"class_primitivemesh.html#class-primitivemesh\"><span class=\"std std-ref\">PrimitiveMesh</span></a>.</p>\n<p>The box's UV layout is arranged in a 3×2 layout that allows texturing each face individually. To apply the same texture on all faces, change the material's UV property to <code class=\"docutils literal notranslate\"><span class=\"pre\">Vector3(3,</span> <span class=\"pre\">2,</span> <span class=\"pre\">1)</span></code>. This is equivalent to adding <code class=\"docutils literal notranslate\"><span class=\"pre\">UV</span> <span class=\"pre\">*=</span> <span class=\"pre\">vec2(3.0,</span> <span class=\"pre\">2.0)</span></code> in a vertex shader.</p>\n<p><strong>Note:</strong> When using a large textured <strong>BoxMesh</strong> (e.g. as a floor), you may stumble upon UV jittering issues depending on the camera angle. To solve this, increase <a class=\"reference internal\" href=\"#class-boxmesh-property-subdivide-depth\"><span class=\"std std-ref\">subdivide_depth</span></a>, <a class=\"reference internal\" href=\"#class-boxmesh-property-subdivide-height\"><span class=\"std std-ref\">subdivide_height</span></a> and <a class=\"reference internal\" href=\"#class-boxmesh-property-subdivide-width\"><span class=\"std std-ref\">subdivide_width</span></a> until you no longer notice UV jittering.</p>\n"
            },
            "class_boxoccluder3d": {
                "url": "https://docs.godotengine.org/en/4.1/classes/class_boxoccluder3d.html",
                "title": "BoxOccluder3D",
                "blurb": "<p><strong>Inherits:</strong> <a class=\"reference internal\" href=\"class_occluder3d.html#class-occluder3d\"><span class=\"std std-ref\">Occluder3D</span></a> <strong>&lt;</strong> <a class=\"reference internal\" href=\"class_resource.html#class-resource\"><span class=\"std std-ref\">Resource</span></a> <strong>&lt;</strong> <a class=\"reference internal\" href=\"class_refcounted.html#class-refcounted\"><span class=\"std std-ref\">RefCounted</span></a> <strong>&lt;</strong> <a class=\"reference internal\" href=\"class_object.html#class-object\"><span class=\"std std-ref\">Object</span></a></p><p>Cuboid shape for use with occlusion culling in <a class=\"reference internal\" href=\"class_occluderinstance3d.html#class-occluderinstance3d\"><span class=\"std std-ref\">OccluderInstance3D</span></a>.</p>",
                "description": "\n\n<p><strong>BoxOccluder3D</strong> stores a cuboid shape that can be used by the engine's occlusion culling system.</p>\n<p>See <a class=\"reference internal\" href=\"class_occluderinstance3d.html#class-occluderinstance3d\"><span class=\"std std-ref\">OccluderInstance3D</span></a>'s documentation for instructions on setting up occlusion culling.</p>\n"
            },
            "class_boxshape3d": {
                "url": "https://docs.godotengine.org/en/4.1/classes/class_boxshape3d.html",
                "title": "BoxShape3D",
                "blurb": "<p><strong>Inherits:</strong> <a class=\"reference internal\" href=\"class_shape3d.html#class-shape3d\"><span class=\"std std-ref\">Shape3D</span></a> <strong>&lt;</strong> <a class=\"reference internal\" href=\"class_resource.html#class-resource\"><span class=\"std std-ref\">Resource</span></a> <strong>&lt;</strong> <a class=\"reference internal\" href=\"class_refcounted.html#class-refcounted\"><span class=\"std std-ref\">RefCounted</span></a> <strong>&lt;</strong> <a class=\"reference internal\" href=\"class_object.html#class-object\"><span class=\"std std-ref\">Object</span></a></p><p>A 3D box shape used for physics collision.</p>",
                "description": "\n\n<p>A 3D box shape, intended for use in physics. Usually used to provide a shape for a <a class=\"reference internal\" href=\"class_collisionshape3d.html#class-collisionshape3d\"><span class=\"std std-ref\">CollisionShape3D</span></a>.</p>\n<p><strong>Performance:</strong> <strong>BoxShape3D</strong> is fast to check collisions against. It is faster than <a class=\"reference internal\" href=\"class_capsuleshape3d.html#class-capsuleshape3d\"><span class=\"std std-ref\">CapsuleShape3D</span></a> and <a class=\"reference internal\" href=\"class_cylindershape3d.html#class-cylindershape3d\"><span class=\"std std-ref\">CylinderShape3D</span></a>, but slower than <a class=\"reference internal\" href=\"class_sphereshape3d.html#class-sphereshape3d\"><span class=\"std std-ref\">SphereShape3D</span></a>.</p>\n"
            },
            "class_buttongroup": {
                "url": "https://docs.godotengine.org/en/4.1/classes/class_buttongroup.html",
                "title": "ButtonGroup",
                "blurb": "<p><strong>Inherits:</strong> <a class=\"reference internal\" href=\"class_resource.html#class-resource\"><span class=\"std std-ref\">Resource</span></a> <strong>&lt;</strong> <a class=\"reference internal\" href=\"class_refcounted.html#class-refcounted\"><span class=\"std std-ref\">RefCounted</span></a> <strong>&lt;</strong> <a class=\"reference internal\" href=\"class_object.html#class-object\"><span class=\"std std-ref\">Object</span></a></p><p>A group of buttons that doesn't allow more than one button to be pressed at a time.</p>",
                "description": "\n\n<p>A group of <a class=\"reference internal\" href=\"class_basebutton.html#class-basebutton\"><span class=\"std std-ref\">BaseButton</span></a>-derived buttons. The buttons in a <strong>ButtonGroup</strong> are treated like radio buttons: No more than one button can be pressed at a time. Some types of buttons (such as <a class=\"reference internal\" href=\"class_checkbox.html#class-checkbox\"><span class=\"std std-ref\">CheckBox</span></a>) may have a special appearance in this state.</p>\n<p>Every member of a <strong>ButtonGroup</strong> should have <a class=\"reference internal\" href=\"class_basebutton.html#class-basebutton-property-toggle-mode\"><span class=\"std std-ref\">BaseButton.toggle_mode</span></a> set to <code class=\"docutils literal notranslate\"><span class=\"pre\">true</span></code>.</p>\n"
            },
            "class_cameraattributes": {
                "url": "https://docs.godotengine.org/en/4.1/classes/class_cameraattributes.html",
                "title": "CameraAttributes",
                "blurb": "<p><strong>Inherits:</strong> <a class=\"reference internal\" href=\"class_resource.html#class-resource\"><span class=\"std std-ref\">Resource</span></a> <strong>&lt;</strong> <a class=\"reference internal\" href=\"class_refcounted.html#class-refcounted\"><span class=\"std std-ref\">RefCounted</span></a> <strong>&lt;</strong> <a class=\"reference internal\" href=\"class_object.html#class-object\"><span class=\"std std-ref\">Object</span></a></p><p><strong>Inherited By:</strong> <a class=\"reference internal\" href=\"class_cameraattributesphysical.html#class-cameraattributesphysical\"><span class=\"std std-ref\">CameraAttributesPhysical</span></a>, <a class=\"reference internal\" href=\"class_cameraattributespractical.html#class-cameraattributespractical\"><span class=\"std std-ref\">CameraAttributesPractical</span></a></p><p>Parent class for camera settings.</p>",
                "description": "\n\n<p>Controls camera-specific attributes such as depth of field and exposure override.</p>\n<p>When used in a <a class=\"reference internal\" href=\"class_worldenvironment.html#class-worldenvironment\"><span class=\"std std-ref\">WorldEnvironment</span></a> it provides default settings for exposure, auto-exposure, and depth of field that will be used by all cameras without their own <strong>CameraAttributes</strong>, including the editor camera. When used in a <a class=\"reference internal\" href=\"class_camera3d.html#class-camera3d\"><span class=\"std std-ref\">Camera3D</span></a> it will override any <strong>CameraAttributes</strong> set in the <a class=\"reference internal\" href=\"class_worldenvironment.html#class-worldenvironment\"><span class=\"std std-ref\">WorldEnvironment</span></a>. When used in <a class=\"reference internal\" href=\"class_voxelgi.html#class-voxelgi\"><span class=\"std std-ref\">VoxelGI</span></a> or <a class=\"reference internal\" href=\"class_lightmapgi.html#class-lightmapgi\"><span class=\"std std-ref\">LightmapGI</span></a>, only the exposure settings will be used.</p>\n<p>See also <a class=\"reference internal\" href=\"class_environment.html#class-environment\"><span class=\"std std-ref\">Environment</span></a> for general 3D environment settings.</p>\n<p>This is a pure virtual class that is inherited by <a class=\"reference internal\" href=\"class_cameraattributesphysical.html#class-cameraattributesphysical\"><span class=\"std std-ref\">CameraAttributesPhysical</span></a> and <a class=\"reference internal\" href=\"class_cameraattributespractical.html#class-cameraattributespractical\"><span class=\"std std-ref\">CameraAttributesPractical</span></a>.</p>\n"
            },
            "class_cameraattributesphysical": {
                "url": "https://docs.godotengine.org/en/4.1/classes/class_cameraattributesphysical.html",
                "title": "CameraAttributesPhysical",
                "blurb": "<p><strong>Inherits:</strong> <a class=\"reference internal\" href=\"class_cameraattributes.html#class-cameraattributes\"><span class=\"std std-ref\">CameraAttributes</span></a> <strong>&lt;</strong> <a class=\"reference internal\" href=\"class_resource.html#class-resource\"><span class=\"std std-ref\">Resource</span></a> <strong>&lt;</strong> <a class=\"reference internal\" href=\"class_refcounted.html#class-refcounted\"><span class=\"std std-ref\">RefCounted</span></a> <strong>&lt;</strong> <a class=\"reference internal\" href=\"class_object.html#class-object\"><span class=\"std std-ref\">Object</span></a></p><p>Physically-based camera settings.</p>",
                "description": "\n\n<p><strong>CameraAttributesPhysical</strong> is used to set rendering settings based on a physically-based camera's settings. It is responsible for exposure, auto-exposure, and depth of field.</p>\n<p>When used in a <a class=\"reference internal\" href=\"class_worldenvironment.html#class-worldenvironment\"><span class=\"std std-ref\">WorldEnvironment</span></a> it provides default settings for exposure, auto-exposure, and depth of field that will be used by all cameras without their own <a class=\"reference internal\" href=\"class_cameraattributes.html#class-cameraattributes\"><span class=\"std std-ref\">CameraAttributes</span></a>, including the editor camera. When used in a <a class=\"reference internal\" href=\"class_camera3d.html#class-camera3d\"><span class=\"std std-ref\">Camera3D</span></a> it will override any <a class=\"reference internal\" href=\"class_cameraattributes.html#class-cameraattributes\"><span class=\"std std-ref\">CameraAttributes</span></a> set in the <a class=\"reference internal\" href=\"class_worldenvironment.html#class-worldenvironment\"><span class=\"std std-ref\">WorldEnvironment</span></a> and will override the <a class=\"reference internal\" href=\"class_camera3d.html#class-camera3d\"><span class=\"std std-ref\">Camera3D</span></a>s <a class=\"reference internal\" href=\"class_camera3d.html#class-camera3d-property-far\"><span class=\"std std-ref\">Camera3D.far</span></a>, <a class=\"reference internal\" href=\"class_camera3d.html#class-camera3d-property-near\"><span class=\"std std-ref\">Camera3D.near</span></a>, <a class=\"reference internal\" href=\"class_camera3d.html#class-camera3d-property-fov\"><span class=\"std std-ref\">Camera3D.fov</span></a>, and <a class=\"reference internal\" href=\"class_camera3d.html#class-camera3d-property-keep-aspect\"><span class=\"std std-ref\">Camera3D.keep_aspect</span></a> properties. When used in <a class=\"reference internal\" href=\"class_voxelgi.html#class-voxelgi\"><span class=\"std std-ref\">VoxelGI</span></a> or <a class=\"reference internal\" href=\"class_lightmapgi.html#class-lightmapgi\"><span class=\"std std-ref\">LightmapGI</span></a>, only the exposure settings will be used.</p>\n<p>The default settings are intended for use in an outdoor environment, tips for settings for use in an indoor environment can be found in each setting's documentation.</p>\n<p><strong>Note:</strong> Depth of field blur is only supported in the Forward+ and Mobile rendering methods, not Compatibility.</p>\n"
            },
            "class_cameraattributespractical": {
                "url": "https://docs.godotengine.org/en/4.1/classes/class_cameraattributespractical.html",
                "title": "CameraAttributesPractical",
                "blurb": "<p><strong>Inherits:</strong> <a class=\"reference internal\" href=\"class_cameraattributes.html#class-cameraattributes\"><span class=\"std std-ref\">CameraAttributes</span></a> <strong>&lt;</strong> <a class=\"reference internal\" href=\"class_resource.html#class-resource\"><span class=\"std std-ref\">Resource</span></a> <strong>&lt;</strong> <a class=\"reference internal\" href=\"class_refcounted.html#class-refcounted\"><span class=\"std std-ref\">RefCounted</span></a> <strong>&lt;</strong> <a class=\"reference internal\" href=\"class_object.html#class-object\"><span class=\"std std-ref\">Object</span></a></p><p>Camera settings in an easy to use format.</p>",
                "description": "\n\n<p>Controls camera-specific attributes such as auto-exposure, depth of field, and exposure override.</p>\n<p>When used in a <a class=\"reference internal\" href=\"class_worldenvironment.html#class-worldenvironment\"><span class=\"std std-ref\">WorldEnvironment</span></a> it provides default settings for exposure, auto-exposure, and depth of field that will be used by all cameras without their own <a class=\"reference internal\" href=\"class_cameraattributes.html#class-cameraattributes\"><span class=\"std std-ref\">CameraAttributes</span></a>, including the editor camera. When used in a <a class=\"reference internal\" href=\"class_camera3d.html#class-camera3d\"><span class=\"std std-ref\">Camera3D</span></a> it will override any <a class=\"reference internal\" href=\"class_cameraattributes.html#class-cameraattributes\"><span class=\"std std-ref\">CameraAttributes</span></a> set in the <a class=\"reference internal\" href=\"class_worldenvironment.html#class-worldenvironment\"><span class=\"std std-ref\">WorldEnvironment</span></a>. When used in <a class=\"reference internal\" href=\"class_voxelgi.html#class-voxelgi\"><span class=\"std std-ref\">VoxelGI</span></a> or <a class=\"reference internal\" href=\"class_lightmapgi.html#class-lightmapgi\"><span class=\"std std-ref\">LightmapGI</span></a>, only the exposure settings will be used.</p>\n"
            },
            "class_cameratexture": {
                "url": "https://docs.godotengine.org/en/4.1/classes/class_cameratexture.html",
                "title": "CameraTexture",
                "blurb": "<p><strong>Inherits:</strong> <a class=\"reference internal\" href=\"class_texture2d.html#class-texture2d\"><span class=\"std std-ref\">Texture2D</span></a> <strong>&lt;</strong> <a class=\"reference internal\" href=\"class_texture.html#class-texture\"><span class=\"std std-ref\">Texture</span></a> <strong>&lt;</strong> <a class=\"reference internal\" href=\"class_resource.html#class-resource\"><span class=\"std std-ref\">Resource</span></a> <strong>&lt;</strong> <a class=\"reference internal\" href=\"class_refcounted.html#class-refcounted\"><span class=\"std std-ref\">RefCounted</span></a> <strong>&lt;</strong> <a class=\"reference internal\" href=\"class_object.html#class-object\"><span class=\"std std-ref\">Object</span></a></p><p>Texture provided by a <a class=\"reference internal\" href=\"class_camerafeed.html#class-camerafeed\"><span class=\"std std-ref\">CameraFeed</span></a>.</p>",
                "description": "\n\n<p>This texture gives access to the camera texture provided by a <a class=\"reference internal\" href=\"class_camerafeed.html#class-camerafeed\"><span class=\"std std-ref\">CameraFeed</span></a>.</p>\n<p><strong>Note:</strong> Many cameras supply YCbCr images which need to be converted in a shader.</p>\n"
            },
            "class_canvasitemmaterial": {
                "url": "https://docs.godotengine.org/en/4.1/classes/class_canvasitemmaterial.html",
                "title": "CanvasItemMaterial",
                "blurb": "<p><strong>Inherits:</strong> <a class=\"reference internal\" href=\"class_material.html#class-material\"><span class=\"std std-ref\">Material</span></a> <strong>&lt;</strong> <a class=\"reference internal\" href=\"class_resource.html#class-resource\"><span class=\"std std-ref\">Resource</span></a> <strong>&lt;</strong> <a class=\"reference internal\" href=\"class_refcounted.html#class-refcounted\"><span class=\"std std-ref\">RefCounted</span></a> <strong>&lt;</strong> <a class=\"reference internal\" href=\"class_object.html#class-object\"><span class=\"std std-ref\">Object</span></a></p><p>A material for <a class=\"reference internal\" href=\"class_canvasitem.html#class-canvasitem\"><span class=\"std std-ref\">CanvasItem</span></a>s.</p>",
                "description": "\n\n<p><strong>CanvasItemMaterial</strong>s provide a means of modifying the textures associated with a CanvasItem. They specialize in describing blend and lighting behaviors for textures. Use a <a class=\"reference internal\" href=\"class_shadermaterial.html#class-shadermaterial\"><span class=\"std std-ref\">ShaderMaterial</span></a> to more fully customize a material's interactions with a <a class=\"reference internal\" href=\"class_canvasitem.html#class-canvasitem\"><span class=\"std std-ref\">CanvasItem</span></a>.</p>\n"
            },
            "class_canvastexture": {
                "url": "https://docs.godotengine.org/en/4.1/classes/class_canvastexture.html",
                "title": "CanvasTexture",
                "blurb": "<p><strong>Inherits:</strong> <a class=\"reference internal\" href=\"class_texture2d.html#class-texture2d\"><span class=\"std std-ref\">Texture2D</span></a> <strong>&lt;</strong> <a class=\"reference internal\" href=\"class_texture.html#class-texture\"><span class=\"std std-ref\">Texture</span></a> <strong>&lt;</strong> <a class=\"reference internal\" href=\"class_resource.html#class-resource\"><span class=\"std std-ref\">Resource</span></a> <strong>&lt;</strong> <a class=\"reference internal\" href=\"class_refcounted.html#class-refcounted\"><span class=\"std std-ref\">RefCounted</span></a> <strong>&lt;</strong> <a class=\"reference internal\" href=\"class_object.html#class-object\"><span class=\"std std-ref\">Object</span></a></p><p>Texture with optional normal and specular maps for use in 2D rendering.</p>",
                "description": "\n\n<p><strong>CanvasTexture</strong> is an alternative to <a class=\"reference internal\" href=\"class_imagetexture.html#class-imagetexture\"><span class=\"std std-ref\">ImageTexture</span></a> for 2D rendering. It allows using normal maps and specular maps in any node that inherits from <a class=\"reference internal\" href=\"class_canvasitem.html#class-canvasitem\"><span class=\"std std-ref\">CanvasItem</span></a>. <strong>CanvasTexture</strong> also allows overriding the texture's filter and repeat mode independently of the node's properties (or the project settings).</p>\n<p><strong>Note:</strong> <strong>CanvasTexture</strong> cannot be used in 3D rendering. For physically-based materials in 3D, use <a class=\"reference internal\" href=\"class_basematerial3d.html#class-basematerial3d\"><span class=\"std std-ref\">BaseMaterial3D</span></a> instead.</p>\n"
            },
            "class_capsulemesh": {
                "url": "https://docs.godotengine.org/en/4.1/classes/class_capsulemesh.html",
                "title": "CapsuleMesh",
                "blurb": "<p><strong>Inherits:</strong> <a class=\"reference internal\" href=\"class_primitivemesh.html#class-primitivemesh\"><span class=\"std std-ref\">PrimitiveMesh</span></a> <strong>&lt;</strong> <a class=\"reference internal\" href=\"class_mesh.html#class-mesh\"><span class=\"std std-ref\">Mesh</span></a> <strong>&lt;</strong> <a class=\"reference internal\" href=\"class_resource.html#class-resource\"><span class=\"std std-ref\">Resource</span></a> <strong>&lt;</strong> <a class=\"reference internal\" href=\"class_refcounted.html#class-refcounted\"><span class=\"std std-ref\">RefCounted</span></a> <strong>&lt;</strong> <a class=\"reference internal\" href=\"class_object.html#class-object\"><span class=\"std std-ref\">Object</span></a></p><p>Class representing a capsule-shaped <a class=\"reference internal\" href=\"class_primitivemesh.html#class-primitivemesh\"><span class=\"std std-ref\">PrimitiveMesh</span></a>.</p>",
                "description": "\n\n<p>Class representing a capsule-shaped <a class=\"reference internal\" href=\"class_primitivemesh.html#class-primitivemesh\"><span class=\"std std-ref\">PrimitiveMesh</span></a>.</p>\n"
            },
            "class_capsuleshape2d": {
                "url": "https://docs.godotengine.org/en/4.1/classes/class_capsuleshape2d.html",
                "title": "CapsuleShape2D",
                "blurb": "<p><strong>Inherits:</strong> <a class=\"reference internal\" href=\"class_shape2d.html#class-shape2d\"><span class=\"std std-ref\">Shape2D</span></a> <strong>&lt;</strong> <a class=\"reference internal\" href=\"class_resource.html#class-resource\"><span class=\"std std-ref\">Resource</span></a> <strong>&lt;</strong> <a class=\"reference internal\" href=\"class_refcounted.html#class-refcounted\"><span class=\"std std-ref\">RefCounted</span></a> <strong>&lt;</strong> <a class=\"reference internal\" href=\"class_object.html#class-object\"><span class=\"std std-ref\">Object</span></a></p><p>A 2D capsule shape used for physics collision.</p>",
                "description": "\n\n<p>A 2D capsule shape, intended for use in physics. Usually used to provide a shape for a <a class=\"reference internal\" href=\"class_collisionshape2d.html#class-collisionshape2d\"><span class=\"std std-ref\">CollisionShape2D</span></a>.</p>\n<p><strong>Performance:</strong> <strong>CapsuleShape2D</strong> is fast to check collisions against, but it is slower than <a class=\"reference internal\" href=\"class_rectangleshape2d.html#class-rectangleshape2d\"><span class=\"std std-ref\">RectangleShape2D</span></a> and <a class=\"reference internal\" href=\"class_circleshape2d.html#class-circleshape2d\"><span class=\"std std-ref\">CircleShape2D</span></a>.</p>\n"
            },
            "class_capsuleshape3d": {
                "url": "https://docs.godotengine.org/en/4.1/classes/class_capsuleshape3d.html",
                "title": "CapsuleShape3D",
                "blurb": "<p><strong>Inherits:</strong> <a class=\"reference internal\" href=\"class_shape3d.html#class-shape3d\"><span class=\"std std-ref\">Shape3D</span></a> <strong>&lt;</strong> <a class=\"reference internal\" href=\"class_resource.html#class-resource\"><span class=\"std std-ref\">Resource</span></a> <strong>&lt;</strong> <a class=\"reference internal\" href=\"class_refcounted.html#class-refcounted\"><span class=\"std std-ref\">RefCounted</span></a> <strong>&lt;</strong> <a class=\"reference internal\" href=\"class_object.html#class-object\"><span class=\"std std-ref\">Object</span></a></p><p>A 3D capsule shape used for physics collision.</p>",
                "description": "\n\n<p>A 3D capsule shape, intended for use in physics. Usually used to provide a shape for a <a class=\"reference internal\" href=\"class_collisionshape3d.html#class-collisionshape3d\"><span class=\"std std-ref\">CollisionShape3D</span></a>.</p>\n<p><strong>Performance:</strong> <strong>CapsuleShape3D</strong> is fast to check collisions against. It is faster than <a class=\"reference internal\" href=\"class_cylindershape3d.html#class-cylindershape3d\"><span class=\"std std-ref\">CylinderShape3D</span></a>, but slower than <a class=\"reference internal\" href=\"class_sphereshape3d.html#class-sphereshape3d\"><span class=\"std std-ref\">SphereShape3D</span></a> and <a class=\"reference internal\" href=\"class_boxshape3d.html#class-boxshape3d\"><span class=\"std std-ref\">BoxShape3D</span></a>.</p>\n"
            },
            "class_circleshape2d": {
                "url": "https://docs.godotengine.org/en/4.1/classes/class_circleshape2d.html",
                "title": "CircleShape2D",
                "blurb": "<p><strong>Inherits:</strong> <a class=\"reference internal\" href=\"class_shape2d.html#class-shape2d\"><span class=\"std std-ref\">Shape2D</span></a> <strong>&lt;</strong> <a class=\"reference internal\" href=\"class_resource.html#class-resource\"><span class=\"std std-ref\">Resource</span></a> <strong>&lt;</strong> <a class=\"reference internal\" href=\"class_refcounted.html#class-refcounted\"><span class=\"std std-ref\">RefCounted</span></a> <strong>&lt;</strong> <a class=\"reference internal\" href=\"class_object.html#class-object\"><span class=\"std std-ref\">Object</span></a></p><p>A 2D circle shape used for physics collision.</p>",
                "description": "\n\n<p>A 2D circle shape, intended for use in physics. Usually used to provide a shape for a <a class=\"reference internal\" href=\"class_collisionshape2d.html#class-collisionshape2d\"><span class=\"std std-ref\">CollisionShape2D</span></a>.</p>\n<p><strong>Performance:</strong> <strong>CircleShape2D</strong> is fast to check collisions against. It is faster than <a class=\"reference internal\" href=\"class_rectangleshape2d.html#class-rectangleshape2d\"><span class=\"std std-ref\">RectangleShape2D</span></a> and <a class=\"reference internal\" href=\"class_capsuleshape2d.html#class-capsuleshape2d\"><span class=\"std std-ref\">CapsuleShape2D</span></a>.</p>\n"
            },
            "class_codehighlighter": {
                "url": "https://docs.godotengine.org/en/4.1/classes/class_codehighlighter.html",
                "title": "CodeHighlighter",
                "blurb": "<p><strong>Inherits:</strong> <a class=\"reference internal\" href=\"class_syntaxhighlighter.html#class-syntaxhighlighter\"><span class=\"std std-ref\">SyntaxHighlighter</span></a> <strong>&lt;</strong> <a class=\"reference internal\" href=\"class_resource.html#class-resource\"><span class=\"std std-ref\">Resource</span></a> <strong>&lt;</strong> <a class=\"reference internal\" href=\"class_refcounted.html#class-refcounted\"><span class=\"std std-ref\">RefCounted</span></a> <strong>&lt;</strong> <a class=\"reference internal\" href=\"class_object.html#class-object\"><span class=\"std std-ref\">Object</span></a></p><p>A syntax highlighter intended for code.</p>",
                "description": "\n\n<p>By adjusting various properties of this resource, you can change the colors of strings, comments, numbers, and other text patterns inside a <a class=\"reference internal\" href=\"class_textedit.html#class-textedit\"><span class=\"std std-ref\">TextEdit</span></a> control.</p>\n"
            },
            "class_compressedcubemap": {
                "url": "https://docs.godotengine.org/en/4.1/classes/class_compressedcubemap.html",
                "title": "CompressedCubemap",
                "blurb": "<p><strong>Inherits:</strong> <a class=\"reference internal\" href=\"class_compressedtexturelayered.html#class-compressedtexturelayered\"><span class=\"std std-ref\">CompressedTextureLayered</span></a> <strong>&lt;</strong> <a class=\"reference internal\" href=\"class_texturelayered.html#class-texturelayered\"><span class=\"std std-ref\">TextureLayered</span></a> <strong>&lt;</strong> <a class=\"reference internal\" href=\"class_texture.html#class-texture\"><span class=\"std std-ref\">Texture</span></a> <strong>&lt;</strong> <a class=\"reference internal\" href=\"class_resource.html#class-resource\"><span class=\"std std-ref\">Resource</span></a> <strong>&lt;</strong> <a class=\"reference internal\" href=\"class_refcounted.html#class-refcounted\"><span class=\"std std-ref\">RefCounted</span></a> <strong>&lt;</strong> <a class=\"reference internal\" href=\"class_object.html#class-object\"><span class=\"std std-ref\">Object</span></a></p><p>6-sided texture typically used in 3D rendering, optionally compressed.</p>",
                "description": "\n\n<p>A cubemap that is loaded from a <code class=\"docutils literal notranslate\"><span class=\"pre\">.ccube</span></code> file. This file format is internal to Godot; it is created by importing other image formats with the import system. <strong>CompressedCubemap</strong> can use one of 4 compresson methods:</p>\n<ul class=\"simple\">\n<li><p>Lossless (WebP or PNG, uncompressed on the GPU)</p></li>\n<li><p>Lossy (WebP, uncompressed on the GPU)</p></li>\n<li><p>VRAM Compressed (compressed on the GPU)</p></li>\n<li><p>VRAM Uncompressed (uncompressed on the GPU)</p></li>\n<li><p>Basis Universal (compressed on the GPU. Lower file sizes than VRAM Compressed, but slower to compress and lower quality than VRAM Compressed)</p></li>\n</ul>\n<p>Only <strong>VRAM Compressed</strong> actually reduces the memory usage on the GPU. The <strong>Lossless</strong> and <strong>Lossy</strong> compression methods will reduce the required storage on disk, but they will not reduce memory usage on the GPU as the texture is sent to the GPU uncompressed.</p>\n<p>Using <strong>VRAM Compressed</strong> also improves loading times, as VRAM-compressed textures are faster to load compared to textures using lossless or lossy compression. VRAM compression can exhibit noticeable artifacts and is intended to be used for 3D rendering, not 2D.</p>\n<p>See <a class=\"reference internal\" href=\"class_cubemap.html#class-cubemap\"><span class=\"std std-ref\">Cubemap</span></a> for a general description of cubemaps.</p>\n"
            },
            "class_compressedcubemaparray": {
                "url": "https://docs.godotengine.org/en/4.1/classes/class_compressedcubemaparray.html",
                "title": "CompressedCubemapArray",
                "blurb": "<p><strong>Inherits:</strong> <a class=\"reference internal\" href=\"class_compressedtexturelayered.html#class-compressedtexturelayered\"><span class=\"std std-ref\">CompressedTextureLayered</span></a> <strong>&lt;</strong> <a class=\"reference internal\" href=\"class_texturelayered.html#class-texturelayered\"><span class=\"std std-ref\">TextureLayered</span></a> <strong>&lt;</strong> <a class=\"reference internal\" href=\"class_texture.html#class-texture\"><span class=\"std std-ref\">Texture</span></a> <strong>&lt;</strong> <a class=\"reference internal\" href=\"class_resource.html#class-resource\"><span class=\"std std-ref\">Resource</span></a> <strong>&lt;</strong> <a class=\"reference internal\" href=\"class_refcounted.html#class-refcounted\"><span class=\"std std-ref\">RefCounted</span></a> <strong>&lt;</strong> <a class=\"reference internal\" href=\"class_object.html#class-object\"><span class=\"std std-ref\">Object</span></a></p><p>Array of 6-sided textures typically used in 3D rendering, optionally compressed.</p>",
                "description": "\n\n<p>A cubemap array that is loaded from a <code class=\"docutils literal notranslate\"><span class=\"pre\">.ccubearray</span></code> file. This file format is internal to Godot; it is created by importing other image formats with the import system. <strong>CompressedCubemapArray</strong> can use one of 4 compresson methods:</p>\n<ul class=\"simple\">\n<li><p>Lossless (WebP or PNG, uncompressed on the GPU)</p></li>\n<li><p>Lossy (WebP, uncompressed on the GPU)</p></li>\n<li><p>VRAM Compressed (compressed on the GPU)</p></li>\n<li><p>VRAM Uncompressed (uncompressed on the GPU)</p></li>\n<li><p>Basis Universal (compressed on the GPU. Lower file sizes than VRAM Compressed, but slower to compress and lower quality than VRAM Compressed)</p></li>\n</ul>\n<p>Only <strong>VRAM Compressed</strong> actually reduces the memory usage on the GPU. The <strong>Lossless</strong> and <strong>Lossy</strong> compression methods will reduce the required storage on disk, but they will not reduce memory usage on the GPU as the texture is sent to the GPU uncompressed.</p>\n<p>Using <strong>VRAM Compressed</strong> also improves loading times, as VRAM-compressed textures are faster to load compared to textures using lossless or lossy compression. VRAM compression can exhibit noticeable artifacts and is intended to be used for 3D rendering, not 2D.</p>\n<p>See <a class=\"reference internal\" href=\"class_cubemaparray.html#class-cubemaparray\"><span class=\"std std-ref\">CubemapArray</span></a> for a general description of cubemap arrays.</p>\n"
            },
            "class_compressedtexture2d": {
                "url": "https://docs.godotengine.org/en/4.1/classes/class_compressedtexture2d.html",
                "title": "CompressedTexture2D",
                "blurb": "<p><strong>Inherits:</strong> <a class=\"reference internal\" href=\"class_texture2d.html#class-texture2d\"><span class=\"std std-ref\">Texture2D</span></a> <strong>&lt;</strong> <a class=\"reference internal\" href=\"class_texture.html#class-texture\"><span class=\"std std-ref\">Texture</span></a> <strong>&lt;</strong> <a class=\"reference internal\" href=\"class_resource.html#class-resource\"><span class=\"std std-ref\">Resource</span></a> <strong>&lt;</strong> <a class=\"reference internal\" href=\"class_refcounted.html#class-refcounted\"><span class=\"std std-ref\">RefCounted</span></a> <strong>&lt;</strong> <a class=\"reference internal\" href=\"class_object.html#class-object\"><span class=\"std std-ref\">Object</span></a></p><p>Texture with 2 dimensions, optionally compressed.</p>",
                "description": "\n\n<p>A texture that is loaded from a <code class=\"docutils literal notranslate\"><span class=\"pre\">.ctex</span></code> file. This file format is internal to Godot; it is created by importing other image formats with the import system. <strong>CompressedTexture2D</strong> can use one of 4 compression methods (including a lack of any compression):</p>\n<ul class=\"simple\">\n<li><p>Lossless (WebP or PNG, uncompressed on the GPU)</p></li>\n<li><p>Lossy (WebP, uncompressed on the GPU)</p></li>\n<li><p>VRAM Compressed (compressed on the GPU)</p></li>\n<li><p>VRAM Uncompressed (uncompressed on the GPU)</p></li>\n<li><p>Basis Universal (compressed on the GPU. Lower file sizes than VRAM Compressed, but slower to compress and lower quality than VRAM Compressed)</p></li>\n</ul>\n<p>Only <strong>VRAM Compressed</strong> actually reduces the memory usage on the GPU. The <strong>Lossless</strong> and <strong>Lossy</strong> compression methods will reduce the required storage on disk, but they will not reduce memory usage on the GPU as the texture is sent to the GPU uncompressed.</p>\n<p>Using <strong>VRAM Compressed</strong> also improves loading times, as VRAM-compressed textures are faster to load compared to textures using lossless or lossy compression. VRAM compression can exhibit noticeable artifacts and is intended to be used for 3D rendering, not 2D.</p>\n"
            },
            "class_compressedtexture2darray": {
                "url": "https://docs.godotengine.org/en/4.1/classes/class_compressedtexture2darray.html",
                "title": "CompressedTexture2DArray",
                "blurb": "<p><strong>Inherits:</strong> <a class=\"reference internal\" href=\"class_compressedtexturelayered.html#class-compressedtexturelayered\"><span class=\"std std-ref\">CompressedTextureLayered</span></a> <strong>&lt;</strong> <a class=\"reference internal\" href=\"class_texturelayered.html#class-texturelayered\"><span class=\"std std-ref\">TextureLayered</span></a> <strong>&lt;</strong> <a class=\"reference internal\" href=\"class_texture.html#class-texture\"><span class=\"std std-ref\">Texture</span></a> <strong>&lt;</strong> <a class=\"reference internal\" href=\"class_resource.html#class-resource\"><span class=\"std std-ref\">Resource</span></a> <strong>&lt;</strong> <a class=\"reference internal\" href=\"class_refcounted.html#class-refcounted\"><span class=\"std std-ref\">RefCounted</span></a> <strong>&lt;</strong> <a class=\"reference internal\" href=\"class_object.html#class-object\"><span class=\"std std-ref\">Object</span></a></p><p>Array of 2-dimensional textures, optionally compressed.</p>",
                "description": "\n\n<p>A texture array that is loaded from a <code class=\"docutils literal notranslate\"><span class=\"pre\">.ctexarray</span></code> file. This file format is internal to Godot; it is created by importing other image formats with the import system. <strong>CompressedTexture2DArray</strong> can use one of 4 compresson methods:</p>\n<ul class=\"simple\">\n<li><p>Lossless (WebP or PNG, uncompressed on the GPU)</p></li>\n<li><p>Lossy (WebP, uncompressed on the GPU)</p></li>\n<li><p>VRAM Compressed (compressed on the GPU)</p></li>\n<li><p>VRAM Uncompressed (uncompressed on the GPU)</p></li>\n<li><p>Basis Universal (compressed on the GPU. Lower file sizes than VRAM Compressed, but slower to compress and lower quality than VRAM Compressed)</p></li>\n</ul>\n<p>Only <strong>VRAM Compressed</strong> actually reduces the memory usage on the GPU. The <strong>Lossless</strong> and <strong>Lossy</strong> compression methods will reduce the required storage on disk, but they will not reduce memory usage on the GPU as the texture is sent to the GPU uncompressed.</p>\n<p>Using <strong>VRAM Compressed</strong> also improves loading times, as VRAM-compressed textures are faster to load compared to textures using lossless or lossy compression. VRAM compression can exhibit noticeable artifacts and is intended to be used for 3D rendering, not 2D.</p>\n<p>See <a class=\"reference internal\" href=\"class_texture2darray.html#class-texture2darray\"><span class=\"std std-ref\">Texture2DArray</span></a> for a general description of texture arrays.</p>\n"
            },
            "class_compressedtexture3d": {
                "url": "https://docs.godotengine.org/en/4.1/classes/class_compressedtexture3d.html",
                "title": "CompressedTexture3D",
                "blurb": "<p><strong>Inherits:</strong> <a class=\"reference internal\" href=\"class_texture3d.html#class-texture3d\"><span class=\"std std-ref\">Texture3D</span></a> <strong>&lt;</strong> <a class=\"reference internal\" href=\"class_texture.html#class-texture\"><span class=\"std std-ref\">Texture</span></a> <strong>&lt;</strong> <a class=\"reference internal\" href=\"class_resource.html#class-resource\"><span class=\"std std-ref\">Resource</span></a> <strong>&lt;</strong> <a class=\"reference internal\" href=\"class_refcounted.html#class-refcounted\"><span class=\"std std-ref\">RefCounted</span></a> <strong>&lt;</strong> <a class=\"reference internal\" href=\"class_object.html#class-object\"><span class=\"std std-ref\">Object</span></a></p><p>Texture with 3 dimensions, optionally compressed.</p>",
                "description": "\n\n<p><strong>CompressedTexture3D</strong> is the VRAM-compressed counterpart of <a class=\"reference internal\" href=\"class_imagetexture3d.html#class-imagetexture3d\"><span class=\"std std-ref\">ImageTexture3D</span></a>. The file extension for <strong>CompressedTexture3D</strong> files is <code class=\"docutils literal notranslate\"><span class=\"pre\">.ctex3d</span></code>. This file format is internal to Godot; it is created by importing other image formats with the import system.</p>\n<p><strong>CompressedTexture3D</strong> uses VRAM compression, which allows to reduce memory usage on the GPU when rendering the texture. This also improves loading times, as VRAM-compressed textures are faster to load compared to textures using lossless compression. VRAM compression can exhibit noticeable artifacts and is intended to be used for 3D rendering, not 2D.</p>\n<p>See <a class=\"reference internal\" href=\"class_texture3d.html#class-texture3d\"><span class=\"std std-ref\">Texture3D</span></a> for a general description of 3D textures.</p>\n"
            },
            "class_compressedtexturelayered": {
                "url": "https://docs.godotengine.org/en/4.1/classes/class_compressedtexturelayered.html",
                "title": "CompressedTextureLayered",
                "blurb": "<p><strong>Inherits:</strong> <a class=\"reference internal\" href=\"class_texturelayered.html#class-texturelayered\"><span class=\"std std-ref\">TextureLayered</span></a> <strong>&lt;</strong> <a class=\"reference internal\" href=\"class_texture.html#class-texture\"><span class=\"std std-ref\">Texture</span></a> <strong>&lt;</strong> <a class=\"reference internal\" href=\"class_resource.html#class-resource\"><span class=\"std std-ref\">Resource</span></a> <strong>&lt;</strong> <a class=\"reference internal\" href=\"class_refcounted.html#class-refcounted\"><span class=\"std std-ref\">RefCounted</span></a> <strong>&lt;</strong> <a class=\"reference internal\" href=\"class_object.html#class-object\"><span class=\"std std-ref\">Object</span></a></p><p><strong>Inherited By:</strong> <a class=\"reference internal\" href=\"class_compressedcubemap.html#class-compressedcubemap\"><span class=\"std std-ref\">CompressedCubemap</span></a>, <a class=\"reference internal\" href=\"class_compressedcubemaparray.html#class-compressedcubemaparray\"><span class=\"std std-ref\">CompressedCubemapArray</span></a>, <a class=\"reference internal\" href=\"class_compressedtexture2darray.html#class-compressedtexture2darray\"><span class=\"std std-ref\">CompressedTexture2DArray</span></a></p><p>Base class for texture arrays that can optionally be compressed.</p>",
                "description": "\n\n<p>Base class for <a class=\"reference internal\" href=\"class_compressedtexture2darray.html#class-compressedtexture2darray\"><span class=\"std std-ref\">CompressedTexture2DArray</span></a> and <a class=\"reference internal\" href=\"class_compressedtexture3d.html#class-compressedtexture3d\"><span class=\"std std-ref\">CompressedTexture3D</span></a>. Cannot be used directly, but contains all the functions necessary for accessing the derived resource types. See also <a class=\"reference internal\" href=\"class_texturelayered.html#class-texturelayered\"><span class=\"std std-ref\">TextureLayered</span></a>.</p>\n"
            },
            "class_concavepolygonshape2d": {
                "url": "https://docs.godotengine.org/en/4.1/classes/class_concavepolygonshape2d.html",
                "title": "ConcavePolygonShape2D",
                "blurb": "<p><strong>Inherits:</strong> <a class=\"reference internal\" href=\"class_shape2d.html#class-shape2d\"><span class=\"std std-ref\">Shape2D</span></a> <strong>&lt;</strong> <a class=\"reference internal\" href=\"class_resource.html#class-resource\"><span class=\"std std-ref\">Resource</span></a> <strong>&lt;</strong> <a class=\"reference internal\" href=\"class_refcounted.html#class-refcounted\"><span class=\"std std-ref\">RefCounted</span></a> <strong>&lt;</strong> <a class=\"reference internal\" href=\"class_object.html#class-object\"><span class=\"std std-ref\">Object</span></a></p><p>A 2D polyline shape used for physics collision.</p>",
                "description": "\n\n<p>A 2D polyline shape, intended for use in physics. Used internally in <a class=\"reference internal\" href=\"class_collisionpolygon2d.html#class-collisionpolygon2d\"><span class=\"std std-ref\">CollisionPolygon2D</span></a> when it's in <code class=\"docutils literal notranslate\"><span class=\"pre\">BUILD_SEGMENTS</span></code> mode.</p>\n<p>Being just a collection of interconnected line segments, <strong>ConcavePolygonShape2D</strong> is the most freely configurable single 2D shape. It can be used to form polygons of any nature, or even shapes that don't enclose an area. However, <a class=\"reference internal\" href=\"class_convexpolygonshape2d.html#class-convexpolygonshape2d\"><span class=\"std std-ref\">ConvexPolygonShape2D</span></a> is <em>hollow</em> even if the interconnected line segments do enclose an area, which often makes it unsuitable for physics or detection.</p>\n<p><strong>Note:</strong> When used for collision, <strong>ConcavePolygonShape2D</strong> is intended to work with static <a class=\"reference internal\" href=\"class_collisionshape2d.html#class-collisionshape2d\"><span class=\"std std-ref\">CollisionShape2D</span></a> nodes like <a class=\"reference internal\" href=\"class_staticbody2d.html#class-staticbody2d\"><span class=\"std std-ref\">StaticBody2D</span></a> and will likely not behave well for <a class=\"reference internal\" href=\"class_characterbody2d.html#class-characterbody2d\"><span class=\"std std-ref\">CharacterBody2D</span></a>s or <a class=\"reference internal\" href=\"class_rigidbody2d.html#class-rigidbody2d\"><span class=\"std std-ref\">RigidBody2D</span></a>s in a mode other than Static.</p>\n<p><strong>Warning:</strong> Physics bodies that are small have a chance to clip through this shape when moving fast. This happens because on one frame, the physics body may be on the \"outside\" of the shape, and on the next frame it may be \"inside\" it. <strong>ConcavePolygonShape2D</strong> is hollow, so it won't detect a collision.</p>\n<p><strong>Performance:</strong> Due to its complexity, <strong>ConcavePolygonShape2D</strong> is the slowest 2D collision shape to check collisions against. Its use should generally be limited to level geometry. If the polyline is closed, <a class=\"reference internal\" href=\"class_collisionpolygon2d.html#class-collisionpolygon2d\"><span class=\"std std-ref\">CollisionPolygon2D</span></a>'s <code class=\"docutils literal notranslate\"><span class=\"pre\">BUILD_SOLIDS</span></code> mode can be used, which decomposes the polygon into convex ones; see <a class=\"reference internal\" href=\"class_convexpolygonshape2d.html#class-convexpolygonshape2d\"><span class=\"std std-ref\">ConvexPolygonShape2D</span></a>'s documentation for instructions.</p>\n"
            },
            "class_concavepolygonshape3d": {
                "url": "https://docs.godotengine.org/en/4.1/classes/class_concavepolygonshape3d.html",
                "title": "ConcavePolygonShape3D",
                "blurb": "<p><strong>Inherits:</strong> <a class=\"reference internal\" href=\"class_shape3d.html#class-shape3d\"><span class=\"std std-ref\">Shape3D</span></a> <strong>&lt;</strong> <a class=\"reference internal\" href=\"class_resource.html#class-resource\"><span class=\"std std-ref\">Resource</span></a> <strong>&lt;</strong> <a class=\"reference internal\" href=\"class_refcounted.html#class-refcounted\"><span class=\"std std-ref\">RefCounted</span></a> <strong>&lt;</strong> <a class=\"reference internal\" href=\"class_object.html#class-object\"><span class=\"std std-ref\">Object</span></a></p><p>A 3D trimesh shape used for physics collision.</p>",
                "description": "\n\n<p>A 3D trimesh shape, intended for use in physics. Usually used to provide a shape for a <a class=\"reference internal\" href=\"class_collisionshape3d.html#class-collisionshape3d\"><span class=\"std std-ref\">CollisionShape3D</span></a>.</p>\n<p>Being just a collection of interconnected triangles, <strong>ConcavePolygonShape3D</strong> is the most freely configurable single 3D shape. It can be used to form polyhedra of any nature, or even shapes that don't enclose a volume. However, <a class=\"reference internal\" href=\"class_convexpolygonshape3d.html#class-convexpolygonshape3d\"><span class=\"std std-ref\">ConvexPolygonShape3D</span></a> is <em>hollow</em> even if the interconnected triangles do enclose a volume, which often makes it unsuitable for physics or detection.</p>\n<p><strong>Note:</strong> When used for collision, <strong>ConcavePolygonShape3D</strong> is intended to work with static <a class=\"reference internal\" href=\"class_collisionshape3d.html#class-collisionshape3d\"><span class=\"std std-ref\">CollisionShape3D</span></a> nodes like <a class=\"reference internal\" href=\"class_staticbody3d.html#class-staticbody3d\"><span class=\"std std-ref\">StaticBody3D</span></a> and will likely not behave well for <a class=\"reference internal\" href=\"class_characterbody3d.html#class-characterbody3d\"><span class=\"std std-ref\">CharacterBody3D</span></a>s or <a class=\"reference internal\" href=\"class_rigidbody3d.html#class-rigidbody3d\"><span class=\"std std-ref\">RigidBody3D</span></a>s in a mode other than Static.</p>\n<p><strong>Warning:</strong> Physics bodies that are small have a chance to clip through this shape when moving fast. This happens because on one frame, the physics body may be on the \"outside\" of the shape, and on the next frame it may be \"inside\" it. <strong>ConcavePolygonShape3D</strong> is hollow, so it won't detect a collision.</p>\n<p><strong>Performance:</strong> Due to its complexity, <strong>ConcavePolygonShape3D</strong> is the slowest 3D collision shape to check collisions against. Its use should generally be limited to level geometry. For convex geometry, <a class=\"reference internal\" href=\"class_convexpolygonshape3d.html#class-convexpolygonshape3d\"><span class=\"std std-ref\">ConvexPolygonShape3D</span></a> should be used. For dynamic physics bodies that need concave collision, several <a class=\"reference internal\" href=\"class_convexpolygonshape3d.html#class-convexpolygonshape3d\"><span class=\"std std-ref\">ConvexPolygonShape3D</span></a>s can be used to represent its collision by using convex decomposition; see <a class=\"reference internal\" href=\"class_convexpolygonshape3d.html#class-convexpolygonshape3d\"><span class=\"std std-ref\">ConvexPolygonShape3D</span></a>'s documentation for instructions.</p>\n"
            },
            "class_convexpolygonshape2d": {
                "url": "https://docs.godotengine.org/en/4.1/classes/class_convexpolygonshape2d.html",
                "title": "ConvexPolygonShape2D",
                "blurb": "<p><strong>Inherits:</strong> <a class=\"reference internal\" href=\"class_shape2d.html#class-shape2d\"><span class=\"std std-ref\">Shape2D</span></a> <strong>&lt;</strong> <a class=\"reference internal\" href=\"class_resource.html#class-resource\"><span class=\"std std-ref\">Resource</span></a> <strong>&lt;</strong> <a class=\"reference internal\" href=\"class_refcounted.html#class-refcounted\"><span class=\"std std-ref\">RefCounted</span></a> <strong>&lt;</strong> <a class=\"reference internal\" href=\"class_object.html#class-object\"><span class=\"std std-ref\">Object</span></a></p><p>A 2D convex polygon shape used for physics collision.</p>",
                "description": "\n\n<p>A 2D convex polygon shape, intended for use in physics. Used internally in <a class=\"reference internal\" href=\"class_collisionpolygon2d.html#class-collisionpolygon2d\"><span class=\"std std-ref\">CollisionPolygon2D</span></a> when it's in <code class=\"docutils literal notranslate\"><span class=\"pre\">BUILD_SOLIDS</span></code> mode.</p>\n<p><strong>ConvexPolygonShape2D</strong> is <em>solid</em>, which means it detects collisions from objects that are fully inside it, unlike <a class=\"reference internal\" href=\"class_concavepolygonshape2d.html#class-concavepolygonshape2d\"><span class=\"std std-ref\">ConcavePolygonShape2D</span></a> which is hollow. This makes it more suitable for both detection and physics.</p>\n<p><strong>Convex decomposition:</strong> A concave polygon can be split up into several convex polygons. This allows dynamic physics bodies to have complex concave collisions (at a performance cost) and can be achieved by using several <a class=\"reference internal\" href=\"class_convexpolygonshape3d.html#class-convexpolygonshape3d\"><span class=\"std std-ref\">ConvexPolygonShape3D</span></a> nodes or by using the <a class=\"reference internal\" href=\"class_collisionpolygon2d.html#class-collisionpolygon2d\"><span class=\"std std-ref\">CollisionPolygon2D</span></a> node in <code class=\"docutils literal notranslate\"><span class=\"pre\">BUILD_SOLIDS</span></code> mode. To generate a collision polygon from a sprite, select the <a class=\"reference internal\" href=\"class_sprite2d.html#class-sprite2d\"><span class=\"std std-ref\">Sprite2D</span></a> node, go to the <strong>Sprite2D</strong> menu that appears above the viewport, and choose <strong>Create Polygon2D Sibling</strong>.</p>\n<p><strong>Performance:</strong> <strong>ConvexPolygonShape2D</strong> is faster to check collisions against compared to <a class=\"reference internal\" href=\"class_concavepolygonshape2d.html#class-concavepolygonshape2d\"><span class=\"std std-ref\">ConcavePolygonShape2D</span></a>, but it is slower than primitive collision shapes such as <a class=\"reference internal\" href=\"class_circleshape2d.html#class-circleshape2d\"><span class=\"std std-ref\">CircleShape2D</span></a> and <a class=\"reference internal\" href=\"class_rectangleshape2d.html#class-rectangleshape2d\"><span class=\"std std-ref\">RectangleShape2D</span></a>. Its use should generally be limited to medium-sized objects that cannot have their collision accurately represented by primitive shapes.</p>\n"
            },
            "class_convexpolygonshape3d": {
                "url": "https://docs.godotengine.org/en/4.1/classes/class_convexpolygonshape3d.html",
                "title": "ConvexPolygonShape3D",
                "blurb": "<p><strong>Inherits:</strong> <a class=\"reference internal\" href=\"class_shape3d.html#class-shape3d\"><span class=\"std std-ref\">Shape3D</span></a> <strong>&lt;</strong> <a class=\"reference internal\" href=\"class_resource.html#class-resource\"><span class=\"std std-ref\">Resource</span></a> <strong>&lt;</strong> <a class=\"reference internal\" href=\"class_refcounted.html#class-refcounted\"><span class=\"std std-ref\">RefCounted</span></a> <strong>&lt;</strong> <a class=\"reference internal\" href=\"class_object.html#class-object\"><span class=\"std std-ref\">Object</span></a></p><p>A 3D convex polyhedron shape used for physics collision.</p>",
                "description": "\n\n<p>A 3D convex polyhedron shape, intended for use in physics. Usually used to provide a shape for a <a class=\"reference internal\" href=\"class_collisionshape3d.html#class-collisionshape3d\"><span class=\"std std-ref\">CollisionShape3D</span></a>.</p>\n<p><strong>ConvexPolygonShape3D</strong> is <em>solid</em>, which means it detects collisions from objects that are fully inside it, unlike <a class=\"reference internal\" href=\"class_concavepolygonshape3d.html#class-concavepolygonshape3d\"><span class=\"std std-ref\">ConcavePolygonShape3D</span></a> which is hollow. This makes it more suitable for both detection and physics.</p>\n<p><strong>Convex decomposition:</strong> A concave polyhedron can be split up into several convex polyhedra. This allows dynamic physics bodies to have complex concave collisions (at a performance cost) and can be achieved by using several <strong>ConvexPolygonShape3D</strong> nodes. To generate a convex decomposition from a mesh, select the <a class=\"reference internal\" href=\"class_meshinstance3d.html#class-meshinstance3d\"><span class=\"std std-ref\">MeshInstance3D</span></a> node, go to the <strong>Mesh</strong> menu that appears above the viewport, and choose <strong>Create Multiple Convex Collision Siblings</strong>. Alternatively, <a class=\"reference internal\" href=\"class_meshinstance3d.html#class-meshinstance3d-method-create-multiple-convex-collisions\"><span class=\"std std-ref\">MeshInstance3D.create_multiple_convex_collisions</span></a> can be called in a script to perform this decomposition at run-time.</p>\n<p><strong>Performance:</strong> <strong>ConvexPolygonShape3D</strong> is faster to check collisions against compared to <a class=\"reference internal\" href=\"class_concavepolygonshape3d.html#class-concavepolygonshape3d\"><span class=\"std std-ref\">ConcavePolygonShape3D</span></a>, but it is slower than primitive collision shapes such as <a class=\"reference internal\" href=\"class_sphereshape3d.html#class-sphereshape3d\"><span class=\"std std-ref\">SphereShape3D</span></a> and <a class=\"reference internal\" href=\"class_boxshape3d.html#class-boxshape3d\"><span class=\"std std-ref\">BoxShape3D</span></a>. Its use should generally be limited to medium-sized objects that cannot have their collision accurately represented by primitive shapes.</p>\n"
            },
            "class_cryptokey": {
                "url": "https://docs.godotengine.org/en/4.1/classes/class_cryptokey.html",
                "title": "CryptoKey",
                "blurb": "<p><strong>Inherits:</strong> <a class=\"reference internal\" href=\"class_resource.html#class-resource\"><span class=\"std std-ref\">Resource</span></a> <strong>&lt;</strong> <a class=\"reference internal\" href=\"class_refcounted.html#class-refcounted\"><span class=\"std std-ref\">RefCounted</span></a> <strong>&lt;</strong> <a class=\"reference internal\" href=\"class_object.html#class-object\"><span class=\"std std-ref\">Object</span></a></p><p>A cryptographic key (RSA).</p>",
                "description": "\n\n<p>The CryptoKey class represents a cryptographic key. Keys can be loaded and saved like any other <a class=\"reference internal\" href=\"class_resource.html#class-resource\"><span class=\"std std-ref\">Resource</span></a>.</p>\n<p>They can be used to generate a self-signed <a class=\"reference internal\" href=\"class_x509certificate.html#class-x509certificate\"><span class=\"std std-ref\">X509Certificate</span></a> via <a class=\"reference internal\" href=\"class_crypto.html#class-crypto-method-generate-self-signed-certificate\"><span class=\"std std-ref\">Crypto.generate_self_signed_certificate</span></a> and as private key in <a class=\"reference internal\" href=\"class_streampeertls.html#class-streampeertls-method-accept-stream\"><span class=\"std std-ref\">StreamPeerTLS.accept_stream</span></a> along with the appropriate certificate.</p>\n"
            },
            "class_csharpscript": {
                "url": "https://docs.godotengine.org/en/4.1/classes/class_csharpscript.html",
                "title": "CSharpScript",
                "blurb": "<p><strong>Inherits:</strong> <a class=\"reference internal\" href=\"class_script.html#class-script\"><span class=\"std std-ref\">Script</span></a> <strong>&lt;</strong> <a class=\"reference internal\" href=\"class_resource.html#class-resource\"><span class=\"std std-ref\">Resource</span></a> <strong>&lt;</strong> <a class=\"reference internal\" href=\"class_refcounted.html#class-refcounted\"><span class=\"std std-ref\">RefCounted</span></a> <strong>&lt;</strong> <a class=\"reference internal\" href=\"class_object.html#class-object\"><span class=\"std std-ref\">Object</span></a></p><p>A script implemented in the C# programming language, saved with the <code class=\"docutils literal notranslate\"><span class=\"pre\">.cs</span></code> extension (Mono-enabled builds only).</p>",
                "description": "\n\n<p>This class represents a C# script. It is the C# equivalent of the <a class=\"reference internal\" href=\"class_gdscript.html#class-gdscript\"><span class=\"std std-ref\">GDScript</span></a> class and is only available in Mono-enabled Godot builds.</p>\n<p>See also <a class=\"reference internal\" href=\"class_godotsharp.html#class-godotsharp\"><span class=\"std std-ref\">GodotSharp</span></a>.</p>\n"
            },
            "class_cubemap": {
                "url": "https://docs.godotengine.org/en/4.1/classes/class_cubemap.html",
                "title": "Cubemap",
                "blurb": "<p><strong>Inherits:</strong> <a class=\"reference internal\" href=\"class_imagetexturelayered.html#class-imagetexturelayered\"><span class=\"std std-ref\">ImageTextureLayered</span></a> <strong>&lt;</strong> <a class=\"reference internal\" href=\"class_texturelayered.html#class-texturelayered\"><span class=\"std std-ref\">TextureLayered</span></a> <strong>&lt;</strong> <a class=\"reference internal\" href=\"class_texture.html#class-texture\"><span class=\"std std-ref\">Texture</span></a> <strong>&lt;</strong> <a class=\"reference internal\" href=\"class_resource.html#class-resource\"><span class=\"std std-ref\">Resource</span></a> <strong>&lt;</strong> <a class=\"reference internal\" href=\"class_refcounted.html#class-refcounted\"><span class=\"std std-ref\">RefCounted</span></a> <strong>&lt;</strong> <a class=\"reference internal\" href=\"class_object.html#class-object\"><span class=\"std std-ref\">Object</span></a></p><p>6-sided texture typically used in 3D rendering.</p>",
                "description": "\n\n<p>A cubemap is made of 6 textures organized in layers. They are typically used for faking reflections in 3D rendering (see <a class=\"reference internal\" href=\"class_reflectionprobe.html#class-reflectionprobe\"><span class=\"std std-ref\">ReflectionProbe</span></a>). It can be used to make an object look as if it's reflecting its surroundings. This usually delivers much better performance than other reflection methods.</p>\n<p>This resource is typically used as a uniform in custom shaders. Few core Godot methods make use of <strong>Cubemap</strong> resources.</p>\n<p>To create such a texture file yourself, reimport your image files using the Godot Editor import presets.</p>\n<p><strong>Note:</strong> Godot doesn't support using cubemaps in a <a class=\"reference internal\" href=\"class_panoramaskymaterial.html#class-panoramaskymaterial\"><span class=\"std std-ref\">PanoramaSkyMaterial</span></a>. You can use <a class=\"reference external\" href=\"https://danilw.github.io/GLSL-howto/cubemap_to_panorama_js/cubemap_to_panorama.html\">this tool</a> to convert a cubemap to an equirectangular sky map.</p>\n"
            },
            "class_cubemaparray": {
                "url": "https://docs.godotengine.org/en/4.1/classes/class_cubemaparray.html",
                "title": "CubemapArray",
                "blurb": "<p><strong>Inherits:</strong> <a class=\"reference internal\" href=\"class_imagetexturelayered.html#class-imagetexturelayered\"><span class=\"std std-ref\">ImageTextureLayered</span></a> <strong>&lt;</strong> <a class=\"reference internal\" href=\"class_texturelayered.html#class-texturelayered\"><span class=\"std std-ref\">TextureLayered</span></a> <strong>&lt;</strong> <a class=\"reference internal\" href=\"class_texture.html#class-texture\"><span class=\"std std-ref\">Texture</span></a> <strong>&lt;</strong> <a class=\"reference internal\" href=\"class_resource.html#class-resource\"><span class=\"std std-ref\">Resource</span></a> <strong>&lt;</strong> <a class=\"reference internal\" href=\"class_refcounted.html#class-refcounted\"><span class=\"std std-ref\">RefCounted</span></a> <strong>&lt;</strong> <a class=\"reference internal\" href=\"class_object.html#class-object\"><span class=\"std std-ref\">Object</span></a></p><p>A single composite texture resource which consists of multiple <a class=\"reference internal\" href=\"class_cubemap.html#class-cubemap\"><span class=\"std std-ref\">Cubemap</span></a>s.</p>",
                "description": "\n\n<p><strong>CubemapArray</strong>s are made of an array of <a class=\"reference internal\" href=\"class_cubemap.html#class-cubemap\"><span class=\"std std-ref\">Cubemap</span></a>s. Accordingly, like <a class=\"reference internal\" href=\"class_cubemap.html#class-cubemap\"><span class=\"std std-ref\">Cubemap</span></a>s they are made of multiple textures the amount of which must be divisible by 6 (one image for each face of the cube). The primary benefit of <strong>CubemapArray</strong>s is that they can be accessed in shader code using a single texture reference. In other words, you can pass multiple <a class=\"reference internal\" href=\"class_cubemap.html#class-cubemap\"><span class=\"std std-ref\">Cubemap</span></a>s into a shader using a single <strong>CubemapArray</strong>.</p>\n<p>Generally, <strong>CubemapArray</strong>s provide a more efficient way for storing multiple <a class=\"reference internal\" href=\"class_cubemap.html#class-cubemap\"><span class=\"std std-ref\">Cubemap</span></a>s compared to storing multiple <a class=\"reference internal\" href=\"class_cubemap.html#class-cubemap\"><span class=\"std std-ref\">Cubemap</span></a>s themselves in an array.</p>\n<p>Internally, Godot uses <strong>CubemapArray</strong>s for many effects including the <a class=\"reference internal\" href=\"class_sky.html#class-sky\"><span class=\"std std-ref\">Sky</span></a>, if you set <a class=\"reference internal\" href=\"class_projectsettings.html#class-projectsettings-property-rendering-reflections-sky-reflections-texture-array-reflections\"><span class=\"std std-ref\">ProjectSettings.rendering/reflections/sky_reflections/texture_array_reflections</span></a> to <code class=\"docutils literal notranslate\"><span class=\"pre\">true</span></code>.</p>\n<p>To create such a texture file yourself, reimport your image files using the Godot Editor import presets.</p>\n<p><strong>Note:</strong> <strong>CubemapArray</strong> is not supported in the OpenGL 3 rendering backend.</p>\n"
            },
            "class_curve": {
                "url": "https://docs.godotengine.org/en/4.1/classes/class_curve.html",
                "title": "Curve",
                "blurb": "<p><strong>Inherits:</strong> <a class=\"reference internal\" href=\"class_resource.html#class-resource\"><span class=\"std std-ref\">Resource</span></a> <strong>&lt;</strong> <a class=\"reference internal\" href=\"class_refcounted.html#class-refcounted\"><span class=\"std std-ref\">RefCounted</span></a> <strong>&lt;</strong> <a class=\"reference internal\" href=\"class_object.html#class-object\"><span class=\"std std-ref\">Object</span></a></p><p>A mathematic curve.</p>",
                "description": "\n\n<p>A curve that can be saved and re-used for other objects. By default, it ranges between <code class=\"docutils literal notranslate\"><span class=\"pre\">0</span></code> and <code class=\"docutils literal notranslate\"><span class=\"pre\">1</span></code> on the Y axis and positions points relative to the <code class=\"docutils literal notranslate\"><span class=\"pre\">0.5</span></code> Y position.</p>\n<p>See also <a class=\"reference internal\" href=\"class_gradient.html#class-gradient\"><span class=\"std std-ref\">Gradient</span></a> which is designed for color interpolation. See also <a class=\"reference internal\" href=\"class_curve2d.html#class-curve2d\"><span class=\"std std-ref\">Curve2D</span></a> and <a class=\"reference internal\" href=\"class_curve3d.html#class-curve3d\"><span class=\"std std-ref\">Curve3D</span></a>.</p>\n"
            },
            "class_curve2d": {
                "url": "https://docs.godotengine.org/en/4.1/classes/class_curve2d.html",
                "title": "Curve2D",
                "blurb": "<p><strong>Inherits:</strong> <a class=\"reference internal\" href=\"class_resource.html#class-resource\"><span class=\"std std-ref\">Resource</span></a> <strong>&lt;</strong> <a class=\"reference internal\" href=\"class_refcounted.html#class-refcounted\"><span class=\"std std-ref\">RefCounted</span></a> <strong>&lt;</strong> <a class=\"reference internal\" href=\"class_object.html#class-object\"><span class=\"std std-ref\">Object</span></a></p><p>Describes a Bézier curve in 2D space.</p>",
                "description": "\n\n<p>This class describes a Bézier curve in 2D space. It is mainly used to give a shape to a <a class=\"reference internal\" href=\"class_path2d.html#class-path2d\"><span class=\"std std-ref\">Path2D</span></a>, but can be manually sampled for other purposes.</p>\n<p>It keeps a cache of precalculated points along the curve, to speed up further calculations.</p>\n"
            },
            "class_curve3d": {
                "url": "https://docs.godotengine.org/en/4.1/classes/class_curve3d.html",
                "title": "Curve3D",
                "blurb": "<p><strong>Inherits:</strong> <a class=\"reference internal\" href=\"class_resource.html#class-resource\"><span class=\"std std-ref\">Resource</span></a> <strong>&lt;</strong> <a class=\"reference internal\" href=\"class_refcounted.html#class-refcounted\"><span class=\"std std-ref\">RefCounted</span></a> <strong>&lt;</strong> <a class=\"reference internal\" href=\"class_object.html#class-object\"><span class=\"std std-ref\">Object</span></a></p><p>Describes a Bézier curve in 3D space.</p>",
                "description": "\n\n<p>This class describes a Bézier curve in 3D space. It is mainly used to give a shape to a <a class=\"reference internal\" href=\"class_path3d.html#class-path3d\"><span class=\"std std-ref\">Path3D</span></a>, but can be manually sampled for other purposes.</p>\n<p>It keeps a cache of precalculated points along the curve, to speed up further calculations.</p>\n"
            },
            "class_curvetexture": {
                "url": "https://docs.godotengine.org/en/4.1/classes/class_curvetexture.html",
                "title": "CurveTexture",
                "blurb": "<p><strong>Inherits:</strong> <a class=\"reference internal\" href=\"class_texture2d.html#class-texture2d\"><span class=\"std std-ref\">Texture2D</span></a> <strong>&lt;</strong> <a class=\"reference internal\" href=\"class_texture.html#class-texture\"><span class=\"std std-ref\">Texture</span></a> <strong>&lt;</strong> <a class=\"reference internal\" href=\"class_resource.html#class-resource\"><span class=\"std std-ref\">Resource</span></a> <strong>&lt;</strong> <a class=\"reference internal\" href=\"class_refcounted.html#class-refcounted\"><span class=\"std std-ref\">RefCounted</span></a> <strong>&lt;</strong> <a class=\"reference internal\" href=\"class_object.html#class-object\"><span class=\"std std-ref\">Object</span></a></p><p>A texture that shows a curve.</p>",
                "description": "\n\n<p>Renders a given <a class=\"reference internal\" href=\"class_curve.html#class-curve\"><span class=\"std std-ref\">Curve</span></a> provided to it. Simplifies the task of drawing curves and/or saving them as image files.</p>\n<p>If you need to store up to 3 curves within a single texture, use <a class=\"reference internal\" href=\"class_curvexyztexture.html#class-curvexyztexture\"><span class=\"std std-ref\">CurveXYZTexture</span></a> instead. See also <a class=\"reference internal\" href=\"class_gradienttexture1d.html#class-gradienttexture1d\"><span class=\"std std-ref\">GradientTexture1D</span></a> and <a class=\"reference internal\" href=\"class_gradienttexture2d.html#class-gradienttexture2d\"><span class=\"std std-ref\">GradientTexture2D</span></a>.</p>\n"
            },
            "class_curvexyztexture": {
                "url": "https://docs.godotengine.org/en/4.1/classes/class_curvexyztexture.html",
                "title": "CurveXYZTexture",
                "blurb": "<p><strong>Inherits:</strong> <a class=\"reference internal\" href=\"class_texture2d.html#class-texture2d\"><span class=\"std std-ref\">Texture2D</span></a> <strong>&lt;</strong> <a class=\"reference internal\" href=\"class_texture.html#class-texture\"><span class=\"std std-ref\">Texture</span></a> <strong>&lt;</strong> <a class=\"reference internal\" href=\"class_resource.html#class-resource\"><span class=\"std std-ref\">Resource</span></a> <strong>&lt;</strong> <a class=\"reference internal\" href=\"class_refcounted.html#class-refcounted\"><span class=\"std std-ref\">RefCounted</span></a> <strong>&lt;</strong> <a class=\"reference internal\" href=\"class_object.html#class-object\"><span class=\"std std-ref\">Object</span></a></p><p>A texture that shows 3 different curves (stored on the red, green and blue color channels).</p>",
                "description": "\n\n<p>Renders 3 given <a class=\"reference internal\" href=\"class_curve.html#class-curve\"><span class=\"std std-ref\">Curve</span></a>s provided to it, on the red, green and blue channels respectively. Compared to using separate <a class=\"reference internal\" href=\"class_curvetexture.html#class-curvetexture\"><span class=\"std std-ref\">CurveTexture</span></a>s, this further simplifies the task of drawing curves and/or saving them as image files.</p>\n<p>If you only need to store one curve within a single texture, use <a class=\"reference internal\" href=\"class_curvetexture.html#class-curvetexture\"><span class=\"std std-ref\">CurveTexture</span></a> instead. See also <a class=\"reference internal\" href=\"class_gradienttexture1d.html#class-gradienttexture1d\"><span class=\"std std-ref\">GradientTexture1D</span></a> and <a class=\"reference internal\" href=\"class_gradienttexture2d.html#class-gradienttexture2d\"><span class=\"std std-ref\">GradientTexture2D</span></a>.</p>\n"
            },
            "class_cylindermesh": {
                "url": "https://docs.godotengine.org/en/4.1/classes/class_cylindermesh.html",
                "title": "CylinderMesh",
                "blurb": "<p><strong>Inherits:</strong> <a class=\"reference internal\" href=\"class_primitivemesh.html#class-primitivemesh\"><span class=\"std std-ref\">PrimitiveMesh</span></a> <strong>&lt;</strong> <a class=\"reference internal\" href=\"class_mesh.html#class-mesh\"><span class=\"std std-ref\">Mesh</span></a> <strong>&lt;</strong> <a class=\"reference internal\" href=\"class_resource.html#class-resource\"><span class=\"std std-ref\">Resource</span></a> <strong>&lt;</strong> <a class=\"reference internal\" href=\"class_refcounted.html#class-refcounted\"><span class=\"std std-ref\">RefCounted</span></a> <strong>&lt;</strong> <a class=\"reference internal\" href=\"class_object.html#class-object\"><span class=\"std std-ref\">Object</span></a></p><p>Class representing a cylindrical <a class=\"reference internal\" href=\"class_primitivemesh.html#class-primitivemesh\"><span class=\"std std-ref\">PrimitiveMesh</span></a>.</p>",
                "description": "\n\n<p>Class representing a cylindrical <a class=\"reference internal\" href=\"class_primitivemesh.html#class-primitivemesh\"><span class=\"std std-ref\">PrimitiveMesh</span></a>. This class can be used to create cones by setting either the <a class=\"reference internal\" href=\"#class-cylindermesh-property-top-radius\"><span class=\"std std-ref\">top_radius</span></a> or <a class=\"reference internal\" href=\"#class-cylindermesh-property-bottom-radius\"><span class=\"std std-ref\">bottom_radius</span></a> properties to <code class=\"docutils literal notranslate\"><span class=\"pre\">0.0</span></code>.</p>\n"
            },
            "class_cylindershape3d": {
                "url": "https://docs.godotengine.org/en/4.1/classes/class_cylindershape3d.html",
                "title": "CylinderShape3D",
                "blurb": "<p><strong>Inherits:</strong> <a class=\"reference internal\" href=\"class_shape3d.html#class-shape3d\"><span class=\"std std-ref\">Shape3D</span></a> <strong>&lt;</strong> <a class=\"reference internal\" href=\"class_resource.html#class-resource\"><span class=\"std std-ref\">Resource</span></a> <strong>&lt;</strong> <a class=\"reference internal\" href=\"class_refcounted.html#class-refcounted\"><span class=\"std std-ref\">RefCounted</span></a> <strong>&lt;</strong> <a class=\"reference internal\" href=\"class_object.html#class-object\"><span class=\"std std-ref\">Object</span></a></p><p>A 3D cylinder shape used for physics collision.</p>",
                "description": "\n\n<p>A 2D capsule shape, intended for use in physics. Usually used to provide a shape for a <a class=\"reference internal\" href=\"class_collisionshape3d.html#class-collisionshape3d\"><span class=\"std std-ref\">CollisionShape3D</span></a>.</p>\n<p><strong>Note:</strong> There are several known bugs with cylinder collision shapes. Using <a class=\"reference internal\" href=\"class_capsuleshape3d.html#class-capsuleshape3d\"><span class=\"std std-ref\">CapsuleShape3D</span></a> or <a class=\"reference internal\" href=\"class_boxshape3d.html#class-boxshape3d\"><span class=\"std std-ref\">BoxShape3D</span></a> instead is recommended.</p>\n<p><strong>Performance:</strong> <strong>CylinderShape3D</strong> is fast to check collisions against, but it is slower than <a class=\"reference internal\" href=\"class_capsuleshape3d.html#class-capsuleshape3d\"><span class=\"std std-ref\">CapsuleShape3D</span></a>, <a class=\"reference internal\" href=\"class_boxshape3d.html#class-boxshape3d\"><span class=\"std std-ref\">BoxShape3D</span></a>, and <strong>CylinderShape3D</strong>.</p>\n"
            },
            "class_editornode3dgizmoplugin": {
                "url": "https://docs.godotengine.org/en/4.1/classes/class_editornode3dgizmoplugin.html",
                "title": "EditorNode3DGizmoPlugin",
                "blurb": "<p><strong>Inherits:</strong> <a class=\"reference internal\" href=\"class_resource.html#class-resource\"><span class=\"std std-ref\">Resource</span></a> <strong>&lt;</strong> <a class=\"reference internal\" href=\"class_refcounted.html#class-refcounted\"><span class=\"std std-ref\">RefCounted</span></a> <strong>&lt;</strong> <a class=\"reference internal\" href=\"class_object.html#class-object\"><span class=\"std std-ref\">Object</span></a></p><p>A class used by the editor to define Node3D gizmo types.</p>",
                "description": "\n\n<p><strong>EditorNode3DGizmoPlugin</strong> allows you to define a new type of Gizmo. There are two main ways to do so: extending <strong>EditorNode3DGizmoPlugin</strong> for the simpler gizmos, or creating a new <a class=\"reference internal\" href=\"class_editornode3dgizmo.html#class-editornode3dgizmo\"><span class=\"std std-ref\">EditorNode3DGizmo</span></a> type. See the tutorial in the documentation for more info.</p>\n<p>To use <strong>EditorNode3DGizmoPlugin</strong>, register it using the <a class=\"reference internal\" href=\"class_editorplugin.html#class-editorplugin-method-add-node-3d-gizmo-plugin\"><span class=\"std std-ref\">EditorPlugin.add_node_3d_gizmo_plugin</span></a> method first.</p>\n"
            },
            "class_editorsettings": {
                "url": "https://docs.godotengine.org/en/4.1/classes/class_editorsettings.html",
                "title": "EditorSettings",
                "blurb": "<p><strong>Inherits:</strong> <a class=\"reference internal\" href=\"class_resource.html#class-resource\"><span class=\"std std-ref\">Resource</span></a> <strong>&lt;</strong> <a class=\"reference internal\" href=\"class_refcounted.html#class-refcounted\"><span class=\"std std-ref\">RefCounted</span></a> <strong>&lt;</strong> <a class=\"reference internal\" href=\"class_object.html#class-object\"><span class=\"std std-ref\">Object</span></a></p><p>Object that holds the project-independent editor settings.</p>",
                "description": "\n\n<p>Object that holds the project-independent editor settings. These settings are generally visible in the <strong>Editor &gt; Editor Settings</strong> menu.</p>\n<p>Property names use slash delimiters to distinguish sections. Setting values can be of any <a class=\"reference internal\" href=\"class_variant.html#class-variant\"><span class=\"std std-ref\">Variant</span></a> type. It's recommended to use <code class=\"docutils literal notranslate\"><span class=\"pre\">snake_case</span></code> for editor settings to be consistent with the Godot editor itself.</p>\n<p>Accessing the settings can be done using the following methods, such as:</p>\n<div class=\"sphinx-tabs docutils container\">\n<div aria-label=\"Tabbed content\" class=\"closeable\" role=\"tablist\"><button aria-controls=\"panel-0-R0RTY3JpcHQ=\" aria-selected=\"true\" class=\"sphinx-tabs-tab code-tab group-tab\" id=\"tab-0-R0RTY3JpcHQ=\" name=\"R0RTY3JpcHQ=\" role=\"tab\" tabindex=\"0\">GDScript</button><button aria-controls=\"panel-0-QyM=\" aria-selected=\"false\" class=\"sphinx-tabs-tab code-tab group-tab\" id=\"tab-0-QyM=\" name=\"QyM=\" role=\"tab\" tabindex=\"-1\">C#</button></div><div aria-labelledby=\"tab-0-R0RTY3JpcHQ=\" class=\"sphinx-tabs-panel code-tab group-tab\" id=\"panel-0-R0RTY3JpcHQ=\" name=\"R0RTY3JpcHQ=\" role=\"tabpanel\" tabindex=\"0\"><div class=\"highlight-gdscript notranslate\"><div class=\"highlight\"><pre><span></span><span class=\"k\">var</span> <span class=\"n\">settings</span> <span class=\"o\">=</span> <span class=\"n\">get_editor_interface</span><span class=\"p\">()</span><span class=\"o\">.</span><span class=\"n\">get_editor_settings</span><span class=\"p\">()</span>\n<span class=\"c1\"># `settings.set(\"some/property\", 10)` also works as this class overrides `_set()` internally.</span>\n<span class=\"n\">settings</span><span class=\"o\">.</span><span class=\"n\">set_setting</span><span class=\"p\">(</span><span class=\"s2\">\"some/property\"</span><span class=\"p\">,</span> <span class=\"mi\">10</span><span class=\"p\">)</span>\n<span class=\"c1\"># `settings.get(\"some/property\")` also works as this class overrides `_get()` internally.</span>\n<span class=\"n\">settings</span><span class=\"o\">.</span><span class=\"n\">get_setting</span><span class=\"p\">(</span><span class=\"s2\">\"some/property\"</span><span class=\"p\">)</span>\n<span class=\"k\">var</span> <span class=\"n\">list_of_settings</span> <span class=\"o\">=</span> <span class=\"n\">settings</span><span class=\"o\">.</span><span class=\"n\">get_property_list</span><span class=\"p\">()</span>\n</pre></div>\n</div>\n</div><div aria-labelledby=\"tab-0-QyM=\" class=\"sphinx-tabs-panel code-tab group-tab\" hidden=\"true\" id=\"panel-0-QyM=\" name=\"QyM=\" role=\"tabpanel\" tabindex=\"0\"><div class=\"highlight-csharp notranslate\"><div class=\"highlight\"><pre><span></span><span class=\"n\">EditorSettings</span><span class=\"w\"> </span><span class=\"n\">settings</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"n\">GetEditorInterface</span><span class=\"p\">().</span><span class=\"n\">GetEditorSettings</span><span class=\"p\">();</span>\n<span class=\"c1\">// `settings.set(\"some/property\", value)` also works as this class overrides `_set()` internally.</span>\n<span class=\"n\">settings</span><span class=\"p\">.</span><span class=\"n\">SetSetting</span><span class=\"p\">(</span><span class=\"s\">\"some/property\"</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">Value</span><span class=\"p\">);</span>\n<span class=\"c1\">// `settings.get(\"some/property\", value)` also works as this class overrides `_get()` internally.</span>\n<span class=\"n\">settings</span><span class=\"p\">.</span><span class=\"n\">GetSetting</span><span class=\"p\">(</span><span class=\"s\">\"some/property\"</span><span class=\"p\">);</span>\n<span class=\"n\">Godot</span><span class=\"p\">.</span><span class=\"n\">Collections</span><span class=\"p\">.</span><span class=\"n\">Array</span><span class=\"o\">&lt;</span><span class=\"n\">Godot</span><span class=\"p\">.</span><span class=\"n\">Collections</span><span class=\"p\">.</span><span class=\"n\">Dictionary</span><span class=\"o\">&gt;</span><span class=\"w\"> </span><span class=\"n\">listOfSettings</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"n\">settings</span><span class=\"p\">.</span><span class=\"n\">GetPropertyList</span><span class=\"p\">();</span>\n</pre></div>\n</div>\n</div></div>\n<p><strong>Note:</strong> This class shouldn't be instantiated directly. Instead, access the singleton using <a class=\"reference internal\" href=\"class_editorinterface.html#class-editorinterface-method-get-editor-settings\"><span class=\"std std-ref\">EditorInterface.get_editor_settings</span></a>.</p>\n"
            },
            "class_editorsyntaxhighlighter": {
                "url": "https://docs.godotengine.org/en/4.1/classes/class_editorsyntaxhighlighter.html",
                "title": "EditorSyntaxHighlighter",
                "blurb": "<p><strong>Inherits:</strong> <a class=\"reference internal\" href=\"class_syntaxhighlighter.html#class-syntaxhighlighter\"><span class=\"std std-ref\">SyntaxHighlighter</span></a> <strong>&lt;</strong> <a class=\"reference internal\" href=\"class_resource.html#class-resource\"><span class=\"std std-ref\">Resource</span></a> <strong>&lt;</strong> <a class=\"reference internal\" href=\"class_refcounted.html#class-refcounted\"><span class=\"std std-ref\">RefCounted</span></a> <strong>&lt;</strong> <a class=\"reference internal\" href=\"class_object.html#class-object\"><span class=\"std std-ref\">Object</span></a></p><p>Base class for <a class=\"reference internal\" href=\"class_syntaxhighlighter.html#class-syntaxhighlighter\"><span class=\"std std-ref\">SyntaxHighlighter</span></a> used by the <a class=\"reference internal\" href=\"class_scripteditor.html#class-scripteditor\"><span class=\"std std-ref\">ScriptEditor</span></a>.</p>",
                "description": "\n\n<p>Base class that all <a class=\"reference internal\" href=\"class_syntaxhighlighter.html#class-syntaxhighlighter\"><span class=\"std std-ref\">SyntaxHighlighter</span></a>s used by the <a class=\"reference internal\" href=\"class_scripteditor.html#class-scripteditor\"><span class=\"std std-ref\">ScriptEditor</span></a> extend from.</p>\n<p>Add a syntax highlighter to an individual script by calling <a class=\"reference internal\" href=\"class_scripteditorbase.html#class-scripteditorbase-method-add-syntax-highlighter\"><span class=\"std std-ref\">ScriptEditorBase.add_syntax_highlighter</span></a>. To apply to all scripts on open, call <a class=\"reference internal\" href=\"class_scripteditor.html#class-scripteditor-method-register-syntax-highlighter\"><span class=\"std std-ref\">ScriptEditor.register_syntax_highlighter</span></a></p>\n"
            },
            "class_environment": {
                "url": "https://docs.godotengine.org/en/4.1/classes/class_environment.html",
                "title": "Environment",
                "blurb": "<p><strong>Inherits:</strong> <a class=\"reference internal\" href=\"class_resource.html#class-resource\"><span class=\"std std-ref\">Resource</span></a> <strong>&lt;</strong> <a class=\"reference internal\" href=\"class_refcounted.html#class-refcounted\"><span class=\"std std-ref\">RefCounted</span></a> <strong>&lt;</strong> <a class=\"reference internal\" href=\"class_object.html#class-object\"><span class=\"std std-ref\">Object</span></a></p><p>Resource for environment nodes (like <a class=\"reference internal\" href=\"class_worldenvironment.html#class-worldenvironment\"><span class=\"std std-ref\">WorldEnvironment</span></a>) that define multiple rendering options.</p>",
                "description": "\n\n<p>Resource for environment nodes (like <a class=\"reference internal\" href=\"class_worldenvironment.html#class-worldenvironment\"><span class=\"std std-ref\">WorldEnvironment</span></a>) that define multiple environment operations (such as background <a class=\"reference internal\" href=\"class_sky.html#class-sky\"><span class=\"std std-ref\">Sky</span></a> or <a class=\"reference internal\" href=\"class_color.html#class-color\"><span class=\"std std-ref\">Color</span></a>, ambient light, fog, depth-of-field...). These parameters affect the final render of the scene. The order of these operations is:</p>\n<ul class=\"simple\">\n<li><p>Depth of Field Blur</p></li>\n<li><p>Glow</p></li>\n<li><p>Tonemap (Auto Exposure)</p></li>\n<li><p>Adjustments</p></li>\n</ul>\n"
            },
            "class_fastnoiselite": {
                "url": "https://docs.godotengine.org/en/4.1/classes/class_fastnoiselite.html",
                "title": "FastNoiseLite",
                "blurb": "<p><strong>Inherits:</strong> <a class=\"reference internal\" href=\"class_noise.html#class-noise\"><span class=\"std std-ref\">Noise</span></a> <strong>&lt;</strong> <a class=\"reference internal\" href=\"class_resource.html#class-resource\"><span class=\"std std-ref\">Resource</span></a> <strong>&lt;</strong> <a class=\"reference internal\" href=\"class_refcounted.html#class-refcounted\"><span class=\"std std-ref\">RefCounted</span></a> <strong>&lt;</strong> <a class=\"reference internal\" href=\"class_object.html#class-object\"><span class=\"std std-ref\">Object</span></a></p><p>Generates noise using the FastNoiseLite library.</p>",
                "description": "\n\n<p>This class generates noise using the FastNoiseLite library, which is a collection of several noise algorithms including Cellular, Perlin, Value, and more.</p>\n<p>Most generated noise values are in the range of <code class=\"docutils literal notranslate\"><span class=\"pre\">[-1,1]</span></code>, however not always. Some of the cellular noise algorithms return results above <code class=\"docutils literal notranslate\"><span class=\"pre\">1</span></code>.</p>\n"
            },
            "class_fogmaterial": {
                "url": "https://docs.godotengine.org/en/4.1/classes/class_fogmaterial.html",
                "title": "FogMaterial",
                "blurb": "<p><strong>Inherits:</strong> <a class=\"reference internal\" href=\"class_material.html#class-material\"><span class=\"std std-ref\">Material</span></a> <strong>&lt;</strong> <a class=\"reference internal\" href=\"class_resource.html#class-resource\"><span class=\"std std-ref\">Resource</span></a> <strong>&lt;</strong> <a class=\"reference internal\" href=\"class_refcounted.html#class-refcounted\"><span class=\"std std-ref\">RefCounted</span></a> <strong>&lt;</strong> <a class=\"reference internal\" href=\"class_object.html#class-object\"><span class=\"std std-ref\">Object</span></a></p><p><a class=\"reference internal\" href=\"class_material.html#class-material\"><span class=\"std std-ref\">Material</span></a> used with a <a class=\"reference internal\" href=\"class_fogvolume.html#class-fogvolume\"><span class=\"std std-ref\">FogVolume</span></a> to draw things with the volumetric fog effect.</p>",
                "description": "\n\n<p>A <a class=\"reference internal\" href=\"class_material.html#class-material\"><span class=\"std std-ref\">Material</span></a> resource that can be used by <a class=\"reference internal\" href=\"class_fogvolume.html#class-fogvolume\"><span class=\"std std-ref\">FogVolume</span></a>s to draw volumetric effects.</p>\n<p>If you need more advanced effects, use a custom <a class=\"reference internal\" href=\"../tutorials/shaders/shader_reference/fog_shader.html\"><span class=\"doc\">fog shader</span></a>.</p>\n"
            },
            "class_font": {
                "url": "https://docs.godotengine.org/en/4.1/classes/class_font.html",
                "title": "Font",
                "blurb": "<p><strong>Inherits:</strong> <a class=\"reference internal\" href=\"class_resource.html#class-resource\"><span class=\"std std-ref\">Resource</span></a> <strong>&lt;</strong> <a class=\"reference internal\" href=\"class_refcounted.html#class-refcounted\"><span class=\"std std-ref\">RefCounted</span></a> <strong>&lt;</strong> <a class=\"reference internal\" href=\"class_object.html#class-object\"><span class=\"std std-ref\">Object</span></a></p><p><strong>Inherited By:</strong> <a class=\"reference internal\" href=\"class_fontfile.html#class-fontfile\"><span class=\"std std-ref\">FontFile</span></a>, <a class=\"reference internal\" href=\"class_fontvariation.html#class-fontvariation\"><span class=\"std std-ref\">FontVariation</span></a>, <a class=\"reference internal\" href=\"class_systemfont.html#class-systemfont\"><span class=\"std std-ref\">SystemFont</span></a></p><p>Abstract base class for fonts and font variations.</p>",
                "description": "\n\n<p>Abstract base class for different font types. It has methods for drawing text and font character introspection.</p>\n"
            },
            "class_fontfile": {
                "url": "https://docs.godotengine.org/en/4.1/classes/class_fontfile.html",
                "title": "FontFile",
                "blurb": "<p><strong>Inherits:</strong> <a class=\"reference internal\" href=\"class_font.html#class-font\"><span class=\"std std-ref\">Font</span></a> <strong>&lt;</strong> <a class=\"reference internal\" href=\"class_resource.html#class-resource\"><span class=\"std std-ref\">Resource</span></a> <strong>&lt;</strong> <a class=\"reference internal\" href=\"class_refcounted.html#class-refcounted\"><span class=\"std std-ref\">RefCounted</span></a> <strong>&lt;</strong> <a class=\"reference internal\" href=\"class_object.html#class-object\"><span class=\"std std-ref\">Object</span></a></p><p>Holds font source data and prerendered glyph cache, imported from a dynamic or a bitmap font.</p>",
                "description": "\n\n<p><strong>FontFile</strong> contains a set of glyphs to represent Unicode characters imported from a font file, as well as a cache of rasterized glyphs, and a set of fallback <a class=\"reference internal\" href=\"class_font.html#class-font\"><span class=\"std std-ref\">Font</span></a>s to use.</p>\n<p>Use <a class=\"reference internal\" href=\"class_fontvariation.html#class-fontvariation\"><span class=\"std std-ref\">FontVariation</span></a> to access specific OpenType variation of the font, create simulated bold / slanted version, and draw lines of text.</p>\n<p>For more complex text processing, use <a class=\"reference internal\" href=\"class_fontvariation.html#class-fontvariation\"><span class=\"std std-ref\">FontVariation</span></a> in conjunction with <a class=\"reference internal\" href=\"class_textline.html#class-textline\"><span class=\"std std-ref\">TextLine</span></a> or <a class=\"reference internal\" href=\"class_textparagraph.html#class-textparagraph\"><span class=\"std std-ref\">TextParagraph</span></a>.</p>\n<p>Supported font formats:</p>\n<ul class=\"simple\">\n<li><p>Dynamic font importer: TrueType (.ttf), TrueType collection (.ttc), OpenType (.otf), OpenType collection (.otc), WOFF (.woff), WOFF2 (.woff2), Type 1 (.pfb, .pfm).</p></li>\n<li><p>Bitmap font importer: AngelCode BMFont (.fnt, .font), text and binary (version 3) format variants.</p></li>\n<li><p>Monospace image font importer: All supported image formats.</p></li>\n</ul>\n<p><strong>Note:</strong> A character is a symbol that represents an item (letter, digit etc.) in an abstract way.</p>\n<p><strong>Note:</strong> A glyph is a bitmap or a shape used to draw one or more characters in a context-dependent manner. Glyph indices are bound to the specific font data source.</p>\n<p><strong>Note:</strong> If none of the font data sources contain glyphs for a character used in a string, the character in question will be replaced with a box displaying its hexadecimal code.</p>\n<div class=\"sphinx-tabs docutils container\">\n<div aria-label=\"Tabbed content\" class=\"closeable\" role=\"tablist\"><button aria-controls=\"panel-0-R0RTY3JpcHQ=\" aria-selected=\"true\" class=\"sphinx-tabs-tab code-tab group-tab\" id=\"tab-0-R0RTY3JpcHQ=\" name=\"R0RTY3JpcHQ=\" role=\"tab\" tabindex=\"0\">GDScript</button><button aria-controls=\"panel-0-QyM=\" aria-selected=\"false\" class=\"sphinx-tabs-tab code-tab group-tab\" id=\"tab-0-QyM=\" name=\"QyM=\" role=\"tab\" tabindex=\"-1\">C#</button></div><div aria-labelledby=\"tab-0-R0RTY3JpcHQ=\" class=\"sphinx-tabs-panel code-tab group-tab\" id=\"panel-0-R0RTY3JpcHQ=\" name=\"R0RTY3JpcHQ=\" role=\"tabpanel\" tabindex=\"0\"><div class=\"highlight-gdscript notranslate\"><div class=\"highlight\"><pre><span></span><span class=\"k\">var</span> <span class=\"n\">f</span> <span class=\"o\">=</span> <span class=\"nb\">load</span><span class=\"p\">(</span><span class=\"s2\">\"res://BarlowCondensed-Bold.ttf\"</span><span class=\"p\">)</span>\n<span class=\"o\">$</span><span class=\"n\">Label</span><span class=\"o\">.</span><span class=\"n\">add_theme_font_override</span><span class=\"p\">(</span><span class=\"s2\">\"font\"</span><span class=\"p\">,</span> <span class=\"n\">f</span><span class=\"p\">)</span>\n<span class=\"o\">$</span><span class=\"n\">Label</span><span class=\"o\">.</span><span class=\"n\">add_theme_font_size_override</span><span class=\"p\">(</span><span class=\"s2\">\"font_size\"</span><span class=\"p\">,</span> <span class=\"mi\">64</span><span class=\"p\">)</span>\n</pre></div>\n</div>\n</div><div aria-labelledby=\"tab-0-QyM=\" class=\"sphinx-tabs-panel code-tab group-tab\" hidden=\"true\" id=\"panel-0-QyM=\" name=\"QyM=\" role=\"tabpanel\" tabindex=\"0\"><div class=\"highlight-csharp notranslate\"><div class=\"highlight\"><pre><span></span><span class=\"kt\">var</span><span class=\"w\"> </span><span class=\"n\">f</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"n\">ResourceLoader</span><span class=\"p\">.</span><span class=\"n\">Load</span><span class=\"o\">&lt;</span><span class=\"n\">FontFile</span><span class=\"o\">&gt;</span><span class=\"p\">(</span><span class=\"s\">\"res://BarlowCondensed-Bold.ttf\"</span><span class=\"p\">);</span>\n<span class=\"n\">GetNode</span><span class=\"p\">(</span><span class=\"s\">\"Label\"</span><span class=\"p\">).</span><span class=\"n\">AddThemeFontOverride</span><span class=\"p\">(</span><span class=\"s\">\"font\"</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">f</span><span class=\"p\">);</span>\n<span class=\"n\">GetNode</span><span class=\"p\">(</span><span class=\"s\">\"Label\"</span><span class=\"p\">).</span><span class=\"n\">AddThemeFontSizeOverride</span><span class=\"p\">(</span><span class=\"s\">\"font_size\"</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"m\">64</span><span class=\"p\">);</span>\n</pre></div>\n</div>\n</div></div>\n"
            },
            "class_fontvariation": {
                "url": "https://docs.godotengine.org/en/4.1/classes/class_fontvariation.html",
                "title": "FontVariation",
                "blurb": "<p><strong>Inherits:</strong> <a class=\"reference internal\" href=\"class_font.html#class-font\"><span class=\"std std-ref\">Font</span></a> <strong>&lt;</strong> <a class=\"reference internal\" href=\"class_resource.html#class-resource\"><span class=\"std std-ref\">Resource</span></a> <strong>&lt;</strong> <a class=\"reference internal\" href=\"class_refcounted.html#class-refcounted\"><span class=\"std std-ref\">RefCounted</span></a> <strong>&lt;</strong> <a class=\"reference internal\" href=\"class_object.html#class-object\"><span class=\"std std-ref\">Object</span></a></p><p>A variation of a font with additional settings.</p>",
                "description": "\n\n<p>Provides OpenType variations, simulated bold / slant, and additional font settings like OpenType features and extra spacing.</p>\n<p>To use simulated bold font variant:</p>\n<div class=\"sphinx-tabs docutils container\">\n<div aria-label=\"Tabbed content\" class=\"closeable\" role=\"tablist\"><button aria-controls=\"panel-0-R0RTY3JpcHQ=\" aria-selected=\"true\" class=\"sphinx-tabs-tab code-tab group-tab\" id=\"tab-0-R0RTY3JpcHQ=\" name=\"R0RTY3JpcHQ=\" role=\"tab\" tabindex=\"0\">GDScript</button><button aria-controls=\"panel-0-QyM=\" aria-selected=\"false\" class=\"sphinx-tabs-tab code-tab group-tab\" id=\"tab-0-QyM=\" name=\"QyM=\" role=\"tab\" tabindex=\"-1\">C#</button></div><div aria-labelledby=\"tab-0-R0RTY3JpcHQ=\" class=\"sphinx-tabs-panel code-tab group-tab\" id=\"panel-0-R0RTY3JpcHQ=\" name=\"R0RTY3JpcHQ=\" role=\"tabpanel\" tabindex=\"0\"><div class=\"highlight-gdscript notranslate\"><div class=\"highlight\"><pre><span></span><span class=\"k\">var</span> <span class=\"n\">fv</span> <span class=\"o\">=</span> <span class=\"n\">FontVariation</span><span class=\"o\">.</span><span class=\"n\">new</span><span class=\"p\">()</span>\n<span class=\"n\">fv</span><span class=\"o\">.</span><span class=\"n\">set_base_font</span><span class=\"p\">(</span><span class=\"nb\">load</span><span class=\"p\">(</span><span class=\"s2\">\"res://BarlowCondensed-Regular.ttf\"</span><span class=\"p\">))</span>\n<span class=\"n\">fv</span><span class=\"o\">.</span><span class=\"n\">set_variation_embolden</span><span class=\"p\">(</span><span class=\"mf\">1.2</span><span class=\"p\">)</span>\n<span class=\"o\">$</span><span class=\"n\">Label</span><span class=\"o\">.</span><span class=\"n\">add_theme_font_override</span><span class=\"p\">(</span><span class=\"s2\">\"font\"</span><span class=\"p\">,</span> <span class=\"n\">fv</span><span class=\"p\">)</span>\n<span class=\"o\">$</span><span class=\"n\">Label</span><span class=\"o\">.</span><span class=\"n\">add_theme_font_size_override</span><span class=\"p\">(</span><span class=\"s2\">\"font_size\"</span><span class=\"p\">,</span> <span class=\"mi\">64</span><span class=\"p\">)</span>\n</pre></div>\n</div>\n</div><div aria-labelledby=\"tab-0-QyM=\" class=\"sphinx-tabs-panel code-tab group-tab\" hidden=\"true\" id=\"panel-0-QyM=\" name=\"QyM=\" role=\"tabpanel\" tabindex=\"0\"><div class=\"highlight-csharp notranslate\"><div class=\"highlight\"><pre><span></span><span class=\"kt\">var</span><span class=\"w\"> </span><span class=\"n\">fv</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"k\">new</span><span class=\"w\"> </span><span class=\"n\">FontVariation</span><span class=\"p\">();</span>\n<span class=\"n\">fv</span><span class=\"p\">.</span><span class=\"n\">SetBaseFont</span><span class=\"p\">(</span><span class=\"n\">ResourceLoader</span><span class=\"p\">.</span><span class=\"n\">Load</span><span class=\"o\">&lt;</span><span class=\"n\">FontFile</span><span class=\"o\">&gt;</span><span class=\"p\">(</span><span class=\"s\">\"res://BarlowCondensed-Regular.ttf\"</span><span class=\"p\">));</span>\n<span class=\"n\">fv</span><span class=\"p\">.</span><span class=\"n\">SetVariationEmbolden</span><span class=\"p\">(</span><span class=\"m\">1.2</span><span class=\"p\">);</span>\n<span class=\"n\">GetNode</span><span class=\"p\">(</span><span class=\"s\">\"Label\"</span><span class=\"p\">).</span><span class=\"n\">AddThemeFontOverride</span><span class=\"p\">(</span><span class=\"s\">\"font\"</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">fv</span><span class=\"p\">);</span>\n<span class=\"n\">GetNode</span><span class=\"p\">(</span><span class=\"s\">\"Label\"</span><span class=\"p\">).</span><span class=\"n\">AddThemeFontSizeOverride</span><span class=\"p\">(</span><span class=\"s\">\"font_size\"</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"m\">64</span><span class=\"p\">);</span>\n</pre></div>\n</div>\n</div></div>\n<p>To set the coordinate of multiple variation axes:</p>\n<div class=\"highlight-gdscript notranslate\"><div class=\"highlight\"><pre><span></span><span class=\"k\">var</span> <span class=\"n\">fv</span> <span class=\"o\">=</span> <span class=\"n\">FontVariation</span><span class=\"o\">.</span><span class=\"n\">new</span><span class=\"p\">();</span>\n<span class=\"k\">var</span> <span class=\"n\">ts</span> <span class=\"o\">=</span> <span class=\"n\">TextServerManager</span><span class=\"o\">.</span><span class=\"n\">get_primary_interface</span><span class=\"p\">()</span>\n<span class=\"n\">fv</span><span class=\"o\">.</span><span class=\"n\">base_font</span> <span class=\"o\">=</span> <span class=\"nb\">load</span><span class=\"p\">(</span><span class=\"s2\">\"res://BarlowCondensed-Regular.ttf\"</span><span class=\"p\">)</span>\n<span class=\"n\">fv</span><span class=\"o\">.</span><span class=\"n\">variation_opentype</span> <span class=\"o\">=</span> <span class=\"p\">{</span> <span class=\"n\">ts</span><span class=\"o\">.</span><span class=\"n\">name_to_tag</span><span class=\"p\">(</span><span class=\"s2\">\"wght\"</span><span class=\"p\">):</span> <span class=\"mi\">900</span><span class=\"p\">,</span> <span class=\"n\">ts</span><span class=\"o\">.</span><span class=\"n\">name_to_tag</span><span class=\"p\">(</span><span class=\"s2\">\"custom_hght\"</span><span class=\"p\">):</span> <span class=\"mi\">900</span> <span class=\"p\">}</span>\n</pre></div>\n</div>\n"
            },
            "class_gdextension": {
                "url": "https://docs.godotengine.org/en/4.1/classes/class_gdextension.html",
                "title": "GDExtension",
                "blurb": "<p><strong>Inherits:</strong> <a class=\"reference internal\" href=\"class_resource.html#class-resource\"><span class=\"std std-ref\">Resource</span></a> <strong>&lt;</strong> <a class=\"reference internal\" href=\"class_refcounted.html#class-refcounted\"><span class=\"std std-ref\">RefCounted</span></a> <strong>&lt;</strong> <a class=\"reference internal\" href=\"class_object.html#class-object\"><span class=\"std std-ref\">Object</span></a></p>",
                "description": null
            },
            "class_gdscript": {
                "url": "https://docs.godotengine.org/en/4.1/classes/class_gdscript.html",
                "title": "GDScript",
                "blurb": "<p><strong>Inherits:</strong> <a class=\"reference internal\" href=\"class_script.html#class-script\"><span class=\"std std-ref\">Script</span></a> <strong>&lt;</strong> <a class=\"reference internal\" href=\"class_resource.html#class-resource\"><span class=\"std std-ref\">Resource</span></a> <strong>&lt;</strong> <a class=\"reference internal\" href=\"class_refcounted.html#class-refcounted\"><span class=\"std std-ref\">RefCounted</span></a> <strong>&lt;</strong> <a class=\"reference internal\" href=\"class_object.html#class-object\"><span class=\"std std-ref\">Object</span></a></p><p>A script implemented in the GDScript programming language.</p>",
                "description": "\n\n<p>A script implemented in the GDScript programming language, saved with the <code class=\"docutils literal notranslate\"><span class=\"pre\">.gd</span></code> extension. The script extends the functionality of all objects that instantiate it.</p>\n<p>Calling <a class=\"reference internal\" href=\"#class-gdscript-method-new\"><span class=\"std std-ref\">new</span></a> creates a new instance of the script. <a class=\"reference internal\" href=\"class_object.html#class-object-method-set-script\"><span class=\"std std-ref\">Object.set_script</span></a> extends an existing object, if that object's class matches one of the script's base classes.</p>\n<p>If you are looking for GDScript's built-in functions, see <a class=\"reference internal\" href=\"class_%40gdscript.html#class-gdscript\"><span class=\"std std-ref\">@GDScript</span></a> instead.</p>\n"
            },
            "class_gltfaccessor": {
                "url": "https://docs.godotengine.org/en/4.1/classes/class_gltfaccessor.html",
                "title": "GLTFAccessor",
                "blurb": "<p><strong>Inherits:</strong> <a class=\"reference internal\" href=\"class_resource.html#class-resource\"><span class=\"std std-ref\">Resource</span></a> <strong>&lt;</strong> <a class=\"reference internal\" href=\"class_refcounted.html#class-refcounted\"><span class=\"std std-ref\">RefCounted</span></a> <strong>&lt;</strong> <a class=\"reference internal\" href=\"class_object.html#class-object\"><span class=\"std std-ref\">Object</span></a></p>",
                "description": null
            },
            "class_gltfanimation": {
                "url": "https://docs.godotengine.org/en/4.1/classes/class_gltfanimation.html",
                "title": "GLTFAnimation",
                "blurb": "<p><strong>Inherits:</strong> <a class=\"reference internal\" href=\"class_resource.html#class-resource\"><span class=\"std std-ref\">Resource</span></a> <strong>&lt;</strong> <a class=\"reference internal\" href=\"class_refcounted.html#class-refcounted\"><span class=\"std std-ref\">RefCounted</span></a> <strong>&lt;</strong> <a class=\"reference internal\" href=\"class_object.html#class-object\"><span class=\"std std-ref\">Object</span></a></p>",
                "description": null
            },
            "class_gltfbufferview": {
                "url": "https://docs.godotengine.org/en/4.1/classes/class_gltfbufferview.html",
                "title": "GLTFBufferView",
                "blurb": "<p><strong>Inherits:</strong> <a class=\"reference internal\" href=\"class_resource.html#class-resource\"><span class=\"std std-ref\">Resource</span></a> <strong>&lt;</strong> <a class=\"reference internal\" href=\"class_refcounted.html#class-refcounted\"><span class=\"std std-ref\">RefCounted</span></a> <strong>&lt;</strong> <a class=\"reference internal\" href=\"class_object.html#class-object\"><span class=\"std std-ref\">Object</span></a></p>",
                "description": null
            },
            "class_gltfcamera": {
                "url": "https://docs.godotengine.org/en/4.1/classes/class_gltfcamera.html",
                "title": "GLTFCamera",
                "blurb": "<p><strong>Inherits:</strong> <a class=\"reference internal\" href=\"class_resource.html#class-resource\"><span class=\"std std-ref\">Resource</span></a> <strong>&lt;</strong> <a class=\"reference internal\" href=\"class_refcounted.html#class-refcounted\"><span class=\"std std-ref\">RefCounted</span></a> <strong>&lt;</strong> <a class=\"reference internal\" href=\"class_object.html#class-object\"><span class=\"std std-ref\">Object</span></a></p><p>Represents a GLTF camera.</p>",
                "description": "\n\n<p>Represents a camera as defined by the base GLTF spec.</p>\n"
            },
            "class_gltfdocument": {
                "url": "https://docs.godotengine.org/en/4.1/classes/class_gltfdocument.html",
                "title": "GLTFDocument",
                "blurb": "<p><strong>Inherits:</strong> <a class=\"reference internal\" href=\"class_resource.html#class-resource\"><span class=\"std std-ref\">Resource</span></a> <strong>&lt;</strong> <a class=\"reference internal\" href=\"class_refcounted.html#class-refcounted\"><span class=\"std std-ref\">RefCounted</span></a> <strong>&lt;</strong> <a class=\"reference internal\" href=\"class_object.html#class-object\"><span class=\"std std-ref\">Object</span></a></p>",
                "description": "\n\n<p>Append a glTF2 3d format from a file, buffer or scene and then write to the filesystem, buffer or scene.</p>\n"
            },
            "class_gltfdocumentextension": {
                "url": "https://docs.godotengine.org/en/4.1/classes/class_gltfdocumentextension.html",
                "title": "GLTFDocumentExtension",
                "blurb": "<p><strong>Inherits:</strong> <a class=\"reference internal\" href=\"class_resource.html#class-resource\"><span class=\"std std-ref\">Resource</span></a> <strong>&lt;</strong> <a class=\"reference internal\" href=\"class_refcounted.html#class-refcounted\"><span class=\"std std-ref\">RefCounted</span></a> <strong>&lt;</strong> <a class=\"reference internal\" href=\"class_object.html#class-object\"><span class=\"std std-ref\">Object</span></a></p><p><strong>Inherited By:</strong> <a class=\"reference internal\" href=\"class_gltfdocumentextensionconvertimportermesh.html#class-gltfdocumentextensionconvertimportermesh\"><span class=\"std std-ref\">GLTFDocumentExtensionConvertImporterMesh</span></a></p><p><a class=\"reference internal\" href=\"class_gltfdocument.html#class-gltfdocument\"><span class=\"std std-ref\">GLTFDocument</span></a> extension class.</p>",
                "description": "\n\n<p>Extends the functionality of the <a class=\"reference internal\" href=\"class_gltfdocument.html#class-gltfdocument\"><span class=\"std std-ref\">GLTFDocument</span></a> class by allowing you to run arbitrary code at various stages of GLTF import or export.</p>\n<p>To use, make a new class extending GLTFDocumentExtension, override any methods you need, make an instance of your class, and register it using <a class=\"reference internal\" href=\"class_gltfdocument.html#class-gltfdocument-method-register-gltf-document-extension\"><span class=\"std std-ref\">GLTFDocument.register_gltf_document_extension</span></a>.</p>\n<p><strong>Note:</strong> Like GLTFDocument itself, all GLTFDocumentExtension classes must be stateless in order to function properly. If you need to store data, use the <code class=\"docutils literal notranslate\"><span class=\"pre\">set_additional_data</span></code> and <code class=\"docutils literal notranslate\"><span class=\"pre\">get_additional_data</span></code> methods in <a class=\"reference internal\" href=\"class_gltfstate.html#class-gltfstate\"><span class=\"std std-ref\">GLTFState</span></a> or <a class=\"reference internal\" href=\"class_gltfnode.html#class-gltfnode\"><span class=\"std std-ref\">GLTFNode</span></a>.</p>\n"
            },
            "class_gltfdocumentextensionconvertimportermesh": {
                "url": "https://docs.godotengine.org/en/4.1/classes/class_gltfdocumentextensionconvertimportermesh.html",
                "title": "GLTFDocumentExtensionConvertImporterMesh",
                "blurb": "<p><strong>Inherits:</strong> <a class=\"reference internal\" href=\"class_gltfdocumentextension.html#class-gltfdocumentextension\"><span class=\"std std-ref\">GLTFDocumentExtension</span></a> <strong>&lt;</strong> <a class=\"reference internal\" href=\"class_resource.html#class-resource\"><span class=\"std std-ref\">Resource</span></a> <strong>&lt;</strong> <a class=\"reference internal\" href=\"class_refcounted.html#class-refcounted\"><span class=\"std std-ref\">RefCounted</span></a> <strong>&lt;</strong> <a class=\"reference internal\" href=\"class_object.html#class-object\"><span class=\"std std-ref\">Object</span></a></p>",
                "description": null
            },
            "class_gltflight": {
                "url": "https://docs.godotengine.org/en/4.1/classes/class_gltflight.html",
                "title": "GLTFLight",
                "blurb": "<p><strong>Inherits:</strong> <a class=\"reference internal\" href=\"class_resource.html#class-resource\"><span class=\"std std-ref\">Resource</span></a> <strong>&lt;</strong> <a class=\"reference internal\" href=\"class_refcounted.html#class-refcounted\"><span class=\"std std-ref\">RefCounted</span></a> <strong>&lt;</strong> <a class=\"reference internal\" href=\"class_object.html#class-object\"><span class=\"std std-ref\">Object</span></a></p><p>Represents a GLTF light.</p>",
                "description": "\n\n<p>Represents a light as defined by the <code class=\"docutils literal notranslate\"><span class=\"pre\">KHR_lights_punctual</span></code> GLTF extension.</p>\n"
            },
            "class_gltfmesh": {
                "url": "https://docs.godotengine.org/en/4.1/classes/class_gltfmesh.html",
                "title": "GLTFMesh",
                "blurb": "<p><strong>Inherits:</strong> <a class=\"reference internal\" href=\"class_resource.html#class-resource\"><span class=\"std std-ref\">Resource</span></a> <strong>&lt;</strong> <a class=\"reference internal\" href=\"class_refcounted.html#class-refcounted\"><span class=\"std std-ref\">RefCounted</span></a> <strong>&lt;</strong> <a class=\"reference internal\" href=\"class_object.html#class-object\"><span class=\"std std-ref\">Object</span></a></p>",
                "description": null
            },
            "class_gltfnode": {
                "url": "https://docs.godotengine.org/en/4.1/classes/class_gltfnode.html",
                "title": "GLTFNode",
                "blurb": "<p><strong>Inherits:</strong> <a class=\"reference internal\" href=\"class_resource.html#class-resource\"><span class=\"std std-ref\">Resource</span></a> <strong>&lt;</strong> <a class=\"reference internal\" href=\"class_refcounted.html#class-refcounted\"><span class=\"std std-ref\">RefCounted</span></a> <strong>&lt;</strong> <a class=\"reference internal\" href=\"class_object.html#class-object\"><span class=\"std std-ref\">Object</span></a></p><p>GLTF node class.</p>",
                "description": "\n\n<p>Represents a GLTF node. GLTF nodes may have names, transforms, children (other GLTF nodes), and more specialized properties (represented by their own classes).</p>\n<p>GLTF nodes generally exist inside of <a class=\"reference internal\" href=\"class_gltfstate.html#class-gltfstate\"><span class=\"std std-ref\">GLTFState</span></a> which represents all data of a GLTF file. Most of GLTFNode's properties are indices of other data in the GLTF file. You can extend a GLTF node with additional properties by using <a class=\"reference internal\" href=\"#class-gltfnode-method-get-additional-data\"><span class=\"std std-ref\">get_additional_data</span></a> and <a class=\"reference internal\" href=\"#class-gltfnode-method-set-additional-data\"><span class=\"std std-ref\">set_additional_data</span></a>.</p>\n"
            },
            "class_gltfphysicsbody": {
                "url": "https://docs.godotengine.org/en/4.1/classes/class_gltfphysicsbody.html",
                "title": "GLTFPhysicsBody",
                "blurb": "<p><strong>Inherits:</strong> <a class=\"reference internal\" href=\"class_resource.html#class-resource\"><span class=\"std std-ref\">Resource</span></a> <strong>&lt;</strong> <a class=\"reference internal\" href=\"class_refcounted.html#class-refcounted\"><span class=\"std std-ref\">RefCounted</span></a> <strong>&lt;</strong> <a class=\"reference internal\" href=\"class_object.html#class-object\"><span class=\"std std-ref\">Object</span></a></p><p>Represents a GLTF physics body.</p>",
                "description": "\n\n<p>Represents a physics body as defined by the <code class=\"docutils literal notranslate\"><span class=\"pre\">OMI_physics_body</span></code> GLTF extension. This class is an intermediary between the GLTF data and Godot's nodes, and it's abstracted in a way that allows adding support for different GLTF physics extensions in the future.</p>\n"
            },
            "class_gltfphysicsshape": {
                "url": "https://docs.godotengine.org/en/4.1/classes/class_gltfphysicsshape.html",
                "title": "GLTFPhysicsShape",
                "blurb": "<p><strong>Inherits:</strong> <a class=\"reference internal\" href=\"class_resource.html#class-resource\"><span class=\"std std-ref\">Resource</span></a> <strong>&lt;</strong> <a class=\"reference internal\" href=\"class_refcounted.html#class-refcounted\"><span class=\"std std-ref\">RefCounted</span></a> <strong>&lt;</strong> <a class=\"reference internal\" href=\"class_object.html#class-object\"><span class=\"std std-ref\">Object</span></a></p><p>Represents a GLTF physics shape.</p>",
                "description": "\n\n<p>Represents a physics shape as defined by the <code class=\"docutils literal notranslate\"><span class=\"pre\">OMI_collider</span></code> GLTF extension. This class is an intermediary between the GLTF data and Godot's nodes, and it's abstracted in a way that allows adding support for different GLTF physics extensions in the future.</p>\n"
            },
            "class_gltfskeleton": {
                "url": "https://docs.godotengine.org/en/4.1/classes/class_gltfskeleton.html",
                "title": "GLTFSkeleton",
                "blurb": "<p><strong>Inherits:</strong> <a class=\"reference internal\" href=\"class_resource.html#class-resource\"><span class=\"std std-ref\">Resource</span></a> <strong>&lt;</strong> <a class=\"reference internal\" href=\"class_refcounted.html#class-refcounted\"><span class=\"std std-ref\">RefCounted</span></a> <strong>&lt;</strong> <a class=\"reference internal\" href=\"class_object.html#class-object\"><span class=\"std std-ref\">Object</span></a></p>",
                "description": null
            },
            "class_gltfskin": {
                "url": "https://docs.godotengine.org/en/4.1/classes/class_gltfskin.html",
                "title": "GLTFSkin",
                "blurb": "<p><strong>Inherits:</strong> <a class=\"reference internal\" href=\"class_resource.html#class-resource\"><span class=\"std std-ref\">Resource</span></a> <strong>&lt;</strong> <a class=\"reference internal\" href=\"class_refcounted.html#class-refcounted\"><span class=\"std std-ref\">RefCounted</span></a> <strong>&lt;</strong> <a class=\"reference internal\" href=\"class_object.html#class-object\"><span class=\"std std-ref\">Object</span></a></p>",
                "description": null
            },
            "class_gltfspecgloss": {
                "url": "https://docs.godotengine.org/en/4.1/classes/class_gltfspecgloss.html",
                "title": "GLTFSpecGloss",
                "blurb": "<p><strong>Inherits:</strong> <a class=\"reference internal\" href=\"class_resource.html#class-resource\"><span class=\"std std-ref\">Resource</span></a> <strong>&lt;</strong> <a class=\"reference internal\" href=\"class_refcounted.html#class-refcounted\"><span class=\"std std-ref\">RefCounted</span></a> <strong>&lt;</strong> <a class=\"reference internal\" href=\"class_object.html#class-object\"><span class=\"std std-ref\">Object</span></a></p><p>Archived GLTF extension for specular/glossy materials.</p>",
                "description": "\n\n<p>KHR_materials_pbrSpecularGlossiness is an archived GLTF extension. This means that it is deprecated and not recommended for new files. However, it is still supported for loading old files.</p>\n"
            },
            "class_gltfstate": {
                "url": "https://docs.godotengine.org/en/4.1/classes/class_gltfstate.html",
                "title": "GLTFState",
                "blurb": "<p><strong>Inherits:</strong> <a class=\"reference internal\" href=\"class_resource.html#class-resource\"><span class=\"std std-ref\">Resource</span></a> <strong>&lt;</strong> <a class=\"reference internal\" href=\"class_refcounted.html#class-refcounted\"><span class=\"std std-ref\">RefCounted</span></a> <strong>&lt;</strong> <a class=\"reference internal\" href=\"class_object.html#class-object\"><span class=\"std std-ref\">Object</span></a></p><p>Represents all data of a GLTF file.</p>",
                "description": "\n\n<p>Contains all nodes and resources of a GLTF file. This is used by <a class=\"reference internal\" href=\"class_gltfdocument.html#class-gltfdocument\"><span class=\"std std-ref\">GLTFDocument</span></a> as data storage, which allows <a class=\"reference internal\" href=\"class_gltfdocument.html#class-gltfdocument\"><span class=\"std std-ref\">GLTFDocument</span></a> and all <a class=\"reference internal\" href=\"class_gltfdocumentextension.html#class-gltfdocumentextension\"><span class=\"std std-ref\">GLTFDocumentExtension</span></a> classes to remain stateless.</p>\n<p>GLTFState can be populated by <a class=\"reference internal\" href=\"class_gltfdocument.html#class-gltfdocument\"><span class=\"std std-ref\">GLTFDocument</span></a> reading a file or by converting a Godot scene. Then the data can either be used to create a Godot scene or save to a GLTF file. The code that converts to/from a Godot scene can be intercepted at arbitrary points by <a class=\"reference internal\" href=\"class_gltfdocumentextension.html#class-gltfdocumentextension\"><span class=\"std std-ref\">GLTFDocumentExtension</span></a> classes. This allows for custom data to be stored in the GLTF file or for custom data to be converted to/from Godot nodes.</p>\n"
            },
            "class_gltftexture": {
                "url": "https://docs.godotengine.org/en/4.1/classes/class_gltftexture.html",
                "title": "GLTFTexture",
                "blurb": "<p><strong>Inherits:</strong> <a class=\"reference internal\" href=\"class_resource.html#class-resource\"><span class=\"std std-ref\">Resource</span></a> <strong>&lt;</strong> <a class=\"reference internal\" href=\"class_refcounted.html#class-refcounted\"><span class=\"std std-ref\">RefCounted</span></a> <strong>&lt;</strong> <a class=\"reference internal\" href=\"class_object.html#class-object\"><span class=\"std std-ref\">Object</span></a></p>",
                "description": null
            },
            "class_gltftexturesampler": {
                "url": "https://docs.godotengine.org/en/4.1/classes/class_gltftexturesampler.html",
                "title": "GLTFTextureSampler",
                "blurb": "<p><strong>Inherits:</strong> <a class=\"reference internal\" href=\"class_resource.html#class-resource\"><span class=\"std std-ref\">Resource</span></a> <strong>&lt;</strong> <a class=\"reference internal\" href=\"class_refcounted.html#class-refcounted\"><span class=\"std std-ref\">RefCounted</span></a> <strong>&lt;</strong> <a class=\"reference internal\" href=\"class_object.html#class-object\"><span class=\"std std-ref\">Object</span></a></p><p>Represents a GLTF texture sampler</p>",
                "description": "\n\n<p>Represents a texture sampler as defined by the base GLTF spec. Texture samplers in GLTF specify how to sample data from the texture's base image, when rendering the texture on an object.</p>\n"
            },
            "class_gradient": {
                "url": "https://docs.godotengine.org/en/4.1/classes/class_gradient.html",
                "title": "Gradient",
                "blurb": "<p><strong>Inherits:</strong> <a class=\"reference internal\" href=\"class_resource.html#class-resource\"><span class=\"std std-ref\">Resource</span></a> <strong>&lt;</strong> <a class=\"reference internal\" href=\"class_refcounted.html#class-refcounted\"><span class=\"std std-ref\">RefCounted</span></a> <strong>&lt;</strong> <a class=\"reference internal\" href=\"class_object.html#class-object\"><span class=\"std std-ref\">Object</span></a></p><p>A color interpolator resource which can be used to generate colors between user-defined color points.</p>",
                "description": "\n\n<p>Given a set of colors, this resource will interpolate them in order. This means that if you have color 1, color 2 and color 3, the gradient will interpolate from color 1 to color 2 and from color 2 to color 3. The gradient will initially have 2 colors (black and white), one (black) at gradient lower offset 0 and the other (white) at the gradient higher offset 1.</p>\n<p>See also <a class=\"reference internal\" href=\"class_curve.html#class-curve\"><span class=\"std std-ref\">Curve</span></a> which supports more complex easing methods, but does not support colors.</p>\n"
            },
            "class_gradienttexture1d": {
                "url": "https://docs.godotengine.org/en/4.1/classes/class_gradienttexture1d.html",
                "title": "GradientTexture1D",
                "blurb": "<p><strong>Inherits:</strong> <a class=\"reference internal\" href=\"class_texture2d.html#class-texture2d\"><span class=\"std std-ref\">Texture2D</span></a> <strong>&lt;</strong> <a class=\"reference internal\" href=\"class_texture.html#class-texture\"><span class=\"std std-ref\">Texture</span></a> <strong>&lt;</strong> <a class=\"reference internal\" href=\"class_resource.html#class-resource\"><span class=\"std std-ref\">Resource</span></a> <strong>&lt;</strong> <a class=\"reference internal\" href=\"class_refcounted.html#class-refcounted\"><span class=\"std std-ref\">RefCounted</span></a> <strong>&lt;</strong> <a class=\"reference internal\" href=\"class_object.html#class-object\"><span class=\"std std-ref\">Object</span></a></p><p>Gradient-filled texture.</p>",
                "description": "\n\n<p>GradientTexture1D uses a <a class=\"reference internal\" href=\"class_gradient.html#class-gradient\"><span class=\"std std-ref\">Gradient</span></a> to fill the texture data. The gradient will be filled from left to right using colors obtained from the gradient. This means the texture does not necessarily represent an exact copy of the gradient, but instead an interpolation of samples obtained from the gradient at fixed steps (see <a class=\"reference internal\" href=\"#class-gradienttexture1d-property-width\"><span class=\"std std-ref\">width</span></a>). See also <a class=\"reference internal\" href=\"class_gradienttexture2d.html#class-gradienttexture2d\"><span class=\"std std-ref\">GradientTexture2D</span></a>, <a class=\"reference internal\" href=\"class_curvetexture.html#class-curvetexture\"><span class=\"std std-ref\">CurveTexture</span></a> and <a class=\"reference internal\" href=\"class_curvexyztexture.html#class-curvexyztexture\"><span class=\"std std-ref\">CurveXYZTexture</span></a>.</p>\n"
            },
            "class_gradienttexture2d": {
                "url": "https://docs.godotengine.org/en/4.1/classes/class_gradienttexture2d.html",
                "title": "GradientTexture2D",
                "blurb": "<p><strong>Inherits:</strong> <a class=\"reference internal\" href=\"class_texture2d.html#class-texture2d\"><span class=\"std std-ref\">Texture2D</span></a> <strong>&lt;</strong> <a class=\"reference internal\" href=\"class_texture.html#class-texture\"><span class=\"std std-ref\">Texture</span></a> <strong>&lt;</strong> <a class=\"reference internal\" href=\"class_resource.html#class-resource\"><span class=\"std std-ref\">Resource</span></a> <strong>&lt;</strong> <a class=\"reference internal\" href=\"class_refcounted.html#class-refcounted\"><span class=\"std std-ref\">RefCounted</span></a> <strong>&lt;</strong> <a class=\"reference internal\" href=\"class_object.html#class-object\"><span class=\"std std-ref\">Object</span></a></p><p>Gradient-filled 2D texture.</p>",
                "description": "\n\n<p>The texture uses a <a class=\"reference internal\" href=\"class_gradient.html#class-gradient\"><span class=\"std std-ref\">Gradient</span></a> to fill the texture data in 2D space. The gradient is filled according to the specified <a class=\"reference internal\" href=\"#class-gradienttexture2d-property-fill\"><span class=\"std std-ref\">fill</span></a> and <a class=\"reference internal\" href=\"#class-gradienttexture2d-property-repeat\"><span class=\"std std-ref\">repeat</span></a> types using colors obtained from the gradient. The texture does not necessarily represent an exact copy of the gradient, but instead an interpolation of samples obtained from the gradient at fixed steps (see <a class=\"reference internal\" href=\"#class-gradienttexture2d-property-width\"><span class=\"std std-ref\">width</span></a> and <a class=\"reference internal\" href=\"#class-gradienttexture2d-property-height\"><span class=\"std std-ref\">height</span></a>). See also <a class=\"reference internal\" href=\"class_gradienttexture1d.html#class-gradienttexture1d\"><span class=\"std std-ref\">GradientTexture1D</span></a>, <a class=\"reference internal\" href=\"class_curvetexture.html#class-curvetexture\"><span class=\"std std-ref\">CurveTexture</span></a> and <a class=\"reference internal\" href=\"class_curvexyztexture.html#class-curvexyztexture\"><span class=\"std std-ref\">CurveXYZTexture</span></a>.</p>\n"
            },
            "class_heightmapshape3d": {
                "url": "https://docs.godotengine.org/en/4.1/classes/class_heightmapshape3d.html",
                "title": "HeightMapShape3D",
                "blurb": "<p><strong>Inherits:</strong> <a class=\"reference internal\" href=\"class_shape3d.html#class-shape3d\"><span class=\"std std-ref\">Shape3D</span></a> <strong>&lt;</strong> <a class=\"reference internal\" href=\"class_resource.html#class-resource\"><span class=\"std std-ref\">Resource</span></a> <strong>&lt;</strong> <a class=\"reference internal\" href=\"class_refcounted.html#class-refcounted\"><span class=\"std std-ref\">RefCounted</span></a> <strong>&lt;</strong> <a class=\"reference internal\" href=\"class_object.html#class-object\"><span class=\"std std-ref\">Object</span></a></p><p>A 3D height map shape used for physics collision.</p>",
                "description": "\n\n<p>A 3D heightmap shape, intended for use in physics. Usually used to provide a shape for a <a class=\"reference internal\" href=\"class_collisionshape3d.html#class-collisionshape3d\"><span class=\"std std-ref\">CollisionShape3D</span></a>. This is useful for terrain, but it is limited as overhangs (such as caves) cannot be stored. Holes in a <strong>HeightMapShape3D</strong> are created by assigning very low values to points in the desired area.</p>\n<p><strong>Performance:</strong> <strong>HeightMapShape3D</strong> is faster to check collisions against than <a class=\"reference internal\" href=\"class_concavepolygonshape3d.html#class-concavepolygonshape3d\"><span class=\"std std-ref\">ConcavePolygonShape3D</span></a>, but it is significantly slower than primitive shapes like <a class=\"reference internal\" href=\"class_boxshape3d.html#class-boxshape3d\"><span class=\"std std-ref\">BoxShape3D</span></a>.</p>\n"
            },
            "class_image": {
                "url": "https://docs.godotengine.org/en/4.1/classes/class_image.html",
                "title": "Image",
                "blurb": "<p><strong>Inherits:</strong> <a class=\"reference internal\" href=\"class_resource.html#class-resource\"><span class=\"std std-ref\">Resource</span></a> <strong>&lt;</strong> <a class=\"reference internal\" href=\"class_refcounted.html#class-refcounted\"><span class=\"std std-ref\">RefCounted</span></a> <strong>&lt;</strong> <a class=\"reference internal\" href=\"class_object.html#class-object\"><span class=\"std std-ref\">Object</span></a></p><p>Image datatype.</p>",
                "description": "\n\n<p>Native image datatype. Contains image data which can be converted to an <a class=\"reference internal\" href=\"class_imagetexture.html#class-imagetexture\"><span class=\"std std-ref\">ImageTexture</span></a> and provides commonly used <em>image processing</em> methods. The maximum width and height for an <strong>Image</strong> are <a class=\"reference internal\" href=\"#class-image-constant-max-width\"><span class=\"std std-ref\">MAX_WIDTH</span></a> and <a class=\"reference internal\" href=\"#class-image-constant-max-height\"><span class=\"std std-ref\">MAX_HEIGHT</span></a>.</p>\n<p>An <strong>Image</strong> cannot be assigned to a <code class=\"docutils literal notranslate\"><span class=\"pre\">texture</span></code> property of an object directly (such as <a class=\"reference internal\" href=\"class_sprite2d.html#class-sprite2d\"><span class=\"std std-ref\">Sprite2D</span></a>), and has to be converted manually to an <a class=\"reference internal\" href=\"class_imagetexture.html#class-imagetexture\"><span class=\"std std-ref\">ImageTexture</span></a> first.</p>\n<p><strong>Note:</strong> The maximum image size is 16384×16384 pixels due to graphics hardware limitations. Larger images may fail to import.</p>\n"
            },
            "class_imagetexture": {
                "url": "https://docs.godotengine.org/en/4.1/classes/class_imagetexture.html",
                "title": "ImageTexture",
                "blurb": "<p><strong>Inherits:</strong> <a class=\"reference internal\" href=\"class_texture2d.html#class-texture2d\"><span class=\"std std-ref\">Texture2D</span></a> <strong>&lt;</strong> <a class=\"reference internal\" href=\"class_texture.html#class-texture\"><span class=\"std std-ref\">Texture</span></a> <strong>&lt;</strong> <a class=\"reference internal\" href=\"class_resource.html#class-resource\"><span class=\"std std-ref\">Resource</span></a> <strong>&lt;</strong> <a class=\"reference internal\" href=\"class_refcounted.html#class-refcounted\"><span class=\"std std-ref\">RefCounted</span></a> <strong>&lt;</strong> <a class=\"reference internal\" href=\"class_object.html#class-object\"><span class=\"std std-ref\">Object</span></a></p><p>A <a class=\"reference internal\" href=\"class_texture2d.html#class-texture2d\"><span class=\"std std-ref\">Texture2D</span></a> based on an <a class=\"reference internal\" href=\"class_image.html#class-image\"><span class=\"std std-ref\">Image</span></a>.</p>",
                "description": "\n\n<p>A <a class=\"reference internal\" href=\"class_texture2d.html#class-texture2d\"><span class=\"std std-ref\">Texture2D</span></a> based on an <a class=\"reference internal\" href=\"class_image.html#class-image\"><span class=\"std std-ref\">Image</span></a>. For an image to be displayed, an <strong>ImageTexture</strong> has to be created from it using the <a class=\"reference internal\" href=\"#class-imagetexture-method-create-from-image\"><span class=\"std std-ref\">create_from_image</span></a> method:</p>\n<div class=\"highlight-gdscript notranslate\"><div class=\"highlight\"><pre><span></span><span class=\"k\">var</span> <span class=\"n\">image</span> <span class=\"o\">=</span> <span class=\"n\">Image</span><span class=\"o\">.</span><span class=\"n\">load_from_file</span><span class=\"p\">(</span><span class=\"s2\">\"res://icon.svg\"</span><span class=\"p\">)</span>\n<span class=\"k\">var</span> <span class=\"n\">texture</span> <span class=\"o\">=</span> <span class=\"n\">ImageTexture</span><span class=\"o\">.</span><span class=\"n\">create_from_image</span><span class=\"p\">(</span><span class=\"n\">image</span><span class=\"p\">)</span>\n<span class=\"o\">$</span><span class=\"n\">Sprite2D</span><span class=\"o\">.</span><span class=\"n\">texture</span> <span class=\"o\">=</span> <span class=\"n\">texture</span>\n</pre></div>\n</div>\n<p>This way, textures can be created at run-time by loading images both from within the editor and externally.</p>\n<p><strong>Warning:</strong> Prefer to load imported textures with <a class=\"reference internal\" href=\"class_%40gdscript.html#class-gdscript-method-load\"><span class=\"std std-ref\">@GDScript.load</span></a> over loading them from within the filesystem dynamically with <a class=\"reference internal\" href=\"class_image.html#class-image-method-load\"><span class=\"std std-ref\">Image.load</span></a>, as it may not work in exported projects:</p>\n<div class=\"highlight-gdscript notranslate\"><div class=\"highlight\"><pre><span></span><span class=\"k\">var</span> <span class=\"n\">texture</span> <span class=\"o\">=</span> <span class=\"nb\">load</span><span class=\"p\">(</span><span class=\"s2\">\"res://icon.svg\"</span><span class=\"p\">)</span>\n<span class=\"o\">$</span><span class=\"n\">Sprite2D</span><span class=\"o\">.</span><span class=\"n\">texture</span> <span class=\"o\">=</span> <span class=\"n\">texture</span>\n</pre></div>\n</div>\n<p>This is because images have to be imported as a <a class=\"reference internal\" href=\"class_compressedtexture2d.html#class-compressedtexture2d\"><span class=\"std std-ref\">CompressedTexture2D</span></a> first to be loaded with <a class=\"reference internal\" href=\"class_%40gdscript.html#class-gdscript-method-load\"><span class=\"std std-ref\">@GDScript.load</span></a>. If you'd still like to load an image file just like any other <a class=\"reference internal\" href=\"class_resource.html#class-resource\"><span class=\"std std-ref\">Resource</span></a>, import it as an <a class=\"reference internal\" href=\"class_image.html#class-image\"><span class=\"std std-ref\">Image</span></a> resource instead, and then load it normally using the <a class=\"reference internal\" href=\"class_%40gdscript.html#class-gdscript-method-load\"><span class=\"std std-ref\">@GDScript.load</span></a> method.</p>\n<p><strong>Note:</strong> The image can be retrieved from an imported texture using the <a class=\"reference internal\" href=\"class_texture2d.html#class-texture2d-method-get-image\"><span class=\"std std-ref\">Texture2D.get_image</span></a> method, which returns a copy of the image:</p>\n<div class=\"highlight-gdscript notranslate\"><div class=\"highlight\"><pre><span></span><span class=\"k\">var</span> <span class=\"n\">texture</span> <span class=\"o\">=</span> <span class=\"nb\">load</span><span class=\"p\">(</span><span class=\"s2\">\"res://icon.svg\"</span><span class=\"p\">)</span>\n<span class=\"k\">var</span> <span class=\"n\">image</span><span class=\"p\">:</span> <span class=\"n\">Image</span> <span class=\"o\">=</span> <span class=\"n\">texture</span><span class=\"o\">.</span><span class=\"n\">get_image</span><span class=\"p\">()</span>\n</pre></div>\n</div>\n<p>An <strong>ImageTexture</strong> is not meant to be operated from within the editor interface directly, and is mostly useful for rendering images on screen dynamically via code. If you need to generate images procedurally from within the editor, consider saving and importing images as custom texture resources implementing a new <a class=\"reference internal\" href=\"class_editorimportplugin.html#class-editorimportplugin\"><span class=\"std std-ref\">EditorImportPlugin</span></a>.</p>\n<p><strong>Note:</strong> The maximum texture size is 16384×16384 pixels due to graphics hardware limitations.</p>\n"
            },
            "class_imagetexture3d": {
                "url": "https://docs.godotengine.org/en/4.1/classes/class_imagetexture3d.html",
                "title": "ImageTexture3D",
                "blurb": "<p><strong>Inherits:</strong> <a class=\"reference internal\" href=\"class_texture3d.html#class-texture3d\"><span class=\"std std-ref\">Texture3D</span></a> <strong>&lt;</strong> <a class=\"reference internal\" href=\"class_texture.html#class-texture\"><span class=\"std std-ref\">Texture</span></a> <strong>&lt;</strong> <a class=\"reference internal\" href=\"class_resource.html#class-resource\"><span class=\"std std-ref\">Resource</span></a> <strong>&lt;</strong> <a class=\"reference internal\" href=\"class_refcounted.html#class-refcounted\"><span class=\"std std-ref\">RefCounted</span></a> <strong>&lt;</strong> <a class=\"reference internal\" href=\"class_object.html#class-object\"><span class=\"std std-ref\">Object</span></a></p><p>Texture with 3 dimensions.</p>",
                "description": "\n\n<p><strong>ImageTexture3D</strong> is a 3-dimensional <a class=\"reference internal\" href=\"class_imagetexture.html#class-imagetexture\"><span class=\"std std-ref\">ImageTexture</span></a> that has a width, height, and depth. See also <a class=\"reference internal\" href=\"class_imagetexturelayered.html#class-imagetexturelayered\"><span class=\"std std-ref\">ImageTextureLayered</span></a>.</p>\n<p>3D textures are typically used to store density maps for <a class=\"reference internal\" href=\"class_fogmaterial.html#class-fogmaterial\"><span class=\"std std-ref\">FogMaterial</span></a>, color correction LUTs for <a class=\"reference internal\" href=\"class_environment.html#class-environment\"><span class=\"std std-ref\">Environment</span></a>, vector fields for <a class=\"reference internal\" href=\"class_gpuparticlesattractorvectorfield3d.html#class-gpuparticlesattractorvectorfield3d\"><span class=\"std std-ref\">GPUParticlesAttractorVectorField3D</span></a> and collision maps for <a class=\"reference internal\" href=\"class_gpuparticlescollisionsdf3d.html#class-gpuparticlescollisionsdf3d\"><span class=\"std std-ref\">GPUParticlesCollisionSDF3D</span></a>. 3D textures can also be used in custom shaders.</p>\n"
            },
            "class_imagetexturelayered": {
                "url": "https://docs.godotengine.org/en/4.1/classes/class_imagetexturelayered.html",
                "title": "ImageTextureLayered",
                "blurb": "<p><strong>Inherits:</strong> <a class=\"reference internal\" href=\"class_texturelayered.html#class-texturelayered\"><span class=\"std std-ref\">TextureLayered</span></a> <strong>&lt;</strong> <a class=\"reference internal\" href=\"class_texture.html#class-texture\"><span class=\"std std-ref\">Texture</span></a> <strong>&lt;</strong> <a class=\"reference internal\" href=\"class_resource.html#class-resource\"><span class=\"std std-ref\">Resource</span></a> <strong>&lt;</strong> <a class=\"reference internal\" href=\"class_refcounted.html#class-refcounted\"><span class=\"std std-ref\">RefCounted</span></a> <strong>&lt;</strong> <a class=\"reference internal\" href=\"class_object.html#class-object\"><span class=\"std std-ref\">Object</span></a></p><p><strong>Inherited By:</strong> <a class=\"reference internal\" href=\"class_cubemap.html#class-cubemap\"><span class=\"std std-ref\">Cubemap</span></a>, <a class=\"reference internal\" href=\"class_cubemaparray.html#class-cubemaparray\"><span class=\"std std-ref\">CubemapArray</span></a>, <a class=\"reference internal\" href=\"class_texture2darray.html#class-texture2darray\"><span class=\"std std-ref\">Texture2DArray</span></a></p><p>Base class for texture types which contain the data of multiple <a class=\"reference internal\" href=\"class_imagetexture.html#class-imagetexture\"><span class=\"std std-ref\">ImageTexture</span></a>s. Each image is of the same size and format.</p>",
                "description": "\n\n<p>Base class for <a class=\"reference internal\" href=\"class_texture2darray.html#class-texture2darray\"><span class=\"std std-ref\">Texture2DArray</span></a>, <a class=\"reference internal\" href=\"class_cubemap.html#class-cubemap\"><span class=\"std std-ref\">Cubemap</span></a> and <a class=\"reference internal\" href=\"class_cubemaparray.html#class-cubemaparray\"><span class=\"std std-ref\">CubemapArray</span></a>. Cannot be used directly, but contains all the functions necessary for accessing the derived resource types. See also <a class=\"reference internal\" href=\"class_texture3d.html#class-texture3d\"><span class=\"std std-ref\">Texture3D</span></a>.</p>\n"
            },
            "class_immediatemesh": {
                "url": "https://docs.godotengine.org/en/4.1/classes/class_immediatemesh.html",
                "title": "ImmediateMesh",
                "blurb": "<p><strong>Inherits:</strong> <a class=\"reference internal\" href=\"class_mesh.html#class-mesh\"><span class=\"std std-ref\">Mesh</span></a> <strong>&lt;</strong> <a class=\"reference internal\" href=\"class_resource.html#class-resource\"><span class=\"std std-ref\">Resource</span></a> <strong>&lt;</strong> <a class=\"reference internal\" href=\"class_refcounted.html#class-refcounted\"><span class=\"std std-ref\">RefCounted</span></a> <strong>&lt;</strong> <a class=\"reference internal\" href=\"class_object.html#class-object\"><span class=\"std std-ref\">Object</span></a></p><p>Mesh optimized for creating geometry manually.</p>",
                "description": "\n\n<p>A mesh type optimized for creating geometry manually, similar to OpenGL 1.x immediate mode.</p>\n<p>Here's a sample on how to generate a triangular face:</p>\n<div class=\"sphinx-tabs docutils container\">\n<div aria-label=\"Tabbed content\" class=\"closeable\" role=\"tablist\"><button aria-controls=\"panel-0-R0RTY3JpcHQ=\" aria-selected=\"true\" class=\"sphinx-tabs-tab code-tab group-tab\" id=\"tab-0-R0RTY3JpcHQ=\" name=\"R0RTY3JpcHQ=\" role=\"tab\" tabindex=\"0\">GDScript</button></div><div aria-labelledby=\"tab-0-R0RTY3JpcHQ=\" class=\"sphinx-tabs-panel code-tab group-tab\" id=\"panel-0-R0RTY3JpcHQ=\" name=\"R0RTY3JpcHQ=\" role=\"tabpanel\" tabindex=\"0\"><div class=\"highlight-gdscript notranslate\"><div class=\"highlight\"><pre><span></span><span class=\"k\">var</span> <span class=\"n\">mesh</span> <span class=\"o\">=</span> <span class=\"n\">ImmediateMesh</span><span class=\"o\">.</span><span class=\"n\">new</span><span class=\"p\">()</span>\n<span class=\"n\">mesh</span><span class=\"o\">.</span><span class=\"n\">surface_begin</span><span class=\"p\">(</span><span class=\"n\">Mesh</span><span class=\"o\">.</span><span class=\"n\">PRIMITIVE_TRIANGLES</span><span class=\"p\">)</span>\n<span class=\"n\">mesh</span><span class=\"o\">.</span><span class=\"n\">surface_add_vertex</span><span class=\"p\">(</span><span class=\"nb nb-Type\">Vector3</span><span class=\"o\">.</span><span class=\"n\">LEFT</span><span class=\"p\">)</span>\n<span class=\"n\">mesh</span><span class=\"o\">.</span><span class=\"n\">surface_add_vertex</span><span class=\"p\">(</span><span class=\"nb nb-Type\">Vector3</span><span class=\"o\">.</span><span class=\"n\">FORWARD</span><span class=\"p\">)</span>\n<span class=\"n\">mesh</span><span class=\"o\">.</span><span class=\"n\">surface_add_vertex</span><span class=\"p\">(</span><span class=\"nb nb-Type\">Vector3</span><span class=\"o\">.</span><span class=\"n\">ZERO</span><span class=\"p\">)</span>\n<span class=\"n\">mesh</span><span class=\"o\">.</span><span class=\"n\">surface_end</span><span class=\"p\">()</span>\n</pre></div>\n</div>\n</div></div>\n<p><strong>Note:</strong> Generating complex geometries with <strong>ImmediateMesh</strong> is highly inefficient. Instead, it is designed to generate simple geometry that changes often.</p>\n"
            },
            "class_importermesh": {
                "url": "https://docs.godotengine.org/en/4.1/classes/class_importermesh.html",
                "title": "ImporterMesh",
                "blurb": "<p><strong>Inherits:</strong> <a class=\"reference internal\" href=\"class_resource.html#class-resource\"><span class=\"std std-ref\">Resource</span></a> <strong>&lt;</strong> <a class=\"reference internal\" href=\"class_refcounted.html#class-refcounted\"><span class=\"std std-ref\">RefCounted</span></a> <strong>&lt;</strong> <a class=\"reference internal\" href=\"class_object.html#class-object\"><span class=\"std std-ref\">Object</span></a></p><p>A <a class=\"reference internal\" href=\"class_resource.html#class-resource\"><span class=\"std std-ref\">Resource</span></a> that contains vertex array-based geometry during the import process.</p>",
                "description": "\n\n<p>ImporterMesh is a type of <a class=\"reference internal\" href=\"class_resource.html#class-resource\"><span class=\"std std-ref\">Resource</span></a> analogous to <a class=\"reference internal\" href=\"class_arraymesh.html#class-arraymesh\"><span class=\"std std-ref\">ArrayMesh</span></a>. It contains vertex array-based geometry, divided in <em>surfaces</em>. Each surface contains a completely separate array and a material used to draw it. Design wise, a mesh with multiple surfaces is preferred to a single surface, because objects created in 3D editing software commonly contain multiple materials.</p>\n<p>Unlike its runtime counterpart, <strong>ImporterMesh</strong> contains mesh data before various import steps, such as lod and shadow mesh generation, have taken place. Modify surface data by calling <a class=\"reference internal\" href=\"#class-importermesh-method-clear\"><span class=\"std std-ref\">clear</span></a>, followed by <a class=\"reference internal\" href=\"#class-importermesh-method-add-surface\"><span class=\"std std-ref\">add_surface</span></a> for each surface.</p>\n"
            },
            "class_inputevent": {
                "url": "https://docs.godotengine.org/en/4.1/classes/class_inputevent.html",
                "title": "InputEvent",
                "blurb": "<p><strong>Inherits:</strong> <a class=\"reference internal\" href=\"class_resource.html#class-resource\"><span class=\"std std-ref\">Resource</span></a> <strong>&lt;</strong> <a class=\"reference internal\" href=\"class_refcounted.html#class-refcounted\"><span class=\"std std-ref\">RefCounted</span></a> <strong>&lt;</strong> <a class=\"reference internal\" href=\"class_object.html#class-object\"><span class=\"std std-ref\">Object</span></a></p><p><strong>Inherited By:</strong> <a class=\"reference internal\" href=\"class_inputeventaction.html#class-inputeventaction\"><span class=\"std std-ref\">InputEventAction</span></a>, <a class=\"reference internal\" href=\"class_inputeventfromwindow.html#class-inputeventfromwindow\"><span class=\"std std-ref\">InputEventFromWindow</span></a>, <a class=\"reference internal\" href=\"class_inputeventjoypadbutton.html#class-inputeventjoypadbutton\"><span class=\"std std-ref\">InputEventJoypadButton</span></a>, <a class=\"reference internal\" href=\"class_inputeventjoypadmotion.html#class-inputeventjoypadmotion\"><span class=\"std std-ref\">InputEventJoypadMotion</span></a>, <a class=\"reference internal\" href=\"class_inputeventmidi.html#class-inputeventmidi\"><span class=\"std std-ref\">InputEventMIDI</span></a>, <a class=\"reference internal\" href=\"class_inputeventshortcut.html#class-inputeventshortcut\"><span class=\"std std-ref\">InputEventShortcut</span></a></p><p>Abstract base class for input events.</p>",
                "description": "\n\n<p>Abstract base class of all types of input events. See <a class=\"reference internal\" href=\"class_node.html#class-node-method-input\"><span class=\"std std-ref\">Node._input</span></a>.</p>\n"
            },
            "class_inputeventaction": {
                "url": "https://docs.godotengine.org/en/4.1/classes/class_inputeventaction.html",
                "title": "InputEventAction",
                "blurb": "<p><strong>Inherits:</strong> <a class=\"reference internal\" href=\"class_inputevent.html#class-inputevent\"><span class=\"std std-ref\">InputEvent</span></a> <strong>&lt;</strong> <a class=\"reference internal\" href=\"class_resource.html#class-resource\"><span class=\"std std-ref\">Resource</span></a> <strong>&lt;</strong> <a class=\"reference internal\" href=\"class_refcounted.html#class-refcounted\"><span class=\"std std-ref\">RefCounted</span></a> <strong>&lt;</strong> <a class=\"reference internal\" href=\"class_object.html#class-object\"><span class=\"std std-ref\">Object</span></a></p><p>An input event type for actions.</p>",
                "description": "\n\n<p>Contains a generic action which can be targeted from several types of inputs. Actions and their events can be set in the <strong>Input Map</strong> tab in <strong>Project &gt; Project Settings</strong>, or with the <a class=\"reference internal\" href=\"class_inputmap.html#class-inputmap\"><span class=\"std std-ref\">InputMap</span></a> class.</p>\n<p><strong>Note:</strong> Unlike the other <a class=\"reference internal\" href=\"class_inputevent.html#class-inputevent\"><span class=\"std std-ref\">InputEvent</span></a> subclasses which map to unique physical events, this virtual one is not emitted by the engine. This class is useful to emit actions manually with <a class=\"reference internal\" href=\"class_input.html#class-input-method-parse-input-event\"><span class=\"std std-ref\">Input.parse_input_event</span></a>, which are then received in <a class=\"reference internal\" href=\"class_node.html#class-node-method-input\"><span class=\"std std-ref\">Node._input</span></a>. To check if a physical event matches an action from the Input Map, use <a class=\"reference internal\" href=\"class_inputevent.html#class-inputevent-method-is-action\"><span class=\"std std-ref\">InputEvent.is_action</span></a> and <a class=\"reference internal\" href=\"class_inputevent.html#class-inputevent-method-is-action-pressed\"><span class=\"std std-ref\">InputEvent.is_action_pressed</span></a>.</p>\n"
            },
            "class_inputeventfromwindow": {
                "url": "https://docs.godotengine.org/en/4.1/classes/class_inputeventfromwindow.html",
                "title": "InputEventFromWindow",
                "blurb": "<p><strong>Inherits:</strong> <a class=\"reference internal\" href=\"class_inputevent.html#class-inputevent\"><span class=\"std std-ref\">InputEvent</span></a> <strong>&lt;</strong> <a class=\"reference internal\" href=\"class_resource.html#class-resource\"><span class=\"std std-ref\">Resource</span></a> <strong>&lt;</strong> <a class=\"reference internal\" href=\"class_refcounted.html#class-refcounted\"><span class=\"std std-ref\">RefCounted</span></a> <strong>&lt;</strong> <a class=\"reference internal\" href=\"class_object.html#class-object\"><span class=\"std std-ref\">Object</span></a></p><p><strong>Inherited By:</strong> <a class=\"reference internal\" href=\"class_inputeventscreendrag.html#class-inputeventscreendrag\"><span class=\"std std-ref\">InputEventScreenDrag</span></a>, <a class=\"reference internal\" href=\"class_inputeventscreentouch.html#class-inputeventscreentouch\"><span class=\"std std-ref\">InputEventScreenTouch</span></a>, <a class=\"reference internal\" href=\"class_inputeventwithmodifiers.html#class-inputeventwithmodifiers\"><span class=\"std std-ref\">InputEventWithModifiers</span></a></p><p>Abstract base class for <a class=\"reference internal\" href=\"class_viewport.html#class-viewport\"><span class=\"std std-ref\">Viewport</span></a>-based input events.</p>",
                "description": "\n\n<p>InputEventFromWindow represents events specifically received by windows. This includes mouse events, keyboard events in focused windows or touch screen actions.</p>\n"
            },
            "class_inputeventgesture": {
                "url": "https://docs.godotengine.org/en/4.1/classes/class_inputeventgesture.html",
                "title": "InputEventGesture",
                "blurb": "<p><strong>Inherits:</strong> <a class=\"reference internal\" href=\"class_inputeventwithmodifiers.html#class-inputeventwithmodifiers\"><span class=\"std std-ref\">InputEventWithModifiers</span></a> <strong>&lt;</strong> <a class=\"reference internal\" href=\"class_inputeventfromwindow.html#class-inputeventfromwindow\"><span class=\"std std-ref\">InputEventFromWindow</span></a> <strong>&lt;</strong> <a class=\"reference internal\" href=\"class_inputevent.html#class-inputevent\"><span class=\"std std-ref\">InputEvent</span></a> <strong>&lt;</strong> <a class=\"reference internal\" href=\"class_resource.html#class-resource\"><span class=\"std std-ref\">Resource</span></a> <strong>&lt;</strong> <a class=\"reference internal\" href=\"class_refcounted.html#class-refcounted\"><span class=\"std std-ref\">RefCounted</span></a> <strong>&lt;</strong> <a class=\"reference internal\" href=\"class_object.html#class-object\"><span class=\"std std-ref\">Object</span></a></p><p><strong>Inherited By:</strong> <a class=\"reference internal\" href=\"class_inputeventmagnifygesture.html#class-inputeventmagnifygesture\"><span class=\"std std-ref\">InputEventMagnifyGesture</span></a>, <a class=\"reference internal\" href=\"class_inputeventpangesture.html#class-inputeventpangesture\"><span class=\"std std-ref\">InputEventPanGesture</span></a></p><p>Abstract base class for touch gestures.</p>",
                "description": "\n\n<p>InputEventGestures are sent when a user performs a supported gesture on a touch screen. Gestures can't be emulated using mouse, because they typically require multi-touch.</p>\n"
            },
            "class_inputeventjoypadbutton": {
                "url": "https://docs.godotengine.org/en/4.1/classes/class_inputeventjoypadbutton.html",
                "title": "InputEventJoypadButton",
                "blurb": "<p><strong>Inherits:</strong> <a class=\"reference internal\" href=\"class_inputevent.html#class-inputevent\"><span class=\"std std-ref\">InputEvent</span></a> <strong>&lt;</strong> <a class=\"reference internal\" href=\"class_resource.html#class-resource\"><span class=\"std std-ref\">Resource</span></a> <strong>&lt;</strong> <a class=\"reference internal\" href=\"class_refcounted.html#class-refcounted\"><span class=\"std std-ref\">RefCounted</span></a> <strong>&lt;</strong> <a class=\"reference internal\" href=\"class_object.html#class-object\"><span class=\"std std-ref\">Object</span></a></p><p>Represents a gamepad button being pressed or released.</p>",
                "description": "\n\n<p>Input event type for gamepad buttons. For gamepad analog sticks and joysticks, see <a class=\"reference internal\" href=\"class_inputeventjoypadmotion.html#class-inputeventjoypadmotion\"><span class=\"std std-ref\">InputEventJoypadMotion</span></a>.</p>\n"
            },
            "class_inputeventjoypadmotion": {
                "url": "https://docs.godotengine.org/en/4.1/classes/class_inputeventjoypadmotion.html",
                "title": "InputEventJoypadMotion",
                "blurb": "<p><strong>Inherits:</strong> <a class=\"reference internal\" href=\"class_inputevent.html#class-inputevent\"><span class=\"std std-ref\">InputEvent</span></a> <strong>&lt;</strong> <a class=\"reference internal\" href=\"class_resource.html#class-resource\"><span class=\"std std-ref\">Resource</span></a> <strong>&lt;</strong> <a class=\"reference internal\" href=\"class_refcounted.html#class-refcounted\"><span class=\"std std-ref\">RefCounted</span></a> <strong>&lt;</strong> <a class=\"reference internal\" href=\"class_object.html#class-object\"><span class=\"std std-ref\">Object</span></a></p><p>Represents axis motions (such as joystick or analog triggers) from a gamepad.</p>",
                "description": "\n\n<p>Stores information about joystick motions. One <strong>InputEventJoypadMotion</strong> represents one axis at a time. For gamepad buttons, see <a class=\"reference internal\" href=\"class_inputeventjoypadbutton.html#class-inputeventjoypadbutton\"><span class=\"std std-ref\">InputEventJoypadButton</span></a>.</p>\n"
            },
            "class_inputeventkey": {
                "url": "https://docs.godotengine.org/en/4.1/classes/class_inputeventkey.html",
                "title": "InputEventKey",
                "blurb": "<p><strong>Inherits:</strong> <a class=\"reference internal\" href=\"class_inputeventwithmodifiers.html#class-inputeventwithmodifiers\"><span class=\"std std-ref\">InputEventWithModifiers</span></a> <strong>&lt;</strong> <a class=\"reference internal\" href=\"class_inputeventfromwindow.html#class-inputeventfromwindow\"><span class=\"std std-ref\">InputEventFromWindow</span></a> <strong>&lt;</strong> <a class=\"reference internal\" href=\"class_inputevent.html#class-inputevent\"><span class=\"std std-ref\">InputEvent</span></a> <strong>&lt;</strong> <a class=\"reference internal\" href=\"class_resource.html#class-resource\"><span class=\"std std-ref\">Resource</span></a> <strong>&lt;</strong> <a class=\"reference internal\" href=\"class_refcounted.html#class-refcounted\"><span class=\"std std-ref\">RefCounted</span></a> <strong>&lt;</strong> <a class=\"reference internal\" href=\"class_object.html#class-object\"><span class=\"std std-ref\">Object</span></a></p><p>Represents a key on a keyboard being pressed or released.</p>",
                "description": "\n\n<p>An input event for keys on a keyboard. Supports key presses, key releases and <a class=\"reference internal\" href=\"#class-inputeventkey-property-echo\"><span class=\"std std-ref\">echo</span></a> events. It can also be received in <a class=\"reference internal\" href=\"class_node.html#class-node-method-unhandled-key-input\"><span class=\"std std-ref\">Node._unhandled_key_input</span></a>.</p>\n<p><strong>Note:</strong> Events received from the keyboard usually have all properties set. Event mappings should have only one of the <a class=\"reference internal\" href=\"#class-inputeventkey-property-keycode\"><span class=\"std std-ref\">keycode</span></a>, <a class=\"reference internal\" href=\"#class-inputeventkey-property-physical-keycode\"><span class=\"std std-ref\">physical_keycode</span></a> or <a class=\"reference internal\" href=\"#class-inputeventkey-property-unicode\"><span class=\"std std-ref\">unicode</span></a> set.</p>\n<p>When events are compared, properties are checked in the following priority - <a class=\"reference internal\" href=\"#class-inputeventkey-property-keycode\"><span class=\"std std-ref\">keycode</span></a>, <a class=\"reference internal\" href=\"#class-inputeventkey-property-physical-keycode\"><span class=\"std std-ref\">physical_keycode</span></a> and <a class=\"reference internal\" href=\"#class-inputeventkey-property-unicode\"><span class=\"std std-ref\">unicode</span></a>. Events with the first matching value will be considered equal.</p>\n"
            },
            "class_inputeventmagnifygesture": {
                "url": "https://docs.godotengine.org/en/4.1/classes/class_inputeventmagnifygesture.html",
                "title": "InputEventMagnifyGesture",
                "blurb": "<p><strong>Inherits:</strong> <a class=\"reference internal\" href=\"class_inputeventgesture.html#class-inputeventgesture\"><span class=\"std std-ref\">InputEventGesture</span></a> <strong>&lt;</strong> <a class=\"reference internal\" href=\"class_inputeventwithmodifiers.html#class-inputeventwithmodifiers\"><span class=\"std std-ref\">InputEventWithModifiers</span></a> <strong>&lt;</strong> <a class=\"reference internal\" href=\"class_inputeventfromwindow.html#class-inputeventfromwindow\"><span class=\"std std-ref\">InputEventFromWindow</span></a> <strong>&lt;</strong> <a class=\"reference internal\" href=\"class_inputevent.html#class-inputevent\"><span class=\"std std-ref\">InputEvent</span></a> <strong>&lt;</strong> <a class=\"reference internal\" href=\"class_resource.html#class-resource\"><span class=\"std std-ref\">Resource</span></a> <strong>&lt;</strong> <a class=\"reference internal\" href=\"class_refcounted.html#class-refcounted\"><span class=\"std std-ref\">RefCounted</span></a> <strong>&lt;</strong> <a class=\"reference internal\" href=\"class_object.html#class-object\"><span class=\"std std-ref\">Object</span></a></p><p>Represents a magnifying touch gesture.</p>",
                "description": "\n\n<p>Stores the factor of a magnifying touch gesture. This is usually performed when the user pinches the touch screen and used for zooming in/out.</p>\n"
            },
            "class_inputeventmidi": {
                "url": "https://docs.godotengine.org/en/4.1/classes/class_inputeventmidi.html",
                "title": "InputEventMIDI",
                "blurb": "<p><strong>Inherits:</strong> <a class=\"reference internal\" href=\"class_inputevent.html#class-inputevent\"><span class=\"std std-ref\">InputEvent</span></a> <strong>&lt;</strong> <a class=\"reference internal\" href=\"class_resource.html#class-resource\"><span class=\"std std-ref\">Resource</span></a> <strong>&lt;</strong> <a class=\"reference internal\" href=\"class_refcounted.html#class-refcounted\"><span class=\"std std-ref\">RefCounted</span></a> <strong>&lt;</strong> <a class=\"reference internal\" href=\"class_object.html#class-object\"><span class=\"std std-ref\">Object</span></a></p><p>Represents an input event from a MIDI device, such as a piano.</p>",
                "description": "\n\n<p>InputEventMIDI allows receiving input events from MIDI (Musical Instrument Digital Interface) devices such as a piano.</p>\n<p>MIDI signals can be sent over a 5-pin MIDI connector or over USB, if your device supports both be sure to check the settings in the device to see which output it's using.</p>\n<p>To receive input events from MIDI devices, you need to call <a class=\"reference internal\" href=\"class_os.html#class-os-method-open-midi-inputs\"><span class=\"std std-ref\">OS.open_midi_inputs</span></a>. You can check which devices are detected using <a class=\"reference internal\" href=\"class_os.html#class-os-method-get-connected-midi-inputs\"><span class=\"std std-ref\">OS.get_connected_midi_inputs</span></a>.</p>\n<div class=\"sphinx-tabs docutils container\">\n<div aria-label=\"Tabbed content\" class=\"closeable\" role=\"tablist\"><button aria-controls=\"panel-0-R0RTY3JpcHQ=\" aria-selected=\"true\" class=\"sphinx-tabs-tab code-tab group-tab\" id=\"tab-0-R0RTY3JpcHQ=\" name=\"R0RTY3JpcHQ=\" role=\"tab\" tabindex=\"0\">GDScript</button><button aria-controls=\"panel-0-QyM=\" aria-selected=\"false\" class=\"sphinx-tabs-tab code-tab group-tab\" id=\"tab-0-QyM=\" name=\"QyM=\" role=\"tab\" tabindex=\"-1\">C#</button></div><div aria-labelledby=\"tab-0-R0RTY3JpcHQ=\" class=\"sphinx-tabs-panel code-tab group-tab\" id=\"panel-0-R0RTY3JpcHQ=\" name=\"R0RTY3JpcHQ=\" role=\"tabpanel\" tabindex=\"0\"><div class=\"highlight-gdscript notranslate\"><div class=\"highlight\"><pre><span></span><span class=\"k\">func</span> <span class=\"n\">_ready</span><span class=\"p\">():</span>\n    <span class=\"n\">OS</span><span class=\"o\">.</span><span class=\"n\">open_midi_inputs</span><span class=\"p\">()</span>\n    <span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"n\">OS</span><span class=\"o\">.</span><span class=\"n\">get_connected_midi_inputs</span><span class=\"p\">())</span>\n\n<span class=\"k\">func</span> <span class=\"n\">_input</span><span class=\"p\">(</span><span class=\"n\">input_event</span><span class=\"p\">):</span>\n    <span class=\"k k-ControlFlow\">if</span> <span class=\"n\">input_event</span> <span class=\"k\">is</span> <span class=\"n\">InputEventMIDI</span><span class=\"p\">:</span>\n        <span class=\"n\">_print_midi_info</span><span class=\"p\">(</span><span class=\"n\">input_event</span><span class=\"p\">)</span>\n\n<span class=\"k\">func</span> <span class=\"n\">_print_midi_info</span><span class=\"p\">(</span><span class=\"n\">midi_event</span><span class=\"p\">:</span> <span class=\"n\">InputEventMIDI</span><span class=\"p\">):</span>\n    <span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"n\">midi_event</span><span class=\"p\">)</span>\n    <span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"s2\">\"Channel \"</span> <span class=\"o\">+</span> <span class=\"nb\">str</span><span class=\"p\">(</span><span class=\"n\">midi_event</span><span class=\"o\">.</span><span class=\"n\">channel</span><span class=\"p\">))</span>\n    <span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"s2\">\"Message \"</span> <span class=\"o\">+</span> <span class=\"nb\">str</span><span class=\"p\">(</span><span class=\"n\">midi_event</span><span class=\"o\">.</span><span class=\"n\">message</span><span class=\"p\">))</span>\n    <span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"s2\">\"Pitch \"</span> <span class=\"o\">+</span> <span class=\"nb\">str</span><span class=\"p\">(</span><span class=\"n\">midi_event</span><span class=\"o\">.</span><span class=\"n\">pitch</span><span class=\"p\">))</span>\n    <span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"s2\">\"Velocity \"</span> <span class=\"o\">+</span> <span class=\"nb\">str</span><span class=\"p\">(</span><span class=\"n\">midi_event</span><span class=\"o\">.</span><span class=\"n\">velocity</span><span class=\"p\">))</span>\n    <span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"s2\">\"Instrument \"</span> <span class=\"o\">+</span> <span class=\"nb\">str</span><span class=\"p\">(</span><span class=\"n\">midi_event</span><span class=\"o\">.</span><span class=\"n\">instrument</span><span class=\"p\">))</span>\n    <span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"s2\">\"Pressure \"</span> <span class=\"o\">+</span> <span class=\"nb\">str</span><span class=\"p\">(</span><span class=\"n\">midi_event</span><span class=\"o\">.</span><span class=\"n\">pressure</span><span class=\"p\">))</span>\n    <span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"s2\">\"Controller number: \"</span> <span class=\"o\">+</span> <span class=\"nb\">str</span><span class=\"p\">(</span><span class=\"n\">midi_event</span><span class=\"o\">.</span><span class=\"n\">controller_number</span><span class=\"p\">))</span>\n    <span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"s2\">\"Controller value: \"</span> <span class=\"o\">+</span> <span class=\"nb\">str</span><span class=\"p\">(</span><span class=\"n\">midi_event</span><span class=\"o\">.</span><span class=\"n\">controller_value</span><span class=\"p\">))</span>\n</pre></div>\n</div>\n</div><div aria-labelledby=\"tab-0-QyM=\" class=\"sphinx-tabs-panel code-tab group-tab\" hidden=\"true\" id=\"panel-0-QyM=\" name=\"QyM=\" role=\"tabpanel\" tabindex=\"0\"><div class=\"highlight-csharp notranslate\"><div class=\"highlight\"><pre><span></span><span class=\"k\">public</span><span class=\"w\"> </span><span class=\"k\">override</span><span class=\"w\"> </span><span class=\"k\">void</span><span class=\"w\"> </span><span class=\"nf\">_Ready</span><span class=\"p\">()</span>\n<span class=\"p\">{</span>\n<span class=\"w\">    </span><span class=\"n\">OS</span><span class=\"p\">.</span><span class=\"n\">OpenMidiInputs</span><span class=\"p\">();</span>\n<span class=\"w\">    </span><span class=\"n\">GD</span><span class=\"p\">.</span><span class=\"n\">Print</span><span class=\"p\">(</span><span class=\"n\">OS</span><span class=\"p\">.</span><span class=\"n\">GetConnectedMidiInputs</span><span class=\"p\">());</span>\n<span class=\"p\">}</span>\n\n<span class=\"k\">public</span><span class=\"w\"> </span><span class=\"k\">override</span><span class=\"w\"> </span><span class=\"k\">void</span><span class=\"w\"> </span><span class=\"nf\">_Input</span><span class=\"p\">(</span><span class=\"n\">InputEvent</span><span class=\"w\"> </span><span class=\"n\">@event</span><span class=\"p\">)</span>\n<span class=\"p\">{</span>\n<span class=\"w\">    </span><span class=\"k\">if</span><span class=\"w\"> </span><span class=\"p\">(</span><span class=\"n\">@event</span><span class=\"w\"> </span><span class=\"k\">is</span><span class=\"w\"> </span><span class=\"n\">InputEventMIDI</span><span class=\"w\"> </span><span class=\"n\">midiEvent</span><span class=\"p\">)</span>\n<span class=\"w\">    </span><span class=\"p\">{</span>\n<span class=\"w\">        </span><span class=\"n\">PrintMIDIInfo</span><span class=\"p\">(</span><span class=\"n\">midiEvent</span><span class=\"p\">);</span>\n<span class=\"w\">    </span><span class=\"p\">}</span>\n<span class=\"p\">}</span>\n\n<span class=\"k\">private</span><span class=\"w\"> </span><span class=\"k\">void</span><span class=\"w\"> </span><span class=\"nf\">PrintMIDIInfo</span><span class=\"p\">(</span><span class=\"n\">InputEventMIDI</span><span class=\"w\"> </span><span class=\"n\">midiEvent</span><span class=\"p\">)</span>\n<span class=\"p\">{</span>\n<span class=\"w\">    </span><span class=\"n\">GD</span><span class=\"p\">.</span><span class=\"n\">Print</span><span class=\"p\">(</span><span class=\"n\">midiEvent</span><span class=\"p\">);</span>\n<span class=\"w\">    </span><span class=\"n\">GD</span><span class=\"p\">.</span><span class=\"n\">Print</span><span class=\"p\">(</span><span class=\"s\">$\"Channel {midiEvent.Channel}\"</span><span class=\"p\">);</span>\n<span class=\"w\">    </span><span class=\"n\">GD</span><span class=\"p\">.</span><span class=\"n\">Print</span><span class=\"p\">(</span><span class=\"s\">$\"Message {midiEvent.Message}\"</span><span class=\"p\">);</span>\n<span class=\"w\">    </span><span class=\"n\">GD</span><span class=\"p\">.</span><span class=\"n\">Print</span><span class=\"p\">(</span><span class=\"s\">$\"Pitch {midiEvent.Pitch}\"</span><span class=\"p\">);</span>\n<span class=\"w\">    </span><span class=\"n\">GD</span><span class=\"p\">.</span><span class=\"n\">Print</span><span class=\"p\">(</span><span class=\"s\">$\"Velocity {midiEvent.Velocity}\"</span><span class=\"p\">);</span>\n<span class=\"w\">    </span><span class=\"n\">GD</span><span class=\"p\">.</span><span class=\"n\">Print</span><span class=\"p\">(</span><span class=\"s\">$\"Instrument {midiEvent.Instrument}\"</span><span class=\"p\">);</span>\n<span class=\"w\">    </span><span class=\"n\">GD</span><span class=\"p\">.</span><span class=\"n\">Print</span><span class=\"p\">(</span><span class=\"s\">$\"Pressure {midiEvent.Pressure}\"</span><span class=\"p\">);</span>\n<span class=\"w\">    </span><span class=\"n\">GD</span><span class=\"p\">.</span><span class=\"n\">Print</span><span class=\"p\">(</span><span class=\"s\">$\"Controller number: {midiEvent.ControllerNumber}\"</span><span class=\"p\">);</span>\n<span class=\"w\">    </span><span class=\"n\">GD</span><span class=\"p\">.</span><span class=\"n\">Print</span><span class=\"p\">(</span><span class=\"s\">$\"Controller value: {midiEvent.ControllerValue}\"</span><span class=\"p\">);</span>\n<span class=\"p\">}</span>\n</pre></div>\n</div>\n</div></div>\n<p>Note that Godot does not currently support MIDI output, so there is no way to emit MIDI signals from Godot. Only MIDI input works.</p>\n"
            },
            "class_inputeventmouse": {
                "url": "https://docs.godotengine.org/en/4.1/classes/class_inputeventmouse.html",
                "title": "InputEventMouse",
                "blurb": "<p><strong>Inherits:</strong> <a class=\"reference internal\" href=\"class_inputeventwithmodifiers.html#class-inputeventwithmodifiers\"><span class=\"std std-ref\">InputEventWithModifiers</span></a> <strong>&lt;</strong> <a class=\"reference internal\" href=\"class_inputeventfromwindow.html#class-inputeventfromwindow\"><span class=\"std std-ref\">InputEventFromWindow</span></a> <strong>&lt;</strong> <a class=\"reference internal\" href=\"class_inputevent.html#class-inputevent\"><span class=\"std std-ref\">InputEvent</span></a> <strong>&lt;</strong> <a class=\"reference internal\" href=\"class_resource.html#class-resource\"><span class=\"std std-ref\">Resource</span></a> <strong>&lt;</strong> <a class=\"reference internal\" href=\"class_refcounted.html#class-refcounted\"><span class=\"std std-ref\">RefCounted</span></a> <strong>&lt;</strong> <a class=\"reference internal\" href=\"class_object.html#class-object\"><span class=\"std std-ref\">Object</span></a></p><p><strong>Inherited By:</strong> <a class=\"reference internal\" href=\"class_inputeventmousebutton.html#class-inputeventmousebutton\"><span class=\"std std-ref\">InputEventMouseButton</span></a>, <a class=\"reference internal\" href=\"class_inputeventmousemotion.html#class-inputeventmousemotion\"><span class=\"std std-ref\">InputEventMouseMotion</span></a></p><p>Base input event type for mouse events.</p>",
                "description": "\n\n<p>Stores general information about mouse events.</p>\n"
            },
            "class_inputeventmousebutton": {
                "url": "https://docs.godotengine.org/en/4.1/classes/class_inputeventmousebutton.html",
                "title": "InputEventMouseButton",
                "blurb": "<p><strong>Inherits:</strong> <a class=\"reference internal\" href=\"class_inputeventmouse.html#class-inputeventmouse\"><span class=\"std std-ref\">InputEventMouse</span></a> <strong>&lt;</strong> <a class=\"reference internal\" href=\"class_inputeventwithmodifiers.html#class-inputeventwithmodifiers\"><span class=\"std std-ref\">InputEventWithModifiers</span></a> <strong>&lt;</strong> <a class=\"reference internal\" href=\"class_inputeventfromwindow.html#class-inputeventfromwindow\"><span class=\"std std-ref\">InputEventFromWindow</span></a> <strong>&lt;</strong> <a class=\"reference internal\" href=\"class_inputevent.html#class-inputevent\"><span class=\"std std-ref\">InputEvent</span></a> <strong>&lt;</strong> <a class=\"reference internal\" href=\"class_resource.html#class-resource\"><span class=\"std std-ref\">Resource</span></a> <strong>&lt;</strong> <a class=\"reference internal\" href=\"class_refcounted.html#class-refcounted\"><span class=\"std std-ref\">RefCounted</span></a> <strong>&lt;</strong> <a class=\"reference internal\" href=\"class_object.html#class-object\"><span class=\"std std-ref\">Object</span></a></p><p>Represents a mouse button being pressed or released.</p>",
                "description": "\n\n<p>Stores information about mouse click events. See <a class=\"reference internal\" href=\"class_node.html#class-node-method-input\"><span class=\"std std-ref\">Node._input</span></a>.</p>\n"
            },
            "class_inputeventmousemotion": {
                "url": "https://docs.godotengine.org/en/4.1/classes/class_inputeventmousemotion.html",
                "title": "InputEventMouseMotion",
                "blurb": "<p><strong>Inherits:</strong> <a class=\"reference internal\" href=\"class_inputeventmouse.html#class-inputeventmouse\"><span class=\"std std-ref\">InputEventMouse</span></a> <strong>&lt;</strong> <a class=\"reference internal\" href=\"class_inputeventwithmodifiers.html#class-inputeventwithmodifiers\"><span class=\"std std-ref\">InputEventWithModifiers</span></a> <strong>&lt;</strong> <a class=\"reference internal\" href=\"class_inputeventfromwindow.html#class-inputeventfromwindow\"><span class=\"std std-ref\">InputEventFromWindow</span></a> <strong>&lt;</strong> <a class=\"reference internal\" href=\"class_inputevent.html#class-inputevent\"><span class=\"std std-ref\">InputEvent</span></a> <strong>&lt;</strong> <a class=\"reference internal\" href=\"class_resource.html#class-resource\"><span class=\"std std-ref\">Resource</span></a> <strong>&lt;</strong> <a class=\"reference internal\" href=\"class_refcounted.html#class-refcounted\"><span class=\"std std-ref\">RefCounted</span></a> <strong>&lt;</strong> <a class=\"reference internal\" href=\"class_object.html#class-object\"><span class=\"std std-ref\">Object</span></a></p><p>Represents a mouse or a pen movement.</p>",
                "description": "\n\n<p>Stores information about a mouse or a pen motion. This includes relative position, absolute position, and velocity. See <a class=\"reference internal\" href=\"class_node.html#class-node-method-input\"><span class=\"std std-ref\">Node._input</span></a>.</p>\n<p><strong>Note:</strong> By default, this event is only emitted once per frame rendered at most. If you need more precise input reporting, set <a class=\"reference internal\" href=\"class_input.html#class-input-property-use-accumulated-input\"><span class=\"std std-ref\">Input.use_accumulated_input</span></a> to <code class=\"docutils literal notranslate\"><span class=\"pre\">false</span></code> to make events emitted as often as possible. If you use InputEventMouseMotion to draw lines, consider implementing <a class=\"reference external\" href=\"https://en.wikipedia.org/wiki/Bresenham%27s_line_algorithm\">Bresenham's line algorithm</a> as well to avoid visible gaps in lines if the user is moving the mouse quickly.</p>\n"
            },
            "class_inputeventpangesture": {
                "url": "https://docs.godotengine.org/en/4.1/classes/class_inputeventpangesture.html",
                "title": "InputEventPanGesture",
                "blurb": "<p><strong>Inherits:</strong> <a class=\"reference internal\" href=\"class_inputeventgesture.html#class-inputeventgesture\"><span class=\"std std-ref\">InputEventGesture</span></a> <strong>&lt;</strong> <a class=\"reference internal\" href=\"class_inputeventwithmodifiers.html#class-inputeventwithmodifiers\"><span class=\"std std-ref\">InputEventWithModifiers</span></a> <strong>&lt;</strong> <a class=\"reference internal\" href=\"class_inputeventfromwindow.html#class-inputeventfromwindow\"><span class=\"std std-ref\">InputEventFromWindow</span></a> <strong>&lt;</strong> <a class=\"reference internal\" href=\"class_inputevent.html#class-inputevent\"><span class=\"std std-ref\">InputEvent</span></a> <strong>&lt;</strong> <a class=\"reference internal\" href=\"class_resource.html#class-resource\"><span class=\"std std-ref\">Resource</span></a> <strong>&lt;</strong> <a class=\"reference internal\" href=\"class_refcounted.html#class-refcounted\"><span class=\"std std-ref\">RefCounted</span></a> <strong>&lt;</strong> <a class=\"reference internal\" href=\"class_object.html#class-object\"><span class=\"std std-ref\">Object</span></a></p><p>Represents a panning touch gesture.</p>",
                "description": "\n\n<p>Stores information about pan gestures. A pan gesture is performed when the user swipes the touch screen with two fingers. It's typically used for panning/scrolling.</p>\n"
            },
            "class_inputeventscreendrag": {
                "url": "https://docs.godotengine.org/en/4.1/classes/class_inputeventscreendrag.html",
                "title": "InputEventScreenDrag",
                "blurb": "<p><strong>Inherits:</strong> <a class=\"reference internal\" href=\"class_inputeventfromwindow.html#class-inputeventfromwindow\"><span class=\"std std-ref\">InputEventFromWindow</span></a> <strong>&lt;</strong> <a class=\"reference internal\" href=\"class_inputevent.html#class-inputevent\"><span class=\"std std-ref\">InputEvent</span></a> <strong>&lt;</strong> <a class=\"reference internal\" href=\"class_resource.html#class-resource\"><span class=\"std std-ref\">Resource</span></a> <strong>&lt;</strong> <a class=\"reference internal\" href=\"class_refcounted.html#class-refcounted\"><span class=\"std std-ref\">RefCounted</span></a> <strong>&lt;</strong> <a class=\"reference internal\" href=\"class_object.html#class-object\"><span class=\"std std-ref\">Object</span></a></p><p>Represents a screen drag event.</p>",
                "description": "\n\n<p>Stores information about screen drag events. See <a class=\"reference internal\" href=\"class_node.html#class-node-method-input\"><span class=\"std std-ref\">Node._input</span></a>.</p>\n"
            },
            "class_inputeventscreentouch": {
                "url": "https://docs.godotengine.org/en/4.1/classes/class_inputeventscreentouch.html",
                "title": "InputEventScreenTouch",
                "blurb": "<p><strong>Inherits:</strong> <a class=\"reference internal\" href=\"class_inputeventfromwindow.html#class-inputeventfromwindow\"><span class=\"std std-ref\">InputEventFromWindow</span></a> <strong>&lt;</strong> <a class=\"reference internal\" href=\"class_inputevent.html#class-inputevent\"><span class=\"std std-ref\">InputEvent</span></a> <strong>&lt;</strong> <a class=\"reference internal\" href=\"class_resource.html#class-resource\"><span class=\"std std-ref\">Resource</span></a> <strong>&lt;</strong> <a class=\"reference internal\" href=\"class_refcounted.html#class-refcounted\"><span class=\"std std-ref\">RefCounted</span></a> <strong>&lt;</strong> <a class=\"reference internal\" href=\"class_object.html#class-object\"><span class=\"std std-ref\">Object</span></a></p><p>Represents a screen touch event.</p>",
                "description": "\n\n<p>Stores information about multi-touch press/release input events. Supports touch press, touch release and <a class=\"reference internal\" href=\"#class-inputeventscreentouch-property-index\"><span class=\"std std-ref\">index</span></a> for multi-touch count and order.</p>\n"
            },
            "class_inputeventshortcut": {
                "url": "https://docs.godotengine.org/en/4.1/classes/class_inputeventshortcut.html",
                "title": "InputEventShortcut",
                "blurb": "<p><strong>Inherits:</strong> <a class=\"reference internal\" href=\"class_inputevent.html#class-inputevent\"><span class=\"std std-ref\">InputEvent</span></a> <strong>&lt;</strong> <a class=\"reference internal\" href=\"class_resource.html#class-resource\"><span class=\"std std-ref\">Resource</span></a> <strong>&lt;</strong> <a class=\"reference internal\" href=\"class_refcounted.html#class-refcounted\"><span class=\"std std-ref\">RefCounted</span></a> <strong>&lt;</strong> <a class=\"reference internal\" href=\"class_object.html#class-object\"><span class=\"std std-ref\">Object</span></a></p><p>Represents a triggered keyboard <a class=\"reference internal\" href=\"class_shortcut.html#class-shortcut\"><span class=\"std std-ref\">Shortcut</span></a>.</p>",
                "description": "\n\n<p>InputEventShortcut is a special event that can be received in <a class=\"reference internal\" href=\"class_node.html#class-node-method-unhandled-key-input\"><span class=\"std std-ref\">Node._unhandled_key_input</span></a>. It is typically sent by the editor's Command Palette to trigger actions, but can also be sent manually using <a class=\"reference internal\" href=\"class_viewport.html#class-viewport-method-push-input\"><span class=\"std std-ref\">Viewport.push_input</span></a>.</p>\n"
            },
            "class_inputeventwithmodifiers": {
                "url": "https://docs.godotengine.org/en/4.1/classes/class_inputeventwithmodifiers.html",
                "title": "InputEventWithModifiers",
                "blurb": "<p><strong>Inherits:</strong> <a class=\"reference internal\" href=\"class_inputeventfromwindow.html#class-inputeventfromwindow\"><span class=\"std std-ref\">InputEventFromWindow</span></a> <strong>&lt;</strong> <a class=\"reference internal\" href=\"class_inputevent.html#class-inputevent\"><span class=\"std std-ref\">InputEvent</span></a> <strong>&lt;</strong> <a class=\"reference internal\" href=\"class_resource.html#class-resource\"><span class=\"std std-ref\">Resource</span></a> <strong>&lt;</strong> <a class=\"reference internal\" href=\"class_refcounted.html#class-refcounted\"><span class=\"std std-ref\">RefCounted</span></a> <strong>&lt;</strong> <a class=\"reference internal\" href=\"class_object.html#class-object\"><span class=\"std std-ref\">Object</span></a></p><p><strong>Inherited By:</strong> <a class=\"reference internal\" href=\"class_inputeventgesture.html#class-inputeventgesture\"><span class=\"std std-ref\">InputEventGesture</span></a>, <a class=\"reference internal\" href=\"class_inputeventkey.html#class-inputeventkey\"><span class=\"std std-ref\">InputEventKey</span></a>, <a class=\"reference internal\" href=\"class_inputeventmouse.html#class-inputeventmouse\"><span class=\"std std-ref\">InputEventMouse</span></a></p><p>Abstract base class for input events affected by modifier keys like <kbd class=\"kbd docutils literal notranslate\">Shift</kbd> and <kbd class=\"kbd docutils literal notranslate\">Alt</kbd>.</p>",
                "description": "\n\n<p>Stores information about mouse, keyboard, and touch gesture input events. This includes information about which modifier keys are pressed, such as <kbd class=\"kbd docutils literal notranslate\">Shift</kbd> or <kbd class=\"kbd docutils literal notranslate\">Alt</kbd>. See <a class=\"reference internal\" href=\"class_node.html#class-node-method-input\"><span class=\"std std-ref\">Node._input</span></a>.</p>\n"
            },
            "class_json": {
                "url": "https://docs.godotengine.org/en/4.1/classes/class_json.html",
                "title": "JSON",
                "blurb": "<p><strong>Inherits:</strong> <a class=\"reference internal\" href=\"class_resource.html#class-resource\"><span class=\"std std-ref\">Resource</span></a> <strong>&lt;</strong> <a class=\"reference internal\" href=\"class_refcounted.html#class-refcounted\"><span class=\"std std-ref\">RefCounted</span></a> <strong>&lt;</strong> <a class=\"reference internal\" href=\"class_object.html#class-object\"><span class=\"std std-ref\">Object</span></a></p><p>Helper class for creating and parsing JSON data.</p>",
                "description": "\n\n<p>The <strong>JSON</strong> enables all data types to be converted to and from a JSON string. This useful for serializing data to save to a file or send over the network.</p>\n<p><a class=\"reference internal\" href=\"#class-json-method-stringify\"><span class=\"std std-ref\">stringify</span></a> is used to convert any data type into a JSON string.</p>\n<p><a class=\"reference internal\" href=\"#class-json-method-parse\"><span class=\"std std-ref\">parse</span></a> is used to convert any existing JSON data into a <a class=\"reference internal\" href=\"class_variant.html#class-variant\"><span class=\"std std-ref\">Variant</span></a> that can be used within Godot. If successfully parsed, use <a class=\"reference internal\" href=\"#class-json-property-data\"><span class=\"std std-ref\">data</span></a> to retrieve the <a class=\"reference internal\" href=\"class_variant.html#class-variant\"><span class=\"std std-ref\">Variant</span></a>, and use <code class=\"docutils literal notranslate\"><span class=\"pre\">typeof</span></code> to check if the Variant's type is what you expect. JSON Objects are converted into a <a class=\"reference internal\" href=\"class_dictionary.html#class-dictionary\"><span class=\"std std-ref\">Dictionary</span></a>, but JSON data can be used to store <a class=\"reference internal\" href=\"class_array.html#class-array\"><span class=\"std std-ref\">Array</span></a>s, numbers, <a class=\"reference internal\" href=\"class_string.html#class-string\"><span class=\"std std-ref\">String</span></a>s and even just a boolean.</p>\n<p><strong>Example</strong></p>\n<div class=\"highlight-gdscript notranslate\"><div class=\"highlight\"><pre><span></span><span class=\"k\">var</span> <span class=\"n\">data_to_send</span> <span class=\"o\">=</span> <span class=\"p\">[</span><span class=\"s2\">\"a\"</span><span class=\"p\">,</span> <span class=\"s2\">\"b\"</span><span class=\"p\">,</span> <span class=\"s2\">\"c\"</span><span class=\"p\">]</span>\n<span class=\"k\">var</span> <span class=\"n\">json_string</span> <span class=\"o\">=</span> <span class=\"n\">JSON</span><span class=\"o\">.</span><span class=\"n\">stringify</span><span class=\"p\">(</span><span class=\"n\">data_to_send</span><span class=\"p\">)</span>\n<span class=\"c1\"># Save data</span>\n<span class=\"c1\"># ...</span>\n<span class=\"c1\"># Retrieve data</span>\n<span class=\"k\">var</span> <span class=\"n\">json</span> <span class=\"o\">=</span> <span class=\"n\">JSON</span><span class=\"o\">.</span><span class=\"n\">new</span><span class=\"p\">()</span>\n<span class=\"k\">var</span> <span class=\"n\">error</span> <span class=\"o\">=</span> <span class=\"n\">json</span><span class=\"o\">.</span><span class=\"n\">parse</span><span class=\"p\">(</span><span class=\"n\">json_string</span><span class=\"p\">)</span>\n<span class=\"k k-ControlFlow\">if</span> <span class=\"n\">error</span> <span class=\"o\">==</span> <span class=\"n\">OK</span><span class=\"p\">:</span>\n    <span class=\"k\">var</span> <span class=\"n\">data_received</span> <span class=\"o\">=</span> <span class=\"n\">json</span><span class=\"o\">.</span><span class=\"n\">data</span>\n    <span class=\"k k-ControlFlow\">if</span> <span class=\"nb\">typeof</span><span class=\"p\">(</span><span class=\"n\">data_received</span><span class=\"p\">)</span> <span class=\"o\">==</span> <span class=\"n\">TYPE_ARRAY</span><span class=\"p\">:</span>\n        <span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"n\">data_received</span><span class=\"p\">)</span> <span class=\"c1\"># Prints array</span>\n    <span class=\"k k-ControlFlow\">else</span><span class=\"p\">:</span>\n        <span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"s2\">\"Unexpected data\"</span><span class=\"p\">)</span>\n<span class=\"k k-ControlFlow\">else</span><span class=\"p\">:</span>\n    <span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"s2\">\"JSON Parse Error: \"</span><span class=\"p\">,</span> <span class=\"n\">json</span><span class=\"o\">.</span><span class=\"n\">get_error_message</span><span class=\"p\">(),</span> <span class=\"s2\">\" in \"</span><span class=\"p\">,</span> <span class=\"n\">json_string</span><span class=\"p\">,</span> <span class=\"s2\">\" at line \"</span><span class=\"p\">,</span> <span class=\"n\">json</span><span class=\"o\">.</span><span class=\"n\">get_error_line</span><span class=\"p\">())</span>\n</pre></div>\n</div>\n<p>Alternatively, you can parse string using the static <a class=\"reference internal\" href=\"#class-json-method-parse-string\"><span class=\"std std-ref\">parse_string</span></a> method, but it doesn't allow to handle errors.</p>\n<div class=\"highlight-gdscript notranslate\"><div class=\"highlight\"><pre><span></span><span class=\"k\">var</span> <span class=\"n\">data</span> <span class=\"o\">=</span> <span class=\"n\">JSON</span><span class=\"o\">.</span><span class=\"n\">parse_string</span><span class=\"p\">(</span><span class=\"n\">json_string</span><span class=\"p\">)</span> <span class=\"c1\"># Returns null if parsing failed.</span>\n</pre></div>\n</div>\n<p><strong>Note:</strong> Both parse methods do not fully comply with the JSON specification:</p>\n<ul class=\"simple\">\n<li><p>Trailing commas in arrays or objects are ignored, instead of causing a parser error.</p></li>\n<li><p>New line and tab characters are accepted in string literals, and are treated like their corresponding escape sequences <code class=\"docutils literal notranslate\"><span class=\"pre\">\\n</span></code> and <code class=\"docutils literal notranslate\"><span class=\"pre\">\\t</span></code>.</p></li>\n<li><p>Numbers are parsed using <a class=\"reference internal\" href=\"class_string.html#class-string-method-to-float\"><span class=\"std std-ref\">String.to_float</span></a> which is generally more lax than the JSON specification.</p></li>\n<li><p>Certain errors, such as invalid Unicode sequences, do not cause a parser error. Instead, the string is cleansed and an error is logged to the console.</p></li>\n</ul>\n"
            },
            "class_labelsettings": {
                "url": "https://docs.godotengine.org/en/4.1/classes/class_labelsettings.html",
                "title": "LabelSettings",
                "blurb": "<p><strong>Inherits:</strong> <a class=\"reference internal\" href=\"class_resource.html#class-resource\"><span class=\"std std-ref\">Resource</span></a> <strong>&lt;</strong> <a class=\"reference internal\" href=\"class_refcounted.html#class-refcounted\"><span class=\"std std-ref\">RefCounted</span></a> <strong>&lt;</strong> <a class=\"reference internal\" href=\"class_object.html#class-object\"><span class=\"std std-ref\">Object</span></a></p><p>Provides common settings to customize the text in a <a class=\"reference internal\" href=\"class_label.html#class-label\"><span class=\"std std-ref\">Label</span></a>.</p>",
                "description": "\n\n<p><strong>LabelSettings</strong> is a resource that provides common settings to customize the text in a <a class=\"reference internal\" href=\"class_label.html#class-label\"><span class=\"std std-ref\">Label</span></a>. It will take priority over the properties defined in <a class=\"reference internal\" href=\"class_control.html#class-control-property-theme\"><span class=\"std std-ref\">Control.theme</span></a>. The resource can be shared between multiple labels and changed on the fly, so it's convenient and flexible way to setup text style.</p>\n"
            },
            "class_lightmapgidata": {
                "url": "https://docs.godotengine.org/en/4.1/classes/class_lightmapgidata.html",
                "title": "LightmapGIData",
                "blurb": "<p><strong>Inherits:</strong> <a class=\"reference internal\" href=\"class_resource.html#class-resource\"><span class=\"std std-ref\">Resource</span></a> <strong>&lt;</strong> <a class=\"reference internal\" href=\"class_refcounted.html#class-refcounted\"><span class=\"std std-ref\">RefCounted</span></a> <strong>&lt;</strong> <a class=\"reference internal\" href=\"class_object.html#class-object\"><span class=\"std std-ref\">Object</span></a></p><p>Contains baked lightmap and dynamic object probe data for <a class=\"reference internal\" href=\"class_lightmapgi.html#class-lightmapgi\"><span class=\"std std-ref\">LightmapGI</span></a>.</p>",
                "description": "\n\n<p><strong>LightmapGIData</strong> contains baked lightmap and dynamic object probe data for <a class=\"reference internal\" href=\"class_lightmapgi.html#class-lightmapgi\"><span class=\"std std-ref\">LightmapGI</span></a>. It is replaced every time lightmaps are baked in <a class=\"reference internal\" href=\"class_lightmapgi.html#class-lightmapgi\"><span class=\"std std-ref\">LightmapGI</span></a>.</p>\n"
            },
            "class_material": {
                "url": "https://docs.godotengine.org/en/4.1/classes/class_material.html",
                "title": "Material",
                "blurb": "<p><strong>Inherits:</strong> <a class=\"reference internal\" href=\"class_resource.html#class-resource\"><span class=\"std std-ref\">Resource</span></a> <strong>&lt;</strong> <a class=\"reference internal\" href=\"class_refcounted.html#class-refcounted\"><span class=\"std std-ref\">RefCounted</span></a> <strong>&lt;</strong> <a class=\"reference internal\" href=\"class_object.html#class-object\"><span class=\"std std-ref\">Object</span></a></p><p><strong>Inherited By:</strong> <a class=\"reference internal\" href=\"class_basematerial3d.html#class-basematerial3d\"><span class=\"std std-ref\">BaseMaterial3D</span></a>, <a class=\"reference internal\" href=\"class_canvasitemmaterial.html#class-canvasitemmaterial\"><span class=\"std std-ref\">CanvasItemMaterial</span></a>, <a class=\"reference internal\" href=\"class_fogmaterial.html#class-fogmaterial\"><span class=\"std std-ref\">FogMaterial</span></a>, <a class=\"reference internal\" href=\"class_panoramaskymaterial.html#class-panoramaskymaterial\"><span class=\"std std-ref\">PanoramaSkyMaterial</span></a>, <a class=\"reference internal\" href=\"class_particleprocessmaterial.html#class-particleprocessmaterial\"><span class=\"std std-ref\">ParticleProcessMaterial</span></a>, <a class=\"reference internal\" href=\"class_physicalskymaterial.html#class-physicalskymaterial\"><span class=\"std std-ref\">PhysicalSkyMaterial</span></a>, <a class=\"reference internal\" href=\"class_placeholdermaterial.html#class-placeholdermaterial\"><span class=\"std std-ref\">PlaceholderMaterial</span></a>, <a class=\"reference internal\" href=\"class_proceduralskymaterial.html#class-proceduralskymaterial\"><span class=\"std std-ref\">ProceduralSkyMaterial</span></a>, <a class=\"reference internal\" href=\"class_shadermaterial.html#class-shadermaterial\"><span class=\"std std-ref\">ShaderMaterial</span></a></p><p>Abstract base <a class=\"reference internal\" href=\"class_resource.html#class-resource\"><span class=\"std std-ref\">Resource</span></a> for coloring and shading geometry.</p>",
                "description": "\n\n<p>Material is a base <a class=\"reference internal\" href=\"class_resource.html#class-resource\"><span class=\"std std-ref\">Resource</span></a> used for coloring and shading geometry. All materials inherit from it and almost all <a class=\"reference internal\" href=\"class_visualinstance3d.html#class-visualinstance3d\"><span class=\"std std-ref\">VisualInstance3D</span></a> derived nodes carry a Material. A few flags and parameters are shared between all material types and are configured here.</p>\n"
            },
            "class_mesh": {
                "url": "https://docs.godotengine.org/en/4.1/classes/class_mesh.html",
                "title": "Mesh",
                "blurb": "<p><strong>Inherits:</strong> <a class=\"reference internal\" href=\"class_resource.html#class-resource\"><span class=\"std std-ref\">Resource</span></a> <strong>&lt;</strong> <a class=\"reference internal\" href=\"class_refcounted.html#class-refcounted\"><span class=\"std std-ref\">RefCounted</span></a> <strong>&lt;</strong> <a class=\"reference internal\" href=\"class_object.html#class-object\"><span class=\"std std-ref\">Object</span></a></p><p><strong>Inherited By:</strong> <a class=\"reference internal\" href=\"class_arraymesh.html#class-arraymesh\"><span class=\"std std-ref\">ArrayMesh</span></a>, <a class=\"reference internal\" href=\"class_immediatemesh.html#class-immediatemesh\"><span class=\"std std-ref\">ImmediateMesh</span></a>, <a class=\"reference internal\" href=\"class_placeholdermesh.html#class-placeholdermesh\"><span class=\"std std-ref\">PlaceholderMesh</span></a>, <a class=\"reference internal\" href=\"class_primitivemesh.html#class-primitivemesh\"><span class=\"std std-ref\">PrimitiveMesh</span></a></p><p>A <a class=\"reference internal\" href=\"class_resource.html#class-resource\"><span class=\"std std-ref\">Resource</span></a> that contains vertex array-based geometry.</p>",
                "description": "\n\n<p>Mesh is a type of <a class=\"reference internal\" href=\"class_resource.html#class-resource\"><span class=\"std std-ref\">Resource</span></a> that contains vertex array-based geometry, divided in <em>surfaces</em>. Each surface contains a completely separate array and a material used to draw it. Design wise, a mesh with multiple surfaces is preferred to a single surface, because objects created in 3D editing software commonly contain multiple materials.</p>\n"
            },
            "class_meshlibrary": {
                "url": "https://docs.godotengine.org/en/4.1/classes/class_meshlibrary.html",
                "title": "MeshLibrary",
                "blurb": "<p><strong>Inherits:</strong> <a class=\"reference internal\" href=\"class_resource.html#class-resource\"><span class=\"std std-ref\">Resource</span></a> <strong>&lt;</strong> <a class=\"reference internal\" href=\"class_refcounted.html#class-refcounted\"><span class=\"std std-ref\">RefCounted</span></a> <strong>&lt;</strong> <a class=\"reference internal\" href=\"class_object.html#class-object\"><span class=\"std std-ref\">Object</span></a></p><p>Library of meshes.</p>",
                "description": "\n\n<p>A library of meshes. Contains a list of <a class=\"reference internal\" href=\"class_mesh.html#class-mesh\"><span class=\"std std-ref\">Mesh</span></a> resources, each with a name and ID. Each item can also include collision and navigation shapes. This resource is used in <a class=\"reference internal\" href=\"class_gridmap.html#class-gridmap\"><span class=\"std std-ref\">GridMap</span></a>.</p>\n"
            },
            "class_meshtexture": {
                "url": "https://docs.godotengine.org/en/4.1/classes/class_meshtexture.html",
                "title": "MeshTexture",
                "blurb": "<p><strong>Inherits:</strong> <a class=\"reference internal\" href=\"class_texture2d.html#class-texture2d\"><span class=\"std std-ref\">Texture2D</span></a> <strong>&lt;</strong> <a class=\"reference internal\" href=\"class_texture.html#class-texture\"><span class=\"std std-ref\">Texture</span></a> <strong>&lt;</strong> <a class=\"reference internal\" href=\"class_resource.html#class-resource\"><span class=\"std std-ref\">Resource</span></a> <strong>&lt;</strong> <a class=\"reference internal\" href=\"class_refcounted.html#class-refcounted\"><span class=\"std std-ref\">RefCounted</span></a> <strong>&lt;</strong> <a class=\"reference internal\" href=\"class_object.html#class-object\"><span class=\"std std-ref\">Object</span></a></p><p>Simple texture that uses a mesh to draw itself.</p>",
                "description": "\n\n<p>Simple texture that uses a mesh to draw itself. It's limited because flags can't be changed and region drawing is not supported.</p>\n"
            },
            "class_missingresource": {
                "url": "https://docs.godotengine.org/en/4.1/classes/class_missingresource.html",
                "title": "MissingResource",
                "blurb": "<p><strong>Inherits:</strong> <a class=\"reference internal\" href=\"class_resource.html#class-resource\"><span class=\"std std-ref\">Resource</span></a> <strong>&lt;</strong> <a class=\"reference internal\" href=\"class_refcounted.html#class-refcounted\"><span class=\"std std-ref\">RefCounted</span></a> <strong>&lt;</strong> <a class=\"reference internal\" href=\"class_object.html#class-object\"><span class=\"std std-ref\">Object</span></a></p><p>An internal editor class intended for keeping the data of unrecognized resources.</p>",
                "description": "\n\n<p>This is an internal editor class intended for keeping data of resources of unknown type (most likely this type was supplied by an extension that is no longer loaded). It can't be manually instantiated or placed in the scene. Ignore it if you don't know what it is.</p>\n"
            },
            "class_multimesh": {
                "url": "https://docs.godotengine.org/en/4.1/classes/class_multimesh.html",
                "title": "MultiMesh",
                "blurb": "<p><strong>Inherits:</strong> <a class=\"reference internal\" href=\"class_resource.html#class-resource\"><span class=\"std std-ref\">Resource</span></a> <strong>&lt;</strong> <a class=\"reference internal\" href=\"class_refcounted.html#class-refcounted\"><span class=\"std std-ref\">RefCounted</span></a> <strong>&lt;</strong> <a class=\"reference internal\" href=\"class_object.html#class-object\"><span class=\"std std-ref\">Object</span></a></p><p>Provides high-performance drawing of a mesh multiple times using GPU instancing.</p>",
                "description": "\n\n<p>MultiMesh provides low-level mesh instancing. Drawing thousands of <a class=\"reference internal\" href=\"class_meshinstance3d.html#class-meshinstance3d\"><span class=\"std std-ref\">MeshInstance3D</span></a> nodes can be slow, since each object is submitted to the GPU then drawn individually.</p>\n<p>MultiMesh is much faster as it can draw thousands of instances with a single draw call, resulting in less API overhead.</p>\n<p>As a drawback, if the instances are too far away from each other, performance may be reduced as every single instance will always render (they are spatially indexed as one, for the whole object).</p>\n<p>Since instances may have any behavior, the AABB used for visibility must be provided by the user.</p>\n<p><strong>Note:</strong> A MultiMesh is a single object, therefore the same maximum lights per object restriction applies. This means, that once the maximum lights are consumed by one or more instances, the rest of the MultiMesh instances will <strong>not</strong> receive any lighting.</p>\n<p><strong>Note:</strong> Blend Shapes will be ignored if used in a MultiMesh.</p>\n"
            },
            "class_navigationmesh": {
                "url": "https://docs.godotengine.org/en/4.1/classes/class_navigationmesh.html",
                "title": "NavigationMesh",
                "blurb": "<p><strong>Inherits:</strong> <a class=\"reference internal\" href=\"class_resource.html#class-resource\"><span class=\"std std-ref\">Resource</span></a> <strong>&lt;</strong> <a class=\"reference internal\" href=\"class_refcounted.html#class-refcounted\"><span class=\"std std-ref\">RefCounted</span></a> <strong>&lt;</strong> <a class=\"reference internal\" href=\"class_object.html#class-object\"><span class=\"std std-ref\">Object</span></a></p><p>A navigation mesh that defines traversable areas and obstacles.</p>",
                "description": "\n\n<p>A navigation mesh is a collection of polygons that define which areas of an environment are traversable to aid agents in pathfinding through complicated spaces.</p>\n"
            },
            "class_navigationmeshsourcegeometrydata3d": {
                "url": "https://docs.godotengine.org/en/4.1/classes/class_navigationmeshsourcegeometrydata3d.html",
                "title": "NavigationMeshSourceGeometryData3D",
                "blurb": "<p><strong>Inherits:</strong> <a class=\"reference internal\" href=\"class_resource.html#class-resource\"><span class=\"std std-ref\">Resource</span></a> <strong>&lt;</strong> <a class=\"reference internal\" href=\"class_refcounted.html#class-refcounted\"><span class=\"std std-ref\">RefCounted</span></a> <strong>&lt;</strong> <a class=\"reference internal\" href=\"class_object.html#class-object\"><span class=\"std std-ref\">Object</span></a></p><p>Container for parsed source geometry data used in navigation mesh baking.</p>",
                "description": "\n\n<p>Container for parsed source geometry data used in navigation mesh baking.</p>\n"
            },
            "class_navigationpolygon": {
                "url": "https://docs.godotengine.org/en/4.1/classes/class_navigationpolygon.html",
                "title": "NavigationPolygon",
                "blurb": "<p><strong>Inherits:</strong> <a class=\"reference internal\" href=\"class_resource.html#class-resource\"><span class=\"std std-ref\">Resource</span></a> <strong>&lt;</strong> <a class=\"reference internal\" href=\"class_refcounted.html#class-refcounted\"><span class=\"std std-ref\">RefCounted</span></a> <strong>&lt;</strong> <a class=\"reference internal\" href=\"class_object.html#class-object\"><span class=\"std std-ref\">Object</span></a></p><p>A navigation polygon that defines traversable areas and obstacles.</p>",
                "description": "\n\n<p>There are two ways to create polygons. Either by using the <a class=\"reference internal\" href=\"#class-navigationpolygon-method-add-outline\"><span class=\"std std-ref\">add_outline</span></a> method, or using the <a class=\"reference internal\" href=\"#class-navigationpolygon-method-add-polygon\"><span class=\"std std-ref\">add_polygon</span></a> method.</p>\n<p>Using <a class=\"reference internal\" href=\"#class-navigationpolygon-method-add-outline\"><span class=\"std std-ref\">add_outline</span></a>:</p>\n<div class=\"sphinx-tabs docutils container\">\n<div aria-label=\"Tabbed content\" class=\"closeable\" role=\"tablist\"><button aria-controls=\"panel-0-R0RTY3JpcHQ=\" aria-selected=\"true\" class=\"sphinx-tabs-tab code-tab group-tab\" id=\"tab-0-R0RTY3JpcHQ=\" name=\"R0RTY3JpcHQ=\" role=\"tab\" tabindex=\"0\">GDScript</button><button aria-controls=\"panel-0-QyM=\" aria-selected=\"false\" class=\"sphinx-tabs-tab code-tab group-tab\" id=\"tab-0-QyM=\" name=\"QyM=\" role=\"tab\" tabindex=\"-1\">C#</button></div><div aria-labelledby=\"tab-0-R0RTY3JpcHQ=\" class=\"sphinx-tabs-panel code-tab group-tab\" id=\"panel-0-R0RTY3JpcHQ=\" name=\"R0RTY3JpcHQ=\" role=\"tabpanel\" tabindex=\"0\"><div class=\"highlight-gdscript notranslate\"><div class=\"highlight\"><pre><span></span><span class=\"k\">var</span> <span class=\"n\">polygon</span> <span class=\"o\">=</span> <span class=\"n\">NavigationPolygon</span><span class=\"o\">.</span><span class=\"n\">new</span><span class=\"p\">()</span>\n<span class=\"k\">var</span> <span class=\"n\">outline</span> <span class=\"o\">=</span> <span class=\"nb nb-Type\">PackedVector2Array</span><span class=\"p\">([</span><span class=\"nb nb-Type\">Vector2</span><span class=\"p\">(</span><span class=\"mi\">0</span><span class=\"p\">,</span> <span class=\"mi\">0</span><span class=\"p\">),</span> <span class=\"nb nb-Type\">Vector2</span><span class=\"p\">(</span><span class=\"mi\">0</span><span class=\"p\">,</span> <span class=\"mi\">50</span><span class=\"p\">),</span> <span class=\"nb nb-Type\">Vector2</span><span class=\"p\">(</span><span class=\"mi\">50</span><span class=\"p\">,</span> <span class=\"mi\">50</span><span class=\"p\">),</span> <span class=\"nb nb-Type\">Vector2</span><span class=\"p\">(</span><span class=\"mi\">50</span><span class=\"p\">,</span> <span class=\"mi\">0</span><span class=\"p\">)])</span>\n<span class=\"n\">polygon</span><span class=\"o\">.</span><span class=\"n\">add_outline</span><span class=\"p\">(</span><span class=\"n\">outline</span><span class=\"p\">)</span>\n<span class=\"n\">polygon</span><span class=\"o\">.</span><span class=\"n\">make_polygons_from_outlines</span><span class=\"p\">()</span>\n<span class=\"o\">$</span><span class=\"n\">NavigationRegion2D</span><span class=\"o\">.</span><span class=\"n\">navigation_polygon</span> <span class=\"o\">=</span> <span class=\"n\">polygon</span>\n</pre></div>\n</div>\n</div><div aria-labelledby=\"tab-0-QyM=\" class=\"sphinx-tabs-panel code-tab group-tab\" hidden=\"true\" id=\"panel-0-QyM=\" name=\"QyM=\" role=\"tabpanel\" tabindex=\"0\"><div class=\"highlight-csharp notranslate\"><div class=\"highlight\"><pre><span></span><span class=\"kt\">var</span><span class=\"w\"> </span><span class=\"n\">polygon</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"k\">new</span><span class=\"w\"> </span><span class=\"n\">NavigationPolygon</span><span class=\"p\">();</span>\n<span class=\"kt\">var</span><span class=\"w\"> </span><span class=\"n\">outline</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"k\">new</span><span class=\"w\"> </span><span class=\"n\">Vector2</span><span class=\"p\">[]</span><span class=\"w\"> </span><span class=\"p\">{</span><span class=\"w\"> </span><span class=\"k\">new</span><span class=\"w\"> </span><span class=\"n\">Vector2</span><span class=\"p\">(</span><span class=\"m\">0</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"m\">0</span><span class=\"p\">),</span><span class=\"w\"> </span><span class=\"k\">new</span><span class=\"w\"> </span><span class=\"n\">Vector2</span><span class=\"p\">(</span><span class=\"m\">0</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"m\">50</span><span class=\"p\">),</span><span class=\"w\"> </span><span class=\"k\">new</span><span class=\"w\"> </span><span class=\"n\">Vector2</span><span class=\"p\">(</span><span class=\"m\">50</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"m\">50</span><span class=\"p\">),</span><span class=\"w\"> </span><span class=\"k\">new</span><span class=\"w\"> </span><span class=\"n\">Vector2</span><span class=\"p\">(</span><span class=\"m\">50</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"m\">0</span><span class=\"p\">)</span><span class=\"w\"> </span><span class=\"p\">};</span>\n<span class=\"n\">polygon</span><span class=\"p\">.</span><span class=\"n\">AddOutline</span><span class=\"p\">(</span><span class=\"n\">outline</span><span class=\"p\">);</span>\n<span class=\"n\">polygon</span><span class=\"p\">.</span><span class=\"n\">MakePolygonsFromOutlines</span><span class=\"p\">();</span>\n<span class=\"n\">GetNode</span><span class=\"o\">&lt;</span><span class=\"n\">NavigationRegion2D</span><span class=\"o\">&gt;</span><span class=\"p\">(</span><span class=\"s\">\"NavigationRegion2D\"</span><span class=\"p\">).</span><span class=\"n\">NavigationPolygon</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"n\">polygon</span><span class=\"p\">;</span>\n</pre></div>\n</div>\n</div></div>\n<p>Using <a class=\"reference internal\" href=\"#class-navigationpolygon-method-add-polygon\"><span class=\"std std-ref\">add_polygon</span></a> and indices of the vertices array.</p>\n<div class=\"sphinx-tabs docutils container\">\n<div aria-label=\"Tabbed content\" class=\"closeable\" role=\"tablist\"><button aria-controls=\"panel-1-R0RTY3JpcHQ=\" aria-selected=\"true\" class=\"sphinx-tabs-tab code-tab group-tab\" id=\"tab-1-R0RTY3JpcHQ=\" name=\"R0RTY3JpcHQ=\" role=\"tab\" tabindex=\"0\">GDScript</button><button aria-controls=\"panel-1-QyM=\" aria-selected=\"false\" class=\"sphinx-tabs-tab code-tab group-tab\" id=\"tab-1-QyM=\" name=\"QyM=\" role=\"tab\" tabindex=\"-1\">C#</button></div><div aria-labelledby=\"tab-1-R0RTY3JpcHQ=\" class=\"sphinx-tabs-panel code-tab group-tab\" id=\"panel-1-R0RTY3JpcHQ=\" name=\"R0RTY3JpcHQ=\" role=\"tabpanel\" tabindex=\"0\"><div class=\"highlight-gdscript notranslate\"><div class=\"highlight\"><pre><span></span><span class=\"k\">var</span> <span class=\"n\">polygon</span> <span class=\"o\">=</span> <span class=\"n\">NavigationPolygon</span><span class=\"o\">.</span><span class=\"n\">new</span><span class=\"p\">()</span>\n<span class=\"k\">var</span> <span class=\"n\">vertices</span> <span class=\"o\">=</span> <span class=\"nb nb-Type\">PackedVector2Array</span><span class=\"p\">([</span><span class=\"nb nb-Type\">Vector2</span><span class=\"p\">(</span><span class=\"mi\">0</span><span class=\"p\">,</span> <span class=\"mi\">0</span><span class=\"p\">),</span> <span class=\"nb nb-Type\">Vector2</span><span class=\"p\">(</span><span class=\"mi\">0</span><span class=\"p\">,</span> <span class=\"mi\">50</span><span class=\"p\">),</span> <span class=\"nb nb-Type\">Vector2</span><span class=\"p\">(</span><span class=\"mi\">50</span><span class=\"p\">,</span> <span class=\"mi\">50</span><span class=\"p\">),</span> <span class=\"nb nb-Type\">Vector2</span><span class=\"p\">(</span><span class=\"mi\">50</span><span class=\"p\">,</span> <span class=\"mi\">0</span><span class=\"p\">)])</span>\n<span class=\"n\">polygon</span><span class=\"o\">.</span><span class=\"n\">vertices</span> <span class=\"o\">=</span> <span class=\"n\">vertices</span>\n<span class=\"k\">var</span> <span class=\"n\">indices</span> <span class=\"o\">=</span> <span class=\"nb nb-Type\">PackedInt32Array</span><span class=\"p\">([</span><span class=\"mi\">0</span><span class=\"p\">,</span> <span class=\"mi\">1</span><span class=\"p\">,</span> <span class=\"mi\">2</span><span class=\"p\">,</span> <span class=\"mi\">3</span><span class=\"p\">])</span>\n<span class=\"n\">polygon</span><span class=\"o\">.</span><span class=\"n\">add_polygon</span><span class=\"p\">(</span><span class=\"n\">indices</span><span class=\"p\">)</span>\n<span class=\"o\">$</span><span class=\"n\">NavigationRegion2D</span><span class=\"o\">.</span><span class=\"n\">navigation_polygon</span> <span class=\"o\">=</span> <span class=\"n\">polygon</span>\n</pre></div>\n</div>\n</div><div aria-labelledby=\"tab-1-QyM=\" class=\"sphinx-tabs-panel code-tab group-tab\" hidden=\"true\" id=\"panel-1-QyM=\" name=\"QyM=\" role=\"tabpanel\" tabindex=\"0\"><div class=\"highlight-csharp notranslate\"><div class=\"highlight\"><pre><span></span><span class=\"kt\">var</span><span class=\"w\"> </span><span class=\"n\">polygon</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"k\">new</span><span class=\"w\"> </span><span class=\"n\">NavigationPolygon</span><span class=\"p\">();</span>\n<span class=\"kt\">var</span><span class=\"w\"> </span><span class=\"n\">vertices</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"k\">new</span><span class=\"w\"> </span><span class=\"n\">Vector2</span><span class=\"p\">[]</span><span class=\"w\"> </span><span class=\"p\">{</span><span class=\"w\"> </span><span class=\"k\">new</span><span class=\"w\"> </span><span class=\"n\">Vector2</span><span class=\"p\">(</span><span class=\"m\">0</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"m\">0</span><span class=\"p\">),</span><span class=\"w\"> </span><span class=\"k\">new</span><span class=\"w\"> </span><span class=\"n\">Vector2</span><span class=\"p\">(</span><span class=\"m\">0</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"m\">50</span><span class=\"p\">),</span><span class=\"w\"> </span><span class=\"k\">new</span><span class=\"w\"> </span><span class=\"n\">Vector2</span><span class=\"p\">(</span><span class=\"m\">50</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"m\">50</span><span class=\"p\">),</span><span class=\"w\"> </span><span class=\"k\">new</span><span class=\"w\"> </span><span class=\"n\">Vector2</span><span class=\"p\">(</span><span class=\"m\">50</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"m\">0</span><span class=\"p\">)</span><span class=\"w\"> </span><span class=\"p\">};</span>\n<span class=\"n\">polygon</span><span class=\"p\">.</span><span class=\"n\">Vertices</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"n\">vertices</span><span class=\"p\">;</span>\n<span class=\"kt\">var</span><span class=\"w\"> </span><span class=\"n\">indices</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"k\">new</span><span class=\"w\"> </span><span class=\"kt\">int</span><span class=\"p\">[]</span><span class=\"w\"> </span><span class=\"p\">{</span><span class=\"w\"> </span><span class=\"m\">0</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"m\">1</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"m\">2</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"m\">3</span><span class=\"w\"> </span><span class=\"p\">};</span>\n<span class=\"n\">polygon</span><span class=\"p\">.</span><span class=\"n\">AddPolygon</span><span class=\"p\">(</span><span class=\"n\">indices</span><span class=\"p\">);</span>\n<span class=\"n\">GetNode</span><span class=\"o\">&lt;</span><span class=\"n\">NavigationRegion2D</span><span class=\"o\">&gt;</span><span class=\"p\">(</span><span class=\"s\">\"NavigationRegion2D\"</span><span class=\"p\">).</span><span class=\"n\">NavigationPolygon</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"n\">polygon</span><span class=\"p\">;</span>\n</pre></div>\n</div>\n</div></div>\n"
            },
            "class_noise": {
                "url": "https://docs.godotengine.org/en/4.1/classes/class_noise.html",
                "title": "Noise",
                "blurb": "<p><strong>Inherits:</strong> <a class=\"reference internal\" href=\"class_resource.html#class-resource\"><span class=\"std std-ref\">Resource</span></a> <strong>&lt;</strong> <a class=\"reference internal\" href=\"class_refcounted.html#class-refcounted\"><span class=\"std std-ref\">RefCounted</span></a> <strong>&lt;</strong> <a class=\"reference internal\" href=\"class_object.html#class-object\"><span class=\"std std-ref\">Object</span></a></p><p><strong>Inherited By:</strong> <a class=\"reference internal\" href=\"class_fastnoiselite.html#class-fastnoiselite\"><span class=\"std std-ref\">FastNoiseLite</span></a></p><p>Abstract base class for noise generators.</p>",
                "description": "\n\n<p>This class defines the interface for noise generation libraries to inherit from.</p>\n<p>A default get_seamless_noise() implementation is provided for libraries that do not provide seamless noise. This function requests a larger image from get_image(), reverses the quadrants of the image, then uses the strips of extra width to blend over the seams.</p>\n<p>Inheriting noise classes can optionally override this function to provide a more optimal algorithm.</p>\n"
            },
            "class_noisetexture2d": {
                "url": "https://docs.godotengine.org/en/4.1/classes/class_noisetexture2d.html",
                "title": "NoiseTexture2D",
                "blurb": "<p><strong>Inherits:</strong> <a class=\"reference internal\" href=\"class_texture2d.html#class-texture2d\"><span class=\"std std-ref\">Texture2D</span></a> <strong>&lt;</strong> <a class=\"reference internal\" href=\"class_texture.html#class-texture\"><span class=\"std std-ref\">Texture</span></a> <strong>&lt;</strong> <a class=\"reference internal\" href=\"class_resource.html#class-resource\"><span class=\"std std-ref\">Resource</span></a> <strong>&lt;</strong> <a class=\"reference internal\" href=\"class_refcounted.html#class-refcounted\"><span class=\"std std-ref\">RefCounted</span></a> <strong>&lt;</strong> <a class=\"reference internal\" href=\"class_object.html#class-object\"><span class=\"std std-ref\">Object</span></a></p><p>A texture filled with noise generated by a <a class=\"reference internal\" href=\"class_noise.html#class-noise\"><span class=\"std std-ref\">Noise</span></a> object.</p>",
                "description": "\n\n<p>Uses <a class=\"reference internal\" href=\"class_fastnoiselite.html#class-fastnoiselite\"><span class=\"std std-ref\">FastNoiseLite</span></a> or other libraries to fill the texture data of your desired size. <strong>NoiseTexture2D</strong> can also generate normal map textures.</p>\n<p>The class uses <a class=\"reference internal\" href=\"class_thread.html#class-thread\"><span class=\"std std-ref\">Thread</span></a>s to generate the texture data internally, so <a class=\"reference internal\" href=\"class_texture2d.html#class-texture2d-method-get-image\"><span class=\"std std-ref\">Texture2D.get_image</span></a> may return <code class=\"docutils literal notranslate\"><span class=\"pre\">null</span></code> if the generation process has not completed yet. In that case, you need to wait for the texture to be generated before accessing the image and the generated byte data:</p>\n<div class=\"highlight-gdscript notranslate\"><div class=\"highlight\"><pre><span></span><span class=\"k\">var</span> <span class=\"n\">texture</span> <span class=\"o\">=</span> <span class=\"n\">NoiseTexture2D</span><span class=\"o\">.</span><span class=\"n\">new</span><span class=\"p\">()</span>\n<span class=\"n\">texture</span><span class=\"o\">.</span><span class=\"n\">noise</span> <span class=\"o\">=</span> <span class=\"n\">FastNoiseLite</span><span class=\"o\">.</span><span class=\"n\">new</span><span class=\"p\">()</span>\n<span class=\"k\">await</span> <span class=\"n\">texture</span><span class=\"o\">.</span><span class=\"n\">changed</span>\n<span class=\"k\">var</span> <span class=\"n\">image</span> <span class=\"o\">=</span> <span class=\"n\">texture</span><span class=\"o\">.</span><span class=\"n\">get_image</span><span class=\"p\">()</span>\n<span class=\"k\">var</span> <span class=\"n\">data</span> <span class=\"o\">=</span> <span class=\"n\">image</span><span class=\"o\">.</span><span class=\"n\">get_data</span><span class=\"p\">()</span>\n</pre></div>\n</div>\n"
            },
            "class_noisetexture3d": {
                "url": "https://docs.godotengine.org/en/4.1/classes/class_noisetexture3d.html",
                "title": "NoiseTexture3D",
                "blurb": "<p><strong>Inherits:</strong> <a class=\"reference internal\" href=\"class_texture3d.html#class-texture3d\"><span class=\"std std-ref\">Texture3D</span></a> <strong>&lt;</strong> <a class=\"reference internal\" href=\"class_texture.html#class-texture\"><span class=\"std std-ref\">Texture</span></a> <strong>&lt;</strong> <a class=\"reference internal\" href=\"class_resource.html#class-resource\"><span class=\"std std-ref\">Resource</span></a> <strong>&lt;</strong> <a class=\"reference internal\" href=\"class_refcounted.html#class-refcounted\"><span class=\"std std-ref\">RefCounted</span></a> <strong>&lt;</strong> <a class=\"reference internal\" href=\"class_object.html#class-object\"><span class=\"std std-ref\">Object</span></a></p><p>A texture filled with noise generated by a <a class=\"reference internal\" href=\"class_noise.html#class-noise\"><span class=\"std std-ref\">Noise</span></a> object.</p>",
                "description": "\n\n<p>Uses <a class=\"reference internal\" href=\"class_fastnoiselite.html#class-fastnoiselite\"><span class=\"std std-ref\">FastNoiseLite</span></a> or other libraries to fill the texture data of your desired size.</p>\n<p>The class uses <a class=\"reference internal\" href=\"class_thread.html#class-thread\"><span class=\"std std-ref\">Thread</span></a>s to generate the texture data internally, so <a class=\"reference internal\" href=\"class_texture3d.html#id1\"><span class=\"std std-ref\">Texture3D.get_data</span></a> may return <code class=\"docutils literal notranslate\"><span class=\"pre\">null</span></code> if the generation process has not completed yet. In that case, you need to wait for the texture to be generated before accessing the image:</p>\n<div class=\"highlight-gdscript notranslate\"><div class=\"highlight\"><pre><span></span><span class=\"k\">var</span> <span class=\"n\">texture</span> <span class=\"o\">=</span> <span class=\"n\">NoiseTexture3D</span><span class=\"o\">.</span><span class=\"n\">new</span><span class=\"p\">()</span>\n<span class=\"n\">texture</span><span class=\"o\">.</span><span class=\"n\">noise</span> <span class=\"o\">=</span> <span class=\"n\">FastNoiseLite</span><span class=\"o\">.</span><span class=\"n\">new</span><span class=\"p\">()</span>\n<span class=\"k\">await</span> <span class=\"n\">texture</span><span class=\"o\">.</span><span class=\"n\">changed</span>\n<span class=\"k\">var</span> <span class=\"n\">data</span> <span class=\"o\">=</span> <span class=\"n\">texture</span><span class=\"o\">.</span><span class=\"n\">get_data</span><span class=\"p\">()</span>\n</pre></div>\n</div>\n"
            },
            "class_occluder3d": {
                "url": "https://docs.godotengine.org/en/4.1/classes/class_occluder3d.html",
                "title": "Occluder3D",
                "blurb": "<p><strong>Inherits:</strong> <a class=\"reference internal\" href=\"class_resource.html#class-resource\"><span class=\"std std-ref\">Resource</span></a> <strong>&lt;</strong> <a class=\"reference internal\" href=\"class_refcounted.html#class-refcounted\"><span class=\"std std-ref\">RefCounted</span></a> <strong>&lt;</strong> <a class=\"reference internal\" href=\"class_object.html#class-object\"><span class=\"std std-ref\">Object</span></a></p><p><strong>Inherited By:</strong> <a class=\"reference internal\" href=\"class_arrayoccluder3d.html#class-arrayoccluder3d\"><span class=\"std std-ref\">ArrayOccluder3D</span></a>, <a class=\"reference internal\" href=\"class_boxoccluder3d.html#class-boxoccluder3d\"><span class=\"std std-ref\">BoxOccluder3D</span></a>, <a class=\"reference internal\" href=\"class_polygonoccluder3d.html#class-polygonoccluder3d\"><span class=\"std std-ref\">PolygonOccluder3D</span></a>, <a class=\"reference internal\" href=\"class_quadoccluder3d.html#class-quadoccluder3d\"><span class=\"std std-ref\">QuadOccluder3D</span></a>, <a class=\"reference internal\" href=\"class_sphereoccluder3d.html#class-sphereoccluder3d\"><span class=\"std std-ref\">SphereOccluder3D</span></a></p><p>Occluder shape resource for use with occlusion culling in <a class=\"reference internal\" href=\"class_occluderinstance3d.html#class-occluderinstance3d\"><span class=\"std std-ref\">OccluderInstance3D</span></a>.</p>",
                "description": "\n\n<p><strong>Occluder3D</strong> stores an occluder shape that can be used by the engine's occlusion culling system.</p>\n<p>See <a class=\"reference internal\" href=\"class_occluderinstance3d.html#class-occluderinstance3d\"><span class=\"std std-ref\">OccluderInstance3D</span></a>'s documentation for instructions on setting up occlusion culling.</p>\n"
            },
            "class_occluderpolygon2d": {
                "url": "https://docs.godotengine.org/en/4.1/classes/class_occluderpolygon2d.html",
                "title": "OccluderPolygon2D",
                "blurb": "<p><strong>Inherits:</strong> <a class=\"reference internal\" href=\"class_resource.html#class-resource\"><span class=\"std std-ref\">Resource</span></a> <strong>&lt;</strong> <a class=\"reference internal\" href=\"class_refcounted.html#class-refcounted\"><span class=\"std std-ref\">RefCounted</span></a> <strong>&lt;</strong> <a class=\"reference internal\" href=\"class_object.html#class-object\"><span class=\"std std-ref\">Object</span></a></p><p>Defines a 2D polygon for LightOccluder2D.</p>",
                "description": "\n\n<p>Editor facility that helps you draw a 2D polygon used as resource for <a class=\"reference internal\" href=\"class_lightoccluder2d.html#class-lightoccluder2d\"><span class=\"std std-ref\">LightOccluder2D</span></a>.</p>\n"
            },
            "class_oggpacketsequence": {
                "url": "https://docs.godotengine.org/en/4.1/classes/class_oggpacketsequence.html",
                "title": "OggPacketSequence",
                "blurb": "<p><strong>Inherits:</strong> <a class=\"reference internal\" href=\"class_resource.html#class-resource\"><span class=\"std std-ref\">Resource</span></a> <strong>&lt;</strong> <a class=\"reference internal\" href=\"class_refcounted.html#class-refcounted\"><span class=\"std std-ref\">RefCounted</span></a> <strong>&lt;</strong> <a class=\"reference internal\" href=\"class_object.html#class-object\"><span class=\"std std-ref\">Object</span></a></p><p>A sequence of Ogg packets.</p>",
                "description": "\n\n<p>A sequence of Ogg packets.</p>\n"
            },
            "class_openxraction": {
                "url": "https://docs.godotengine.org/en/4.1/classes/class_openxraction.html",
                "title": "OpenXRAction",
                "blurb": "<p><strong>Inherits:</strong> <a class=\"reference internal\" href=\"class_resource.html#class-resource\"><span class=\"std std-ref\">Resource</span></a> <strong>&lt;</strong> <a class=\"reference internal\" href=\"class_refcounted.html#class-refcounted\"><span class=\"std std-ref\">RefCounted</span></a> <strong>&lt;</strong> <a class=\"reference internal\" href=\"class_object.html#class-object\"><span class=\"std std-ref\">Object</span></a></p><p>An OpenXR action.</p>",
                "description": "\n\n<p>This resource defines an OpenXR action. Actions can be used both for inputs (buttons/joystick/trigger/etc) and outputs (haptics).</p>\n<p>OpenXR performs automatic conversion between action type and input type whenever possible. An analog trigger bound to a boolean action will thus return <code class=\"docutils literal notranslate\"><span class=\"pre\">false</span></code> if the trigger is depressed and <code class=\"docutils literal notranslate\"><span class=\"pre\">true</span></code> if pressed fully.</p>\n<p>Actions are not directly bound to specific devices, instead OpenXR recognizes a limited number of top level paths that identify devices by usage. We can restrict which devices an action can be bound to by these top level paths. For instance an action that should only be used for hand held controllers can have the top level paths \"/user/hand/left\" and \"/user/hand/right\" associated with them. See the <a class=\"reference external\" href=\"https://www.khronos.org/registry/OpenXR/specs/1.0/html/xrspec.html#semantic-path-reserved\">reserved path section in the OpenXR specification</a> for more info on the top level paths.</p>\n<p>Note that the name of the resource is used to register the action with.</p>\n"
            },
            "class_openxractionmap": {
                "url": "https://docs.godotengine.org/en/4.1/classes/class_openxractionmap.html",
                "title": "OpenXRActionMap",
                "blurb": "<p><strong>Inherits:</strong> <a class=\"reference internal\" href=\"class_resource.html#class-resource\"><span class=\"std std-ref\">Resource</span></a> <strong>&lt;</strong> <a class=\"reference internal\" href=\"class_refcounted.html#class-refcounted\"><span class=\"std std-ref\">RefCounted</span></a> <strong>&lt;</strong> <a class=\"reference internal\" href=\"class_object.html#class-object\"><span class=\"std std-ref\">Object</span></a></p><p>Collection of <a class=\"reference internal\" href=\"class_openxractionset.html#class-openxractionset\"><span class=\"std std-ref\">OpenXRActionSet</span></a> and <a class=\"reference internal\" href=\"class_openxrinteractionprofile.html#class-openxrinteractionprofile\"><span class=\"std std-ref\">OpenXRInteractionProfile</span></a> resources for the OpenXR module.</p>",
                "description": "\n\n<p>OpenXR uses an action system similar to Godots Input map system to bind inputs and outputs on various types of XR controllers to named actions. OpenXR specifies more detail on these inputs and outputs than Godot supports.</p>\n<p>Another important distinction is that OpenXR offers no control over these bindings. The bindings we register are suggestions, it is up to the XR runtime to offer users the ability to change these bindings. This allows the XR runtime to fill in the gaps if new hardware becomes available.</p>\n<p>The action map therefore needs to be loaded at startup and can't be changed afterwards. This resource is a container for the entire action map.</p>\n"
            },
            "class_openxractionset": {
                "url": "https://docs.godotengine.org/en/4.1/classes/class_openxractionset.html",
                "title": "OpenXRActionSet",
                "blurb": "<p><strong>Inherits:</strong> <a class=\"reference internal\" href=\"class_resource.html#class-resource\"><span class=\"std std-ref\">Resource</span></a> <strong>&lt;</strong> <a class=\"reference internal\" href=\"class_refcounted.html#class-refcounted\"><span class=\"std std-ref\">RefCounted</span></a> <strong>&lt;</strong> <a class=\"reference internal\" href=\"class_object.html#class-object\"><span class=\"std std-ref\">Object</span></a></p><p>Collection of <a class=\"reference internal\" href=\"class_openxraction.html#class-openxraction\"><span class=\"std std-ref\">OpenXRAction</span></a> resources that make up an action set.</p>",
                "description": "\n\n<p>Action sets in OpenXR define a collection of actions that can be activated in unison. This allows games to easily change between different states that require different inputs or need to reinterpret inputs. For instance we could have an action set that is active when a menu is open, an action set that is active when the player is freely walking around and an action set that is active when the player is controlling a vehicle.</p>\n<p>Action sets can contain the same action with the same name, if such action sets are active at the same time the action set with the highest priority defines which binding is active.</p>\n"
            },
            "class_openxrinteractionprofile": {
                "url": "https://docs.godotengine.org/en/4.1/classes/class_openxrinteractionprofile.html",
                "title": "OpenXRInteractionProfile",
                "blurb": "<p><strong>Inherits:</strong> <a class=\"reference internal\" href=\"class_resource.html#class-resource\"><span class=\"std std-ref\">Resource</span></a> <strong>&lt;</strong> <a class=\"reference internal\" href=\"class_refcounted.html#class-refcounted\"><span class=\"std std-ref\">RefCounted</span></a> <strong>&lt;</strong> <a class=\"reference internal\" href=\"class_object.html#class-object\"><span class=\"std std-ref\">Object</span></a></p><p>Suggested bindings object for OpenXR.</p>",
                "description": "\n\n<p>This object stores suggested bindings for an interaction profile. Interaction profiles define the meta data for a tracked XR device such as an XR controller.</p>\n<p>For more information see the <a class=\"reference external\" href=\"https://www.khronos.org/registry/OpenXR/specs/1.0/html/xrspec.html#semantic-path-interaction-profiles\">interaction profiles info in the OpenXR specification</a>.</p>\n"
            },
            "class_openxripbinding": {
                "url": "https://docs.godotengine.org/en/4.1/classes/class_openxripbinding.html",
                "title": "OpenXRIPBinding",
                "blurb": "<p><strong>Inherits:</strong> <a class=\"reference internal\" href=\"class_resource.html#class-resource\"><span class=\"std std-ref\">Resource</span></a> <strong>&lt;</strong> <a class=\"reference internal\" href=\"class_refcounted.html#class-refcounted\"><span class=\"std std-ref\">RefCounted</span></a> <strong>&lt;</strong> <a class=\"reference internal\" href=\"class_object.html#class-object\"><span class=\"std std-ref\">Object</span></a></p><p>Defines a binding between an <a class=\"reference internal\" href=\"class_openxraction.html#class-openxraction\"><span class=\"std std-ref\">OpenXRAction</span></a> and an XR input or output.</p>",
                "description": "\n\n<p>This binding resource binds an <a class=\"reference internal\" href=\"class_openxraction.html#class-openxraction\"><span class=\"std std-ref\">OpenXRAction</span></a> to inputs or outputs. As most controllers have left hand and right versions that are handled by the same interaction profile we can specify multiple bindings. For instance an action \"Fire\" could be bound to both \"/user/hand/left/input/trigger\" and \"/user/hand/right/input/trigger\".</p>\n"
            },
            "class_optimizedtranslation": {
                "url": "https://docs.godotengine.org/en/4.1/classes/class_optimizedtranslation.html",
                "title": "OptimizedTranslation",
                "blurb": "<p><strong>Inherits:</strong> <a class=\"reference internal\" href=\"class_translation.html#class-translation\"><span class=\"std std-ref\">Translation</span></a> <strong>&lt;</strong> <a class=\"reference internal\" href=\"class_resource.html#class-resource\"><span class=\"std std-ref\">Resource</span></a> <strong>&lt;</strong> <a class=\"reference internal\" href=\"class_refcounted.html#class-refcounted\"><span class=\"std std-ref\">RefCounted</span></a> <strong>&lt;</strong> <a class=\"reference internal\" href=\"class_object.html#class-object\"><span class=\"std std-ref\">Object</span></a></p><p>An optimized translation, used by default for CSV Translations.</p>",
                "description": "\n\n<p>An optimized translation, used by default for CSV Translations. Uses real-time compressed translations, which results in very small dictionaries.</p>\n"
            },
            "class_ormmaterial3d": {
                "url": "https://docs.godotengine.org/en/4.1/classes/class_ormmaterial3d.html",
                "title": "ORMMaterial3D",
                "blurb": "<p><strong>Inherits:</strong> <a class=\"reference internal\" href=\"class_basematerial3d.html#class-basematerial3d\"><span class=\"std std-ref\">BaseMaterial3D</span></a> <strong>&lt;</strong> <a class=\"reference internal\" href=\"class_material.html#class-material\"><span class=\"std std-ref\">Material</span></a> <strong>&lt;</strong> <a class=\"reference internal\" href=\"class_resource.html#class-resource\"><span class=\"std std-ref\">Resource</span></a> <strong>&lt;</strong> <a class=\"reference internal\" href=\"class_refcounted.html#class-refcounted\"><span class=\"std std-ref\">RefCounted</span></a> <strong>&lt;</strong> <a class=\"reference internal\" href=\"class_object.html#class-object\"><span class=\"std std-ref\">Object</span></a></p><p>Physically based rendering (PBR) material that can be applied to 3D objects, can use an ORM texture.</p>",
                "description": "\n\n<p>ORMMaterial3D's properties are inherited from <a class=\"reference internal\" href=\"class_basematerial3d.html#class-basematerial3d\"><span class=\"std std-ref\">BaseMaterial3D</span></a>. Unlike <a class=\"reference internal\" href=\"class_standardmaterial3d.html#class-standardmaterial3d\"><span class=\"std std-ref\">StandardMaterial3D</span></a>, ORMMaterial3D uses a single texture for ambient occlusion, roughness and metallic maps, known as an ORM texture.</p>\n"
            },
            "class_packeddatacontainer": {
                "url": "https://docs.godotengine.org/en/4.1/classes/class_packeddatacontainer.html",
                "title": "PackedDataContainer",
                "blurb": "<p><strong>Inherits:</strong> <a class=\"reference internal\" href=\"class_resource.html#class-resource\"><span class=\"std std-ref\">Resource</span></a> <strong>&lt;</strong> <a class=\"reference internal\" href=\"class_refcounted.html#class-refcounted\"><span class=\"std std-ref\">RefCounted</span></a> <strong>&lt;</strong> <a class=\"reference internal\" href=\"class_object.html#class-object\"><span class=\"std std-ref\">Object</span></a></p><p>Efficiently packs and serializes <a class=\"reference internal\" href=\"class_array.html#class-array\"><span class=\"std std-ref\">Array</span></a> or <a class=\"reference internal\" href=\"class_dictionary.html#class-dictionary\"><span class=\"std std-ref\">Dictionary</span></a>.</p>",
                "description": "\n\n<p><strong>PackedDataContainer</strong> can be used to efficiently store data from untyped containers. The data is packed into raw bytes and can be saved to file. Only <a class=\"reference internal\" href=\"class_array.html#class-array\"><span class=\"std std-ref\">Array</span></a> and <a class=\"reference internal\" href=\"class_dictionary.html#class-dictionary\"><span class=\"std std-ref\">Dictionary</span></a> can be stored this way.</p>\n<p>You can retrieve the data by iterating on the container, which will work as if iterating on the packed data itself. If the packed container is a <a class=\"reference internal\" href=\"class_dictionary.html#class-dictionary\"><span class=\"std std-ref\">Dictionary</span></a>, the data can be retrieved by key names (<a class=\"reference internal\" href=\"class_string.html#class-string\"><span class=\"std std-ref\">String</span></a>/<a class=\"reference internal\" href=\"class_stringname.html#class-stringname\"><span class=\"std std-ref\">StringName</span></a> only).</p>\n<div class=\"highlight-gdscript notranslate\"><div class=\"highlight\"><pre><span></span><span class=\"k\">var</span> <span class=\"n\">data</span> <span class=\"o\">=</span> <span class=\"p\">{</span> <span class=\"s2\">\"key\"</span><span class=\"p\">:</span> <span class=\"s2\">\"value\"</span><span class=\"p\">,</span> <span class=\"s2\">\"another_key\"</span><span class=\"p\">:</span> <span class=\"mi\">123</span><span class=\"p\">,</span> <span class=\"s2\">\"lock\"</span><span class=\"p\">:</span> <span class=\"nb nb-Type\">Vector2</span><span class=\"p\">()</span> <span class=\"p\">}</span>\n<span class=\"k\">var</span> <span class=\"n\">packed</span> <span class=\"o\">=</span> <span class=\"n\">PackedDataContainer</span><span class=\"o\">.</span><span class=\"n\">new</span><span class=\"p\">()</span>\n<span class=\"n\">packed</span><span class=\"o\">.</span><span class=\"n\">pack</span><span class=\"p\">(</span><span class=\"n\">data</span><span class=\"p\">)</span>\n<span class=\"n\">ResourceSaver</span><span class=\"o\">.</span><span class=\"n\">save</span><span class=\"p\">(</span><span class=\"n\">packed</span><span class=\"p\">,</span> <span class=\"s2\">\"packed_data.res\"</span><span class=\"p\">)</span>\n</pre></div>\n</div>\n<div class=\"highlight-gdscript notranslate\"><div class=\"highlight\"><pre><span></span><span class=\"k\">var</span> <span class=\"n\">container</span> <span class=\"o\">=</span> <span class=\"nb\">load</span><span class=\"p\">(</span><span class=\"s2\">\"packed_data.res\"</span><span class=\"p\">)</span>\n<span class=\"k k-ControlFlow\">for</span> <span class=\"n\">key</span> <span class=\"ow\">in</span> <span class=\"n\">container</span><span class=\"p\">:</span>\n    <span class=\"nb\">prints</span><span class=\"p\">(</span><span class=\"n\">key</span><span class=\"p\">,</span> <span class=\"n\">container</span><span class=\"p\">[</span><span class=\"n\">key</span><span class=\"p\">])</span>\n\n<span class=\"c1\"># Prints:</span>\n<span class=\"c1\"># key value</span>\n<span class=\"c1\"># lock (0, 0)</span>\n<span class=\"c1\"># another_key 123</span>\n</pre></div>\n</div>\n<p>Nested containers will be packed recursively. While iterating, they will be returned as <a class=\"reference internal\" href=\"class_packeddatacontainerref.html#class-packeddatacontainerref\"><span class=\"std std-ref\">PackedDataContainerRef</span></a>.</p>\n"
            },
            "class_packedscene": {
                "url": "https://docs.godotengine.org/en/4.1/classes/class_packedscene.html",
                "title": "PackedScene",
                "blurb": "<p><strong>Inherits:</strong> <a class=\"reference internal\" href=\"class_resource.html#class-resource\"><span class=\"std std-ref\">Resource</span></a> <strong>&lt;</strong> <a class=\"reference internal\" href=\"class_refcounted.html#class-refcounted\"><span class=\"std std-ref\">RefCounted</span></a> <strong>&lt;</strong> <a class=\"reference internal\" href=\"class_object.html#class-object\"><span class=\"std std-ref\">Object</span></a></p><p>An abstraction of a serialized scene.</p>",
                "description": "\n\n<p>A simplified interface to a scene file. Provides access to operations and checks that can be performed on the scene resource itself.</p>\n<p>Can be used to save a node to a file. When saving, the node as well as all the nodes it owns get saved (see <a class=\"reference internal\" href=\"class_node.html#class-node-property-owner\"><span class=\"std std-ref\">Node.owner</span></a> property).</p>\n<p><strong>Note:</strong> The node doesn't need to own itself.</p>\n<p><strong>Example of loading a saved scene:</strong></p>\n<div class=\"sphinx-tabs docutils container\">\n<div aria-label=\"Tabbed content\" class=\"closeable\" role=\"tablist\"><button aria-controls=\"panel-0-R0RTY3JpcHQ=\" aria-selected=\"true\" class=\"sphinx-tabs-tab code-tab group-tab\" id=\"tab-0-R0RTY3JpcHQ=\" name=\"R0RTY3JpcHQ=\" role=\"tab\" tabindex=\"0\">GDScript</button><button aria-controls=\"panel-0-QyM=\" aria-selected=\"false\" class=\"sphinx-tabs-tab code-tab group-tab\" id=\"tab-0-QyM=\" name=\"QyM=\" role=\"tab\" tabindex=\"-1\">C#</button></div><div aria-labelledby=\"tab-0-R0RTY3JpcHQ=\" class=\"sphinx-tabs-panel code-tab group-tab\" id=\"panel-0-R0RTY3JpcHQ=\" name=\"R0RTY3JpcHQ=\" role=\"tabpanel\" tabindex=\"0\"><div class=\"highlight-gdscript notranslate\"><div class=\"highlight\"><pre><span></span><span class=\"c1\"># Use load() instead of preload() if the path isn't known at compile-time.</span>\n<span class=\"k\">var</span> <span class=\"n\">scene</span> <span class=\"o\">=</span> <span class=\"nb\">preload</span><span class=\"p\">(</span><span class=\"s2\">\"res://scene.tscn\"</span><span class=\"p\">)</span><span class=\"o\">.</span><span class=\"n\">instantiate</span><span class=\"p\">()</span>\n<span class=\"c1\"># Add the node as a child of the node the script is attached to.</span>\n<span class=\"n\">add_child</span><span class=\"p\">(</span><span class=\"n\">scene</span><span class=\"p\">)</span>\n</pre></div>\n</div>\n</div><div aria-labelledby=\"tab-0-QyM=\" class=\"sphinx-tabs-panel code-tab group-tab\" hidden=\"true\" id=\"panel-0-QyM=\" name=\"QyM=\" role=\"tabpanel\" tabindex=\"0\"><div class=\"highlight-csharp notranslate\"><div class=\"highlight\"><pre><span></span><span class=\"c1\">// C# has no preload, so you have to always use ResourceLoader.Load&lt;PackedScene&gt;().</span>\n<span class=\"kt\">var</span><span class=\"w\"> </span><span class=\"n\">scene</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"n\">ResourceLoader</span><span class=\"p\">.</span><span class=\"n\">Load</span><span class=\"o\">&lt;</span><span class=\"n\">PackedScene</span><span class=\"o\">&gt;</span><span class=\"p\">(</span><span class=\"s\">\"res://scene.tscn\"</span><span class=\"p\">).</span><span class=\"n\">Instantiate</span><span class=\"p\">();</span>\n<span class=\"c1\">// Add the node as a child of the node the script is attached to.</span>\n<span class=\"n\">AddChild</span><span class=\"p\">(</span><span class=\"n\">scene</span><span class=\"p\">);</span>\n</pre></div>\n</div>\n</div></div>\n<p><strong>Example of saving a node with different owners:</strong> The following example creates 3 objects: <a class=\"reference internal\" href=\"class_node2d.html#class-node2d\"><span class=\"std std-ref\">Node2D</span></a> (<code class=\"docutils literal notranslate\"><span class=\"pre\">node</span></code>), <a class=\"reference internal\" href=\"class_rigidbody2d.html#class-rigidbody2d\"><span class=\"std std-ref\">RigidBody2D</span></a> (<code class=\"docutils literal notranslate\"><span class=\"pre\">body</span></code>) and <a class=\"reference internal\" href=\"class_collisionobject2d.html#class-collisionobject2d\"><span class=\"std std-ref\">CollisionObject2D</span></a> (<code class=\"docutils literal notranslate\"><span class=\"pre\">collision</span></code>). <code class=\"docutils literal notranslate\"><span class=\"pre\">collision</span></code> is a child of <code class=\"docutils literal notranslate\"><span class=\"pre\">body</span></code> which is a child of <code class=\"docutils literal notranslate\"><span class=\"pre\">node</span></code>. Only <code class=\"docutils literal notranslate\"><span class=\"pre\">body</span></code> is owned by <code class=\"docutils literal notranslate\"><span class=\"pre\">node</span></code> and <code class=\"docutils literal notranslate\"><span class=\"pre\">pack</span></code> will therefore only save those two nodes, but not <code class=\"docutils literal notranslate\"><span class=\"pre\">collision</span></code>.</p>\n<div class=\"sphinx-tabs docutils container\">\n<div aria-label=\"Tabbed content\" class=\"closeable\" role=\"tablist\"><button aria-controls=\"panel-1-R0RTY3JpcHQ=\" aria-selected=\"true\" class=\"sphinx-tabs-tab code-tab group-tab\" id=\"tab-1-R0RTY3JpcHQ=\" name=\"R0RTY3JpcHQ=\" role=\"tab\" tabindex=\"0\">GDScript</button><button aria-controls=\"panel-1-QyM=\" aria-selected=\"false\" class=\"sphinx-tabs-tab code-tab group-tab\" id=\"tab-1-QyM=\" name=\"QyM=\" role=\"tab\" tabindex=\"-1\">C#</button></div><div aria-labelledby=\"tab-1-R0RTY3JpcHQ=\" class=\"sphinx-tabs-panel code-tab group-tab\" id=\"panel-1-R0RTY3JpcHQ=\" name=\"R0RTY3JpcHQ=\" role=\"tabpanel\" tabindex=\"0\"><div class=\"highlight-gdscript notranslate\"><div class=\"highlight\"><pre><span></span><span class=\"c1\"># Create the objects.</span>\n<span class=\"k\">var</span> <span class=\"n\">node</span> <span class=\"o\">=</span> <span class=\"n\">Node2D</span><span class=\"o\">.</span><span class=\"n\">new</span><span class=\"p\">()</span>\n<span class=\"k\">var</span> <span class=\"n\">body</span> <span class=\"o\">=</span> <span class=\"n\">RigidBody2D</span><span class=\"o\">.</span><span class=\"n\">new</span><span class=\"p\">()</span>\n<span class=\"k\">var</span> <span class=\"n\">collision</span> <span class=\"o\">=</span> <span class=\"n\">CollisionShape2D</span><span class=\"o\">.</span><span class=\"n\">new</span><span class=\"p\">()</span>\n\n<span class=\"c1\"># Create the object hierarchy.</span>\n<span class=\"n\">body</span><span class=\"o\">.</span><span class=\"n\">add_child</span><span class=\"p\">(</span><span class=\"n\">collision</span><span class=\"p\">)</span>\n<span class=\"n\">node</span><span class=\"o\">.</span><span class=\"n\">add_child</span><span class=\"p\">(</span><span class=\"n\">body</span><span class=\"p\">)</span>\n\n<span class=\"c1\"># Change owner of `body`, but not of `collision`.</span>\n<span class=\"n\">body</span><span class=\"o\">.</span><span class=\"n\">owner</span> <span class=\"o\">=</span> <span class=\"n\">node</span>\n<span class=\"k\">var</span> <span class=\"n\">scene</span> <span class=\"o\">=</span> <span class=\"n\">PackedScene</span><span class=\"o\">.</span><span class=\"n\">new</span><span class=\"p\">()</span>\n\n<span class=\"c1\"># Only `node` and `body` are now packed.</span>\n<span class=\"k\">var</span> <span class=\"n\">result</span> <span class=\"o\">=</span> <span class=\"n\">scene</span><span class=\"o\">.</span><span class=\"n\">pack</span><span class=\"p\">(</span><span class=\"n\">node</span><span class=\"p\">)</span>\n<span class=\"k k-ControlFlow\">if</span> <span class=\"n\">result</span> <span class=\"o\">==</span> <span class=\"n\">OK</span><span class=\"p\">:</span>\n    <span class=\"k\">var</span> <span class=\"n\">error</span> <span class=\"o\">=</span> <span class=\"n\">ResourceSaver</span><span class=\"o\">.</span><span class=\"n\">save</span><span class=\"p\">(</span><span class=\"n\">scene</span><span class=\"p\">,</span> <span class=\"s2\">\"res://path/name.tscn\"</span><span class=\"p\">)</span>  <span class=\"c1\"># Or \"user://...\"</span>\n    <span class=\"k k-ControlFlow\">if</span> <span class=\"n\">error</span> <span class=\"o\">!=</span> <span class=\"n\">OK</span><span class=\"p\">:</span>\n        <span class=\"nb\">push_error</span><span class=\"p\">(</span><span class=\"s2\">\"An error occurred while saving the scene to disk.\"</span><span class=\"p\">)</span>\n</pre></div>\n</div>\n</div><div aria-labelledby=\"tab-1-QyM=\" class=\"sphinx-tabs-panel code-tab group-tab\" hidden=\"true\" id=\"panel-1-QyM=\" name=\"QyM=\" role=\"tabpanel\" tabindex=\"0\"><div class=\"highlight-csharp notranslate\"><div class=\"highlight\"><pre><span></span><span class=\"c1\">// Create the objects.</span>\n<span class=\"kt\">var</span><span class=\"w\"> </span><span class=\"n\">node</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"k\">new</span><span class=\"w\"> </span><span class=\"n\">Node2D</span><span class=\"p\">();</span>\n<span class=\"kt\">var</span><span class=\"w\"> </span><span class=\"n\">body</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"k\">new</span><span class=\"w\"> </span><span class=\"n\">RigidBody2D</span><span class=\"p\">();</span>\n<span class=\"kt\">var</span><span class=\"w\"> </span><span class=\"n\">collision</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"k\">new</span><span class=\"w\"> </span><span class=\"n\">CollisionShape2D</span><span class=\"p\">();</span>\n\n<span class=\"c1\">// Create the object hierarchy.</span>\n<span class=\"n\">body</span><span class=\"p\">.</span><span class=\"n\">AddChild</span><span class=\"p\">(</span><span class=\"n\">collision</span><span class=\"p\">);</span>\n<span class=\"n\">node</span><span class=\"p\">.</span><span class=\"n\">AddChild</span><span class=\"p\">(</span><span class=\"n\">body</span><span class=\"p\">);</span>\n\n<span class=\"c1\">// Change owner of `body`, but not of `collision`.</span>\n<span class=\"n\">body</span><span class=\"p\">.</span><span class=\"n\">Owner</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"n\">node</span><span class=\"p\">;</span>\n<span class=\"kt\">var</span><span class=\"w\"> </span><span class=\"n\">scene</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"k\">new</span><span class=\"w\"> </span><span class=\"n\">PackedScene</span><span class=\"p\">();</span>\n\n<span class=\"c1\">// Only `node` and `body` are now packed.</span>\n<span class=\"n\">Error</span><span class=\"w\"> </span><span class=\"n\">result</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"n\">scene</span><span class=\"p\">.</span><span class=\"n\">Pack</span><span class=\"p\">(</span><span class=\"n\">node</span><span class=\"p\">);</span>\n<span class=\"k\">if</span><span class=\"w\"> </span><span class=\"p\">(</span><span class=\"n\">result</span><span class=\"w\"> </span><span class=\"o\">==</span><span class=\"w\"> </span><span class=\"n\">Error</span><span class=\"p\">.</span><span class=\"n\">Ok</span><span class=\"p\">)</span>\n<span class=\"p\">{</span>\n<span class=\"w\">    </span><span class=\"n\">Error</span><span class=\"w\"> </span><span class=\"n\">error</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"n\">ResourceSaver</span><span class=\"p\">.</span><span class=\"n\">Save</span><span class=\"p\">(</span><span class=\"n\">scene</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"s\">\"res://path/name.tscn\"</span><span class=\"p\">);</span><span class=\"w\"> </span><span class=\"c1\">// Or \"user://...\"</span>\n<span class=\"w\">    </span><span class=\"k\">if</span><span class=\"w\"> </span><span class=\"p\">(</span><span class=\"n\">error</span><span class=\"w\"> </span><span class=\"o\">!=</span><span class=\"w\"> </span><span class=\"n\">Error</span><span class=\"p\">.</span><span class=\"n\">Ok</span><span class=\"p\">)</span>\n<span class=\"w\">    </span><span class=\"p\">{</span>\n<span class=\"w\">        </span><span class=\"n\">GD</span><span class=\"p\">.</span><span class=\"n\">PushError</span><span class=\"p\">(</span><span class=\"s\">\"An error occurred while saving the scene to disk.\"</span><span class=\"p\">);</span>\n<span class=\"w\">    </span><span class=\"p\">}</span>\n<span class=\"p\">}</span>\n</pre></div>\n</div>\n</div></div>\n"
            },
            "class_panoramaskymaterial": {
                "url": "https://docs.godotengine.org/en/4.1/classes/class_panoramaskymaterial.html",
                "title": "PanoramaSkyMaterial",
                "blurb": "<p><strong>Inherits:</strong> <a class=\"reference internal\" href=\"class_material.html#class-material\"><span class=\"std std-ref\">Material</span></a> <strong>&lt;</strong> <a class=\"reference internal\" href=\"class_resource.html#class-resource\"><span class=\"std std-ref\">Resource</span></a> <strong>&lt;</strong> <a class=\"reference internal\" href=\"class_refcounted.html#class-refcounted\"><span class=\"std std-ref\">RefCounted</span></a> <strong>&lt;</strong> <a class=\"reference internal\" href=\"class_object.html#class-object\"><span class=\"std std-ref\">Object</span></a></p><p>A <a class=\"reference internal\" href=\"class_material.html#class-material\"><span class=\"std std-ref\">Material</span></a> used with <a class=\"reference internal\" href=\"class_sky.html#class-sky\"><span class=\"std std-ref\">Sky</span></a> to draw a background texture.</p>",
                "description": "\n\n<p>A resource referenced in a <a class=\"reference internal\" href=\"class_sky.html#class-sky\"><span class=\"std std-ref\">Sky</span></a> that is used to draw a background. The Panorama sky material functions similar to skyboxes in other engines, except it uses an equirectangular sky map instead of a cubemap.</p>\n<p>Using an HDR panorama is strongly recommended for accurate, high-quality reflections. Godot supports the Radiance HDR (<code class=\"docutils literal notranslate\"><span class=\"pre\">.hdr</span></code>) and OpenEXR (<code class=\"docutils literal notranslate\"><span class=\"pre\">.exr</span></code>) image formats for this purpose.</p>\n<p>You can use <a class=\"reference external\" href=\"https://danilw.github.io/GLSL-howto/cubemap_to_panorama_js/cubemap_to_panorama.html\">this tool</a> to convert a cubemap to an equirectangular sky map.</p>\n"
            },
            "class_particleprocessmaterial": {
                "url": "https://docs.godotengine.org/en/4.1/classes/class_particleprocessmaterial.html",
                "title": "ParticleProcessMaterial",
                "blurb": "<p><strong>Inherits:</strong> <a class=\"reference internal\" href=\"class_material.html#class-material\"><span class=\"std std-ref\">Material</span></a> <strong>&lt;</strong> <a class=\"reference internal\" href=\"class_resource.html#class-resource\"><span class=\"std std-ref\">Resource</span></a> <strong>&lt;</strong> <a class=\"reference internal\" href=\"class_refcounted.html#class-refcounted\"><span class=\"std std-ref\">RefCounted</span></a> <strong>&lt;</strong> <a class=\"reference internal\" href=\"class_object.html#class-object\"><span class=\"std std-ref\">Object</span></a></p><p>Particle properties for <a class=\"reference internal\" href=\"class_gpuparticles3d.html#class-gpuparticles3d\"><span class=\"std std-ref\">GPUParticles3D</span></a> and <a class=\"reference internal\" href=\"class_gpuparticles2d.html#class-gpuparticles2d\"><span class=\"std std-ref\">GPUParticles2D</span></a> nodes.</p>",
                "description": "\n\n<p>ParticleProcessMaterial defines particle properties and behavior. It is used in the <code class=\"docutils literal notranslate\"><span class=\"pre\">process_material</span></code> of <a class=\"reference internal\" href=\"class_gpuparticles3d.html#class-gpuparticles3d\"><span class=\"std std-ref\">GPUParticles3D</span></a> and <a class=\"reference internal\" href=\"class_gpuparticles2d.html#class-gpuparticles2d\"><span class=\"std std-ref\">GPUParticles2D</span></a> emitter nodes.</p>\n<p>Some of this material's properties are applied to each particle when emitted, while others can have a <a class=\"reference internal\" href=\"class_curvetexture.html#class-curvetexture\"><span class=\"std std-ref\">CurveTexture</span></a> applied to vary values over the lifetime of the particle.</p>\n<p>Particle animation is available only in <a class=\"reference internal\" href=\"class_gpuparticles2d.html#class-gpuparticles2d\"><span class=\"std std-ref\">GPUParticles2D</span></a>. To use it, attach a <a class=\"reference internal\" href=\"class_canvasitemmaterial.html#class-canvasitemmaterial\"><span class=\"std std-ref\">CanvasItemMaterial</span></a>, with <a class=\"reference internal\" href=\"class_canvasitemmaterial.html#class-canvasitemmaterial-property-particles-animation\"><span class=\"std std-ref\">CanvasItemMaterial.particles_animation</span></a> enabled, to the particles node.</p>\n"
            },
            "class_physicalskymaterial": {
                "url": "https://docs.godotengine.org/en/4.1/classes/class_physicalskymaterial.html",
                "title": "PhysicalSkyMaterial",
                "blurb": "<p><strong>Inherits:</strong> <a class=\"reference internal\" href=\"class_material.html#class-material\"><span class=\"std std-ref\">Material</span></a> <strong>&lt;</strong> <a class=\"reference internal\" href=\"class_resource.html#class-resource\"><span class=\"std std-ref\">Resource</span></a> <strong>&lt;</strong> <a class=\"reference internal\" href=\"class_refcounted.html#class-refcounted\"><span class=\"std std-ref\">RefCounted</span></a> <strong>&lt;</strong> <a class=\"reference internal\" href=\"class_object.html#class-object\"><span class=\"std std-ref\">Object</span></a></p><p><a class=\"reference internal\" href=\"class_sky.html#class-sky\"><span class=\"std std-ref\">Sky</span></a> <a class=\"reference internal\" href=\"class_material.html#class-material\"><span class=\"std std-ref\">Material</span></a> used for a physically based sky.</p>",
                "description": "\n\n<p>The <strong>PhysicalSkyMaterial</strong> uses the Preetham analytic daylight model to draw a sky based on physical properties. This results in a substantially more realistic sky than the <a class=\"reference internal\" href=\"class_proceduralskymaterial.html#class-proceduralskymaterial\"><span class=\"std std-ref\">ProceduralSkyMaterial</span></a>, but it is slightly slower and less flexible.</p>\n<p>The <strong>PhysicalSkyMaterial</strong> only supports one sun. The color, energy, and direction of the sun are taken from the first <a class=\"reference internal\" href=\"class_directionallight3d.html#class-directionallight3d\"><span class=\"std std-ref\">DirectionalLight3D</span></a> in the scene tree.</p>\n<p>As it is based on a daylight model, the sky fades to black as the sunset ends. If you want a full day/night cycle, you will have to add a night sky by converting this to a <a class=\"reference internal\" href=\"class_shadermaterial.html#class-shadermaterial\"><span class=\"std std-ref\">ShaderMaterial</span></a> and adding a night sky directly into the resulting shader.</p>\n"
            },
            "class_physicsmaterial": {
                "url": "https://docs.godotengine.org/en/4.1/classes/class_physicsmaterial.html",
                "title": "PhysicsMaterial",
                "blurb": "<p><strong>Inherits:</strong> <a class=\"reference internal\" href=\"class_resource.html#class-resource\"><span class=\"std std-ref\">Resource</span></a> <strong>&lt;</strong> <a class=\"reference internal\" href=\"class_refcounted.html#class-refcounted\"><span class=\"std std-ref\">RefCounted</span></a> <strong>&lt;</strong> <a class=\"reference internal\" href=\"class_object.html#class-object\"><span class=\"std std-ref\">Object</span></a></p><p>Holds physics-related properties of a surface, namely its roughness and bounciness.</p>",
                "description": "\n\n<p>Holds physics-related properties of a surface, namely its roughness and bounciness. This class is used to apply these properties to a physics body.</p>\n"
            },
            "class_placeholdercubemap": {
                "url": "https://docs.godotengine.org/en/4.1/classes/class_placeholdercubemap.html",
                "title": "PlaceholderCubemap",
                "blurb": "<p><strong>Inherits:</strong> <a class=\"reference internal\" href=\"class_placeholdertexturelayered.html#class-placeholdertexturelayered\"><span class=\"std std-ref\">PlaceholderTextureLayered</span></a> <strong>&lt;</strong> <a class=\"reference internal\" href=\"class_texturelayered.html#class-texturelayered\"><span class=\"std std-ref\">TextureLayered</span></a> <strong>&lt;</strong> <a class=\"reference internal\" href=\"class_texture.html#class-texture\"><span class=\"std std-ref\">Texture</span></a> <strong>&lt;</strong> <a class=\"reference internal\" href=\"class_resource.html#class-resource\"><span class=\"std std-ref\">Resource</span></a> <strong>&lt;</strong> <a class=\"reference internal\" href=\"class_refcounted.html#class-refcounted\"><span class=\"std std-ref\">RefCounted</span></a> <strong>&lt;</strong> <a class=\"reference internal\" href=\"class_object.html#class-object\"><span class=\"std std-ref\">Object</span></a></p><p>Placeholder class for a cubemap texture.</p>",
                "description": "\n\n<p>This class is used when loading a project that uses a <a class=\"reference internal\" href=\"class_cubemap.html#class-cubemap\"><span class=\"std std-ref\">Cubemap</span></a> subclass in 2 conditions:</p>\n<ul class=\"simple\">\n<li><p>When running the project exported in dedicated server mode, only the texture's dimensions are kept (as they may be relied upon for gameplay purposes or positioning of other elements). This allows reducing the exported PCK's size significantly.</p></li>\n<li><p>When this subclass is missing due to using a different engine version or build (e.g. modules disabled).</p></li>\n</ul>\n<p><strong>Note:</strong> This is not intended to be used as an actual texture for rendering. It is not guaranteed to work like one in shaders or materials (for example when calculating UV).</p>\n"
            },
            "class_placeholdercubemaparray": {
                "url": "https://docs.godotengine.org/en/4.1/classes/class_placeholdercubemaparray.html",
                "title": "PlaceholderCubemapArray",
                "blurb": "<p><strong>Inherits:</strong> <a class=\"reference internal\" href=\"class_placeholdertexturelayered.html#class-placeholdertexturelayered\"><span class=\"std std-ref\">PlaceholderTextureLayered</span></a> <strong>&lt;</strong> <a class=\"reference internal\" href=\"class_texturelayered.html#class-texturelayered\"><span class=\"std std-ref\">TextureLayered</span></a> <strong>&lt;</strong> <a class=\"reference internal\" href=\"class_texture.html#class-texture\"><span class=\"std std-ref\">Texture</span></a> <strong>&lt;</strong> <a class=\"reference internal\" href=\"class_resource.html#class-resource\"><span class=\"std std-ref\">Resource</span></a> <strong>&lt;</strong> <a class=\"reference internal\" href=\"class_refcounted.html#class-refcounted\"><span class=\"std std-ref\">RefCounted</span></a> <strong>&lt;</strong> <a class=\"reference internal\" href=\"class_object.html#class-object\"><span class=\"std std-ref\">Object</span></a></p><p>Placeholder class for a cubemap texture array.</p>",
                "description": "\n\n<p>This class is used when loading a project that uses a <a class=\"reference internal\" href=\"class_cubemaparray.html#class-cubemaparray\"><span class=\"std std-ref\">CubemapArray</span></a> subclass in 2 conditions:</p>\n<ul class=\"simple\">\n<li><p>When running the project exported in dedicated server mode, only the texture's dimensions are kept (as they may be relied upon for gameplay purposes or positioning of other elements). This allows reducing the exported PCK's size significantly.</p></li>\n<li><p>When this subclass is missing due to using a different engine version or build (e.g. modules disabled).</p></li>\n</ul>\n<p><strong>Note:</strong> This is not intended to be used as an actual texture for rendering. It is not guaranteed to work like one in shaders or materials (for example when calculating UV).</p>\n"
            },
            "class_placeholdermaterial": {
                "url": "https://docs.godotengine.org/en/4.1/classes/class_placeholdermaterial.html",
                "title": "PlaceholderMaterial",
                "blurb": "<p><strong>Inherits:</strong> <a class=\"reference internal\" href=\"class_material.html#class-material\"><span class=\"std std-ref\">Material</span></a> <strong>&lt;</strong> <a class=\"reference internal\" href=\"class_resource.html#class-resource\"><span class=\"std std-ref\">Resource</span></a> <strong>&lt;</strong> <a class=\"reference internal\" href=\"class_refcounted.html#class-refcounted\"><span class=\"std std-ref\">RefCounted</span></a> <strong>&lt;</strong> <a class=\"reference internal\" href=\"class_object.html#class-object\"><span class=\"std std-ref\">Object</span></a></p><p>Placeholder class for a material.</p>",
                "description": "\n\n<p>This class is used when loading a project that uses a <a class=\"reference internal\" href=\"class_material.html#class-material\"><span class=\"std std-ref\">Material</span></a> subclass in 2 conditions:</p>\n<ul class=\"simple\">\n<li><p>When running the project exported in dedicated server mode, only the texture's dimensions are kept (as they may be relied upon for gameplay purposes or positioning of other elements). This allows reducing the exported PCK's size significantly.</p></li>\n<li><p>When this subclass is missing due to using a different engine version or build (e.g. modules disabled).</p></li>\n</ul>\n"
            },
            "class_placeholdermesh": {
                "url": "https://docs.godotengine.org/en/4.1/classes/class_placeholdermesh.html",
                "title": "PlaceholderMesh",
                "blurb": "<p><strong>Inherits:</strong> <a class=\"reference internal\" href=\"class_mesh.html#class-mesh\"><span class=\"std std-ref\">Mesh</span></a> <strong>&lt;</strong> <a class=\"reference internal\" href=\"class_resource.html#class-resource\"><span class=\"std std-ref\">Resource</span></a> <strong>&lt;</strong> <a class=\"reference internal\" href=\"class_refcounted.html#class-refcounted\"><span class=\"std std-ref\">RefCounted</span></a> <strong>&lt;</strong> <a class=\"reference internal\" href=\"class_object.html#class-object\"><span class=\"std std-ref\">Object</span></a></p><p>Placeholder class for a mesh.</p>",
                "description": "\n\n<p>This class is used when loading a project that uses a <a class=\"reference internal\" href=\"class_mesh.html#class-mesh\"><span class=\"std std-ref\">Mesh</span></a> subclass in 2 conditions:</p>\n<ul class=\"simple\">\n<li><p>When running the project exported in dedicated server mode, only the texture's dimensions are kept (as they may be relied upon for gameplay purposes or positioning of other elements). This allows reducing the exported PCK's size significantly.</p></li>\n<li><p>When this subclass is missing due to using a different engine version or build (e.g. modules disabled).</p></li>\n</ul>\n"
            },
            "class_placeholdertexture2d": {
                "url": "https://docs.godotengine.org/en/4.1/classes/class_placeholdertexture2d.html",
                "title": "PlaceholderTexture2D",
                "blurb": "<p><strong>Inherits:</strong> <a class=\"reference internal\" href=\"class_texture2d.html#class-texture2d\"><span class=\"std std-ref\">Texture2D</span></a> <strong>&lt;</strong> <a class=\"reference internal\" href=\"class_texture.html#class-texture\"><span class=\"std std-ref\">Texture</span></a> <strong>&lt;</strong> <a class=\"reference internal\" href=\"class_resource.html#class-resource\"><span class=\"std std-ref\">Resource</span></a> <strong>&lt;</strong> <a class=\"reference internal\" href=\"class_refcounted.html#class-refcounted\"><span class=\"std std-ref\">RefCounted</span></a> <strong>&lt;</strong> <a class=\"reference internal\" href=\"class_object.html#class-object\"><span class=\"std std-ref\">Object</span></a></p><p>Placeholder class for a 2-dimensional texture.</p>",
                "description": "\n\n<p>This class is used when loading a project that uses a <a class=\"reference internal\" href=\"class_texture2d.html#class-texture2d\"><span class=\"std std-ref\">Texture2D</span></a> subclass in 2 conditions:</p>\n<ul class=\"simple\">\n<li><p>When running the project exported in dedicated server mode, only the texture's dimensions are kept (as they may be relied upon for gameplay purposes or positioning of other elements). This allows reducing the exported PCK's size significantly.</p></li>\n<li><p>When this subclass is missing due to using a different engine version or build (e.g. modules disabled).</p></li>\n</ul>\n<p><strong>Note:</strong> This is not intended to be used as an actual texture for rendering. It is not guaranteed to work like one in shaders or materials (for example when calculating UV).</p>\n"
            },
            "class_placeholdertexture2darray": {
                "url": "https://docs.godotengine.org/en/4.1/classes/class_placeholdertexture2darray.html",
                "title": "PlaceholderTexture2DArray",
                "blurb": "<p><strong>Inherits:</strong> <a class=\"reference internal\" href=\"class_placeholdertexturelayered.html#class-placeholdertexturelayered\"><span class=\"std std-ref\">PlaceholderTextureLayered</span></a> <strong>&lt;</strong> <a class=\"reference internal\" href=\"class_texturelayered.html#class-texturelayered\"><span class=\"std std-ref\">TextureLayered</span></a> <strong>&lt;</strong> <a class=\"reference internal\" href=\"class_texture.html#class-texture\"><span class=\"std std-ref\">Texture</span></a> <strong>&lt;</strong> <a class=\"reference internal\" href=\"class_resource.html#class-resource\"><span class=\"std std-ref\">Resource</span></a> <strong>&lt;</strong> <a class=\"reference internal\" href=\"class_refcounted.html#class-refcounted\"><span class=\"std std-ref\">RefCounted</span></a> <strong>&lt;</strong> <a class=\"reference internal\" href=\"class_object.html#class-object\"><span class=\"std std-ref\">Object</span></a></p><p>Placeholder class for a 2-dimensional texture array.</p>",
                "description": "\n\n<p>This class is used when loading a project that uses a <a class=\"reference internal\" href=\"class_texture2d.html#class-texture2d\"><span class=\"std std-ref\">Texture2D</span></a> subclass in 2 conditions:</p>\n<ul class=\"simple\">\n<li><p>When running the project exported in dedicated server mode, only the texture's dimensions are kept (as they may be relied upon for gameplay purposes or positioning of other elements). This allows reducing the exported PCK's size significantly.</p></li>\n<li><p>When this subclass is missing due to using a different engine version or build (e.g. modules disabled).</p></li>\n</ul>\n<p><strong>Note:</strong> This is not intended to be used as an actual texture for rendering. It is not guaranteed to work like one in shaders or materials (for example when calculating UV).</p>\n"
            },
            "class_placeholdertexture3d": {
                "url": "https://docs.godotengine.org/en/4.1/classes/class_placeholdertexture3d.html",
                "title": "PlaceholderTexture3D",
                "blurb": "<p><strong>Inherits:</strong> <a class=\"reference internal\" href=\"class_texture3d.html#class-texture3d\"><span class=\"std std-ref\">Texture3D</span></a> <strong>&lt;</strong> <a class=\"reference internal\" href=\"class_texture.html#class-texture\"><span class=\"std std-ref\">Texture</span></a> <strong>&lt;</strong> <a class=\"reference internal\" href=\"class_resource.html#class-resource\"><span class=\"std std-ref\">Resource</span></a> <strong>&lt;</strong> <a class=\"reference internal\" href=\"class_refcounted.html#class-refcounted\"><span class=\"std std-ref\">RefCounted</span></a> <strong>&lt;</strong> <a class=\"reference internal\" href=\"class_object.html#class-object\"><span class=\"std std-ref\">Object</span></a></p><p>Placeholder class for a 3-dimensional texture.</p>",
                "description": "\n\n<p>This class is used when loading a project that uses a <a class=\"reference internal\" href=\"class_texture3d.html#class-texture3d\"><span class=\"std std-ref\">Texture3D</span></a> subclass in 2 conditions:</p>\n<ul class=\"simple\">\n<li><p>When running the project exported in dedicated server mode, only the texture's dimensions are kept (as they may be relied upon for gameplay purposes or positioning of other elements). This allows reducing the exported PCK's size significantly.</p></li>\n<li><p>When this subclass is missing due to using a different engine version or build (e.g. modules disabled).</p></li>\n</ul>\n<p><strong>Note:</strong> This is not intended to be used as an actual texture for rendering. It is not guaranteed to work like one in shaders or materials (for example when calculating UV).</p>\n"
            },
            "class_placeholdertexturelayered": {
                "url": "https://docs.godotengine.org/en/4.1/classes/class_placeholdertexturelayered.html",
                "title": "PlaceholderTextureLayered",
                "blurb": "<p><strong>Inherits:</strong> <a class=\"reference internal\" href=\"class_texturelayered.html#class-texturelayered\"><span class=\"std std-ref\">TextureLayered</span></a> <strong>&lt;</strong> <a class=\"reference internal\" href=\"class_texture.html#class-texture\"><span class=\"std std-ref\">Texture</span></a> <strong>&lt;</strong> <a class=\"reference internal\" href=\"class_resource.html#class-resource\"><span class=\"std std-ref\">Resource</span></a> <strong>&lt;</strong> <a class=\"reference internal\" href=\"class_refcounted.html#class-refcounted\"><span class=\"std std-ref\">RefCounted</span></a> <strong>&lt;</strong> <a class=\"reference internal\" href=\"class_object.html#class-object\"><span class=\"std std-ref\">Object</span></a></p><p><strong>Inherited By:</strong> <a class=\"reference internal\" href=\"class_placeholdercubemap.html#class-placeholdercubemap\"><span class=\"std std-ref\">PlaceholderCubemap</span></a>, <a class=\"reference internal\" href=\"class_placeholdercubemaparray.html#class-placeholdercubemaparray\"><span class=\"std std-ref\">PlaceholderCubemapArray</span></a>, <a class=\"reference internal\" href=\"class_placeholdertexture2darray.html#class-placeholdertexture2darray\"><span class=\"std std-ref\">PlaceholderTexture2DArray</span></a></p><p>Placeholder class for a 2-dimensional texture array.</p>",
                "description": "\n\n<p>This class is used when loading a project that uses a <a class=\"reference internal\" href=\"class_texturelayered.html#class-texturelayered\"><span class=\"std std-ref\">TextureLayered</span></a> subclass in 2 conditions:</p>\n<ul class=\"simple\">\n<li><p>When running the project exported in dedicated server mode, only the texture's dimensions are kept (as they may be relied upon for gameplay purposes or positioning of other elements). This allows reducing the exported PCK's size significantly.</p></li>\n<li><p>When this subclass is missing due to using a different engine version or build (e.g. modules disabled).</p></li>\n</ul>\n<p><strong>Note:</strong> This is not intended to be used as an actual texture for rendering. It is not guaranteed to work like one in shaders or materials (for example when calculating UV).</p>\n"
            },
            "class_planemesh": {
                "url": "https://docs.godotengine.org/en/4.1/classes/class_planemesh.html",
                "title": "PlaneMesh",
                "blurb": "<p><strong>Inherits:</strong> <a class=\"reference internal\" href=\"class_primitivemesh.html#class-primitivemesh\"><span class=\"std std-ref\">PrimitiveMesh</span></a> <strong>&lt;</strong> <a class=\"reference internal\" href=\"class_mesh.html#class-mesh\"><span class=\"std std-ref\">Mesh</span></a> <strong>&lt;</strong> <a class=\"reference internal\" href=\"class_resource.html#class-resource\"><span class=\"std std-ref\">Resource</span></a> <strong>&lt;</strong> <a class=\"reference internal\" href=\"class_refcounted.html#class-refcounted\"><span class=\"std std-ref\">RefCounted</span></a> <strong>&lt;</strong> <a class=\"reference internal\" href=\"class_object.html#class-object\"><span class=\"std std-ref\">Object</span></a></p><p><strong>Inherited By:</strong> <a class=\"reference internal\" href=\"class_quadmesh.html#class-quadmesh\"><span class=\"std std-ref\">QuadMesh</span></a></p><p>Class representing a planar <a class=\"reference internal\" href=\"class_primitivemesh.html#class-primitivemesh\"><span class=\"std std-ref\">PrimitiveMesh</span></a>.</p>",
                "description": "\n\n<p>Class representing a planar <a class=\"reference internal\" href=\"class_primitivemesh.html#class-primitivemesh\"><span class=\"std std-ref\">PrimitiveMesh</span></a>. This flat mesh does not have a thickness. By default, this mesh is aligned on the X and Z axes; this default rotation isn't suited for use with billboarded materials. For billboarded materials, change <a class=\"reference internal\" href=\"#class-planemesh-property-orientation\"><span class=\"std std-ref\">orientation</span></a> to <a class=\"reference internal\" href=\"#class-planemesh-constant-face-z\"><span class=\"std std-ref\">FACE_Z</span></a>.</p>\n<p><strong>Note:</strong> When using a large textured <strong>PlaneMesh</strong> (e.g. as a floor), you may stumble upon UV jittering issues depending on the camera angle. To solve this, increase <a class=\"reference internal\" href=\"#class-planemesh-property-subdivide-depth\"><span class=\"std std-ref\">subdivide_depth</span></a> and <a class=\"reference internal\" href=\"#class-planemesh-property-subdivide-width\"><span class=\"std std-ref\">subdivide_width</span></a> until you no longer notice UV jittering.</p>\n"
            },
            "class_pointmesh": {
                "url": "https://docs.godotengine.org/en/4.1/classes/class_pointmesh.html",
                "title": "PointMesh",
                "blurb": "<p><strong>Inherits:</strong> <a class=\"reference internal\" href=\"class_primitivemesh.html#class-primitivemesh\"><span class=\"std std-ref\">PrimitiveMesh</span></a> <strong>&lt;</strong> <a class=\"reference internal\" href=\"class_mesh.html#class-mesh\"><span class=\"std std-ref\">Mesh</span></a> <strong>&lt;</strong> <a class=\"reference internal\" href=\"class_resource.html#class-resource\"><span class=\"std std-ref\">Resource</span></a> <strong>&lt;</strong> <a class=\"reference internal\" href=\"class_refcounted.html#class-refcounted\"><span class=\"std std-ref\">RefCounted</span></a> <strong>&lt;</strong> <a class=\"reference internal\" href=\"class_object.html#class-object\"><span class=\"std std-ref\">Object</span></a></p><p>Mesh with a single Point primitive.</p>",
                "description": "\n\n<p>The PointMesh is made from a single point. Instead of relying on triangles, points are rendered as a single rectangle on the screen with a constant size. They are intended to be used with Particle systems, but can be used as a cheap way to render constant size billboarded sprites (for example in a point cloud).</p>\n<p>PointMeshes, must be used with a material that has a point size. Point size can be accessed in a shader with <code class=\"docutils literal notranslate\"><span class=\"pre\">POINT_SIZE</span></code>, or in a <a class=\"reference internal\" href=\"class_basematerial3d.html#class-basematerial3d\"><span class=\"std std-ref\">BaseMaterial3D</span></a> by setting <a class=\"reference internal\" href=\"class_basematerial3d.html#class-basematerial3d-property-use-point-size\"><span class=\"std std-ref\">BaseMaterial3D.use_point_size</span></a> and the variable <a class=\"reference internal\" href=\"class_basematerial3d.html#class-basematerial3d-property-point-size\"><span class=\"std std-ref\">BaseMaterial3D.point_size</span></a>.</p>\n<p>When using PointMeshes, properties that normally alter vertices will be ignored, including billboard mode, grow, and cull face.</p>\n"
            },
            "class_polygonoccluder3d": {
                "url": "https://docs.godotengine.org/en/4.1/classes/class_polygonoccluder3d.html",
                "title": "PolygonOccluder3D",
                "blurb": "<p><strong>Inherits:</strong> <a class=\"reference internal\" href=\"class_occluder3d.html#class-occluder3d\"><span class=\"std std-ref\">Occluder3D</span></a> <strong>&lt;</strong> <a class=\"reference internal\" href=\"class_resource.html#class-resource\"><span class=\"std std-ref\">Resource</span></a> <strong>&lt;</strong> <a class=\"reference internal\" href=\"class_refcounted.html#class-refcounted\"><span class=\"std std-ref\">RefCounted</span></a> <strong>&lt;</strong> <a class=\"reference internal\" href=\"class_object.html#class-object\"><span class=\"std std-ref\">Object</span></a></p><p>Flat 2D polygon shape for use with occlusion culling in <a class=\"reference internal\" href=\"class_occluderinstance3d.html#class-occluderinstance3d\"><span class=\"std std-ref\">OccluderInstance3D</span></a>.</p>",
                "description": "\n\n<p><strong>PolygonOccluder3D</strong> stores a polygon shape that can be used by the engine's occlusion culling system. When an <a class=\"reference internal\" href=\"class_occluderinstance3d.html#class-occluderinstance3d\"><span class=\"std std-ref\">OccluderInstance3D</span></a> with a <strong>PolygonOccluder3D</strong> is selected in the editor, an editor will appear at the top of the 3D viewport so you can add/remove points. All points must be placed on the same 2D plane, which means it is not possible to create arbitrary 3D shapes with a single <strong>PolygonOccluder3D</strong>. To use arbitrary 3D shapes as occluders, use <a class=\"reference internal\" href=\"class_arrayoccluder3d.html#class-arrayoccluder3d\"><span class=\"std std-ref\">ArrayOccluder3D</span></a> or <a class=\"reference internal\" href=\"class_occluderinstance3d.html#class-occluderinstance3d\"><span class=\"std std-ref\">OccluderInstance3D</span></a>'s baking feature instead.</p>\n<p>See <a class=\"reference internal\" href=\"class_occluderinstance3d.html#class-occluderinstance3d\"><span class=\"std std-ref\">OccluderInstance3D</span></a>'s documentation for instructions on setting up occlusion culling.</p>\n"
            },
            "class_polygonpathfinder": {
                "url": "https://docs.godotengine.org/en/4.1/classes/class_polygonpathfinder.html",
                "title": "PolygonPathFinder",
                "blurb": "<p><strong>Inherits:</strong> <a class=\"reference internal\" href=\"class_resource.html#class-resource\"><span class=\"std std-ref\">Resource</span></a> <strong>&lt;</strong> <a class=\"reference internal\" href=\"class_refcounted.html#class-refcounted\"><span class=\"std std-ref\">RefCounted</span></a> <strong>&lt;</strong> <a class=\"reference internal\" href=\"class_object.html#class-object\"><span class=\"std std-ref\">Object</span></a></p>",
                "description": null
            },
            "class_portablecompressedtexture2d": {
                "url": "https://docs.godotengine.org/en/4.1/classes/class_portablecompressedtexture2d.html",
                "title": "PortableCompressedTexture2D",
                "blurb": "<p><strong>Inherits:</strong> <a class=\"reference internal\" href=\"class_texture2d.html#class-texture2d\"><span class=\"std std-ref\">Texture2D</span></a> <strong>&lt;</strong> <a class=\"reference internal\" href=\"class_texture.html#class-texture\"><span class=\"std std-ref\">Texture</span></a> <strong>&lt;</strong> <a class=\"reference internal\" href=\"class_resource.html#class-resource\"><span class=\"std std-ref\">Resource</span></a> <strong>&lt;</strong> <a class=\"reference internal\" href=\"class_refcounted.html#class-refcounted\"><span class=\"std std-ref\">RefCounted</span></a> <strong>&lt;</strong> <a class=\"reference internal\" href=\"class_object.html#class-object\"><span class=\"std std-ref\">Object</span></a></p><p>Provides a compressed texture for disk and/or VRAM in a way that is portable.</p>",
                "description": "\n\n<p>This class allows storing compressed textures as self contained (not imported) resources.</p>\n<p>For 2D usage (compressed on disk, uncompressed on VRAM), the lossy and lossless modes are recommended. For 3D usage (compressed on VRAM) it depends on the target platform.</p>\n<p>If you intend to only use desktop, S3TC or BPTC are recommended. For only mobile, ETC2 is recommended.</p>\n<p>For portable, self contained 3D textures that work on both desktop and mobile, Basis Universal is recommended (although it has a small quality cost and longer compression time as a tradeoff).</p>\n<p>This resource is intended to be created from code.</p>\n"
            },
            "class_primitivemesh": {
                "url": "https://docs.godotengine.org/en/4.1/classes/class_primitivemesh.html",
                "title": "PrimitiveMesh",
                "blurb": "<p><strong>Inherits:</strong> <a class=\"reference internal\" href=\"class_mesh.html#class-mesh\"><span class=\"std std-ref\">Mesh</span></a> <strong>&lt;</strong> <a class=\"reference internal\" href=\"class_resource.html#class-resource\"><span class=\"std std-ref\">Resource</span></a> <strong>&lt;</strong> <a class=\"reference internal\" href=\"class_refcounted.html#class-refcounted\"><span class=\"std std-ref\">RefCounted</span></a> <strong>&lt;</strong> <a class=\"reference internal\" href=\"class_object.html#class-object\"><span class=\"std std-ref\">Object</span></a></p><p><strong>Inherited By:</strong> <a class=\"reference internal\" href=\"class_boxmesh.html#class-boxmesh\"><span class=\"std std-ref\">BoxMesh</span></a>, <a class=\"reference internal\" href=\"class_capsulemesh.html#class-capsulemesh\"><span class=\"std std-ref\">CapsuleMesh</span></a>, <a class=\"reference internal\" href=\"class_cylindermesh.html#class-cylindermesh\"><span class=\"std std-ref\">CylinderMesh</span></a>, <a class=\"reference internal\" href=\"class_planemesh.html#class-planemesh\"><span class=\"std std-ref\">PlaneMesh</span></a>, <a class=\"reference internal\" href=\"class_pointmesh.html#class-pointmesh\"><span class=\"std std-ref\">PointMesh</span></a>, <a class=\"reference internal\" href=\"class_prismmesh.html#class-prismmesh\"><span class=\"std std-ref\">PrismMesh</span></a>, <a class=\"reference internal\" href=\"class_ribbontrailmesh.html#class-ribbontrailmesh\"><span class=\"std std-ref\">RibbonTrailMesh</span></a>, <a class=\"reference internal\" href=\"class_spheremesh.html#class-spheremesh\"><span class=\"std std-ref\">SphereMesh</span></a>, <a class=\"reference internal\" href=\"class_textmesh.html#class-textmesh\"><span class=\"std std-ref\">TextMesh</span></a>, <a class=\"reference internal\" href=\"class_torusmesh.html#class-torusmesh\"><span class=\"std std-ref\">TorusMesh</span></a>, <a class=\"reference internal\" href=\"class_tubetrailmesh.html#class-tubetrailmesh\"><span class=\"std std-ref\">TubeTrailMesh</span></a></p><p>Base class for all primitive meshes. Handles applying a <a class=\"reference internal\" href=\"class_material.html#class-material\"><span class=\"std std-ref\">Material</span></a> to a primitive mesh.</p>",
                "description": "\n\n<p>Base class for all primitive meshes. Handles applying a <a class=\"reference internal\" href=\"class_material.html#class-material\"><span class=\"std std-ref\">Material</span></a> to a primitive mesh. Examples include <a class=\"reference internal\" href=\"class_boxmesh.html#class-boxmesh\"><span class=\"std std-ref\">BoxMesh</span></a>, <a class=\"reference internal\" href=\"class_capsulemesh.html#class-capsulemesh\"><span class=\"std std-ref\">CapsuleMesh</span></a>, <a class=\"reference internal\" href=\"class_cylindermesh.html#class-cylindermesh\"><span class=\"std std-ref\">CylinderMesh</span></a>, <a class=\"reference internal\" href=\"class_planemesh.html#class-planemesh\"><span class=\"std std-ref\">PlaneMesh</span></a>, <a class=\"reference internal\" href=\"class_prismmesh.html#class-prismmesh\"><span class=\"std std-ref\">PrismMesh</span></a>, and <a class=\"reference internal\" href=\"class_spheremesh.html#class-spheremesh\"><span class=\"std std-ref\">SphereMesh</span></a>.</p>\n"
            },
            "class_prismmesh": {
                "url": "https://docs.godotengine.org/en/4.1/classes/class_prismmesh.html",
                "title": "PrismMesh",
                "blurb": "<p><strong>Inherits:</strong> <a class=\"reference internal\" href=\"class_primitivemesh.html#class-primitivemesh\"><span class=\"std std-ref\">PrimitiveMesh</span></a> <strong>&lt;</strong> <a class=\"reference internal\" href=\"class_mesh.html#class-mesh\"><span class=\"std std-ref\">Mesh</span></a> <strong>&lt;</strong> <a class=\"reference internal\" href=\"class_resource.html#class-resource\"><span class=\"std std-ref\">Resource</span></a> <strong>&lt;</strong> <a class=\"reference internal\" href=\"class_refcounted.html#class-refcounted\"><span class=\"std std-ref\">RefCounted</span></a> <strong>&lt;</strong> <a class=\"reference internal\" href=\"class_object.html#class-object\"><span class=\"std std-ref\">Object</span></a></p><p>Class representing a prism-shaped <a class=\"reference internal\" href=\"class_primitivemesh.html#class-primitivemesh\"><span class=\"std std-ref\">PrimitiveMesh</span></a>.</p>",
                "description": "\n\n<p>Class representing a prism-shaped <a class=\"reference internal\" href=\"class_primitivemesh.html#class-primitivemesh\"><span class=\"std std-ref\">PrimitiveMesh</span></a>.</p>\n"
            },
            "class_proceduralskymaterial": {
                "url": "https://docs.godotengine.org/en/4.1/classes/class_proceduralskymaterial.html",
                "title": "ProceduralSkyMaterial",
                "blurb": "<p><strong>Inherits:</strong> <a class=\"reference internal\" href=\"class_material.html#class-material\"><span class=\"std std-ref\">Material</span></a> <strong>&lt;</strong> <a class=\"reference internal\" href=\"class_resource.html#class-resource\"><span class=\"std std-ref\">Resource</span></a> <strong>&lt;</strong> <a class=\"reference internal\" href=\"class_refcounted.html#class-refcounted\"><span class=\"std std-ref\">RefCounted</span></a> <strong>&lt;</strong> <a class=\"reference internal\" href=\"class_object.html#class-object\"><span class=\"std std-ref\">Object</span></a></p><p>A <a class=\"reference internal\" href=\"class_material.html#class-material\"><span class=\"std std-ref\">Material</span></a> used with <a class=\"reference internal\" href=\"class_sky.html#class-sky\"><span class=\"std std-ref\">Sky</span></a> to generate a background based on user input parameters.</p>",
                "description": "\n\n<p>ProceduralSkyMaterial provides a way to create an effective background quickly by defining procedural parameters for the sun, the sky and the ground. The sky and ground are very similar, they are defined by a color at the horizon, another color, and finally an easing curve to interpolate between these two colors. Similarly, the sun is described by a position in the sky, a color, and an easing curve. However, the sun also defines a minimum and maximum angle, these two values define at what distance the easing curve begins and ends from the sun, and thus end up defining the size of the sun in the sky.</p>\n<p>The <strong>ProceduralSkyMaterial</strong> uses a lightweight shader to draw the sky and is thus suited for real time updates. When you do not need a quick sky that is not realistic, this is a good option. If you need a more realistic option, try using <a class=\"reference internal\" href=\"class_physicalskymaterial.html#class-physicalskymaterial\"><span class=\"std std-ref\">PhysicalSkyMaterial</span></a> instead.</p>\n<p>The <strong>ProceduralSkyMaterial</strong> supports up to 4 suns. Each sun takes its color, energy, and direction from the corresponding <a class=\"reference internal\" href=\"class_directionallight3d.html#class-directionallight3d\"><span class=\"std std-ref\">DirectionalLight3D</span></a> in the scene.</p>\n"
            },
            "class_quadmesh": {
                "url": "https://docs.godotengine.org/en/4.1/classes/class_quadmesh.html",
                "title": "QuadMesh",
                "blurb": "<p><strong>Inherits:</strong> <a class=\"reference internal\" href=\"class_planemesh.html#class-planemesh\"><span class=\"std std-ref\">PlaneMesh</span></a> <strong>&lt;</strong> <a class=\"reference internal\" href=\"class_primitivemesh.html#class-primitivemesh\"><span class=\"std std-ref\">PrimitiveMesh</span></a> <strong>&lt;</strong> <a class=\"reference internal\" href=\"class_mesh.html#class-mesh\"><span class=\"std std-ref\">Mesh</span></a> <strong>&lt;</strong> <a class=\"reference internal\" href=\"class_resource.html#class-resource\"><span class=\"std std-ref\">Resource</span></a> <strong>&lt;</strong> <a class=\"reference internal\" href=\"class_refcounted.html#class-refcounted\"><span class=\"std std-ref\">RefCounted</span></a> <strong>&lt;</strong> <a class=\"reference internal\" href=\"class_object.html#class-object\"><span class=\"std std-ref\">Object</span></a></p><p>Class representing a square mesh facing the camera.</p>",
                "description": "\n\n<p>Class representing a square <a class=\"reference internal\" href=\"class_primitivemesh.html#class-primitivemesh\"><span class=\"std std-ref\">PrimitiveMesh</span></a>. This flat mesh does not have a thickness. By default, this mesh is aligned on the X and Y axes; this rotation is more suited for use with billboarded materials. A <strong>QuadMesh</strong> is equivalent to a <a class=\"reference internal\" href=\"class_planemesh.html#class-planemesh\"><span class=\"std std-ref\">PlaneMesh</span></a> except its default <a class=\"reference internal\" href=\"class_planemesh.html#class-planemesh-property-orientation\"><span class=\"std std-ref\">PlaneMesh.orientation</span></a> is <a class=\"reference internal\" href=\"class_planemesh.html#class-planemesh-constant-face-z\"><span class=\"std std-ref\">PlaneMesh.FACE_Z</span></a>.</p>\n"
            },
            "class_quadoccluder3d": {
                "url": "https://docs.godotengine.org/en/4.1/classes/class_quadoccluder3d.html",
                "title": "QuadOccluder3D",
                "blurb": "<p><strong>Inherits:</strong> <a class=\"reference internal\" href=\"class_occluder3d.html#class-occluder3d\"><span class=\"std std-ref\">Occluder3D</span></a> <strong>&lt;</strong> <a class=\"reference internal\" href=\"class_resource.html#class-resource\"><span class=\"std std-ref\">Resource</span></a> <strong>&lt;</strong> <a class=\"reference internal\" href=\"class_refcounted.html#class-refcounted\"><span class=\"std std-ref\">RefCounted</span></a> <strong>&lt;</strong> <a class=\"reference internal\" href=\"class_object.html#class-object\"><span class=\"std std-ref\">Object</span></a></p><p>Flat plane shape for use with occlusion culling in <a class=\"reference internal\" href=\"class_occluderinstance3d.html#class-occluderinstance3d\"><span class=\"std std-ref\">OccluderInstance3D</span></a>.</p>",
                "description": "\n\n<p><strong>QuadOccluder3D</strong> stores a flat plane shape that can be used by the engine's occlusion culling system. See also <a class=\"reference internal\" href=\"class_polygonoccluder3d.html#class-polygonoccluder3d\"><span class=\"std std-ref\">PolygonOccluder3D</span></a> if you need to customize the quad's shape.</p>\n<p>See <a class=\"reference internal\" href=\"class_occluderinstance3d.html#class-occluderinstance3d\"><span class=\"std std-ref\">OccluderInstance3D</span></a>'s documentation for instructions on setting up occlusion culling.</p>\n"
            },
            "class_rdshaderfile": {
                "url": "https://docs.godotengine.org/en/4.1/classes/class_rdshaderfile.html",
                "title": "RDShaderFile",
                "blurb": "<p><strong>Inherits:</strong> <a class=\"reference internal\" href=\"class_resource.html#class-resource\"><span class=\"std std-ref\">Resource</span></a> <strong>&lt;</strong> <a class=\"reference internal\" href=\"class_refcounted.html#class-refcounted\"><span class=\"std std-ref\">RefCounted</span></a> <strong>&lt;</strong> <a class=\"reference internal\" href=\"class_object.html#class-object\"><span class=\"std std-ref\">Object</span></a></p><p>Compiled shader file in SPIR-V form (used by <a class=\"reference internal\" href=\"class_renderingdevice.html#class-renderingdevice\"><span class=\"std std-ref\">RenderingDevice</span></a>). Not to be confused with Godot's own <a class=\"reference internal\" href=\"class_shader.html#class-shader\"><span class=\"std std-ref\">Shader</span></a>.</p>",
                "description": "\n\n<p>Compiled shader file in SPIR-V form.</p>\n<p>See also <a class=\"reference internal\" href=\"class_rdshadersource.html#class-rdshadersource\"><span class=\"std std-ref\">RDShaderSource</span></a>. <strong>RDShaderFile</strong> is only meant to be used with the <a class=\"reference internal\" href=\"class_renderingdevice.html#class-renderingdevice\"><span class=\"std std-ref\">RenderingDevice</span></a> API. It should not be confused with Godot's own <a class=\"reference internal\" href=\"class_shader.html#class-shader\"><span class=\"std std-ref\">Shader</span></a> resource, which is what Godot's various nodes use for high-level shader programming.</p>\n"
            },
            "class_rdshaderspirv": {
                "url": "https://docs.godotengine.org/en/4.1/classes/class_rdshaderspirv.html",
                "title": "RDShaderSPIRV",
                "blurb": "<p><strong>Inherits:</strong> <a class=\"reference internal\" href=\"class_resource.html#class-resource\"><span class=\"std std-ref\">Resource</span></a> <strong>&lt;</strong> <a class=\"reference internal\" href=\"class_refcounted.html#class-refcounted\"><span class=\"std std-ref\">RefCounted</span></a> <strong>&lt;</strong> <a class=\"reference internal\" href=\"class_object.html#class-object\"><span class=\"std std-ref\">Object</span></a></p><p>SPIR-V intermediate representation as part of a <a class=\"reference internal\" href=\"class_rdshaderfile.html#class-rdshaderfile\"><span class=\"std std-ref\">RDShaderFile</span></a> (used by <a class=\"reference internal\" href=\"class_renderingdevice.html#class-renderingdevice\"><span class=\"std std-ref\">RenderingDevice</span></a>).</p>",
                "description": "\n\n<p><strong>RDShaderSPIRV</strong> represents a <a class=\"reference internal\" href=\"class_rdshaderfile.html#class-rdshaderfile\"><span class=\"std std-ref\">RDShaderFile</span></a>'s <a class=\"reference external\" href=\"https://www.khronos.org/spir/\">SPIR-V</a> code for various shader stages, as well as possible compilation error messages. SPIR-V a low-level intermediate shader representation. This intermediate representation is not used directly by GPUs for rendering, but it can be compiled into binary shaders that GPUs can understand. Unlike compiled shaders, SPIR-V is portable across GPU models and driver versions.</p>\n<p>This object is used by <a class=\"reference internal\" href=\"class_renderingdevice.html#class-renderingdevice\"><span class=\"std std-ref\">RenderingDevice</span></a>.</p>\n"
            },
            "class_rectangleshape2d": {
                "url": "https://docs.godotengine.org/en/4.1/classes/class_rectangleshape2d.html",
                "title": "RectangleShape2D",
                "blurb": "<p><strong>Inherits:</strong> <a class=\"reference internal\" href=\"class_shape2d.html#class-shape2d\"><span class=\"std std-ref\">Shape2D</span></a> <strong>&lt;</strong> <a class=\"reference internal\" href=\"class_resource.html#class-resource\"><span class=\"std std-ref\">Resource</span></a> <strong>&lt;</strong> <a class=\"reference internal\" href=\"class_refcounted.html#class-refcounted\"><span class=\"std std-ref\">RefCounted</span></a> <strong>&lt;</strong> <a class=\"reference internal\" href=\"class_object.html#class-object\"><span class=\"std std-ref\">Object</span></a></p><p>A 2D rectangle shape used for physics collision.</p>",
                "description": "\n\n<p>A 2D rectangle shape, intended for use in physics. Usually used to provide a shape for a <a class=\"reference internal\" href=\"class_collisionshape2d.html#class-collisionshape2d\"><span class=\"std std-ref\">CollisionShape2D</span></a>.</p>\n<p><strong>Performance:</strong> <strong>RectangleShape2D</strong> is fast to check collisions against. It is faster than <a class=\"reference internal\" href=\"class_capsuleshape2d.html#class-capsuleshape2d\"><span class=\"std std-ref\">CapsuleShape2D</span></a>, but slower than <a class=\"reference internal\" href=\"class_circleshape2d.html#class-circleshape2d\"><span class=\"std std-ref\">CircleShape2D</span></a>.</p>\n"
            },
            "class_ribbontrailmesh": {
                "url": "https://docs.godotengine.org/en/4.1/classes/class_ribbontrailmesh.html",
                "title": "RibbonTrailMesh",
                "blurb": "<p><strong>Inherits:</strong> <a class=\"reference internal\" href=\"class_primitivemesh.html#class-primitivemesh\"><span class=\"std std-ref\">PrimitiveMesh</span></a> <strong>&lt;</strong> <a class=\"reference internal\" href=\"class_mesh.html#class-mesh\"><span class=\"std std-ref\">Mesh</span></a> <strong>&lt;</strong> <a class=\"reference internal\" href=\"class_resource.html#class-resource\"><span class=\"std std-ref\">Resource</span></a> <strong>&lt;</strong> <a class=\"reference internal\" href=\"class_refcounted.html#class-refcounted\"><span class=\"std std-ref\">RefCounted</span></a> <strong>&lt;</strong> <a class=\"reference internal\" href=\"class_object.html#class-object\"><span class=\"std std-ref\">Object</span></a></p><p>Represents a straight ribbon-shaped <a class=\"reference internal\" href=\"class_primitivemesh.html#class-primitivemesh\"><span class=\"std std-ref\">PrimitiveMesh</span></a> with variable width.</p>",
                "description": "\n\n<p><strong>RibbonTrailMesh</strong> represents a straight ribbon-shaped mesh with variable width. The ribbon is composed of a number of flat or cross-shaped sections, each with the same <a class=\"reference internal\" href=\"#class-ribbontrailmesh-property-section-length\"><span class=\"std std-ref\">section_length</span></a> and number of <a class=\"reference internal\" href=\"#class-ribbontrailmesh-property-section-segments\"><span class=\"std std-ref\">section_segments</span></a>. A <a class=\"reference internal\" href=\"#class-ribbontrailmesh-property-curve\"><span class=\"std std-ref\">curve</span></a> is sampled along the total length of the ribbon, meaning that the curve determines the size of the ribbon along its length.</p>\n<p>This primitive mesh is usually used for particle trails.</p>\n"
            },
            "class_richtexteffect": {
                "url": "https://docs.godotengine.org/en/4.1/classes/class_richtexteffect.html",
                "title": "RichTextEffect",
                "blurb": "<p><strong>Inherits:</strong> <a class=\"reference internal\" href=\"class_resource.html#class-resource\"><span class=\"std std-ref\">Resource</span></a> <strong>&lt;</strong> <a class=\"reference internal\" href=\"class_refcounted.html#class-refcounted\"><span class=\"std std-ref\">RefCounted</span></a> <strong>&lt;</strong> <a class=\"reference internal\" href=\"class_object.html#class-object\"><span class=\"std std-ref\">Object</span></a></p><p>A custom effect for a <a class=\"reference internal\" href=\"class_richtextlabel.html#class-richtextlabel\"><span class=\"std std-ref\">RichTextLabel</span></a>.</p>",
                "description": "\n\n<p>A custom effect for a <a class=\"reference internal\" href=\"class_richtextlabel.html#class-richtextlabel\"><span class=\"std std-ref\">RichTextLabel</span></a>.</p>\n<p><strong>Note:</strong> For a <strong>RichTextEffect</strong> to be usable, a BBCode tag must be defined as a member variable called <code class=\"docutils literal notranslate\"><span class=\"pre\">bbcode</span></code> in the script.</p>\n<div class=\"sphinx-tabs docutils container\">\n<div aria-label=\"Tabbed content\" class=\"closeable\" role=\"tablist\"><button aria-controls=\"panel-0-R0RTY3JpcHQ=\" aria-selected=\"true\" class=\"sphinx-tabs-tab code-tab group-tab\" id=\"tab-0-R0RTY3JpcHQ=\" name=\"R0RTY3JpcHQ=\" role=\"tab\" tabindex=\"0\">GDScript</button><button aria-controls=\"panel-0-QyM=\" aria-selected=\"false\" class=\"sphinx-tabs-tab code-tab group-tab\" id=\"tab-0-QyM=\" name=\"QyM=\" role=\"tab\" tabindex=\"-1\">C#</button></div><div aria-labelledby=\"tab-0-R0RTY3JpcHQ=\" class=\"sphinx-tabs-panel code-tab group-tab\" id=\"panel-0-R0RTY3JpcHQ=\" name=\"R0RTY3JpcHQ=\" role=\"tabpanel\" tabindex=\"0\"><div class=\"highlight-gdscript notranslate\"><div class=\"highlight\"><pre><span></span><span class=\"c1\"># The RichTextEffect will be usable like this: `[example]Some text[/example]`</span>\n<span class=\"k\">var</span> <span class=\"n\">bbcode</span> <span class=\"o\">=</span> <span class=\"s2\">\"example\"</span>\n</pre></div>\n</div>\n</div><div aria-labelledby=\"tab-0-QyM=\" class=\"sphinx-tabs-panel code-tab group-tab\" hidden=\"true\" id=\"panel-0-QyM=\" name=\"QyM=\" role=\"tabpanel\" tabindex=\"0\"><div class=\"highlight-csharp notranslate\"><div class=\"highlight\"><pre><span></span><span class=\"c1\">// The RichTextEffect will be usable like this: `[example]Some text[/example]`</span>\n<span class=\"kt\">string</span><span class=\"w\"> </span><span class=\"n\">bbcode</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"s\">\"example\"</span><span class=\"p\">;</span>\n</pre></div>\n</div>\n</div></div>\n<p><strong>Note:</strong> As soon as a <a class=\"reference internal\" href=\"class_richtextlabel.html#class-richtextlabel\"><span class=\"std std-ref\">RichTextLabel</span></a> contains at least one <strong>RichTextEffect</strong>, it will continuously process the effect unless the project is paused. This may impact battery life negatively.</p>\n"
            },
            "class_scenereplicationconfig": {
                "url": "https://docs.godotengine.org/en/4.1/classes/class_scenereplicationconfig.html",
                "title": "SceneReplicationConfig",
                "blurb": "<p><strong>Inherits:</strong> <a class=\"reference internal\" href=\"class_resource.html#class-resource\"><span class=\"std std-ref\">Resource</span></a> <strong>&lt;</strong> <a class=\"reference internal\" href=\"class_refcounted.html#class-refcounted\"><span class=\"std std-ref\">RefCounted</span></a> <strong>&lt;</strong> <a class=\"reference internal\" href=\"class_object.html#class-object\"><span class=\"std std-ref\">Object</span></a></p><p>Configuration for properties to synchronize with a <a class=\"reference internal\" href=\"class_multiplayersynchronizer.html#class-multiplayersynchronizer\"><span class=\"std std-ref\">MultiplayerSynchronizer</span></a>.</p>",
                "description": null
            },
            "class_script": {
                "url": "https://docs.godotengine.org/en/4.1/classes/class_script.html",
                "title": "Script",
                "blurb": "<p><strong>Inherits:</strong> <a class=\"reference internal\" href=\"class_resource.html#class-resource\"><span class=\"std std-ref\">Resource</span></a> <strong>&lt;</strong> <a class=\"reference internal\" href=\"class_refcounted.html#class-refcounted\"><span class=\"std std-ref\">RefCounted</span></a> <strong>&lt;</strong> <a class=\"reference internal\" href=\"class_object.html#class-object\"><span class=\"std std-ref\">Object</span></a></p><p><strong>Inherited By:</strong> <a class=\"reference internal\" href=\"class_csharpscript.html#class-csharpscript\"><span class=\"std std-ref\">CSharpScript</span></a>, <a class=\"reference internal\" href=\"class_gdscript.html#class-gdscript\"><span class=\"std std-ref\">GDScript</span></a>, <a class=\"reference internal\" href=\"class_scriptextension.html#class-scriptextension\"><span class=\"std std-ref\">ScriptExtension</span></a></p><p>A class stored as a resource.</p>",
                "description": "\n\n<p>A class stored as a resource. A script extends the functionality of all objects that instantiate it.</p>\n<p>This is the base class for all scripts and should not be used directly. Trying to create a new script with this class will result in an error.</p>\n<p>The <code class=\"docutils literal notranslate\"><span class=\"pre\">new</span></code> method of a script subclass creates a new instance. <a class=\"reference internal\" href=\"class_object.html#class-object-method-set-script\"><span class=\"std std-ref\">Object.set_script</span></a> extends an existing object, if that object's class matches one of the script's base classes.</p>\n"
            },
            "class_scriptextension": {
                "url": "https://docs.godotengine.org/en/4.1/classes/class_scriptextension.html",
                "title": "ScriptExtension",
                "blurb": "<p><strong>Inherits:</strong> <a class=\"reference internal\" href=\"class_script.html#class-script\"><span class=\"std std-ref\">Script</span></a> <strong>&lt;</strong> <a class=\"reference internal\" href=\"class_resource.html#class-resource\"><span class=\"std std-ref\">Resource</span></a> <strong>&lt;</strong> <a class=\"reference internal\" href=\"class_refcounted.html#class-refcounted\"><span class=\"std std-ref\">RefCounted</span></a> <strong>&lt;</strong> <a class=\"reference internal\" href=\"class_object.html#class-object\"><span class=\"std std-ref\">Object</span></a></p>",
                "description": null
            },
            "class_segmentshape2d": {
                "url": "https://docs.godotengine.org/en/4.1/classes/class_segmentshape2d.html",
                "title": "SegmentShape2D",
                "blurb": "<p><strong>Inherits:</strong> <a class=\"reference internal\" href=\"class_shape2d.html#class-shape2d\"><span class=\"std std-ref\">Shape2D</span></a> <strong>&lt;</strong> <a class=\"reference internal\" href=\"class_resource.html#class-resource\"><span class=\"std std-ref\">Resource</span></a> <strong>&lt;</strong> <a class=\"reference internal\" href=\"class_refcounted.html#class-refcounted\"><span class=\"std std-ref\">RefCounted</span></a> <strong>&lt;</strong> <a class=\"reference internal\" href=\"class_object.html#class-object\"><span class=\"std std-ref\">Object</span></a></p><p>A 2D line segment shape used for physics collision.</p>",
                "description": "\n\n<p>A 2D line segment shape, intended for use in physics. Usually used to provide a shape for a <a class=\"reference internal\" href=\"class_collisionshape2d.html#class-collisionshape2d\"><span class=\"std std-ref\">CollisionShape2D</span></a>.</p>\n"
            },
            "class_separationrayshape2d": {
                "url": "https://docs.godotengine.org/en/4.1/classes/class_separationrayshape2d.html",
                "title": "SeparationRayShape2D",
                "blurb": "<p><strong>Inherits:</strong> <a class=\"reference internal\" href=\"class_shape2d.html#class-shape2d\"><span class=\"std std-ref\">Shape2D</span></a> <strong>&lt;</strong> <a class=\"reference internal\" href=\"class_resource.html#class-resource\"><span class=\"std std-ref\">Resource</span></a> <strong>&lt;</strong> <a class=\"reference internal\" href=\"class_refcounted.html#class-refcounted\"><span class=\"std std-ref\">RefCounted</span></a> <strong>&lt;</strong> <a class=\"reference internal\" href=\"class_object.html#class-object\"><span class=\"std std-ref\">Object</span></a></p><p>A 2D ray shape used for physics collision that tries to separate itself from any collider.</p>",
                "description": "\n\n<p>A 2D ray shape, intended for use in physics. Usually used to provide a shape for a <a class=\"reference internal\" href=\"class_collisionshape2d.html#class-collisionshape2d\"><span class=\"std std-ref\">CollisionShape2D</span></a>. When a <strong>SeparationRayShape2D</strong> collides with an object, it tries to separate itself from it by moving its endpoint to the collision point. It can for example be used for spears falling from the sky.</p>\n"
            },
            "class_separationrayshape3d": {
                "url": "https://docs.godotengine.org/en/4.1/classes/class_separationrayshape3d.html",
                "title": "SeparationRayShape3D",
                "blurb": "<p><strong>Inherits:</strong> <a class=\"reference internal\" href=\"class_shape3d.html#class-shape3d\"><span class=\"std std-ref\">Shape3D</span></a> <strong>&lt;</strong> <a class=\"reference internal\" href=\"class_resource.html#class-resource\"><span class=\"std std-ref\">Resource</span></a> <strong>&lt;</strong> <a class=\"reference internal\" href=\"class_refcounted.html#class-refcounted\"><span class=\"std std-ref\">RefCounted</span></a> <strong>&lt;</strong> <a class=\"reference internal\" href=\"class_object.html#class-object\"><span class=\"std std-ref\">Object</span></a></p><p>A 3D ray shape used for physics collision that tries to separate itself from any collider.</p>",
                "description": "\n\n<p>A 3D ray shape, intended for use in physics. Usually used to provide a shape for a <a class=\"reference internal\" href=\"class_collisionshape2d.html#class-collisionshape2d\"><span class=\"std std-ref\">CollisionShape2D</span></a>. When a <strong>SeparationRayShape3D</strong> collides with an object, it tries to separate itself from it by moving its endpoint to the collision point. It can for example be used for spears falling from the sky.</p>\n"
            },
            "class_shader": {
                "url": "https://docs.godotengine.org/en/4.1/classes/class_shader.html",
                "title": "Shader",
                "blurb": "<p><strong>Inherits:</strong> <a class=\"reference internal\" href=\"class_resource.html#class-resource\"><span class=\"std std-ref\">Resource</span></a> <strong>&lt;</strong> <a class=\"reference internal\" href=\"class_refcounted.html#class-refcounted\"><span class=\"std std-ref\">RefCounted</span></a> <strong>&lt;</strong> <a class=\"reference internal\" href=\"class_object.html#class-object\"><span class=\"std std-ref\">Object</span></a></p><p><strong>Inherited By:</strong> <a class=\"reference internal\" href=\"class_visualshader.html#class-visualshader\"><span class=\"std std-ref\">VisualShader</span></a></p><p>A shader implemented in the Godot shading language.</p>",
                "description": "\n\n<p>A custom shader program implemented in the Godot shading language, saved with the <code class=\"docutils literal notranslate\"><span class=\"pre\">.gdshader</span></code> extension.</p>\n<p>This class is used by a <a class=\"reference internal\" href=\"class_shadermaterial.html#class-shadermaterial\"><span class=\"std std-ref\">ShaderMaterial</span></a> and allows you to write your own custom behavior for rendering visual items or updating particle information. For a detailed explanation and usage, please see the tutorials linked below.</p>\n"
            },
            "class_shaderinclude": {
                "url": "https://docs.godotengine.org/en/4.1/classes/class_shaderinclude.html",
                "title": "ShaderInclude",
                "blurb": "<p><strong>Inherits:</strong> <a class=\"reference internal\" href=\"class_resource.html#class-resource\"><span class=\"std std-ref\">Resource</span></a> <strong>&lt;</strong> <a class=\"reference internal\" href=\"class_refcounted.html#class-refcounted\"><span class=\"std std-ref\">RefCounted</span></a> <strong>&lt;</strong> <a class=\"reference internal\" href=\"class_object.html#class-object\"><span class=\"std std-ref\">Object</span></a></p><p>A snippet of shader code to be included in a <a class=\"reference internal\" href=\"class_shader.html#class-shader\"><span class=\"std std-ref\">Shader</span></a> with <code class=\"docutils literal notranslate\"><span class=\"pre\">#include</span></code>.</p>",
                "description": "\n\n<p>A shader include file, saved with the <code class=\"docutils literal notranslate\"><span class=\"pre\">.gdshaderinc</span></code> extension. This class allows you to define a custom shader snippet that can be included in a <a class=\"reference internal\" href=\"class_shader.html#class-shader\"><span class=\"std std-ref\">Shader</span></a> by using the preprocessor directive <code class=\"docutils literal notranslate\"><span class=\"pre\">#include</span></code>, followed by the file path (e.g. <code class=\"docutils literal notranslate\"><span class=\"pre\">#include</span> <span class=\"pre\">\"res://shader_lib.gdshaderinc\"</span></code>). The snippet doesn't have to be a valid shader on its own.</p>\n"
            },
            "class_shadermaterial": {
                "url": "https://docs.godotengine.org/en/4.1/classes/class_shadermaterial.html",
                "title": "ShaderMaterial",
                "blurb": "<p><strong>Inherits:</strong> <a class=\"reference internal\" href=\"class_material.html#class-material\"><span class=\"std std-ref\">Material</span></a> <strong>&lt;</strong> <a class=\"reference internal\" href=\"class_resource.html#class-resource\"><span class=\"std std-ref\">Resource</span></a> <strong>&lt;</strong> <a class=\"reference internal\" href=\"class_refcounted.html#class-refcounted\"><span class=\"std std-ref\">RefCounted</span></a> <strong>&lt;</strong> <a class=\"reference internal\" href=\"class_object.html#class-object\"><span class=\"std std-ref\">Object</span></a></p><p>A material that uses a custom <a class=\"reference internal\" href=\"class_shader.html#class-shader\"><span class=\"std std-ref\">Shader</span></a> program.</p>",
                "description": "\n\n<p>A material that uses a custom <a class=\"reference internal\" href=\"class_shader.html#class-shader\"><span class=\"std std-ref\">Shader</span></a> program to render either items to screen or process particles. You can create multiple materials for the same shader but configure different values for the uniforms defined in the shader.</p>\n"
            },
            "class_shape2d": {
                "url": "https://docs.godotengine.org/en/4.1/classes/class_shape2d.html",
                "title": "Shape2D",
                "blurb": "<p><strong>Inherits:</strong> <a class=\"reference internal\" href=\"class_resource.html#class-resource\"><span class=\"std std-ref\">Resource</span></a> <strong>&lt;</strong> <a class=\"reference internal\" href=\"class_refcounted.html#class-refcounted\"><span class=\"std std-ref\">RefCounted</span></a> <strong>&lt;</strong> <a class=\"reference internal\" href=\"class_object.html#class-object\"><span class=\"std std-ref\">Object</span></a></p><p><strong>Inherited By:</strong> <a class=\"reference internal\" href=\"class_capsuleshape2d.html#class-capsuleshape2d\"><span class=\"std std-ref\">CapsuleShape2D</span></a>, <a class=\"reference internal\" href=\"class_circleshape2d.html#class-circleshape2d\"><span class=\"std std-ref\">CircleShape2D</span></a>, <a class=\"reference internal\" href=\"class_concavepolygonshape2d.html#class-concavepolygonshape2d\"><span class=\"std std-ref\">ConcavePolygonShape2D</span></a>, <a class=\"reference internal\" href=\"class_convexpolygonshape2d.html#class-convexpolygonshape2d\"><span class=\"std std-ref\">ConvexPolygonShape2D</span></a>, <a class=\"reference internal\" href=\"class_rectangleshape2d.html#class-rectangleshape2d\"><span class=\"std std-ref\">RectangleShape2D</span></a>, <a class=\"reference internal\" href=\"class_segmentshape2d.html#class-segmentshape2d\"><span class=\"std std-ref\">SegmentShape2D</span></a>, <a class=\"reference internal\" href=\"class_separationrayshape2d.html#class-separationrayshape2d\"><span class=\"std std-ref\">SeparationRayShape2D</span></a>, <a class=\"reference internal\" href=\"class_worldboundaryshape2d.html#class-worldboundaryshape2d\"><span class=\"std std-ref\">WorldBoundaryShape2D</span></a></p><p>Abstract base class for 2D shapes used for physics collision.</p>",
                "description": "\n\n<p>Abstract base class for all 2D shapes, intended for use in physics.</p>\n<p><strong>Performance:</strong> Primitive shapes, especially <a class=\"reference internal\" href=\"class_circleshape2d.html#class-circleshape2d\"><span class=\"std std-ref\">CircleShape2D</span></a>, are fast to check collisions against. <a class=\"reference internal\" href=\"class_convexpolygonshape2d.html#class-convexpolygonshape2d\"><span class=\"std std-ref\">ConvexPolygonShape2D</span></a> is slower, and <a class=\"reference internal\" href=\"class_concavepolygonshape2d.html#class-concavepolygonshape2d\"><span class=\"std std-ref\">ConcavePolygonShape2D</span></a> is the slowest.</p>\n"
            },
            "class_shape3d": {
                "url": "https://docs.godotengine.org/en/4.1/classes/class_shape3d.html",
                "title": "Shape3D",
                "blurb": "<p><strong>Inherits:</strong> <a class=\"reference internal\" href=\"class_resource.html#class-resource\"><span class=\"std std-ref\">Resource</span></a> <strong>&lt;</strong> <a class=\"reference internal\" href=\"class_refcounted.html#class-refcounted\"><span class=\"std std-ref\">RefCounted</span></a> <strong>&lt;</strong> <a class=\"reference internal\" href=\"class_object.html#class-object\"><span class=\"std std-ref\">Object</span></a></p><p><strong>Inherited By:</strong> <a class=\"reference internal\" href=\"class_boxshape3d.html#class-boxshape3d\"><span class=\"std std-ref\">BoxShape3D</span></a>, <a class=\"reference internal\" href=\"class_capsuleshape3d.html#class-capsuleshape3d\"><span class=\"std std-ref\">CapsuleShape3D</span></a>, <a class=\"reference internal\" href=\"class_concavepolygonshape3d.html#class-concavepolygonshape3d\"><span class=\"std std-ref\">ConcavePolygonShape3D</span></a>, <a class=\"reference internal\" href=\"class_convexpolygonshape3d.html#class-convexpolygonshape3d\"><span class=\"std std-ref\">ConvexPolygonShape3D</span></a>, <a class=\"reference internal\" href=\"class_cylindershape3d.html#class-cylindershape3d\"><span class=\"std std-ref\">CylinderShape3D</span></a>, <a class=\"reference internal\" href=\"class_heightmapshape3d.html#class-heightmapshape3d\"><span class=\"std std-ref\">HeightMapShape3D</span></a>, <a class=\"reference internal\" href=\"class_separationrayshape3d.html#class-separationrayshape3d\"><span class=\"std std-ref\">SeparationRayShape3D</span></a>, <a class=\"reference internal\" href=\"class_sphereshape3d.html#class-sphereshape3d\"><span class=\"std std-ref\">SphereShape3D</span></a>, <a class=\"reference internal\" href=\"class_worldboundaryshape3d.html#class-worldboundaryshape3d\"><span class=\"std std-ref\">WorldBoundaryShape3D</span></a></p><p>Abstract base class for 3D shapes used for physics collision.</p>",
                "description": "\n\n<p>Abstract base class for all 3D shapes, intended for use in physics.</p>\n<p><strong>Performance:</strong> Primitive shapes, especially <a class=\"reference internal\" href=\"class_sphereshape3d.html#class-sphereshape3d\"><span class=\"std std-ref\">SphereShape3D</span></a>, are fast to check collisions against. <a class=\"reference internal\" href=\"class_convexpolygonshape3d.html#class-convexpolygonshape3d\"><span class=\"std std-ref\">ConvexPolygonShape3D</span></a> and <a class=\"reference internal\" href=\"class_heightmapshape3d.html#class-heightmapshape3d\"><span class=\"std std-ref\">HeightMapShape3D</span></a> are slower, and <a class=\"reference internal\" href=\"class_concavepolygonshape3d.html#class-concavepolygonshape3d\"><span class=\"std std-ref\">ConcavePolygonShape3D</span></a> is the slowest.</p>\n"
            },
            "class_shortcut": {
                "url": "https://docs.godotengine.org/en/4.1/classes/class_shortcut.html",
                "title": "Shortcut",
                "blurb": "<p><strong>Inherits:</strong> <a class=\"reference internal\" href=\"class_resource.html#class-resource\"><span class=\"std std-ref\">Resource</span></a> <strong>&lt;</strong> <a class=\"reference internal\" href=\"class_refcounted.html#class-refcounted\"><span class=\"std std-ref\">RefCounted</span></a> <strong>&lt;</strong> <a class=\"reference internal\" href=\"class_object.html#class-object\"><span class=\"std std-ref\">Object</span></a></p><p>A shortcut for binding input.</p>",
                "description": "\n\n<p>Shortcuts are commonly used for interacting with a <a class=\"reference internal\" href=\"class_control.html#class-control\"><span class=\"std std-ref\">Control</span></a> element from an <a class=\"reference internal\" href=\"class_inputevent.html#class-inputevent\"><span class=\"std std-ref\">InputEvent</span></a> (also known as hotkeys).</p>\n<p>One shortcut can contain multiple <a class=\"reference internal\" href=\"class_inputevent.html#class-inputevent\"><span class=\"std std-ref\">InputEvent</span></a>'s, allowing the possibility of triggering one action with multiple different inputs.</p>\n"
            },
            "class_skeletonmodification2d": {
                "url": "https://docs.godotengine.org/en/4.1/classes/class_skeletonmodification2d.html",
                "title": "SkeletonModification2D",
                "blurb": "<p><strong>Inherits:</strong> <a class=\"reference internal\" href=\"class_resource.html#class-resource\"><span class=\"std std-ref\">Resource</span></a> <strong>&lt;</strong> <a class=\"reference internal\" href=\"class_refcounted.html#class-refcounted\"><span class=\"std std-ref\">RefCounted</span></a> <strong>&lt;</strong> <a class=\"reference internal\" href=\"class_object.html#class-object\"><span class=\"std std-ref\">Object</span></a></p><p><strong>Inherited By:</strong> <a class=\"reference internal\" href=\"class_skeletonmodification2dccdik.html#class-skeletonmodification2dccdik\"><span class=\"std std-ref\">SkeletonModification2DCCDIK</span></a>, <a class=\"reference internal\" href=\"class_skeletonmodification2dfabrik.html#class-skeletonmodification2dfabrik\"><span class=\"std std-ref\">SkeletonModification2DFABRIK</span></a>, <a class=\"reference internal\" href=\"class_skeletonmodification2djiggle.html#class-skeletonmodification2djiggle\"><span class=\"std std-ref\">SkeletonModification2DJiggle</span></a>, <a class=\"reference internal\" href=\"class_skeletonmodification2dlookat.html#class-skeletonmodification2dlookat\"><span class=\"std std-ref\">SkeletonModification2DLookAt</span></a>, <a class=\"reference internal\" href=\"class_skeletonmodification2dphysicalbones.html#class-skeletonmodification2dphysicalbones\"><span class=\"std std-ref\">SkeletonModification2DPhysicalBones</span></a>, <a class=\"reference internal\" href=\"class_skeletonmodification2dstackholder.html#class-skeletonmodification2dstackholder\"><span class=\"std std-ref\">SkeletonModification2DStackHolder</span></a>, <a class=\"reference internal\" href=\"class_skeletonmodification2dtwoboneik.html#class-skeletonmodification2dtwoboneik\"><span class=\"std std-ref\">SkeletonModification2DTwoBoneIK</span></a></p><p>Base class for resources that operate on <a class=\"reference internal\" href=\"class_bone2d.html#class-bone2d\"><span class=\"std std-ref\">Bone2D</span></a>s in a <a class=\"reference internal\" href=\"class_skeleton2d.html#class-skeleton2d\"><span class=\"std std-ref\">Skeleton2D</span></a>.</p>",
                "description": "\n\n<p>This resource provides an interface that can be expanded so code that operates on <a class=\"reference internal\" href=\"class_bone2d.html#class-bone2d\"><span class=\"std std-ref\">Bone2D</span></a> nodes in a <a class=\"reference internal\" href=\"class_skeleton2d.html#class-skeleton2d\"><span class=\"std std-ref\">Skeleton2D</span></a> can be mixed and matched together to create complex interactions.</p>\n<p>This is used to provide Godot with a flexible and powerful Inverse Kinematics solution that can be adapted for many different uses.</p>\n"
            },
            "class_skeletonmodification2dccdik": {
                "url": "https://docs.godotengine.org/en/4.1/classes/class_skeletonmodification2dccdik.html",
                "title": "SkeletonModification2DCCDIK",
                "blurb": "<p><strong>Inherits:</strong> <a class=\"reference internal\" href=\"class_skeletonmodification2d.html#class-skeletonmodification2d\"><span class=\"std std-ref\">SkeletonModification2D</span></a> <strong>&lt;</strong> <a class=\"reference internal\" href=\"class_resource.html#class-resource\"><span class=\"std std-ref\">Resource</span></a> <strong>&lt;</strong> <a class=\"reference internal\" href=\"class_refcounted.html#class-refcounted\"><span class=\"std std-ref\">RefCounted</span></a> <strong>&lt;</strong> <a class=\"reference internal\" href=\"class_object.html#class-object\"><span class=\"std std-ref\">Object</span></a></p><p>A modification that uses CCDIK to manipulate a series of bones to reach a target in 2D.</p>",
                "description": "\n\n<p>This <a class=\"reference internal\" href=\"class_skeletonmodification2d.html#class-skeletonmodification2d\"><span class=\"std std-ref\">SkeletonModification2D</span></a> uses an algorithm called Cyclic Coordinate Descent Inverse Kinematics, or CCDIK, to manipulate a chain of bones in a <a class=\"reference internal\" href=\"class_skeleton2d.html#class-skeleton2d\"><span class=\"std std-ref\">Skeleton2D</span></a> so it reaches a defined target.</p>\n<p>CCDIK works by rotating a set of bones, typically called a \"bone chain\", on a single axis. Each bone is rotated to face the target from the tip (by default), which over a chain of bones allow it to rotate properly to reach the target. Because the bones only rotate on a single axis, CCDIK <em>can</em> look more robotic than other IK solvers.</p>\n<p><strong>Note:</strong> The CCDIK modifier has <code class=\"docutils literal notranslate\"><span class=\"pre\">ccdik_joints</span></code>, which are the data objects that hold the data for each joint in the CCDIK chain. This is different from a bone! CCDIK joints hold the data needed for each bone in the bone chain used by CCDIK.</p>\n<p>CCDIK also fully supports angle constraints, allowing for more control over how a solution is met.</p>\n"
            },
            "class_skeletonmodification2dfabrik": {
                "url": "https://docs.godotengine.org/en/4.1/classes/class_skeletonmodification2dfabrik.html",
                "title": "SkeletonModification2DFABRIK",
                "blurb": "<p><strong>Inherits:</strong> <a class=\"reference internal\" href=\"class_skeletonmodification2d.html#class-skeletonmodification2d\"><span class=\"std std-ref\">SkeletonModification2D</span></a> <strong>&lt;</strong> <a class=\"reference internal\" href=\"class_resource.html#class-resource\"><span class=\"std std-ref\">Resource</span></a> <strong>&lt;</strong> <a class=\"reference internal\" href=\"class_refcounted.html#class-refcounted\"><span class=\"std std-ref\">RefCounted</span></a> <strong>&lt;</strong> <a class=\"reference internal\" href=\"class_object.html#class-object\"><span class=\"std std-ref\">Object</span></a></p><p>A modification that uses FABRIK to manipulate a series of <a class=\"reference internal\" href=\"class_bone2d.html#class-bone2d\"><span class=\"std std-ref\">Bone2D</span></a> nodes to reach a target.</p>",
                "description": "\n\n<p>This <a class=\"reference internal\" href=\"class_skeletonmodification2d.html#class-skeletonmodification2d\"><span class=\"std std-ref\">SkeletonModification2D</span></a> uses an algorithm called Forward And Backward Reaching Inverse Kinematics, or FABRIK, to rotate a bone chain so that it reaches a target.</p>\n<p>FABRIK works by knowing the positions and lengths of a series of bones, typically called a \"bone chain\". It first starts by running a forward pass, which places the final bone at the target's position. Then all other bones are moved towards the tip bone, so they stay at the defined bone length away. Then a backwards pass is performed, where the root/first bone in the FABRIK chain is placed back at the origin. Then all other bones are moved so they stay at the defined bone length away. This positions the bone chain so that it reaches the target when possible, but all of the bones stay the correct length away from each other.</p>\n<p>Because of how FABRIK works, it often gives more natural results than those seen in <a class=\"reference internal\" href=\"class_skeletonmodification2dccdik.html#class-skeletonmodification2dccdik\"><span class=\"std std-ref\">SkeletonModification2DCCDIK</span></a>. FABRIK also supports angle constraints, which are fully taken into account when solving.</p>\n<p><strong>Note:</strong> The FABRIK modifier has <code class=\"docutils literal notranslate\"><span class=\"pre\">fabrik_joints</span></code>, which are the data objects that hold the data for each joint in the FABRIK chain. This is different from <a class=\"reference internal\" href=\"class_bone2d.html#class-bone2d\"><span class=\"std std-ref\">Bone2D</span></a> nodes! FABRIK joints hold the data needed for each <a class=\"reference internal\" href=\"class_bone2d.html#class-bone2d\"><span class=\"std std-ref\">Bone2D</span></a> in the bone chain used by FABRIK.</p>\n<p>To help control how the FABRIK joints move, a magnet vector can be passed, which can nudge the bones in a certain direction prior to solving, giving a level of control over the final result.</p>\n"
            },
            "class_skeletonmodification2djiggle": {
                "url": "https://docs.godotengine.org/en/4.1/classes/class_skeletonmodification2djiggle.html",
                "title": "SkeletonModification2DJiggle",
                "blurb": "<p><strong>Inherits:</strong> <a class=\"reference internal\" href=\"class_skeletonmodification2d.html#class-skeletonmodification2d\"><span class=\"std std-ref\">SkeletonModification2D</span></a> <strong>&lt;</strong> <a class=\"reference internal\" href=\"class_resource.html#class-resource\"><span class=\"std std-ref\">Resource</span></a> <strong>&lt;</strong> <a class=\"reference internal\" href=\"class_refcounted.html#class-refcounted\"><span class=\"std std-ref\">RefCounted</span></a> <strong>&lt;</strong> <a class=\"reference internal\" href=\"class_object.html#class-object\"><span class=\"std std-ref\">Object</span></a></p><p>A modification that jiggles <a class=\"reference internal\" href=\"class_bone2d.html#class-bone2d\"><span class=\"std std-ref\">Bone2D</span></a> nodes as they move towards a target.</p>",
                "description": "\n\n<p>This modification moves a series of bones, typically called a bone chain, towards a target. What makes this modification special is that it calculates the velocity and acceleration for each bone in the bone chain, and runs a very light physics-like calculation using the inputted values. This allows the bones to overshoot the target and \"jiggle\" around. It can be configured to act more like a spring, or sway around like cloth might.</p>\n<p>This modification is useful for adding additional motion to things like hair, the edges of clothing, and more. It has several settings to that allow control over how the joint moves when the target moves.</p>\n<p><strong>Note:</strong> The Jiggle modifier has <code class=\"docutils literal notranslate\"><span class=\"pre\">jiggle_joints</span></code>, which are the data objects that hold the data for each joint in the Jiggle chain. This is different from than <a class=\"reference internal\" href=\"class_bone2d.html#class-bone2d\"><span class=\"std std-ref\">Bone2D</span></a> nodes! Jiggle joints hold the data needed for each <a class=\"reference internal\" href=\"class_bone2d.html#class-bone2d\"><span class=\"std std-ref\">Bone2D</span></a> in the bone chain used by the Jiggle modification.</p>\n"
            },
            "class_skeletonmodification2dlookat": {
                "url": "https://docs.godotengine.org/en/4.1/classes/class_skeletonmodification2dlookat.html",
                "title": "SkeletonModification2DLookAt",
                "blurb": "<p><strong>Inherits:</strong> <a class=\"reference internal\" href=\"class_skeletonmodification2d.html#class-skeletonmodification2d\"><span class=\"std std-ref\">SkeletonModification2D</span></a> <strong>&lt;</strong> <a class=\"reference internal\" href=\"class_resource.html#class-resource\"><span class=\"std std-ref\">Resource</span></a> <strong>&lt;</strong> <a class=\"reference internal\" href=\"class_refcounted.html#class-refcounted\"><span class=\"std std-ref\">RefCounted</span></a> <strong>&lt;</strong> <a class=\"reference internal\" href=\"class_object.html#class-object\"><span class=\"std std-ref\">Object</span></a></p><p>A modification that rotates a <a class=\"reference internal\" href=\"class_bone2d.html#class-bone2d\"><span class=\"std std-ref\">Bone2D</span></a> node to look at a target.</p>",
                "description": "\n\n<p>This <a class=\"reference internal\" href=\"class_skeletonmodification2d.html#class-skeletonmodification2d\"><span class=\"std std-ref\">SkeletonModification2D</span></a> rotates a bone to look a target. This is extremely helpful for moving character's head to look at the player, rotating a turret to look at a target, or any other case where you want to make a bone rotate towards something quickly and easily.</p>\n"
            },
            "class_skeletonmodification2dphysicalbones": {
                "url": "https://docs.godotengine.org/en/4.1/classes/class_skeletonmodification2dphysicalbones.html",
                "title": "SkeletonModification2DPhysicalBones",
                "blurb": "<p><strong>Inherits:</strong> <a class=\"reference internal\" href=\"class_skeletonmodification2d.html#class-skeletonmodification2d\"><span class=\"std std-ref\">SkeletonModification2D</span></a> <strong>&lt;</strong> <a class=\"reference internal\" href=\"class_resource.html#class-resource\"><span class=\"std std-ref\">Resource</span></a> <strong>&lt;</strong> <a class=\"reference internal\" href=\"class_refcounted.html#class-refcounted\"><span class=\"std std-ref\">RefCounted</span></a> <strong>&lt;</strong> <a class=\"reference internal\" href=\"class_object.html#class-object\"><span class=\"std std-ref\">Object</span></a></p><p>A modification that applies the transforms of <a class=\"reference internal\" href=\"class_physicalbone2d.html#class-physicalbone2d\"><span class=\"std std-ref\">PhysicalBone2D</span></a> nodes to <a class=\"reference internal\" href=\"class_bone2d.html#class-bone2d\"><span class=\"std std-ref\">Bone2D</span></a> nodes.</p>",
                "description": "\n\n<p>This modification takes the transforms of <a class=\"reference internal\" href=\"class_physicalbone2d.html#class-physicalbone2d\"><span class=\"std std-ref\">PhysicalBone2D</span></a> nodes and applies them to <a class=\"reference internal\" href=\"class_bone2d.html#class-bone2d\"><span class=\"std std-ref\">Bone2D</span></a> nodes. This allows the <a class=\"reference internal\" href=\"class_bone2d.html#class-bone2d\"><span class=\"std std-ref\">Bone2D</span></a> nodes to react to physics thanks to the linked <a class=\"reference internal\" href=\"class_physicalbone2d.html#class-physicalbone2d\"><span class=\"std std-ref\">PhysicalBone2D</span></a> nodes.</p>\n<p>Experimental. Physical bones may be changed in the future to perform the position update of <a class=\"reference internal\" href=\"class_bone2d.html#class-bone2d\"><span class=\"std std-ref\">Bone2D</span></a> on their own.</p>\n"
            },
            "class_skeletonmodification2dstackholder": {
                "url": "https://docs.godotengine.org/en/4.1/classes/class_skeletonmodification2dstackholder.html",
                "title": "SkeletonModification2DStackHolder",
                "blurb": "<p><strong>Inherits:</strong> <a class=\"reference internal\" href=\"class_skeletonmodification2d.html#class-skeletonmodification2d\"><span class=\"std std-ref\">SkeletonModification2D</span></a> <strong>&lt;</strong> <a class=\"reference internal\" href=\"class_resource.html#class-resource\"><span class=\"std std-ref\">Resource</span></a> <strong>&lt;</strong> <a class=\"reference internal\" href=\"class_refcounted.html#class-refcounted\"><span class=\"std std-ref\">RefCounted</span></a> <strong>&lt;</strong> <a class=\"reference internal\" href=\"class_object.html#class-object\"><span class=\"std std-ref\">Object</span></a></p><p>A modification that holds and executes a <a class=\"reference internal\" href=\"class_skeletonmodificationstack2d.html#class-skeletonmodificationstack2d\"><span class=\"std std-ref\">SkeletonModificationStack2D</span></a>.</p>",
                "description": "\n\n<p>This <a class=\"reference internal\" href=\"class_skeletonmodification2d.html#class-skeletonmodification2d\"><span class=\"std std-ref\">SkeletonModification2D</span></a> holds a reference to a <a class=\"reference internal\" href=\"class_skeletonmodificationstack2d.html#class-skeletonmodificationstack2d\"><span class=\"std std-ref\">SkeletonModificationStack2D</span></a>, allowing you to use multiple modification stacks on a single <a class=\"reference internal\" href=\"class_skeleton2d.html#class-skeleton2d\"><span class=\"std std-ref\">Skeleton2D</span></a>.</p>\n<p><strong>Note:</strong> The modifications in the held <a class=\"reference internal\" href=\"class_skeletonmodificationstack2d.html#class-skeletonmodificationstack2d\"><span class=\"std std-ref\">SkeletonModificationStack2D</span></a> will only be executed if their execution mode matches the execution mode of the SkeletonModification2DStackHolder.</p>\n"
            },
            "class_skeletonmodification2dtwoboneik": {
                "url": "https://docs.godotengine.org/en/4.1/classes/class_skeletonmodification2dtwoboneik.html",
                "title": "SkeletonModification2DTwoBoneIK",
                "blurb": "<p><strong>Inherits:</strong> <a class=\"reference internal\" href=\"class_skeletonmodification2d.html#class-skeletonmodification2d\"><span class=\"std std-ref\">SkeletonModification2D</span></a> <strong>&lt;</strong> <a class=\"reference internal\" href=\"class_resource.html#class-resource\"><span class=\"std std-ref\">Resource</span></a> <strong>&lt;</strong> <a class=\"reference internal\" href=\"class_refcounted.html#class-refcounted\"><span class=\"std std-ref\">RefCounted</span></a> <strong>&lt;</strong> <a class=\"reference internal\" href=\"class_object.html#class-object\"><span class=\"std std-ref\">Object</span></a></p><p>A modification that rotates two bones using the law of cosines to reach the target.</p>",
                "description": "\n\n<p>This <a class=\"reference internal\" href=\"class_skeletonmodification2d.html#class-skeletonmodification2d\"><span class=\"std std-ref\">SkeletonModification2D</span></a> uses an algorithm typically called TwoBoneIK. This algorithm works by leveraging the law of cosines and the lengths of the bones to figure out what rotation the bones currently have, and what rotation they need to make a complete triangle, where the first bone, the second bone, and the target form the three vertices of the triangle. Because the algorithm works by making a triangle, it can only operate on two bones.</p>\n<p>TwoBoneIK is great for arms, legs, and really any joints that can be represented by just two bones that bend to reach a target. This solver is more lightweight than <a class=\"reference internal\" href=\"class_skeletonmodification2dfabrik.html#class-skeletonmodification2dfabrik\"><span class=\"std std-ref\">SkeletonModification2DFABRIK</span></a>, but gives similar, natural looking results.</p>\n"
            },
            "class_skeletonmodificationstack2d": {
                "url": "https://docs.godotengine.org/en/4.1/classes/class_skeletonmodificationstack2d.html",
                "title": "SkeletonModificationStack2D",
                "blurb": "<p><strong>Inherits:</strong> <a class=\"reference internal\" href=\"class_resource.html#class-resource\"><span class=\"std std-ref\">Resource</span></a> <strong>&lt;</strong> <a class=\"reference internal\" href=\"class_refcounted.html#class-refcounted\"><span class=\"std std-ref\">RefCounted</span></a> <strong>&lt;</strong> <a class=\"reference internal\" href=\"class_object.html#class-object\"><span class=\"std std-ref\">Object</span></a></p><p>A resource that holds a stack of <a class=\"reference internal\" href=\"class_skeletonmodification2d.html#class-skeletonmodification2d\"><span class=\"std std-ref\">SkeletonModification2D</span></a>s.</p>",
                "description": "\n\n<p>This resource is used by the Skeleton and holds a stack of <a class=\"reference internal\" href=\"class_skeletonmodification2d.html#class-skeletonmodification2d\"><span class=\"std std-ref\">SkeletonModification2D</span></a>s.</p>\n<p>This controls the order of the modifications and how they are applied. Modification order is especially important for full-body IK setups, as you need to execute the modifications in the correct order to get the desired results. For example, you want to execute a modification on the spine <em>before</em> the arms on a humanoid skeleton.</p>\n<p>This resource also controls how strongly all of the modifications are applied to the <a class=\"reference internal\" href=\"class_skeleton2d.html#class-skeleton2d\"><span class=\"std std-ref\">Skeleton2D</span></a>.</p>\n"
            },
            "class_skeletonprofile": {
                "url": "https://docs.godotengine.org/en/4.1/classes/class_skeletonprofile.html",
                "title": "SkeletonProfile",
                "blurb": "<p><strong>Inherits:</strong> <a class=\"reference internal\" href=\"class_resource.html#class-resource\"><span class=\"std std-ref\">Resource</span></a> <strong>&lt;</strong> <a class=\"reference internal\" href=\"class_refcounted.html#class-refcounted\"><span class=\"std std-ref\">RefCounted</span></a> <strong>&lt;</strong> <a class=\"reference internal\" href=\"class_object.html#class-object\"><span class=\"std std-ref\">Object</span></a></p><p><strong>Inherited By:</strong> <a class=\"reference internal\" href=\"class_skeletonprofilehumanoid.html#class-skeletonprofilehumanoid\"><span class=\"std std-ref\">SkeletonProfileHumanoid</span></a></p><p>Base class for a profile of a virtual skeleton used as a target for retargeting.</p>",
                "description": "\n\n<p>This resource is used in <a class=\"reference internal\" href=\"class_editorscenepostimport.html#class-editorscenepostimport\"><span class=\"std std-ref\">EditorScenePostImport</span></a>. Some parameters are referring to bones in <a class=\"reference internal\" href=\"class_skeleton3d.html#class-skeleton3d\"><span class=\"std std-ref\">Skeleton3D</span></a>, <a class=\"reference internal\" href=\"class_skin.html#class-skin\"><span class=\"std std-ref\">Skin</span></a>, <a class=\"reference internal\" href=\"class_animation.html#class-animation\"><span class=\"std std-ref\">Animation</span></a>, and some other nodes are rewritten based on the parameters of <strong>SkeletonProfile</strong>.</p>\n<p><strong>Note:</strong> These parameters need to be set only when creating a custom profile. In <a class=\"reference internal\" href=\"class_skeletonprofilehumanoid.html#class-skeletonprofilehumanoid\"><span class=\"std std-ref\">SkeletonProfileHumanoid</span></a>, they are defined internally as read-only values.</p>\n"
            },
            "class_skeletonprofilehumanoid": {
                "url": "https://docs.godotengine.org/en/4.1/classes/class_skeletonprofilehumanoid.html",
                "title": "SkeletonProfileHumanoid",
                "blurb": "<p><strong>Inherits:</strong> <a class=\"reference internal\" href=\"class_skeletonprofile.html#class-skeletonprofile\"><span class=\"std std-ref\">SkeletonProfile</span></a> <strong>&lt;</strong> <a class=\"reference internal\" href=\"class_resource.html#class-resource\"><span class=\"std std-ref\">Resource</span></a> <strong>&lt;</strong> <a class=\"reference internal\" href=\"class_refcounted.html#class-refcounted\"><span class=\"std std-ref\">RefCounted</span></a> <strong>&lt;</strong> <a class=\"reference internal\" href=\"class_object.html#class-object\"><span class=\"std std-ref\">Object</span></a></p><p>A humanoid <a class=\"reference internal\" href=\"class_skeletonprofile.html#class-skeletonprofile\"><span class=\"std std-ref\">SkeletonProfile</span></a> preset.</p>",
                "description": "\n\n<p>A <a class=\"reference internal\" href=\"class_skeletonprofile.html#class-skeletonprofile\"><span class=\"std std-ref\">SkeletonProfile</span></a> as a preset that is optimized for the human form. This exists for standardization, so all parameters are read-only.</p>\n"
            },
            "class_skin": {
                "url": "https://docs.godotengine.org/en/4.1/classes/class_skin.html",
                "title": "Skin",
                "blurb": "<p><strong>Inherits:</strong> <a class=\"reference internal\" href=\"class_resource.html#class-resource\"><span class=\"std std-ref\">Resource</span></a> <strong>&lt;</strong> <a class=\"reference internal\" href=\"class_refcounted.html#class-refcounted\"><span class=\"std std-ref\">RefCounted</span></a> <strong>&lt;</strong> <a class=\"reference internal\" href=\"class_object.html#class-object\"><span class=\"std std-ref\">Object</span></a></p>",
                "description": null
            },
            "class_sky": {
                "url": "https://docs.godotengine.org/en/4.1/classes/class_sky.html",
                "title": "Sky",
                "blurb": "<p><strong>Inherits:</strong> <a class=\"reference internal\" href=\"class_resource.html#class-resource\"><span class=\"std std-ref\">Resource</span></a> <strong>&lt;</strong> <a class=\"reference internal\" href=\"class_refcounted.html#class-refcounted\"><span class=\"std std-ref\">RefCounted</span></a> <strong>&lt;</strong> <a class=\"reference internal\" href=\"class_object.html#class-object\"><span class=\"std std-ref\">Object</span></a></p><p>Background that uses a <a class=\"reference internal\" href=\"class_material.html#class-material\"><span class=\"std std-ref\">Material</span></a> to draw a sky.</p>",
                "description": "\n\n<p>The <strong>Sky</strong> class uses a <a class=\"reference internal\" href=\"class_material.html#class-material\"><span class=\"std std-ref\">Material</span></a> to draw the background and update the reflection/radiance cubemaps.</p>\n"
            },
            "class_spheremesh": {
                "url": "https://docs.godotengine.org/en/4.1/classes/class_spheremesh.html",
                "title": "SphereMesh",
                "blurb": "<p><strong>Inherits:</strong> <a class=\"reference internal\" href=\"class_primitivemesh.html#class-primitivemesh\"><span class=\"std std-ref\">PrimitiveMesh</span></a> <strong>&lt;</strong> <a class=\"reference internal\" href=\"class_mesh.html#class-mesh\"><span class=\"std std-ref\">Mesh</span></a> <strong>&lt;</strong> <a class=\"reference internal\" href=\"class_resource.html#class-resource\"><span class=\"std std-ref\">Resource</span></a> <strong>&lt;</strong> <a class=\"reference internal\" href=\"class_refcounted.html#class-refcounted\"><span class=\"std std-ref\">RefCounted</span></a> <strong>&lt;</strong> <a class=\"reference internal\" href=\"class_object.html#class-object\"><span class=\"std std-ref\">Object</span></a></p><p>Class representing a spherical <a class=\"reference internal\" href=\"class_primitivemesh.html#class-primitivemesh\"><span class=\"std std-ref\">PrimitiveMesh</span></a>.</p>",
                "description": "\n\n<p>Class representing a spherical <a class=\"reference internal\" href=\"class_primitivemesh.html#class-primitivemesh\"><span class=\"std std-ref\">PrimitiveMesh</span></a>.</p>\n"
            },
            "class_sphereoccluder3d": {
                "url": "https://docs.godotengine.org/en/4.1/classes/class_sphereoccluder3d.html",
                "title": "SphereOccluder3D",
                "blurb": "<p><strong>Inherits:</strong> <a class=\"reference internal\" href=\"class_occluder3d.html#class-occluder3d\"><span class=\"std std-ref\">Occluder3D</span></a> <strong>&lt;</strong> <a class=\"reference internal\" href=\"class_resource.html#class-resource\"><span class=\"std std-ref\">Resource</span></a> <strong>&lt;</strong> <a class=\"reference internal\" href=\"class_refcounted.html#class-refcounted\"><span class=\"std std-ref\">RefCounted</span></a> <strong>&lt;</strong> <a class=\"reference internal\" href=\"class_object.html#class-object\"><span class=\"std std-ref\">Object</span></a></p><p>Spherical shape for use with occlusion culling in <a class=\"reference internal\" href=\"class_occluderinstance3d.html#class-occluderinstance3d\"><span class=\"std std-ref\">OccluderInstance3D</span></a>.</p>",
                "description": "\n\n<p><strong>SphereOccluder3D</strong> stores a sphere shape that can be used by the engine's occlusion culling system.</p>\n<p>See <a class=\"reference internal\" href=\"class_occluderinstance3d.html#class-occluderinstance3d\"><span class=\"std std-ref\">OccluderInstance3D</span></a>'s documentation for instructions on setting up occlusion culling.</p>\n"
            },
            "class_sphereshape3d": {
                "url": "https://docs.godotengine.org/en/4.1/classes/class_sphereshape3d.html",
                "title": "SphereShape3D",
                "blurb": "<p><strong>Inherits:</strong> <a class=\"reference internal\" href=\"class_shape3d.html#class-shape3d\"><span class=\"std std-ref\">Shape3D</span></a> <strong>&lt;</strong> <a class=\"reference internal\" href=\"class_resource.html#class-resource\"><span class=\"std std-ref\">Resource</span></a> <strong>&lt;</strong> <a class=\"reference internal\" href=\"class_refcounted.html#class-refcounted\"><span class=\"std std-ref\">RefCounted</span></a> <strong>&lt;</strong> <a class=\"reference internal\" href=\"class_object.html#class-object\"><span class=\"std std-ref\">Object</span></a></p><p>A 3D sphere shape used for physics collision.</p>",
                "description": "\n\n<p>A 3D sphere shape, intended for use in physics. Usually used to provide a shape for a <a class=\"reference internal\" href=\"class_collisionshape3d.html#class-collisionshape3d\"><span class=\"std std-ref\">CollisionShape3D</span></a>.</p>\n<p><strong>Performance:</strong> <strong>SphereShape3D</strong> is fast to check collisions against. It is faster than <a class=\"reference internal\" href=\"class_boxshape3d.html#class-boxshape3d\"><span class=\"std std-ref\">BoxShape3D</span></a>, <a class=\"reference internal\" href=\"class_capsuleshape3d.html#class-capsuleshape3d\"><span class=\"std std-ref\">CapsuleShape3D</span></a>, and <a class=\"reference internal\" href=\"class_cylindershape3d.html#class-cylindershape3d\"><span class=\"std std-ref\">CylinderShape3D</span></a>.</p>\n"
            },
            "class_spriteframes": {
                "url": "https://docs.godotengine.org/en/4.1/classes/class_spriteframes.html",
                "title": "SpriteFrames",
                "blurb": "<p><strong>Inherits:</strong> <a class=\"reference internal\" href=\"class_resource.html#class-resource\"><span class=\"std std-ref\">Resource</span></a> <strong>&lt;</strong> <a class=\"reference internal\" href=\"class_refcounted.html#class-refcounted\"><span class=\"std std-ref\">RefCounted</span></a> <strong>&lt;</strong> <a class=\"reference internal\" href=\"class_object.html#class-object\"><span class=\"std std-ref\">Object</span></a></p><p>Sprite frame library for AnimatedSprite2D and AnimatedSprite3D.</p>",
                "description": "\n\n<p>Sprite frame library for an <a class=\"reference internal\" href=\"class_animatedsprite2d.html#class-animatedsprite2d\"><span class=\"std std-ref\">AnimatedSprite2D</span></a> or <a class=\"reference internal\" href=\"class_animatedsprite3d.html#class-animatedsprite3d\"><span class=\"std std-ref\">AnimatedSprite3D</span></a> node. Contains frames and animation data for playback.</p>\n"
            },
            "class_standardmaterial3d": {
                "url": "https://docs.godotengine.org/en/4.1/classes/class_standardmaterial3d.html",
                "title": "StandardMaterial3D",
                "blurb": "<p><strong>Inherits:</strong> <a class=\"reference internal\" href=\"class_basematerial3d.html#class-basematerial3d\"><span class=\"std std-ref\">BaseMaterial3D</span></a> <strong>&lt;</strong> <a class=\"reference internal\" href=\"class_material.html#class-material\"><span class=\"std std-ref\">Material</span></a> <strong>&lt;</strong> <a class=\"reference internal\" href=\"class_resource.html#class-resource\"><span class=\"std std-ref\">Resource</span></a> <strong>&lt;</strong> <a class=\"reference internal\" href=\"class_refcounted.html#class-refcounted\"><span class=\"std std-ref\">RefCounted</span></a> <strong>&lt;</strong> <a class=\"reference internal\" href=\"class_object.html#class-object\"><span class=\"std std-ref\">Object</span></a></p><p>Physically based rendering (PBR) material that can be applied to 3D objects.</p>",
                "description": "\n\n<p><strong>StandardMaterial3D</strong>'s properties are inherited from <a class=\"reference internal\" href=\"class_basematerial3d.html#class-basematerial3d\"><span class=\"std std-ref\">BaseMaterial3D</span></a>. <strong>StandardMaterial3D</strong> uses separate textures for ambient occlusion, roughness and metallic maps. To use a single ORM map for all 3 textures, use an <a class=\"reference internal\" href=\"class_ormmaterial3d.html#class-ormmaterial3d\"><span class=\"std std-ref\">ORMMaterial3D</span></a> instead.</p>\n"
            },
            "class_stylebox": {
                "url": "https://docs.godotengine.org/en/4.1/classes/class_stylebox.html",
                "title": "StyleBox",
                "blurb": "<p><strong>Inherits:</strong> <a class=\"reference internal\" href=\"class_resource.html#class-resource\"><span class=\"std std-ref\">Resource</span></a> <strong>&lt;</strong> <a class=\"reference internal\" href=\"class_refcounted.html#class-refcounted\"><span class=\"std std-ref\">RefCounted</span></a> <strong>&lt;</strong> <a class=\"reference internal\" href=\"class_object.html#class-object\"><span class=\"std std-ref\">Object</span></a></p><p><strong>Inherited By:</strong> <a class=\"reference internal\" href=\"class_styleboxempty.html#class-styleboxempty\"><span class=\"std std-ref\">StyleBoxEmpty</span></a>, <a class=\"reference internal\" href=\"class_styleboxflat.html#class-styleboxflat\"><span class=\"std std-ref\">StyleBoxFlat</span></a>, <a class=\"reference internal\" href=\"class_styleboxline.html#class-styleboxline\"><span class=\"std std-ref\">StyleBoxLine</span></a>, <a class=\"reference internal\" href=\"class_styleboxtexture.html#class-styleboxtexture\"><span class=\"std std-ref\">StyleBoxTexture</span></a></p><p>Abstract base class for defining stylized boxes for UI elements.</p>",
                "description": "\n\n<p><strong>StyleBox</strong> is an abstract base class for drawing stylized boxes for UI elements. It is used for panels, buttons, <a class=\"reference internal\" href=\"class_lineedit.html#class-lineedit\"><span class=\"std std-ref\">LineEdit</span></a> backgrounds, <a class=\"reference internal\" href=\"class_tree.html#class-tree\"><span class=\"std std-ref\">Tree</span></a> backgrounds, etc. and also for testing a transparency mask for pointer signals. If mask test fails on a <strong>StyleBox</strong> assigned as mask to a control, clicks and motion signals will go through it to the one below.</p>\n<p><strong>Note:</strong> For control nodes that have <em>Theme Properties</em>, the <code class=\"docutils literal notranslate\"><span class=\"pre\">focus</span></code> <strong>StyleBox</strong> is displayed over the <code class=\"docutils literal notranslate\"><span class=\"pre\">normal</span></code>, <code class=\"docutils literal notranslate\"><span class=\"pre\">hover</span></code> or <code class=\"docutils literal notranslate\"><span class=\"pre\">pressed</span></code> <strong>StyleBox</strong>. This makes the <code class=\"docutils literal notranslate\"><span class=\"pre\">focus</span></code> <strong>StyleBox</strong> more reusable across different nodes.</p>\n"
            },
            "class_styleboxempty": {
                "url": "https://docs.godotengine.org/en/4.1/classes/class_styleboxempty.html",
                "title": "StyleBoxEmpty",
                "blurb": "<p><strong>Inherits:</strong> <a class=\"reference internal\" href=\"class_stylebox.html#class-stylebox\"><span class=\"std std-ref\">StyleBox</span></a> <strong>&lt;</strong> <a class=\"reference internal\" href=\"class_resource.html#class-resource\"><span class=\"std std-ref\">Resource</span></a> <strong>&lt;</strong> <a class=\"reference internal\" href=\"class_refcounted.html#class-refcounted\"><span class=\"std std-ref\">RefCounted</span></a> <strong>&lt;</strong> <a class=\"reference internal\" href=\"class_object.html#class-object\"><span class=\"std std-ref\">Object</span></a></p><p>An empty <a class=\"reference internal\" href=\"class_stylebox.html#class-stylebox\"><span class=\"std std-ref\">StyleBox</span></a> (does not display anything).</p>",
                "description": "\n\n<p>An empty <a class=\"reference internal\" href=\"class_stylebox.html#class-stylebox\"><span class=\"std std-ref\">StyleBox</span></a> that can be used to display nothing instead of the default style (e.g. it can \"disable\" <code class=\"docutils literal notranslate\"><span class=\"pre\">focus</span></code> styles).</p>\n"
            },
            "class_styleboxflat": {
                "url": "https://docs.godotengine.org/en/4.1/classes/class_styleboxflat.html",
                "title": "StyleBoxFlat",
                "blurb": "<p><strong>Inherits:</strong> <a class=\"reference internal\" href=\"class_stylebox.html#class-stylebox\"><span class=\"std std-ref\">StyleBox</span></a> <strong>&lt;</strong> <a class=\"reference internal\" href=\"class_resource.html#class-resource\"><span class=\"std std-ref\">Resource</span></a> <strong>&lt;</strong> <a class=\"reference internal\" href=\"class_refcounted.html#class-refcounted\"><span class=\"std std-ref\">RefCounted</span></a> <strong>&lt;</strong> <a class=\"reference internal\" href=\"class_object.html#class-object\"><span class=\"std std-ref\">Object</span></a></p><p>A customizable <a class=\"reference internal\" href=\"class_stylebox.html#class-stylebox\"><span class=\"std std-ref\">StyleBox</span></a> that doesn't use a texture.</p>",
                "description": "\n\n<p>By configuring various properties of this style box, you can achieve many common looks without the need of a texture. This includes optionally rounded borders, antialiasing, shadows, and skew.</p>\n<p>Setting corner radius to high values is allowed. As soon as corners overlap, the stylebox will switch to a relative system.</p>\n<p><strong>Example:</strong></p>\n<div class=\"highlight-gdscript notranslate\"><div class=\"highlight\"><pre><span></span><span class=\"n\">height</span> <span class=\"o\">=</span> <span class=\"mi\">30</span>\n<span class=\"n\">corner_radius_top_left</span> <span class=\"o\">=</span> <span class=\"mi\">50</span>\n<span class=\"n\">corner_radius_bottom_left</span> <span class=\"o\">=</span> <span class=\"mi\">100</span>\n</pre></div>\n</div>\n<p>The relative system now would take the 1:2 ratio of the two left corners to calculate the actual corner width. Both corners added will <strong>never</strong> be more than the height. Result:</p>\n<div class=\"highlight-gdscript notranslate\"><div class=\"highlight\"><pre><span></span><span class=\"n\">corner_radius_top_left</span><span class=\"p\">:</span> <span class=\"mi\">10</span>\n<span class=\"n\">corner_radius_bottom_left</span><span class=\"p\">:</span> <span class=\"mi\">20</span>\n</pre></div>\n</div>\n"
            },
            "class_styleboxline": {
                "url": "https://docs.godotengine.org/en/4.1/classes/class_styleboxline.html",
                "title": "StyleBoxLine",
                "blurb": "<p><strong>Inherits:</strong> <a class=\"reference internal\" href=\"class_stylebox.html#class-stylebox\"><span class=\"std std-ref\">StyleBox</span></a> <strong>&lt;</strong> <a class=\"reference internal\" href=\"class_resource.html#class-resource\"><span class=\"std std-ref\">Resource</span></a> <strong>&lt;</strong> <a class=\"reference internal\" href=\"class_refcounted.html#class-refcounted\"><span class=\"std std-ref\">RefCounted</span></a> <strong>&lt;</strong> <a class=\"reference internal\" href=\"class_object.html#class-object\"><span class=\"std std-ref\">Object</span></a></p><p>A <a class=\"reference internal\" href=\"class_stylebox.html#class-stylebox\"><span class=\"std std-ref\">StyleBox</span></a> that displays a single line of a given color and thickness.</p>",
                "description": "\n\n<p>A <a class=\"reference internal\" href=\"class_stylebox.html#class-stylebox\"><span class=\"std std-ref\">StyleBox</span></a> that displays a single line of a given color and thickness. The line can be either horizontal or vertical. Useful for separators.</p>\n"
            },
            "class_styleboxtexture": {
                "url": "https://docs.godotengine.org/en/4.1/classes/class_styleboxtexture.html",
                "title": "StyleBoxTexture",
                "blurb": "<p><strong>Inherits:</strong> <a class=\"reference internal\" href=\"class_stylebox.html#class-stylebox\"><span class=\"std std-ref\">StyleBox</span></a> <strong>&lt;</strong> <a class=\"reference internal\" href=\"class_resource.html#class-resource\"><span class=\"std std-ref\">Resource</span></a> <strong>&lt;</strong> <a class=\"reference internal\" href=\"class_refcounted.html#class-refcounted\"><span class=\"std std-ref\">RefCounted</span></a> <strong>&lt;</strong> <a class=\"reference internal\" href=\"class_object.html#class-object\"><span class=\"std std-ref\">Object</span></a></p><p>A texture-based nine-patch <a class=\"reference internal\" href=\"class_stylebox.html#class-stylebox\"><span class=\"std std-ref\">StyleBox</span></a>.</p>",
                "description": "\n\n<p>A texture-based nine-patch <a class=\"reference internal\" href=\"class_stylebox.html#class-stylebox\"><span class=\"std std-ref\">StyleBox</span></a>, in a way similar to <a class=\"reference internal\" href=\"class_ninepatchrect.html#class-ninepatchrect\"><span class=\"std std-ref\">NinePatchRect</span></a>. This stylebox performs a 3×3 scaling of a texture, where only the center cell is fully stretched. This makes it possible to design bordered styles regardless of the stylebox's size.</p>\n"
            },
            "class_syntaxhighlighter": {
                "url": "https://docs.godotengine.org/en/4.1/classes/class_syntaxhighlighter.html",
                "title": "SyntaxHighlighter",
                "blurb": "<p><strong>Inherits:</strong> <a class=\"reference internal\" href=\"class_resource.html#class-resource\"><span class=\"std std-ref\">Resource</span></a> <strong>&lt;</strong> <a class=\"reference internal\" href=\"class_refcounted.html#class-refcounted\"><span class=\"std std-ref\">RefCounted</span></a> <strong>&lt;</strong> <a class=\"reference internal\" href=\"class_object.html#class-object\"><span class=\"std std-ref\">Object</span></a></p><p><strong>Inherited By:</strong> <a class=\"reference internal\" href=\"class_codehighlighter.html#class-codehighlighter\"><span class=\"std std-ref\">CodeHighlighter</span></a>, <a class=\"reference internal\" href=\"class_editorsyntaxhighlighter.html#class-editorsyntaxhighlighter\"><span class=\"std std-ref\">EditorSyntaxHighlighter</span></a></p><p>Base class for syntax highlighters. Provides syntax highlighting data to a <a class=\"reference internal\" href=\"class_textedit.html#class-textedit\"><span class=\"std std-ref\">TextEdit</span></a>.</p>",
                "description": "\n\n<p>Base class for syntax highlighters. Provides syntax highlighting data to a <a class=\"reference internal\" href=\"class_textedit.html#class-textedit\"><span class=\"std std-ref\">TextEdit</span></a>. The associated <a class=\"reference internal\" href=\"class_textedit.html#class-textedit\"><span class=\"std std-ref\">TextEdit</span></a> will call into the <strong>SyntaxHighlighter</strong> on an as-needed basis.</p>\n<p><strong>Note:</strong> A <strong>SyntaxHighlighter</strong> instance should not be used across multiple <a class=\"reference internal\" href=\"class_textedit.html#class-textedit\"><span class=\"std std-ref\">TextEdit</span></a> nodes.</p>\n"
            },
            "class_systemfont": {
                "url": "https://docs.godotengine.org/en/4.1/classes/class_systemfont.html",
                "title": "SystemFont",
                "blurb": "<p><strong>Inherits:</strong> <a class=\"reference internal\" href=\"class_font.html#class-font\"><span class=\"std std-ref\">Font</span></a> <strong>&lt;</strong> <a class=\"reference internal\" href=\"class_resource.html#class-resource\"><span class=\"std std-ref\">Resource</span></a> <strong>&lt;</strong> <a class=\"reference internal\" href=\"class_refcounted.html#class-refcounted\"><span class=\"std std-ref\">RefCounted</span></a> <strong>&lt;</strong> <a class=\"reference internal\" href=\"class_object.html#class-object\"><span class=\"std std-ref\">Object</span></a></p><p>A font loaded from a system font. Falls back to a default theme font if not implemented on the host OS.</p>",
                "description": "\n\n<p><strong>SystemFont</strong> loads a font from a system font with the first matching name from <a class=\"reference internal\" href=\"#class-systemfont-property-font-names\"><span class=\"std std-ref\">font_names</span></a>.</p>\n<p>It will attempt to match font style, but it's not guaranteed.</p>\n<p>The returned font might be part of a font collection or be a variable font with OpenType \"weight\", \"width\" and/or \"italic\" features set.</p>\n<p>You can create <a class=\"reference internal\" href=\"class_fontvariation.html#class-fontvariation\"><span class=\"std std-ref\">FontVariation</span></a> of the system font for fine control over its features.</p>\n<p><strong>Note:</strong> This class is implemented on iOS, Linux, macOS and Windows, on other platforms it will fallback to default theme font.</p>\n"
            },
            "class_textmesh": {
                "url": "https://docs.godotengine.org/en/4.1/classes/class_textmesh.html",
                "title": "TextMesh",
                "blurb": "<p><strong>Inherits:</strong> <a class=\"reference internal\" href=\"class_primitivemesh.html#class-primitivemesh\"><span class=\"std std-ref\">PrimitiveMesh</span></a> <strong>&lt;</strong> <a class=\"reference internal\" href=\"class_mesh.html#class-mesh\"><span class=\"std std-ref\">Mesh</span></a> <strong>&lt;</strong> <a class=\"reference internal\" href=\"class_resource.html#class-resource\"><span class=\"std std-ref\">Resource</span></a> <strong>&lt;</strong> <a class=\"reference internal\" href=\"class_refcounted.html#class-refcounted\"><span class=\"std std-ref\">RefCounted</span></a> <strong>&lt;</strong> <a class=\"reference internal\" href=\"class_object.html#class-object\"><span class=\"std std-ref\">Object</span></a></p><p>Generate an <a class=\"reference internal\" href=\"class_primitivemesh.html#class-primitivemesh\"><span class=\"std std-ref\">PrimitiveMesh</span></a> from the text.</p>",
                "description": "\n\n<p>Generate an <a class=\"reference internal\" href=\"class_primitivemesh.html#class-primitivemesh\"><span class=\"std std-ref\">PrimitiveMesh</span></a> from the text.</p>\n<p>TextMesh can be generated only when using dynamic fonts with vector glyph contours. Bitmap fonts (including bitmap data in the TrueType/OpenType containers, like color emoji fonts) are not supported.</p>\n<p>The UV layout is arranged in 4 horizontal strips, top to bottom: 40% of the height for the front face, 40% for the back face, 10% for the outer edges and 10% for the inner edges.</p>\n"
            },
            "class_texture": {
                "url": "https://docs.godotengine.org/en/4.1/classes/class_texture.html",
                "title": "Texture",
                "blurb": "<p><strong>Inherits:</strong> <a class=\"reference internal\" href=\"class_resource.html#class-resource\"><span class=\"std std-ref\">Resource</span></a> <strong>&lt;</strong> <a class=\"reference internal\" href=\"class_refcounted.html#class-refcounted\"><span class=\"std std-ref\">RefCounted</span></a> <strong>&lt;</strong> <a class=\"reference internal\" href=\"class_object.html#class-object\"><span class=\"std std-ref\">Object</span></a></p><p><strong>Inherited By:</strong> <a class=\"reference internal\" href=\"class_texture2d.html#class-texture2d\"><span class=\"std std-ref\">Texture2D</span></a>, <a class=\"reference internal\" href=\"class_texture3d.html#class-texture3d\"><span class=\"std std-ref\">Texture3D</span></a>, <a class=\"reference internal\" href=\"class_texturelayered.html#class-texturelayered\"><span class=\"std std-ref\">TextureLayered</span></a></p><p>Base class for all texture types.</p>",
                "description": "\n\n<p><strong>Texture</strong> is the base class for all texture types. Common texture types are <a class=\"reference internal\" href=\"class_texture2d.html#class-texture2d\"><span class=\"std std-ref\">Texture2D</span></a> and <a class=\"reference internal\" href=\"class_imagetexture.html#class-imagetexture\"><span class=\"std std-ref\">ImageTexture</span></a>. See also <a class=\"reference internal\" href=\"class_image.html#class-image\"><span class=\"std std-ref\">Image</span></a>.</p>\n"
            },
            "class_texture2d": {
                "url": "https://docs.godotengine.org/en/4.1/classes/class_texture2d.html",
                "title": "Texture2D",
                "blurb": "<p><strong>Inherits:</strong> <a class=\"reference internal\" href=\"class_texture.html#class-texture\"><span class=\"std std-ref\">Texture</span></a> <strong>&lt;</strong> <a class=\"reference internal\" href=\"class_resource.html#class-resource\"><span class=\"std std-ref\">Resource</span></a> <strong>&lt;</strong> <a class=\"reference internal\" href=\"class_refcounted.html#class-refcounted\"><span class=\"std std-ref\">RefCounted</span></a> <strong>&lt;</strong> <a class=\"reference internal\" href=\"class_object.html#class-object\"><span class=\"std std-ref\">Object</span></a></p><p><strong>Inherited By:</strong> <a class=\"reference internal\" href=\"class_animatedtexture.html#class-animatedtexture\"><span class=\"std std-ref\">AnimatedTexture</span></a>, <a class=\"reference internal\" href=\"class_atlastexture.html#class-atlastexture\"><span class=\"std std-ref\">AtlasTexture</span></a>, <a class=\"reference internal\" href=\"class_cameratexture.html#class-cameratexture\"><span class=\"std std-ref\">CameraTexture</span></a>, <a class=\"reference internal\" href=\"class_canvastexture.html#class-canvastexture\"><span class=\"std std-ref\">CanvasTexture</span></a>, <a class=\"reference internal\" href=\"class_compressedtexture2d.html#class-compressedtexture2d\"><span class=\"std std-ref\">CompressedTexture2D</span></a>, <a class=\"reference internal\" href=\"class_curvetexture.html#class-curvetexture\"><span class=\"std std-ref\">CurveTexture</span></a>, <a class=\"reference internal\" href=\"class_curvexyztexture.html#class-curvexyztexture\"><span class=\"std std-ref\">CurveXYZTexture</span></a>, <a class=\"reference internal\" href=\"class_gradienttexture1d.html#class-gradienttexture1d\"><span class=\"std std-ref\">GradientTexture1D</span></a>, <a class=\"reference internal\" href=\"class_gradienttexture2d.html#class-gradienttexture2d\"><span class=\"std std-ref\">GradientTexture2D</span></a>, <a class=\"reference internal\" href=\"class_imagetexture.html#class-imagetexture\"><span class=\"std std-ref\">ImageTexture</span></a>, <a class=\"reference internal\" href=\"class_meshtexture.html#class-meshtexture\"><span class=\"std std-ref\">MeshTexture</span></a>, <a class=\"reference internal\" href=\"class_noisetexture2d.html#class-noisetexture2d\"><span class=\"std std-ref\">NoiseTexture2D</span></a>, <a class=\"reference internal\" href=\"class_placeholdertexture2d.html#class-placeholdertexture2d\"><span class=\"std std-ref\">PlaceholderTexture2D</span></a>, <a class=\"reference internal\" href=\"class_portablecompressedtexture2d.html#class-portablecompressedtexture2d\"><span class=\"std std-ref\">PortableCompressedTexture2D</span></a>, <a class=\"reference internal\" href=\"class_viewporttexture.html#class-viewporttexture\"><span class=\"std std-ref\">ViewportTexture</span></a></p><p>Texture for 2D and 3D.</p>",
                "description": "\n\n<p>A texture works by registering an image in the video hardware, which then can be used in 3D models or 2D <a class=\"reference internal\" href=\"class_sprite2d.html#class-sprite2d\"><span class=\"std std-ref\">Sprite2D</span></a> or GUI <a class=\"reference internal\" href=\"class_control.html#class-control\"><span class=\"std std-ref\">Control</span></a>.</p>\n<p>Textures are often created by loading them from a file. See <a class=\"reference internal\" href=\"class_%40gdscript.html#class-gdscript-method-load\"><span class=\"std std-ref\">@GDScript.load</span></a>.</p>\n<p><strong>Texture2D</strong> is a base for other resources. It cannot be used directly.</p>\n<p><strong>Note:</strong> The maximum texture size is 16384×16384 pixels due to graphics hardware limitations. Larger textures may fail to import.</p>\n"
            },
            "class_texture2darray": {
                "url": "https://docs.godotengine.org/en/4.1/classes/class_texture2darray.html",
                "title": "Texture2DArray",
                "blurb": "<p><strong>Inherits:</strong> <a class=\"reference internal\" href=\"class_imagetexturelayered.html#class-imagetexturelayered\"><span class=\"std std-ref\">ImageTextureLayered</span></a> <strong>&lt;</strong> <a class=\"reference internal\" href=\"class_texturelayered.html#class-texturelayered\"><span class=\"std std-ref\">TextureLayered</span></a> <strong>&lt;</strong> <a class=\"reference internal\" href=\"class_texture.html#class-texture\"><span class=\"std std-ref\">Texture</span></a> <strong>&lt;</strong> <a class=\"reference internal\" href=\"class_resource.html#class-resource\"><span class=\"std std-ref\">Resource</span></a> <strong>&lt;</strong> <a class=\"reference internal\" href=\"class_refcounted.html#class-refcounted\"><span class=\"std std-ref\">RefCounted</span></a> <strong>&lt;</strong> <a class=\"reference internal\" href=\"class_object.html#class-object\"><span class=\"std std-ref\">Object</span></a></p><p>A single texture resource which consists of multiple, separate images. Each image has the same dimensions and number of mipmap levels.</p>",
                "description": "\n\n<p>A Texture2DArray is different from a Texture3D: The Texture2DArray does not support trilinear interpolation between the <a class=\"reference internal\" href=\"class_image.html#class-image\"><span class=\"std std-ref\">Image</span></a>s, i.e. no blending. See also <a class=\"reference internal\" href=\"class_cubemap.html#class-cubemap\"><span class=\"std std-ref\">Cubemap</span></a> and <a class=\"reference internal\" href=\"class_cubemaparray.html#class-cubemaparray\"><span class=\"std std-ref\">CubemapArray</span></a>, which are texture arrays with specialized cubemap functions.</p>\n<p>A Texture2DArray is also different from an <a class=\"reference internal\" href=\"class_atlastexture.html#class-atlastexture\"><span class=\"std std-ref\">AtlasTexture</span></a>: In a Texture2DArray, all images are treated separately. In an atlas, the regions (i.e. the single images) can be of different sizes. Furthermore, you usually need to add a padding around the regions, to prevent accidental UV mapping to more than one region. The same goes for mipmapping: Mipmap chains are handled separately for each layer. In an atlas, the slicing has to be done manually in the fragment shader.</p>\n<p>To create such a texture file yourself, reimport your image files using the Godot Editor import presets.</p>\n"
            },
            "class_texture3d": {
                "url": "https://docs.godotengine.org/en/4.1/classes/class_texture3d.html",
                "title": "Texture3D",
                "blurb": "<p><strong>Inherits:</strong> <a class=\"reference internal\" href=\"class_texture.html#class-texture\"><span class=\"std std-ref\">Texture</span></a> <strong>&lt;</strong> <a class=\"reference internal\" href=\"class_resource.html#class-resource\"><span class=\"std std-ref\">Resource</span></a> <strong>&lt;</strong> <a class=\"reference internal\" href=\"class_refcounted.html#class-refcounted\"><span class=\"std std-ref\">RefCounted</span></a> <strong>&lt;</strong> <a class=\"reference internal\" href=\"class_object.html#class-object\"><span class=\"std std-ref\">Object</span></a></p><p><strong>Inherited By:</strong> <a class=\"reference internal\" href=\"class_compressedtexture3d.html#class-compressedtexture3d\"><span class=\"std std-ref\">CompressedTexture3D</span></a>, <a class=\"reference internal\" href=\"class_imagetexture3d.html#class-imagetexture3d\"><span class=\"std std-ref\">ImageTexture3D</span></a>, <a class=\"reference internal\" href=\"class_noisetexture3d.html#class-noisetexture3d\"><span class=\"std std-ref\">NoiseTexture3D</span></a>, <a class=\"reference internal\" href=\"class_placeholdertexture3d.html#class-placeholdertexture3d\"><span class=\"std std-ref\">PlaceholderTexture3D</span></a></p><p>Base class for 3-dimensionnal textures.</p>",
                "description": "\n\n<p>Base class for <a class=\"reference internal\" href=\"class_imagetexture3d.html#class-imagetexture3d\"><span class=\"std std-ref\">ImageTexture3D</span></a> and <a class=\"reference internal\" href=\"class_compressedtexture3d.html#class-compressedtexture3d\"><span class=\"std std-ref\">CompressedTexture3D</span></a>. Cannot be used directly, but contains all the functions necessary for accessing the derived resource types. <strong>Texture3D</strong> is the base class for all 3-dimensional texture types. See also <a class=\"reference internal\" href=\"class_texturelayered.html#class-texturelayered\"><span class=\"std std-ref\">TextureLayered</span></a>.</p>\n<p>All images need to have the same width, height and number of mipmap levels.</p>\n<p>To create such a texture file yourself, reimport your image files using the Godot Editor import presets.</p>\n"
            },
            "class_texturelayered": {
                "url": "https://docs.godotengine.org/en/4.1/classes/class_texturelayered.html",
                "title": "TextureLayered",
                "blurb": "<p><strong>Inherits:</strong> <a class=\"reference internal\" href=\"class_texture.html#class-texture\"><span class=\"std std-ref\">Texture</span></a> <strong>&lt;</strong> <a class=\"reference internal\" href=\"class_resource.html#class-resource\"><span class=\"std std-ref\">Resource</span></a> <strong>&lt;</strong> <a class=\"reference internal\" href=\"class_refcounted.html#class-refcounted\"><span class=\"std std-ref\">RefCounted</span></a> <strong>&lt;</strong> <a class=\"reference internal\" href=\"class_object.html#class-object\"><span class=\"std std-ref\">Object</span></a></p><p><strong>Inherited By:</strong> <a class=\"reference internal\" href=\"class_compressedtexturelayered.html#class-compressedtexturelayered\"><span class=\"std std-ref\">CompressedTextureLayered</span></a>, <a class=\"reference internal\" href=\"class_imagetexturelayered.html#class-imagetexturelayered\"><span class=\"std std-ref\">ImageTextureLayered</span></a>, <a class=\"reference internal\" href=\"class_placeholdertexturelayered.html#class-placeholdertexturelayered\"><span class=\"std std-ref\">PlaceholderTextureLayered</span></a></p><p>Base class for texture types which contain the data of multiple <a class=\"reference internal\" href=\"class_image.html#class-image\"><span class=\"std std-ref\">Image</span></a>s. Each image is of the same size and format.</p>",
                "description": "\n\n<p>Base class for <a class=\"reference internal\" href=\"class_imagetexturelayered.html#class-imagetexturelayered\"><span class=\"std std-ref\">ImageTextureLayered</span></a> and <a class=\"reference internal\" href=\"class_compressedtexturelayered.html#class-compressedtexturelayered\"><span class=\"std std-ref\">CompressedTextureLayered</span></a>. Cannot be used directly, but contains all the functions necessary for accessing the derived resource types. See also <a class=\"reference internal\" href=\"class_texture3d.html#class-texture3d\"><span class=\"std std-ref\">Texture3D</span></a>.</p>\n<p>Data is set on a per-layer basis. For <a class=\"reference internal\" href=\"class_texture2darray.html#class-texture2darray\"><span class=\"std std-ref\">Texture2DArray</span></a>s, the layer specifies the array layer.</p>\n<p>All images need to have the same width, height and number of mipmap levels.</p>\n<p>A <strong>TextureLayered</strong> can be loaded with <a class=\"reference internal\" href=\"class_resourceloader.html#class-resourceloader-method-load\"><span class=\"std std-ref\">ResourceLoader.load</span></a>.</p>\n<p>Internally, Godot maps these files to their respective counterparts in the target rendering driver (Vulkan, OpenGL3).</p>\n"
            },
            "class_theme": {
                "url": "https://docs.godotengine.org/en/4.1/classes/class_theme.html",
                "title": "Theme",
                "blurb": "<p><strong>Inherits:</strong> <a class=\"reference internal\" href=\"class_resource.html#class-resource\"><span class=\"std std-ref\">Resource</span></a> <strong>&lt;</strong> <a class=\"reference internal\" href=\"class_refcounted.html#class-refcounted\"><span class=\"std std-ref\">RefCounted</span></a> <strong>&lt;</strong> <a class=\"reference internal\" href=\"class_object.html#class-object\"><span class=\"std std-ref\">Object</span></a></p><p>A resource used for styling/skinning <a class=\"reference internal\" href=\"class_control.html#class-control\"><span class=\"std std-ref\">Control</span></a>s and <a class=\"reference internal\" href=\"class_window.html#class-window\"><span class=\"std std-ref\">Window</span></a>s.</p>",
                "description": "\n\n<p>A resource used for styling/skinning <a class=\"reference internal\" href=\"class_control.html#class-control\"><span class=\"std std-ref\">Control</span></a> and <a class=\"reference internal\" href=\"class_window.html#class-window\"><span class=\"std std-ref\">Window</span></a> nodes. While individual controls can be styled using their local theme overrides (see <a class=\"reference internal\" href=\"class_control.html#class-control-method-add-theme-color-override\"><span class=\"std std-ref\">Control.add_theme_color_override</span></a>), theme resources allow you to store and apply the same settings across all controls sharing the same type (e.g. style all <a class=\"reference internal\" href=\"class_button.html#class-button\"><span class=\"std std-ref\">Button</span></a>s the same). One theme resource can be used for the entire project, but you can also set a separate theme resource to a branch of control nodes. A theme resource assigned to a control applies to the control itself, as well as all of its direct and indirect children (as long as a chain of controls is uninterrupted).</p>\n<p>Use <a class=\"reference internal\" href=\"class_projectsettings.html#class-projectsettings-property-gui-theme-custom\"><span class=\"std std-ref\">ProjectSettings.gui/theme/custom</span></a> to set up a project-scope theme that will be available to every control in your project.</p>\n<p>Use <a class=\"reference internal\" href=\"class_control.html#class-control-property-theme\"><span class=\"std std-ref\">Control.theme</span></a> of any control node to set up a theme that will be available to that control and all of its direct and indirect children.</p>\n"
            },
            "class_tilemappattern": {
                "url": "https://docs.godotengine.org/en/4.1/classes/class_tilemappattern.html",
                "title": "TileMapPattern",
                "blurb": "<p><strong>Inherits:</strong> <a class=\"reference internal\" href=\"class_resource.html#class-resource\"><span class=\"std std-ref\">Resource</span></a> <strong>&lt;</strong> <a class=\"reference internal\" href=\"class_refcounted.html#class-refcounted\"><span class=\"std std-ref\">RefCounted</span></a> <strong>&lt;</strong> <a class=\"reference internal\" href=\"class_object.html#class-object\"><span class=\"std std-ref\">Object</span></a></p><p>Holds a pattern to be copied from or pasted into <a class=\"reference internal\" href=\"class_tilemap.html#class-tilemap\"><span class=\"std std-ref\">TileMap</span></a>s.</p>",
                "description": "\n\n<p>This resource holds a set of cells to help bulk manipulations of <a class=\"reference internal\" href=\"class_tilemap.html#class-tilemap\"><span class=\"std std-ref\">TileMap</span></a>.</p>\n<p>A pattern always start at the <code class=\"docutils literal notranslate\"><span class=\"pre\">(0,0)</span></code> coordinates and cannot have cells with negative coordinates.</p>\n"
            },
            "class_tileset": {
                "url": "https://docs.godotengine.org/en/4.1/classes/class_tileset.html",
                "title": "TileSet",
                "blurb": "<p><strong>Inherits:</strong> <a class=\"reference internal\" href=\"class_resource.html#class-resource\"><span class=\"std std-ref\">Resource</span></a> <strong>&lt;</strong> <a class=\"reference internal\" href=\"class_refcounted.html#class-refcounted\"><span class=\"std std-ref\">RefCounted</span></a> <strong>&lt;</strong> <a class=\"reference internal\" href=\"class_object.html#class-object\"><span class=\"std std-ref\">Object</span></a></p><p>Tile library for tilemaps.</p>",
                "description": "\n\n<p>A TileSet is a library of tiles for a <a class=\"reference internal\" href=\"class_tilemap.html#class-tilemap\"><span class=\"std std-ref\">TileMap</span></a>. A TileSet handles a list of <a class=\"reference internal\" href=\"class_tilesetsource.html#class-tilesetsource\"><span class=\"std std-ref\">TileSetSource</span></a>, each of them storing a set of tiles.</p>\n<p>Tiles can either be from a <a class=\"reference internal\" href=\"class_tilesetatlassource.html#class-tilesetatlassource\"><span class=\"std std-ref\">TileSetAtlasSource</span></a>, that render tiles out of a texture with support for physics, navigation, etc... or from a <a class=\"reference internal\" href=\"class_tilesetscenescollectionsource.html#class-tilesetscenescollectionsource\"><span class=\"std std-ref\">TileSetScenesCollectionSource</span></a> which exposes scene-based tiles.</p>\n<p>Tiles are referenced by using three IDs: their source ID, their atlas coordinates ID and their alternative tile ID.</p>\n<p>A TileSet can be configured so that its tiles expose more or less properties. To do so, the TileSet resources uses property layers, that you can add or remove depending on your needs.</p>\n<p>For example, adding a physics layer allows giving collision shapes to your tiles. Each layer having dedicated properties (physics layer and mask), you may add several TileSet physics layers for each type of collision you need.</p>\n<p>See the functions to add new layers for more information.</p>\n"
            },
            "class_tilesetatlassource": {
                "url": "https://docs.godotengine.org/en/4.1/classes/class_tilesetatlassource.html",
                "title": "TileSetAtlasSource",
                "blurb": "<p><strong>Inherits:</strong> <a class=\"reference internal\" href=\"class_tilesetsource.html#class-tilesetsource\"><span class=\"std std-ref\">TileSetSource</span></a> <strong>&lt;</strong> <a class=\"reference internal\" href=\"class_resource.html#class-resource\"><span class=\"std std-ref\">Resource</span></a> <strong>&lt;</strong> <a class=\"reference internal\" href=\"class_refcounted.html#class-refcounted\"><span class=\"std std-ref\">RefCounted</span></a> <strong>&lt;</strong> <a class=\"reference internal\" href=\"class_object.html#class-object\"><span class=\"std std-ref\">Object</span></a></p><p>Exposes a 2D atlas texture as a set of tiles for a <a class=\"reference internal\" href=\"class_tileset.html#class-tileset\"><span class=\"std std-ref\">TileSet</span></a> resource.</p>",
                "description": "\n\n<p>An atlas is a grid of tiles laid out on a texture. Each tile in the grid must be exposed using <a class=\"reference internal\" href=\"#class-tilesetatlassource-method-create-tile\"><span class=\"std std-ref\">create_tile</span></a>. Those tiles are then indexed using their coordinates in the grid.</p>\n<p>Each tile can also have a size in the grid coordinates, making it more or less cells in the atlas.</p>\n<p>Alternatives version of a tile can be created using <a class=\"reference internal\" href=\"#class-tilesetatlassource-method-create-alternative-tile\"><span class=\"std std-ref\">create_alternative_tile</span></a>, which are then indexed using an alternative ID. The main tile (the one in the grid), is accessed with an alternative ID equal to 0.</p>\n<p>Each tile alternate has a set of properties that is defined by the source's <a class=\"reference internal\" href=\"class_tileset.html#class-tileset\"><span class=\"std std-ref\">TileSet</span></a> layers. Those properties are stored in a TileData object that can be accessed and modified using <a class=\"reference internal\" href=\"#class-tilesetatlassource-method-get-tile-data\"><span class=\"std std-ref\">get_tile_data</span></a>.</p>\n<p>As TileData properties are stored directly in the TileSetAtlasSource resource, their properties might also be set using <code class=\"docutils literal notranslate\"><span class=\"pre\">TileSetAtlasSource.set(\"&lt;coords_x&gt;:&lt;coords_y&gt;/&lt;alternative_id&gt;/&lt;tile_data_property&gt;\")</span></code>.</p>\n"
            },
            "class_tilesetscenescollectionsource": {
                "url": "https://docs.godotengine.org/en/4.1/classes/class_tilesetscenescollectionsource.html",
                "title": "TileSetScenesCollectionSource",
                "blurb": "<p><strong>Inherits:</strong> <a class=\"reference internal\" href=\"class_tilesetsource.html#class-tilesetsource\"><span class=\"std std-ref\">TileSetSource</span></a> <strong>&lt;</strong> <a class=\"reference internal\" href=\"class_resource.html#class-resource\"><span class=\"std std-ref\">Resource</span></a> <strong>&lt;</strong> <a class=\"reference internal\" href=\"class_refcounted.html#class-refcounted\"><span class=\"std std-ref\">RefCounted</span></a> <strong>&lt;</strong> <a class=\"reference internal\" href=\"class_object.html#class-object\"><span class=\"std std-ref\">Object</span></a></p><p>Exposes a set of scenes as tiles for a <a class=\"reference internal\" href=\"class_tileset.html#class-tileset\"><span class=\"std std-ref\">TileSet</span></a> resource.</p>",
                "description": "\n\n<p>When placed on a <a class=\"reference internal\" href=\"class_tilemap.html#class-tilemap\"><span class=\"std std-ref\">TileMap</span></a>, tiles from <strong>TileSetScenesCollectionSource</strong> will automatically instantiate an associated scene at the cell's position in the TileMap.</p>\n<p>Scenes are instantiated as children of the <a class=\"reference internal\" href=\"class_tilemap.html#class-tilemap\"><span class=\"std std-ref\">TileMap</span></a> when it enters the tree. If you add/remove a scene tile in the <a class=\"reference internal\" href=\"class_tilemap.html#class-tilemap\"><span class=\"std std-ref\">TileMap</span></a> that is already inside the tree, the <a class=\"reference internal\" href=\"class_tilemap.html#class-tilemap\"><span class=\"std std-ref\">TileMap</span></a> will automatically instantiate/free the scene accordingly.</p>\n"
            },
            "class_tilesetsource": {
                "url": "https://docs.godotengine.org/en/4.1/classes/class_tilesetsource.html",
                "title": "TileSetSource",
                "blurb": "<p><strong>Inherits:</strong> <a class=\"reference internal\" href=\"class_resource.html#class-resource\"><span class=\"std std-ref\">Resource</span></a> <strong>&lt;</strong> <a class=\"reference internal\" href=\"class_refcounted.html#class-refcounted\"><span class=\"std std-ref\">RefCounted</span></a> <strong>&lt;</strong> <a class=\"reference internal\" href=\"class_object.html#class-object\"><span class=\"std std-ref\">Object</span></a></p><p><strong>Inherited By:</strong> <a class=\"reference internal\" href=\"class_tilesetatlassource.html#class-tilesetatlassource\"><span class=\"std std-ref\">TileSetAtlasSource</span></a>, <a class=\"reference internal\" href=\"class_tilesetscenescollectionsource.html#class-tilesetscenescollectionsource\"><span class=\"std std-ref\">TileSetScenesCollectionSource</span></a></p><p>Exposes a set of tiles for a <a class=\"reference internal\" href=\"class_tileset.html#class-tileset\"><span class=\"std std-ref\">TileSet</span></a> resource.</p>",
                "description": "\n\n<p>Exposes a set of tiles for a <a class=\"reference internal\" href=\"class_tileset.html#class-tileset\"><span class=\"std std-ref\">TileSet</span></a> resource.</p>\n<p>Tiles in a source are indexed with two IDs, coordinates ID (of type Vector2i) and an alternative ID (of type int), named according to their use in the <a class=\"reference internal\" href=\"class_tilesetatlassource.html#class-tilesetatlassource\"><span class=\"std std-ref\">TileSetAtlasSource</span></a> class.</p>\n<p>Depending on the TileSet source type, those IDs might have restrictions on their values, this is why the base <strong>TileSetSource</strong> class only exposes getters for them.</p>\n<p>You can iterate over all tiles exposed by a TileSetSource by first iterating over coordinates IDs using <a class=\"reference internal\" href=\"#class-tilesetsource-method-get-tiles-count\"><span class=\"std std-ref\">get_tiles_count</span></a> and <a class=\"reference internal\" href=\"#class-tilesetsource-method-get-tile-id\"><span class=\"std std-ref\">get_tile_id</span></a>, then over alternative IDs using <a class=\"reference internal\" href=\"#class-tilesetsource-method-get-alternative-tiles-count\"><span class=\"std std-ref\">get_alternative_tiles_count</span></a> and <a class=\"reference internal\" href=\"#class-tilesetsource-method-get-alternative-tile-id\"><span class=\"std std-ref\">get_alternative_tile_id</span></a>.</p>\n<p><strong>Warning:</strong> <strong>TileSetSource</strong> can only be added to one TileSet at the same time. Calling <a class=\"reference internal\" href=\"class_tileset.html#class-tileset-method-add-source\"><span class=\"std std-ref\">TileSet.add_source</span></a> on a second <a class=\"reference internal\" href=\"class_tileset.html#class-tileset\"><span class=\"std std-ref\">TileSet</span></a> will remove the source from the first one.</p>\n"
            },
            "class_torusmesh": {
                "url": "https://docs.godotengine.org/en/4.1/classes/class_torusmesh.html",
                "title": "TorusMesh",
                "blurb": "<p><strong>Inherits:</strong> <a class=\"reference internal\" href=\"class_primitivemesh.html#class-primitivemesh\"><span class=\"std std-ref\">PrimitiveMesh</span></a> <strong>&lt;</strong> <a class=\"reference internal\" href=\"class_mesh.html#class-mesh\"><span class=\"std std-ref\">Mesh</span></a> <strong>&lt;</strong> <a class=\"reference internal\" href=\"class_resource.html#class-resource\"><span class=\"std std-ref\">Resource</span></a> <strong>&lt;</strong> <a class=\"reference internal\" href=\"class_refcounted.html#class-refcounted\"><span class=\"std std-ref\">RefCounted</span></a> <strong>&lt;</strong> <a class=\"reference internal\" href=\"class_object.html#class-object\"><span class=\"std std-ref\">Object</span></a></p><p>Class representing a torus <a class=\"reference internal\" href=\"class_primitivemesh.html#class-primitivemesh\"><span class=\"std std-ref\">PrimitiveMesh</span></a>.</p>",
                "description": "\n\n<p>Class representing a torus <a class=\"reference internal\" href=\"class_primitivemesh.html#class-primitivemesh\"><span class=\"std std-ref\">PrimitiveMesh</span></a>.</p>\n"
            },
            "class_translation": {
                "url": "https://docs.godotengine.org/en/4.1/classes/class_translation.html",
                "title": "Translation",
                "blurb": "<p><strong>Inherits:</strong> <a class=\"reference internal\" href=\"class_resource.html#class-resource\"><span class=\"std std-ref\">Resource</span></a> <strong>&lt;</strong> <a class=\"reference internal\" href=\"class_refcounted.html#class-refcounted\"><span class=\"std std-ref\">RefCounted</span></a> <strong>&lt;</strong> <a class=\"reference internal\" href=\"class_object.html#class-object\"><span class=\"std std-ref\">Object</span></a></p><p><strong>Inherited By:</strong> <a class=\"reference internal\" href=\"class_optimizedtranslation.html#class-optimizedtranslation\"><span class=\"std std-ref\">OptimizedTranslation</span></a></p><p>A language translation that maps a collection of strings to their individual translations.</p>",
                "description": "\n\n<p><strong>Translation</strong>s are resources that can be loaded and unloaded on demand. They map a collection of strings to their individual translations, and they also provide convenience methods for pluralization.</p>\n"
            },
            "class_tubetrailmesh": {
                "url": "https://docs.godotengine.org/en/4.1/classes/class_tubetrailmesh.html",
                "title": "TubeTrailMesh",
                "blurb": "<p><strong>Inherits:</strong> <a class=\"reference internal\" href=\"class_primitivemesh.html#class-primitivemesh\"><span class=\"std std-ref\">PrimitiveMesh</span></a> <strong>&lt;</strong> <a class=\"reference internal\" href=\"class_mesh.html#class-mesh\"><span class=\"std std-ref\">Mesh</span></a> <strong>&lt;</strong> <a class=\"reference internal\" href=\"class_resource.html#class-resource\"><span class=\"std std-ref\">Resource</span></a> <strong>&lt;</strong> <a class=\"reference internal\" href=\"class_refcounted.html#class-refcounted\"><span class=\"std std-ref\">RefCounted</span></a> <strong>&lt;</strong> <a class=\"reference internal\" href=\"class_object.html#class-object\"><span class=\"std std-ref\">Object</span></a></p><p>Represents a straight tube-shaped <a class=\"reference internal\" href=\"class_primitivemesh.html#class-primitivemesh\"><span class=\"std std-ref\">PrimitiveMesh</span></a> with variable width.</p>",
                "description": "\n\n<p><strong>TubeTrailMesh</strong> represents a straight tube-shaped mesh with variable width. The tube is composed of a number of cylindrical sections, each with the same <a class=\"reference internal\" href=\"#class-tubetrailmesh-property-section-length\"><span class=\"std std-ref\">section_length</span></a> and number of <a class=\"reference internal\" href=\"#class-tubetrailmesh-property-section-rings\"><span class=\"std std-ref\">section_rings</span></a>. A <a class=\"reference internal\" href=\"#class-tubetrailmesh-property-curve\"><span class=\"std std-ref\">curve</span></a> is sampled along the total length of the tube, meaning that the curve determines the radius of the tube along its length.</p>\n<p>This primitive mesh is usually used for particle trails.</p>\n"
            },
            "class_videostream": {
                "url": "https://docs.godotengine.org/en/4.1/classes/class_videostream.html",
                "title": "VideoStream",
                "blurb": "<p><strong>Inherits:</strong> <a class=\"reference internal\" href=\"class_resource.html#class-resource\"><span class=\"std std-ref\">Resource</span></a> <strong>&lt;</strong> <a class=\"reference internal\" href=\"class_refcounted.html#class-refcounted\"><span class=\"std std-ref\">RefCounted</span></a> <strong>&lt;</strong> <a class=\"reference internal\" href=\"class_object.html#class-object\"><span class=\"std std-ref\">Object</span></a></p><p><strong>Inherited By:</strong> <a class=\"reference internal\" href=\"class_videostreamtheora.html#class-videostreamtheora\"><span class=\"std std-ref\">VideoStreamTheora</span></a></p><p>Base resource for video streams.</p>",
                "description": "\n\n<p>Base resource type for all video streams. Classes that derive from <strong>VideoStream</strong> can all be used as resource types to play back videos in <a class=\"reference internal\" href=\"class_videostreamplayer.html#class-videostreamplayer\"><span class=\"std std-ref\">VideoStreamPlayer</span></a>.</p>\n"
            },
            "class_videostreamplayback": {
                "url": "https://docs.godotengine.org/en/4.1/classes/class_videostreamplayback.html",
                "title": "VideoStreamPlayback",
                "blurb": "<p><strong>Inherits:</strong> <a class=\"reference internal\" href=\"class_resource.html#class-resource\"><span class=\"std std-ref\">Resource</span></a> <strong>&lt;</strong> <a class=\"reference internal\" href=\"class_refcounted.html#class-refcounted\"><span class=\"std std-ref\">RefCounted</span></a> <strong>&lt;</strong> <a class=\"reference internal\" href=\"class_object.html#class-object\"><span class=\"std std-ref\">Object</span></a></p><p>Internal class used by <a class=\"reference internal\" href=\"class_videostream.html#class-videostream\"><span class=\"std std-ref\">VideoStream</span></a> to manage playback state when played from a <a class=\"reference internal\" href=\"class_videostreamplayer.html#class-videostreamplayer\"><span class=\"std std-ref\">VideoStreamPlayer</span></a>.</p>",
                "description": "\n\n<p>This class is intended to be overridden by video decoder extensions with custom implementations of <a class=\"reference internal\" href=\"class_videostream.html#class-videostream\"><span class=\"std std-ref\">VideoStream</span></a>.</p>\n"
            },
            "class_videostreamtheora": {
                "url": "https://docs.godotengine.org/en/4.1/classes/class_videostreamtheora.html",
                "title": "VideoStreamTheora",
                "blurb": "<p><strong>Inherits:</strong> <a class=\"reference internal\" href=\"class_videostream.html#class-videostream\"><span class=\"std std-ref\">VideoStream</span></a> <strong>&lt;</strong> <a class=\"reference internal\" href=\"class_resource.html#class-resource\"><span class=\"std std-ref\">Resource</span></a> <strong>&lt;</strong> <a class=\"reference internal\" href=\"class_refcounted.html#class-refcounted\"><span class=\"std std-ref\">RefCounted</span></a> <strong>&lt;</strong> <a class=\"reference internal\" href=\"class_object.html#class-object\"><span class=\"std std-ref\">Object</span></a></p><p><a class=\"reference internal\" href=\"class_videostream.html#class-videostream\"><span class=\"std std-ref\">VideoStream</span></a> resource for Ogg Theora videos.</p>",
                "description": "\n\n<p><a class=\"reference internal\" href=\"class_videostream.html#class-videostream\"><span class=\"std std-ref\">VideoStream</span></a> resource handling the <a class=\"reference external\" href=\"https://www.theora.org/\">Ogg Theora</a> video format with <code class=\"docutils literal notranslate\"><span class=\"pre\">.ogv</span></code> extension. The Theora codec is decoded on the CPU.</p>\n<p><strong>Note:</strong> While Ogg Theora videos can also have an <code class=\"docutils literal notranslate\"><span class=\"pre\">.ogg</span></code> extension, you will have to rename the extension to <code class=\"docutils literal notranslate\"><span class=\"pre\">.ogv</span></code> to use those videos within Godot.</p>\n"
            },
            "class_viewporttexture": {
                "url": "https://docs.godotengine.org/en/4.1/classes/class_viewporttexture.html",
                "title": "ViewportTexture",
                "blurb": "<p><strong>Inherits:</strong> <a class=\"reference internal\" href=\"class_texture2d.html#class-texture2d\"><span class=\"std std-ref\">Texture2D</span></a> <strong>&lt;</strong> <a class=\"reference internal\" href=\"class_texture.html#class-texture\"><span class=\"std std-ref\">Texture</span></a> <strong>&lt;</strong> <a class=\"reference internal\" href=\"class_resource.html#class-resource\"><span class=\"std std-ref\">Resource</span></a> <strong>&lt;</strong> <a class=\"reference internal\" href=\"class_refcounted.html#class-refcounted\"><span class=\"std std-ref\">RefCounted</span></a> <strong>&lt;</strong> <a class=\"reference internal\" href=\"class_object.html#class-object\"><span class=\"std std-ref\">Object</span></a></p><p>Provides the content of a <a class=\"reference internal\" href=\"class_viewport.html#class-viewport\"><span class=\"std std-ref\">Viewport</span></a> as a dynamic texture.</p>",
                "description": "\n\n<p>Provides the content of a <a class=\"reference internal\" href=\"class_viewport.html#class-viewport\"><span class=\"std std-ref\">Viewport</span></a> as a dynamic <a class=\"reference internal\" href=\"class_texture2d.html#class-texture2d\"><span class=\"std std-ref\">Texture2D</span></a>. This can be used to mix controls, 2D game objects, and 3D game objects in the same scene.</p>\n<p>To create a <strong>ViewportTexture</strong> in code, use the <a class=\"reference internal\" href=\"class_viewport.html#class-viewport-method-get-texture\"><span class=\"std std-ref\">Viewport.get_texture</span></a> method on the target viewport.</p>\n<p><strong>Note:</strong> When local to scene, this texture uses <a class=\"reference internal\" href=\"class_resource.html#class-resource-method-setup-local-to-scene\"><span class=\"std std-ref\">Resource.setup_local_to_scene</span></a> to set the proxy texture and flags in the local viewport. Local to scene <strong>ViewportTexture</strong>s will return incorrect data until the scene root is ready (see <a class=\"reference internal\" href=\"class_node.html#class-node-signal-ready\"><span class=\"std std-ref\">Node.ready</span></a>).</p>\n"
            },
            "class_visualshader": {
                "url": "https://docs.godotengine.org/en/4.1/classes/class_visualshader.html",
                "title": "VisualShader",
                "blurb": "<p><strong>Inherits:</strong> <a class=\"reference internal\" href=\"class_shader.html#class-shader\"><span class=\"std std-ref\">Shader</span></a> <strong>&lt;</strong> <a class=\"reference internal\" href=\"class_resource.html#class-resource\"><span class=\"std std-ref\">Resource</span></a> <strong>&lt;</strong> <a class=\"reference internal\" href=\"class_refcounted.html#class-refcounted\"><span class=\"std std-ref\">RefCounted</span></a> <strong>&lt;</strong> <a class=\"reference internal\" href=\"class_object.html#class-object\"><span class=\"std std-ref\">Object</span></a></p><p>A custom shader program with a visual editor.</p>",
                "description": "\n\n<p>This class allows you to define a custom shader program that can be used for various materials to render objects.</p>\n<p>The visual shader editor creates the shader.</p>\n"
            },
            "class_visualshadernode": {
                "url": "https://docs.godotengine.org/en/4.1/classes/class_visualshadernode.html",
                "title": "VisualShaderNode",
                "blurb": "<p><strong>Inherits:</strong> <a class=\"reference internal\" href=\"class_resource.html#class-resource\"><span class=\"std std-ref\">Resource</span></a> <strong>&lt;</strong> <a class=\"reference internal\" href=\"class_refcounted.html#class-refcounted\"><span class=\"std std-ref\">RefCounted</span></a> <strong>&lt;</strong> <a class=\"reference internal\" href=\"class_object.html#class-object\"><span class=\"std std-ref\">Object</span></a></p><p><strong>Inherited By:</strong> <a class=\"reference internal\" href=\"class_visualshadernodebillboard.html#class-visualshadernodebillboard\"><span class=\"std std-ref\">VisualShaderNodeBillboard</span></a>, <a class=\"reference internal\" href=\"class_visualshadernodeclamp.html#class-visualshadernodeclamp\"><span class=\"std std-ref\">VisualShaderNodeClamp</span></a>, <a class=\"reference internal\" href=\"class_visualshadernodecolorfunc.html#class-visualshadernodecolorfunc\"><span class=\"std std-ref\">VisualShaderNodeColorFunc</span></a>, <a class=\"reference internal\" href=\"class_visualshadernodecolorop.html#class-visualshadernodecolorop\"><span class=\"std std-ref\">VisualShaderNodeColorOp</span></a>, <a class=\"reference internal\" href=\"class_visualshadernodecompare.html#class-visualshadernodecompare\"><span class=\"std std-ref\">VisualShaderNodeCompare</span></a>, <a class=\"reference internal\" href=\"class_visualshadernodeconstant.html#class-visualshadernodeconstant\"><span class=\"std std-ref\">VisualShaderNodeConstant</span></a>, <a class=\"reference internal\" href=\"class_visualshadernodecubemap.html#class-visualshadernodecubemap\"><span class=\"std std-ref\">VisualShaderNodeCubemap</span></a>, <a class=\"reference internal\" href=\"class_visualshadernodecustom.html#class-visualshadernodecustom\"><span class=\"std std-ref\">VisualShaderNodeCustom</span></a>, <a class=\"reference internal\" href=\"class_visualshadernodederivativefunc.html#class-visualshadernodederivativefunc\"><span class=\"std std-ref\">VisualShaderNodeDerivativeFunc</span></a>, <a class=\"reference internal\" href=\"class_visualshadernodedeterminant.html#class-visualshadernodedeterminant\"><span class=\"std std-ref\">VisualShaderNodeDeterminant</span></a>, <a class=\"reference internal\" href=\"class_visualshadernodedistancefade.html#class-visualshadernodedistancefade\"><span class=\"std std-ref\">VisualShaderNodeDistanceFade</span></a>, <a class=\"reference internal\" href=\"class_visualshadernodedotproduct.html#class-visualshadernodedotproduct\"><span class=\"std std-ref\">VisualShaderNodeDotProduct</span></a>, <a class=\"reference internal\" href=\"class_visualshadernodefloatfunc.html#class-visualshadernodefloatfunc\"><span class=\"std std-ref\">VisualShaderNodeFloatFunc</span></a>, <a class=\"reference internal\" href=\"class_visualshadernodefloatop.html#class-visualshadernodefloatop\"><span class=\"std std-ref\">VisualShaderNodeFloatOp</span></a>, <a class=\"reference internal\" href=\"class_visualshadernodefresnel.html#class-visualshadernodefresnel\"><span class=\"std std-ref\">VisualShaderNodeFresnel</span></a>, <a class=\"reference internal\" href=\"class_visualshadernodeif.html#class-visualshadernodeif\"><span class=\"std std-ref\">VisualShaderNodeIf</span></a>, <a class=\"reference internal\" href=\"class_visualshadernodeinput.html#class-visualshadernodeinput\"><span class=\"std std-ref\">VisualShaderNodeInput</span></a>, <a class=\"reference internal\" href=\"class_visualshadernodeintfunc.html#class-visualshadernodeintfunc\"><span class=\"std std-ref\">VisualShaderNodeIntFunc</span></a>, <a class=\"reference internal\" href=\"class_visualshadernodeintop.html#class-visualshadernodeintop\"><span class=\"std std-ref\">VisualShaderNodeIntOp</span></a>, <a class=\"reference internal\" href=\"class_visualshadernodeis.html#class-visualshadernodeis\"><span class=\"std std-ref\">VisualShaderNodeIs</span></a>, <a class=\"reference internal\" href=\"class_visualshadernodelinearscenedepth.html#class-visualshadernodelinearscenedepth\"><span class=\"std std-ref\">VisualShaderNodeLinearSceneDepth</span></a>, <a class=\"reference internal\" href=\"class_visualshadernodemix.html#class-visualshadernodemix\"><span class=\"std std-ref\">VisualShaderNodeMix</span></a>, <a class=\"reference internal\" href=\"class_visualshadernodemultiplyadd.html#class-visualshadernodemultiplyadd\"><span class=\"std std-ref\">VisualShaderNodeMultiplyAdd</span></a>, <a class=\"reference internal\" href=\"class_visualshadernodeouterproduct.html#class-visualshadernodeouterproduct\"><span class=\"std std-ref\">VisualShaderNodeOuterProduct</span></a>, <a class=\"reference internal\" href=\"class_visualshadernodeoutput.html#class-visualshadernodeoutput\"><span class=\"std std-ref\">VisualShaderNodeOutput</span></a>, <a class=\"reference internal\" href=\"class_visualshadernodeparameter.html#class-visualshadernodeparameter\"><span class=\"std std-ref\">VisualShaderNodeParameter</span></a>, <a class=\"reference internal\" href=\"class_visualshadernodeparameterref.html#class-visualshadernodeparameterref\"><span class=\"std std-ref\">VisualShaderNodeParameterRef</span></a>, <a class=\"reference internal\" href=\"class_visualshadernodeparticleaccelerator.html#class-visualshadernodeparticleaccelerator\"><span class=\"std std-ref\">VisualShaderNodeParticleAccelerator</span></a>, <a class=\"reference internal\" href=\"class_visualshadernodeparticleconevelocity.html#class-visualshadernodeparticleconevelocity\"><span class=\"std std-ref\">VisualShaderNodeParticleConeVelocity</span></a>, <a class=\"reference internal\" href=\"class_visualshadernodeparticleemit.html#class-visualshadernodeparticleemit\"><span class=\"std std-ref\">VisualShaderNodeParticleEmit</span></a>, <a class=\"reference internal\" href=\"class_visualshadernodeparticleemitter.html#class-visualshadernodeparticleemitter\"><span class=\"std std-ref\">VisualShaderNodeParticleEmitter</span></a>, <a class=\"reference internal\" href=\"class_visualshadernodeparticlemultiplybyaxisangle.html#class-visualshadernodeparticlemultiplybyaxisangle\"><span class=\"std std-ref\">VisualShaderNodeParticleMultiplyByAxisAngle</span></a>, <a class=\"reference internal\" href=\"class_visualshadernodeparticlerandomness.html#class-visualshadernodeparticlerandomness\"><span class=\"std std-ref\">VisualShaderNodeParticleRandomness</span></a>, <a class=\"reference internal\" href=\"class_visualshadernodeproximityfade.html#class-visualshadernodeproximityfade\"><span class=\"std std-ref\">VisualShaderNodeProximityFade</span></a>, <a class=\"reference internal\" href=\"class_visualshadernoderandomrange.html#class-visualshadernoderandomrange\"><span class=\"std std-ref\">VisualShaderNodeRandomRange</span></a>, <a class=\"reference internal\" href=\"class_visualshadernoderemap.html#class-visualshadernoderemap\"><span class=\"std std-ref\">VisualShaderNodeRemap</span></a>, <a class=\"reference internal\" href=\"class_visualshadernoderesizablebase.html#class-visualshadernoderesizablebase\"><span class=\"std std-ref\">VisualShaderNodeResizableBase</span></a>, <a class=\"reference internal\" href=\"class_visualshadernodesample3d.html#class-visualshadernodesample3d\"><span class=\"std std-ref\">VisualShaderNodeSample3D</span></a>, <a class=\"reference internal\" href=\"class_visualshadernodescreenuvtosdf.html#class-visualshadernodescreenuvtosdf\"><span class=\"std std-ref\">VisualShaderNodeScreenUVToSDF</span></a>, <a class=\"reference internal\" href=\"class_visualshadernodesdfraymarch.html#class-visualshadernodesdfraymarch\"><span class=\"std std-ref\">VisualShaderNodeSDFRaymarch</span></a>, <a class=\"reference internal\" href=\"class_visualshadernodesdftoscreenuv.html#class-visualshadernodesdftoscreenuv\"><span class=\"std std-ref\">VisualShaderNodeSDFToScreenUV</span></a>, <a class=\"reference internal\" href=\"class_visualshadernodesmoothstep.html#class-visualshadernodesmoothstep\"><span class=\"std std-ref\">VisualShaderNodeSmoothStep</span></a>, <a class=\"reference internal\" href=\"class_visualshadernodestep.html#class-visualshadernodestep\"><span class=\"std std-ref\">VisualShaderNodeStep</span></a>, <a class=\"reference internal\" href=\"class_visualshadernodeswitch.html#class-visualshadernodeswitch\"><span class=\"std std-ref\">VisualShaderNodeSwitch</span></a>, <a class=\"reference internal\" href=\"class_visualshadernodetexture.html#class-visualshadernodetexture\"><span class=\"std std-ref\">VisualShaderNodeTexture</span></a>, <a class=\"reference internal\" href=\"class_visualshadernodetexturesdf.html#class-visualshadernodetexturesdf\"><span class=\"std std-ref\">VisualShaderNodeTextureSDF</span></a>, <a class=\"reference internal\" href=\"class_visualshadernodetexturesdfnormal.html#class-visualshadernodetexturesdfnormal\"><span class=\"std std-ref\">VisualShaderNodeTextureSDFNormal</span></a>, <a class=\"reference internal\" href=\"class_visualshadernodetransformcompose.html#class-visualshadernodetransformcompose\"><span class=\"std std-ref\">VisualShaderNodeTransformCompose</span></a>, <a class=\"reference internal\" href=\"class_visualshadernodetransformdecompose.html#class-visualshadernodetransformdecompose\"><span class=\"std std-ref\">VisualShaderNodeTransformDecompose</span></a>, <a class=\"reference internal\" href=\"class_visualshadernodetransformfunc.html#class-visualshadernodetransformfunc\"><span class=\"std std-ref\">VisualShaderNodeTransformFunc</span></a>, <a class=\"reference internal\" href=\"class_visualshadernodetransformop.html#class-visualshadernodetransformop\"><span class=\"std std-ref\">VisualShaderNodeTransformOp</span></a>, <a class=\"reference internal\" href=\"class_visualshadernodetransformvecmult.html#class-visualshadernodetransformvecmult\"><span class=\"std std-ref\">VisualShaderNodeTransformVecMult</span></a>, <a class=\"reference internal\" href=\"class_visualshadernodeuintfunc.html#class-visualshadernodeuintfunc\"><span class=\"std std-ref\">VisualShaderNodeUIntFunc</span></a>, <a class=\"reference internal\" href=\"class_visualshadernodeuintop.html#class-visualshadernodeuintop\"><span class=\"std std-ref\">VisualShaderNodeUIntOp</span></a>, <a class=\"reference internal\" href=\"class_visualshadernodeuvfunc.html#class-visualshadernodeuvfunc\"><span class=\"std std-ref\">VisualShaderNodeUVFunc</span></a>, <a class=\"reference internal\" href=\"class_visualshadernodeuvpolarcoord.html#class-visualshadernodeuvpolarcoord\"><span class=\"std std-ref\">VisualShaderNodeUVPolarCoord</span></a>, <a class=\"reference internal\" href=\"class_visualshadernodevarying.html#class-visualshadernodevarying\"><span class=\"std std-ref\">VisualShaderNodeVarying</span></a>, <a class=\"reference internal\" href=\"class_visualshadernodevectorbase.html#class-visualshadernodevectorbase\"><span class=\"std std-ref\">VisualShaderNodeVectorBase</span></a></p><p>Base class for nodes in a visual shader graph.</p>",
                "description": "\n\n<p>Visual shader graphs consist of various nodes. Each node in the graph is a separate object and they are represented as a rectangular boxes with title and a set of properties. Each node has also connection ports that allow to connect it to another nodes and control the flow of the shader.</p>\n"
            },
            "class_visualshadernodebillboard": {
                "url": "https://docs.godotengine.org/en/4.1/classes/class_visualshadernodebillboard.html",
                "title": "VisualShaderNodeBillboard",
                "blurb": "<p><strong>Inherits:</strong> <a class=\"reference internal\" href=\"class_visualshadernode.html#class-visualshadernode\"><span class=\"std std-ref\">VisualShaderNode</span></a> <strong>&lt;</strong> <a class=\"reference internal\" href=\"class_resource.html#class-resource\"><span class=\"std std-ref\">Resource</span></a> <strong>&lt;</strong> <a class=\"reference internal\" href=\"class_refcounted.html#class-refcounted\"><span class=\"std std-ref\">RefCounted</span></a> <strong>&lt;</strong> <a class=\"reference internal\" href=\"class_object.html#class-object\"><span class=\"std std-ref\">Object</span></a></p><p>A node that controls how the object faces the camera to be used within the visual shader graph.</p>",
                "description": "\n\n<p>The output port of this node needs to be connected to <code class=\"docutils literal notranslate\"><span class=\"pre\">Model</span> <span class=\"pre\">View</span> <span class=\"pre\">Matrix</span></code> port of <a class=\"reference internal\" href=\"class_visualshadernodeoutput.html#class-visualshadernodeoutput\"><span class=\"std std-ref\">VisualShaderNodeOutput</span></a>.</p>\n"
            },
            "class_visualshadernodebooleanconstant": {
                "url": "https://docs.godotengine.org/en/4.1/classes/class_visualshadernodebooleanconstant.html",
                "title": "VisualShaderNodeBooleanConstant",
                "blurb": "<p><strong>Inherits:</strong> <a class=\"reference internal\" href=\"class_visualshadernodeconstant.html#class-visualshadernodeconstant\"><span class=\"std std-ref\">VisualShaderNodeConstant</span></a> <strong>&lt;</strong> <a class=\"reference internal\" href=\"class_visualshadernode.html#class-visualshadernode\"><span class=\"std std-ref\">VisualShaderNode</span></a> <strong>&lt;</strong> <a class=\"reference internal\" href=\"class_resource.html#class-resource\"><span class=\"std std-ref\">Resource</span></a> <strong>&lt;</strong> <a class=\"reference internal\" href=\"class_refcounted.html#class-refcounted\"><span class=\"std std-ref\">RefCounted</span></a> <strong>&lt;</strong> <a class=\"reference internal\" href=\"class_object.html#class-object\"><span class=\"std std-ref\">Object</span></a></p><p>A boolean constant to be used within the visual shader graph.</p>",
                "description": "\n\n<p>Has only one output port and no inputs.</p>\n<p>Translated to <code class=\"docutils literal notranslate\"><span class=\"pre\">bool</span></code> in the shader language.</p>\n"
            },
            "class_visualshadernodebooleanparameter": {
                "url": "https://docs.godotengine.org/en/4.1/classes/class_visualshadernodebooleanparameter.html",
                "title": "VisualShaderNodeBooleanParameter",
                "blurb": "<p><strong>Inherits:</strong> <a class=\"reference internal\" href=\"class_visualshadernodeparameter.html#class-visualshadernodeparameter\"><span class=\"std std-ref\">VisualShaderNodeParameter</span></a> <strong>&lt;</strong> <a class=\"reference internal\" href=\"class_visualshadernode.html#class-visualshadernode\"><span class=\"std std-ref\">VisualShaderNode</span></a> <strong>&lt;</strong> <a class=\"reference internal\" href=\"class_resource.html#class-resource\"><span class=\"std std-ref\">Resource</span></a> <strong>&lt;</strong> <a class=\"reference internal\" href=\"class_refcounted.html#class-refcounted\"><span class=\"std std-ref\">RefCounted</span></a> <strong>&lt;</strong> <a class=\"reference internal\" href=\"class_object.html#class-object\"><span class=\"std std-ref\">Object</span></a></p><p>A boolean parameter to be used within the visual shader graph.</p>",
                "description": "\n\n<p>Translated to <code class=\"docutils literal notranslate\"><span class=\"pre\">uniform</span> <span class=\"pre\">bool</span></code> in the shader language.</p>\n"
            },
            "class_visualshadernodeclamp": {
                "url": "https://docs.godotengine.org/en/4.1/classes/class_visualshadernodeclamp.html",
                "title": "VisualShaderNodeClamp",
                "blurb": "<p><strong>Inherits:</strong> <a class=\"reference internal\" href=\"class_visualshadernode.html#class-visualshadernode\"><span class=\"std std-ref\">VisualShaderNode</span></a> <strong>&lt;</strong> <a class=\"reference internal\" href=\"class_resource.html#class-resource\"><span class=\"std std-ref\">Resource</span></a> <strong>&lt;</strong> <a class=\"reference internal\" href=\"class_refcounted.html#class-refcounted\"><span class=\"std std-ref\">RefCounted</span></a> <strong>&lt;</strong> <a class=\"reference internal\" href=\"class_object.html#class-object\"><span class=\"std std-ref\">Object</span></a></p><p>Clamps a value within the visual shader graph.</p>",
                "description": "\n\n<p>Constrains a value to lie between <code class=\"docutils literal notranslate\"><span class=\"pre\">min</span></code> and <code class=\"docutils literal notranslate\"><span class=\"pre\">max</span></code> values.</p>\n"
            },
            "class_visualshadernodecolorconstant": {
                "url": "https://docs.godotengine.org/en/4.1/classes/class_visualshadernodecolorconstant.html",
                "title": "VisualShaderNodeColorConstant",
                "blurb": "<p><strong>Inherits:</strong> <a class=\"reference internal\" href=\"class_visualshadernodeconstant.html#class-visualshadernodeconstant\"><span class=\"std std-ref\">VisualShaderNodeConstant</span></a> <strong>&lt;</strong> <a class=\"reference internal\" href=\"class_visualshadernode.html#class-visualshadernode\"><span class=\"std std-ref\">VisualShaderNode</span></a> <strong>&lt;</strong> <a class=\"reference internal\" href=\"class_resource.html#class-resource\"><span class=\"std std-ref\">Resource</span></a> <strong>&lt;</strong> <a class=\"reference internal\" href=\"class_refcounted.html#class-refcounted\"><span class=\"std std-ref\">RefCounted</span></a> <strong>&lt;</strong> <a class=\"reference internal\" href=\"class_object.html#class-object\"><span class=\"std std-ref\">Object</span></a></p><p>A <a class=\"reference internal\" href=\"class_color.html#class-color\"><span class=\"std std-ref\">Color</span></a> constant to be used within the visual shader graph.</p>",
                "description": "\n\n<p>Has two output ports representing RGB and alpha channels of <a class=\"reference internal\" href=\"class_color.html#class-color\"><span class=\"std std-ref\">Color</span></a>.</p>\n<p>Translated to <code class=\"docutils literal notranslate\"><span class=\"pre\">vec3</span> <span class=\"pre\">rgb</span></code> and <code class=\"docutils literal notranslate\"><span class=\"pre\">float</span> <span class=\"pre\">alpha</span></code> in the shader language.</p>\n"
            },
            "class_visualshadernodecolorfunc": {
                "url": "https://docs.godotengine.org/en/4.1/classes/class_visualshadernodecolorfunc.html",
                "title": "VisualShaderNodeColorFunc",
                "blurb": "<p><strong>Inherits:</strong> <a class=\"reference internal\" href=\"class_visualshadernode.html#class-visualshadernode\"><span class=\"std std-ref\">VisualShaderNode</span></a> <strong>&lt;</strong> <a class=\"reference internal\" href=\"class_resource.html#class-resource\"><span class=\"std std-ref\">Resource</span></a> <strong>&lt;</strong> <a class=\"reference internal\" href=\"class_refcounted.html#class-refcounted\"><span class=\"std std-ref\">RefCounted</span></a> <strong>&lt;</strong> <a class=\"reference internal\" href=\"class_object.html#class-object\"><span class=\"std std-ref\">Object</span></a></p><p>A <a class=\"reference internal\" href=\"class_color.html#class-color\"><span class=\"std std-ref\">Color</span></a> function to be used within the visual shader graph.</p>",
                "description": "\n\n<p>Accept a <a class=\"reference internal\" href=\"class_color.html#class-color\"><span class=\"std std-ref\">Color</span></a> to the input port and transform it according to <a class=\"reference internal\" href=\"#class-visualshadernodecolorfunc-property-function\"><span class=\"std std-ref\">function</span></a>.</p>\n"
            },
            "class_visualshadernodecolorop": {
                "url": "https://docs.godotengine.org/en/4.1/classes/class_visualshadernodecolorop.html",
                "title": "VisualShaderNodeColorOp",
                "blurb": "<p><strong>Inherits:</strong> <a class=\"reference internal\" href=\"class_visualshadernode.html#class-visualshadernode\"><span class=\"std std-ref\">VisualShaderNode</span></a> <strong>&lt;</strong> <a class=\"reference internal\" href=\"class_resource.html#class-resource\"><span class=\"std std-ref\">Resource</span></a> <strong>&lt;</strong> <a class=\"reference internal\" href=\"class_refcounted.html#class-refcounted\"><span class=\"std std-ref\">RefCounted</span></a> <strong>&lt;</strong> <a class=\"reference internal\" href=\"class_object.html#class-object\"><span class=\"std std-ref\">Object</span></a></p><p>A <a class=\"reference internal\" href=\"class_color.html#class-color\"><span class=\"std std-ref\">Color</span></a> operator to be used within the visual shader graph.</p>",
                "description": "\n\n<p>Applies <a class=\"reference internal\" href=\"#class-visualshadernodecolorop-property-operator\"><span class=\"std std-ref\">operator</span></a> to two color inputs.</p>\n"
            },
            "class_visualshadernodecolorparameter": {
                "url": "https://docs.godotengine.org/en/4.1/classes/class_visualshadernodecolorparameter.html",
                "title": "VisualShaderNodeColorParameter",
                "blurb": "<p><strong>Inherits:</strong> <a class=\"reference internal\" href=\"class_visualshadernodeparameter.html#class-visualshadernodeparameter\"><span class=\"std std-ref\">VisualShaderNodeParameter</span></a> <strong>&lt;</strong> <a class=\"reference internal\" href=\"class_visualshadernode.html#class-visualshadernode\"><span class=\"std std-ref\">VisualShaderNode</span></a> <strong>&lt;</strong> <a class=\"reference internal\" href=\"class_resource.html#class-resource\"><span class=\"std std-ref\">Resource</span></a> <strong>&lt;</strong> <a class=\"reference internal\" href=\"class_refcounted.html#class-refcounted\"><span class=\"std std-ref\">RefCounted</span></a> <strong>&lt;</strong> <a class=\"reference internal\" href=\"class_object.html#class-object\"><span class=\"std std-ref\">Object</span></a></p><p>A <a class=\"reference internal\" href=\"class_color.html#class-color\"><span class=\"std std-ref\">Color</span></a> parameter to be used within the visual shader graph.</p>",
                "description": "\n\n<p>Translated to <code class=\"docutils literal notranslate\"><span class=\"pre\">uniform</span> <span class=\"pre\">vec4</span></code> in the shader language.</p>\n"
            },
            "class_visualshadernodecomment": {
                "url": "https://docs.godotengine.org/en/4.1/classes/class_visualshadernodecomment.html",
                "title": "VisualShaderNodeComment",
                "blurb": "<p><strong>Inherits:</strong> <a class=\"reference internal\" href=\"class_visualshadernoderesizablebase.html#class-visualshadernoderesizablebase\"><span class=\"std std-ref\">VisualShaderNodeResizableBase</span></a> <strong>&lt;</strong> <a class=\"reference internal\" href=\"class_visualshadernode.html#class-visualshadernode\"><span class=\"std std-ref\">VisualShaderNode</span></a> <strong>&lt;</strong> <a class=\"reference internal\" href=\"class_resource.html#class-resource\"><span class=\"std std-ref\">Resource</span></a> <strong>&lt;</strong> <a class=\"reference internal\" href=\"class_refcounted.html#class-refcounted\"><span class=\"std std-ref\">RefCounted</span></a> <strong>&lt;</strong> <a class=\"reference internal\" href=\"class_object.html#class-object\"><span class=\"std std-ref\">Object</span></a></p><p>A comment node to be placed on visual shader graph.</p>",
                "description": "\n\n<p>A resizable rectangular area with changeable <a class=\"reference internal\" href=\"#class-visualshadernodecomment-property-title\"><span class=\"std std-ref\">title</span></a> and <a class=\"reference internal\" href=\"#class-visualshadernodecomment-property-description\"><span class=\"std std-ref\">description</span></a> used for better organizing of other visual shader nodes.</p>\n"
            },
            "class_visualshadernodecompare": {
                "url": "https://docs.godotengine.org/en/4.1/classes/class_visualshadernodecompare.html",
                "title": "VisualShaderNodeCompare",
                "blurb": "<p><strong>Inherits:</strong> <a class=\"reference internal\" href=\"class_visualshadernode.html#class-visualshadernode\"><span class=\"std std-ref\">VisualShaderNode</span></a> <strong>&lt;</strong> <a class=\"reference internal\" href=\"class_resource.html#class-resource\"><span class=\"std std-ref\">Resource</span></a> <strong>&lt;</strong> <a class=\"reference internal\" href=\"class_refcounted.html#class-refcounted\"><span class=\"std std-ref\">RefCounted</span></a> <strong>&lt;</strong> <a class=\"reference internal\" href=\"class_object.html#class-object\"><span class=\"std std-ref\">Object</span></a></p><p>A comparison function for common types within the visual shader graph.</p>",
                "description": "\n\n<p>Compares <code class=\"docutils literal notranslate\"><span class=\"pre\">a</span></code> and <code class=\"docutils literal notranslate\"><span class=\"pre\">b</span></code> of <a class=\"reference internal\" href=\"#class-visualshadernodecompare-property-type\"><span class=\"std std-ref\">type</span></a> by <a class=\"reference internal\" href=\"#class-visualshadernodecompare-property-function\"><span class=\"std std-ref\">function</span></a>. Returns a boolean scalar. Translates to <code class=\"docutils literal notranslate\"><span class=\"pre\">if</span></code> instruction in shader code.</p>\n"
            },
            "class_visualshadernodeconstant": {
                "url": "https://docs.godotengine.org/en/4.1/classes/class_visualshadernodeconstant.html",
                "title": "VisualShaderNodeConstant",
                "blurb": "<p><strong>Inherits:</strong> <a class=\"reference internal\" href=\"class_visualshadernode.html#class-visualshadernode\"><span class=\"std std-ref\">VisualShaderNode</span></a> <strong>&lt;</strong> <a class=\"reference internal\" href=\"class_resource.html#class-resource\"><span class=\"std std-ref\">Resource</span></a> <strong>&lt;</strong> <a class=\"reference internal\" href=\"class_refcounted.html#class-refcounted\"><span class=\"std std-ref\">RefCounted</span></a> <strong>&lt;</strong> <a class=\"reference internal\" href=\"class_object.html#class-object\"><span class=\"std std-ref\">Object</span></a></p><p><strong>Inherited By:</strong> <a class=\"reference internal\" href=\"class_visualshadernodebooleanconstant.html#class-visualshadernodebooleanconstant\"><span class=\"std std-ref\">VisualShaderNodeBooleanConstant</span></a>, <a class=\"reference internal\" href=\"class_visualshadernodecolorconstant.html#class-visualshadernodecolorconstant\"><span class=\"std std-ref\">VisualShaderNodeColorConstant</span></a>, <a class=\"reference internal\" href=\"class_visualshadernodefloatconstant.html#class-visualshadernodefloatconstant\"><span class=\"std std-ref\">VisualShaderNodeFloatConstant</span></a>, <a class=\"reference internal\" href=\"class_visualshadernodeintconstant.html#class-visualshadernodeintconstant\"><span class=\"std std-ref\">VisualShaderNodeIntConstant</span></a>, <a class=\"reference internal\" href=\"class_visualshadernodetransformconstant.html#class-visualshadernodetransformconstant\"><span class=\"std std-ref\">VisualShaderNodeTransformConstant</span></a>, <a class=\"reference internal\" href=\"class_visualshadernodeuintconstant.html#class-visualshadernodeuintconstant\"><span class=\"std std-ref\">VisualShaderNodeUIntConstant</span></a>, <a class=\"reference internal\" href=\"class_visualshadernodevec2constant.html#class-visualshadernodevec2constant\"><span class=\"std std-ref\">VisualShaderNodeVec2Constant</span></a>, <a class=\"reference internal\" href=\"class_visualshadernodevec3constant.html#class-visualshadernodevec3constant\"><span class=\"std std-ref\">VisualShaderNodeVec3Constant</span></a>, <a class=\"reference internal\" href=\"class_visualshadernodevec4constant.html#class-visualshadernodevec4constant\"><span class=\"std std-ref\">VisualShaderNodeVec4Constant</span></a></p><p>A base type for the constants within the visual shader graph.</p>",
                "description": "\n\n<p>This is an abstract class. See the derived types for descriptions of the possible values.</p>\n"
            },
            "class_visualshadernodecubemap": {
                "url": "https://docs.godotengine.org/en/4.1/classes/class_visualshadernodecubemap.html",
                "title": "VisualShaderNodeCubemap",
                "blurb": "<p><strong>Inherits:</strong> <a class=\"reference internal\" href=\"class_visualshadernode.html#class-visualshadernode\"><span class=\"std std-ref\">VisualShaderNode</span></a> <strong>&lt;</strong> <a class=\"reference internal\" href=\"class_resource.html#class-resource\"><span class=\"std std-ref\">Resource</span></a> <strong>&lt;</strong> <a class=\"reference internal\" href=\"class_refcounted.html#class-refcounted\"><span class=\"std std-ref\">RefCounted</span></a> <strong>&lt;</strong> <a class=\"reference internal\" href=\"class_object.html#class-object\"><span class=\"std std-ref\">Object</span></a></p><p>A <a class=\"reference internal\" href=\"class_cubemap.html#class-cubemap\"><span class=\"std std-ref\">Cubemap</span></a> sampling node to be used within the visual shader graph.</p>",
                "description": "\n\n<p>Translated to <code class=\"docutils literal notranslate\"><span class=\"pre\">texture(cubemap,</span> <span class=\"pre\">vec3)</span></code> in the shader language. Returns a color vector and alpha channel as scalar.</p>\n"
            },
            "class_visualshadernodecubemapparameter": {
                "url": "https://docs.godotengine.org/en/4.1/classes/class_visualshadernodecubemapparameter.html",
                "title": "VisualShaderNodeCubemapParameter",
                "blurb": "<p><strong>Inherits:</strong> <a class=\"reference internal\" href=\"class_visualshadernodetextureparameter.html#class-visualshadernodetextureparameter\"><span class=\"std std-ref\">VisualShaderNodeTextureParameter</span></a> <strong>&lt;</strong> <a class=\"reference internal\" href=\"class_visualshadernodeparameter.html#class-visualshadernodeparameter\"><span class=\"std std-ref\">VisualShaderNodeParameter</span></a> <strong>&lt;</strong> <a class=\"reference internal\" href=\"class_visualshadernode.html#class-visualshadernode\"><span class=\"std std-ref\">VisualShaderNode</span></a> <strong>&lt;</strong> <a class=\"reference internal\" href=\"class_resource.html#class-resource\"><span class=\"std std-ref\">Resource</span></a> <strong>&lt;</strong> <a class=\"reference internal\" href=\"class_refcounted.html#class-refcounted\"><span class=\"std std-ref\">RefCounted</span></a> <strong>&lt;</strong> <a class=\"reference internal\" href=\"class_object.html#class-object\"><span class=\"std std-ref\">Object</span></a></p><p>A <a class=\"reference internal\" href=\"class_cubemap.html#class-cubemap\"><span class=\"std std-ref\">Cubemap</span></a> parameter node to be used within the visual shader graph.</p>",
                "description": "\n\n<p>Translated to <code class=\"docutils literal notranslate\"><span class=\"pre\">uniform</span> <span class=\"pre\">samplerCube</span></code> in the shader language. The output value can be used as port for <a class=\"reference internal\" href=\"class_visualshadernodecubemap.html#class-visualshadernodecubemap\"><span class=\"std std-ref\">VisualShaderNodeCubemap</span></a>.</p>\n"
            },
            "class_visualshadernodecurvetexture": {
                "url": "https://docs.godotengine.org/en/4.1/classes/class_visualshadernodecurvetexture.html",
                "title": "VisualShaderNodeCurveTexture",
                "blurb": "<p><strong>Inherits:</strong> <a class=\"reference internal\" href=\"class_visualshadernoderesizablebase.html#class-visualshadernoderesizablebase\"><span class=\"std std-ref\">VisualShaderNodeResizableBase</span></a> <strong>&lt;</strong> <a class=\"reference internal\" href=\"class_visualshadernode.html#class-visualshadernode\"><span class=\"std std-ref\">VisualShaderNode</span></a> <strong>&lt;</strong> <a class=\"reference internal\" href=\"class_resource.html#class-resource\"><span class=\"std std-ref\">Resource</span></a> <strong>&lt;</strong> <a class=\"reference internal\" href=\"class_refcounted.html#class-refcounted\"><span class=\"std std-ref\">RefCounted</span></a> <strong>&lt;</strong> <a class=\"reference internal\" href=\"class_object.html#class-object\"><span class=\"std std-ref\">Object</span></a></p><p>Performs a <a class=\"reference internal\" href=\"class_curvetexture.html#class-curvetexture\"><span class=\"std std-ref\">CurveTexture</span></a> lookup within the visual shader graph.</p>",
                "description": "\n\n<p>Comes with a built-in editor for texture's curves.</p>\n"
            },
            "class_visualshadernodecurvexyztexture": {
                "url": "https://docs.godotengine.org/en/4.1/classes/class_visualshadernodecurvexyztexture.html",
                "title": "VisualShaderNodeCurveXYZTexture",
                "blurb": "<p><strong>Inherits:</strong> <a class=\"reference internal\" href=\"class_visualshadernoderesizablebase.html#class-visualshadernoderesizablebase\"><span class=\"std std-ref\">VisualShaderNodeResizableBase</span></a> <strong>&lt;</strong> <a class=\"reference internal\" href=\"class_visualshadernode.html#class-visualshadernode\"><span class=\"std std-ref\">VisualShaderNode</span></a> <strong>&lt;</strong> <a class=\"reference internal\" href=\"class_resource.html#class-resource\"><span class=\"std std-ref\">Resource</span></a> <strong>&lt;</strong> <a class=\"reference internal\" href=\"class_refcounted.html#class-refcounted\"><span class=\"std std-ref\">RefCounted</span></a> <strong>&lt;</strong> <a class=\"reference internal\" href=\"class_object.html#class-object\"><span class=\"std std-ref\">Object</span></a></p><p>Performs a <a class=\"reference internal\" href=\"class_curvexyztexture.html#class-curvexyztexture\"><span class=\"std std-ref\">CurveXYZTexture</span></a> lookup within the visual shader graph.</p>",
                "description": "\n\n<p>Comes with a built-in editor for texture's curves.</p>\n"
            },
            "class_visualshadernodecustom": {
                "url": "https://docs.godotengine.org/en/4.1/classes/class_visualshadernodecustom.html",
                "title": "VisualShaderNodeCustom",
                "blurb": "<p><strong>Inherits:</strong> <a class=\"reference internal\" href=\"class_visualshadernode.html#class-visualshadernode\"><span class=\"std std-ref\">VisualShaderNode</span></a> <strong>&lt;</strong> <a class=\"reference internal\" href=\"class_resource.html#class-resource\"><span class=\"std std-ref\">Resource</span></a> <strong>&lt;</strong> <a class=\"reference internal\" href=\"class_refcounted.html#class-refcounted\"><span class=\"std std-ref\">RefCounted</span></a> <strong>&lt;</strong> <a class=\"reference internal\" href=\"class_object.html#class-object\"><span class=\"std std-ref\">Object</span></a></p><p>Virtual class to define custom <a class=\"reference internal\" href=\"class_visualshadernode.html#class-visualshadernode\"><span class=\"std std-ref\">VisualShaderNode</span></a>s for use in the Visual Shader Editor.</p>",
                "description": "\n\n<p>By inheriting this class you can create a custom <a class=\"reference internal\" href=\"class_visualshader.html#class-visualshader\"><span class=\"std std-ref\">VisualShader</span></a> script addon which will be automatically added to the Visual Shader Editor. The <a class=\"reference internal\" href=\"class_visualshadernode.html#class-visualshadernode\"><span class=\"std std-ref\">VisualShaderNode</span></a>'s behavior is defined by overriding the provided virtual methods.</p>\n<p>In order for the node to be registered as an editor addon, you must use the <code class=\"docutils literal notranslate\"><span class=\"pre\">@tool</span></code> annotation and provide a <code class=\"docutils literal notranslate\"><span class=\"pre\">class_name</span></code> for your custom script. For example:</p>\n<div class=\"highlight-gdscript notranslate\"><div class=\"highlight\"><pre><span></span><span class=\"nd\">@tool</span>\n<span class=\"k\">extends</span> <span class=\"n\">VisualShaderNodeCustom</span>\n<span class=\"k\">class_name</span> <span class=\"n\">VisualShaderNodeNoise</span>\n</pre></div>\n</div>\n"
            },
            "class_visualshadernodederivativefunc": {
                "url": "https://docs.godotengine.org/en/4.1/classes/class_visualshadernodederivativefunc.html",
                "title": "VisualShaderNodeDerivativeFunc",
                "blurb": "<p><strong>Inherits:</strong> <a class=\"reference internal\" href=\"class_visualshadernode.html#class-visualshadernode\"><span class=\"std std-ref\">VisualShaderNode</span></a> <strong>&lt;</strong> <a class=\"reference internal\" href=\"class_resource.html#class-resource\"><span class=\"std std-ref\">Resource</span></a> <strong>&lt;</strong> <a class=\"reference internal\" href=\"class_refcounted.html#class-refcounted\"><span class=\"std std-ref\">RefCounted</span></a> <strong>&lt;</strong> <a class=\"reference internal\" href=\"class_object.html#class-object\"><span class=\"std std-ref\">Object</span></a></p><p>Calculates a derivative within the visual shader graph.</p>",
                "description": "\n\n<p>This node is only available in <code class=\"docutils literal notranslate\"><span class=\"pre\">Fragment</span></code> and <code class=\"docutils literal notranslate\"><span class=\"pre\">Light</span></code> visual shaders.</p>\n"
            },
            "class_visualshadernodedeterminant": {
                "url": "https://docs.godotengine.org/en/4.1/classes/class_visualshadernodedeterminant.html",
                "title": "VisualShaderNodeDeterminant",
                "blurb": "<p><strong>Inherits:</strong> <a class=\"reference internal\" href=\"class_visualshadernode.html#class-visualshadernode\"><span class=\"std std-ref\">VisualShaderNode</span></a> <strong>&lt;</strong> <a class=\"reference internal\" href=\"class_resource.html#class-resource\"><span class=\"std std-ref\">Resource</span></a> <strong>&lt;</strong> <a class=\"reference internal\" href=\"class_refcounted.html#class-refcounted\"><span class=\"std std-ref\">RefCounted</span></a> <strong>&lt;</strong> <a class=\"reference internal\" href=\"class_object.html#class-object\"><span class=\"std std-ref\">Object</span></a></p><p>Calculates the determinant of a <a class=\"reference internal\" href=\"class_transform3d.html#class-transform3d\"><span class=\"std std-ref\">Transform3D</span></a> within the visual shader graph.</p>",
                "description": "\n\n<p>Translates to <code class=\"docutils literal notranslate\"><span class=\"pre\">determinant(x)</span></code> in the shader language.</p>\n"
            },
            "class_visualshadernodedistancefade": {
                "url": "https://docs.godotengine.org/en/4.1/classes/class_visualshadernodedistancefade.html",
                "title": "VisualShaderNodeDistanceFade",
                "blurb": "<p><strong>Inherits:</strong> <a class=\"reference internal\" href=\"class_visualshadernode.html#class-visualshadernode\"><span class=\"std std-ref\">VisualShaderNode</span></a> <strong>&lt;</strong> <a class=\"reference internal\" href=\"class_resource.html#class-resource\"><span class=\"std std-ref\">Resource</span></a> <strong>&lt;</strong> <a class=\"reference internal\" href=\"class_refcounted.html#class-refcounted\"><span class=\"std std-ref\">RefCounted</span></a> <strong>&lt;</strong> <a class=\"reference internal\" href=\"class_object.html#class-object\"><span class=\"std std-ref\">Object</span></a></p><p>A visual shader node representing distance fade effect.</p>",
                "description": "\n\n<p>The distance fade effect fades out each pixel based on its distance to another object.</p>\n"
            },
            "class_visualshadernodedotproduct": {
                "url": "https://docs.godotengine.org/en/4.1/classes/class_visualshadernodedotproduct.html",
                "title": "VisualShaderNodeDotProduct",
                "blurb": "<p><strong>Inherits:</strong> <a class=\"reference internal\" href=\"class_visualshadernode.html#class-visualshadernode\"><span class=\"std std-ref\">VisualShaderNode</span></a> <strong>&lt;</strong> <a class=\"reference internal\" href=\"class_resource.html#class-resource\"><span class=\"std std-ref\">Resource</span></a> <strong>&lt;</strong> <a class=\"reference internal\" href=\"class_refcounted.html#class-refcounted\"><span class=\"std std-ref\">RefCounted</span></a> <strong>&lt;</strong> <a class=\"reference internal\" href=\"class_object.html#class-object\"><span class=\"std std-ref\">Object</span></a></p><p>Calculates a dot product of two vectors within the visual shader graph.</p>",
                "description": "\n\n<p>Translates to <code class=\"docutils literal notranslate\"><span class=\"pre\">dot(a,</span> <span class=\"pre\">b)</span></code> in the shader language.</p>\n"
            },
            "class_visualshadernodeexpression": {
                "url": "https://docs.godotengine.org/en/4.1/classes/class_visualshadernodeexpression.html",
                "title": "VisualShaderNodeExpression",
                "blurb": "<p><strong>Inherits:</strong> <a class=\"reference internal\" href=\"class_visualshadernodegroupbase.html#class-visualshadernodegroupbase\"><span class=\"std std-ref\">VisualShaderNodeGroupBase</span></a> <strong>&lt;</strong> <a class=\"reference internal\" href=\"class_visualshadernoderesizablebase.html#class-visualshadernoderesizablebase\"><span class=\"std std-ref\">VisualShaderNodeResizableBase</span></a> <strong>&lt;</strong> <a class=\"reference internal\" href=\"class_visualshadernode.html#class-visualshadernode\"><span class=\"std std-ref\">VisualShaderNode</span></a> <strong>&lt;</strong> <a class=\"reference internal\" href=\"class_resource.html#class-resource\"><span class=\"std std-ref\">Resource</span></a> <strong>&lt;</strong> <a class=\"reference internal\" href=\"class_refcounted.html#class-refcounted\"><span class=\"std std-ref\">RefCounted</span></a> <strong>&lt;</strong> <a class=\"reference internal\" href=\"class_object.html#class-object\"><span class=\"std std-ref\">Object</span></a></p><p><strong>Inherited By:</strong> <a class=\"reference internal\" href=\"class_visualshadernodeglobalexpression.html#class-visualshadernodeglobalexpression\"><span class=\"std std-ref\">VisualShaderNodeGlobalExpression</span></a></p><p>A custom visual shader graph expression written in Godot Shading Language.</p>",
                "description": "\n\n<p>Custom Godot Shading Language expression, with a custom number of input and output ports.</p>\n<p>The provided code is directly injected into the graph's matching shader function (<code class=\"docutils literal notranslate\"><span class=\"pre\">vertex</span></code>, <code class=\"docutils literal notranslate\"><span class=\"pre\">fragment</span></code>, or <code class=\"docutils literal notranslate\"><span class=\"pre\">light</span></code>), so it cannot be used to declare functions, varyings, uniforms, or global constants. See <a class=\"reference internal\" href=\"class_visualshadernodeglobalexpression.html#class-visualshadernodeglobalexpression\"><span class=\"std std-ref\">VisualShaderNodeGlobalExpression</span></a> for such global definitions.</p>\n"
            },
            "class_visualshadernodefaceforward": {
                "url": "https://docs.godotengine.org/en/4.1/classes/class_visualshadernodefaceforward.html",
                "title": "VisualShaderNodeFaceForward",
                "blurb": "<p><strong>Inherits:</strong> <a class=\"reference internal\" href=\"class_visualshadernodevectorbase.html#class-visualshadernodevectorbase\"><span class=\"std std-ref\">VisualShaderNodeVectorBase</span></a> <strong>&lt;</strong> <a class=\"reference internal\" href=\"class_visualshadernode.html#class-visualshadernode\"><span class=\"std std-ref\">VisualShaderNode</span></a> <strong>&lt;</strong> <a class=\"reference internal\" href=\"class_resource.html#class-resource\"><span class=\"std std-ref\">Resource</span></a> <strong>&lt;</strong> <a class=\"reference internal\" href=\"class_refcounted.html#class-refcounted\"><span class=\"std std-ref\">RefCounted</span></a> <strong>&lt;</strong> <a class=\"reference internal\" href=\"class_object.html#class-object\"><span class=\"std std-ref\">Object</span></a></p><p>Returns the vector that points in the same direction as a reference vector within the visual shader graph.</p>",
                "description": "\n\n<p>Translates to <code class=\"docutils literal notranslate\"><span class=\"pre\">faceforward(N,</span> <span class=\"pre\">I,</span> <span class=\"pre\">Nref)</span></code> in the shader language. The function has three vector parameters: <code class=\"docutils literal notranslate\"><span class=\"pre\">N</span></code>, the vector to orient, <code class=\"docutils literal notranslate\"><span class=\"pre\">I</span></code>, the incident vector, and <code class=\"docutils literal notranslate\"><span class=\"pre\">Nref</span></code>, the reference vector. If the dot product of <code class=\"docutils literal notranslate\"><span class=\"pre\">I</span></code> and <code class=\"docutils literal notranslate\"><span class=\"pre\">Nref</span></code> is smaller than zero the return value is <code class=\"docutils literal notranslate\"><span class=\"pre\">N</span></code>. Otherwise, <code class=\"docutils literal notranslate\"><span class=\"pre\">-N</span></code> is returned.</p>\n"
            },
            "class_visualshadernodefloatconstant": {
                "url": "https://docs.godotengine.org/en/4.1/classes/class_visualshadernodefloatconstant.html",
                "title": "VisualShaderNodeFloatConstant",
                "blurb": "<p><strong>Inherits:</strong> <a class=\"reference internal\" href=\"class_visualshadernodeconstant.html#class-visualshadernodeconstant\"><span class=\"std std-ref\">VisualShaderNodeConstant</span></a> <strong>&lt;</strong> <a class=\"reference internal\" href=\"class_visualshadernode.html#class-visualshadernode\"><span class=\"std std-ref\">VisualShaderNode</span></a> <strong>&lt;</strong> <a class=\"reference internal\" href=\"class_resource.html#class-resource\"><span class=\"std std-ref\">Resource</span></a> <strong>&lt;</strong> <a class=\"reference internal\" href=\"class_refcounted.html#class-refcounted\"><span class=\"std std-ref\">RefCounted</span></a> <strong>&lt;</strong> <a class=\"reference internal\" href=\"class_object.html#class-object\"><span class=\"std std-ref\">Object</span></a></p><p>A scalar floating-point constant to be used within the visual shader graph.</p>",
                "description": "\n\n<p>Translated to <code class=\"docutils literal notranslate\"><span class=\"pre\">float</span></code> in the shader language.</p>\n"
            },
            "class_visualshadernodefloatfunc": {
                "url": "https://docs.godotengine.org/en/4.1/classes/class_visualshadernodefloatfunc.html",
                "title": "VisualShaderNodeFloatFunc",
                "blurb": "<p><strong>Inherits:</strong> <a class=\"reference internal\" href=\"class_visualshadernode.html#class-visualshadernode\"><span class=\"std std-ref\">VisualShaderNode</span></a> <strong>&lt;</strong> <a class=\"reference internal\" href=\"class_resource.html#class-resource\"><span class=\"std std-ref\">Resource</span></a> <strong>&lt;</strong> <a class=\"reference internal\" href=\"class_refcounted.html#class-refcounted\"><span class=\"std std-ref\">RefCounted</span></a> <strong>&lt;</strong> <a class=\"reference internal\" href=\"class_object.html#class-object\"><span class=\"std std-ref\">Object</span></a></p><p>A scalar floating-point function to be used within the visual shader graph.</p>",
                "description": "\n\n<p>Accept a floating-point scalar (<code class=\"docutils literal notranslate\"><span class=\"pre\">x</span></code>) to the input port and transform it according to <a class=\"reference internal\" href=\"#class-visualshadernodefloatfunc-property-function\"><span class=\"std std-ref\">function</span></a>.</p>\n"
            },
            "class_visualshadernodefloatop": {
                "url": "https://docs.godotengine.org/en/4.1/classes/class_visualshadernodefloatop.html",
                "title": "VisualShaderNodeFloatOp",
                "blurb": "<p><strong>Inherits:</strong> <a class=\"reference internal\" href=\"class_visualshadernode.html#class-visualshadernode\"><span class=\"std std-ref\">VisualShaderNode</span></a> <strong>&lt;</strong> <a class=\"reference internal\" href=\"class_resource.html#class-resource\"><span class=\"std std-ref\">Resource</span></a> <strong>&lt;</strong> <a class=\"reference internal\" href=\"class_refcounted.html#class-refcounted\"><span class=\"std std-ref\">RefCounted</span></a> <strong>&lt;</strong> <a class=\"reference internal\" href=\"class_object.html#class-object\"><span class=\"std std-ref\">Object</span></a></p><p>A floating-point scalar operator to be used within the visual shader graph.</p>",
                "description": "\n\n<p>Applies <a class=\"reference internal\" href=\"#class-visualshadernodefloatop-property-operator\"><span class=\"std std-ref\">operator</span></a> to two floating-point inputs: <code class=\"docutils literal notranslate\"><span class=\"pre\">a</span></code> and <code class=\"docutils literal notranslate\"><span class=\"pre\">b</span></code>.</p>\n"
            },
            "class_visualshadernodefloatparameter": {
                "url": "https://docs.godotengine.org/en/4.1/classes/class_visualshadernodefloatparameter.html",
                "title": "VisualShaderNodeFloatParameter",
                "blurb": "<p><strong>Inherits:</strong> <a class=\"reference internal\" href=\"class_visualshadernodeparameter.html#class-visualshadernodeparameter\"><span class=\"std std-ref\">VisualShaderNodeParameter</span></a> <strong>&lt;</strong> <a class=\"reference internal\" href=\"class_visualshadernode.html#class-visualshadernode\"><span class=\"std std-ref\">VisualShaderNode</span></a> <strong>&lt;</strong> <a class=\"reference internal\" href=\"class_resource.html#class-resource\"><span class=\"std std-ref\">Resource</span></a> <strong>&lt;</strong> <a class=\"reference internal\" href=\"class_refcounted.html#class-refcounted\"><span class=\"std std-ref\">RefCounted</span></a> <strong>&lt;</strong> <a class=\"reference internal\" href=\"class_object.html#class-object\"><span class=\"std std-ref\">Object</span></a></p><p>A scalar float parameter to be used within the visual shader graph.</p>",
                "description": "\n\n<p>Translated to <code class=\"docutils literal notranslate\"><span class=\"pre\">uniform</span> <span class=\"pre\">float</span></code> in the shader language.</p>\n"
            },
            "class_visualshadernodefresnel": {
                "url": "https://docs.godotengine.org/en/4.1/classes/class_visualshadernodefresnel.html",
                "title": "VisualShaderNodeFresnel",
                "blurb": "<p><strong>Inherits:</strong> <a class=\"reference internal\" href=\"class_visualshadernode.html#class-visualshadernode\"><span class=\"std std-ref\">VisualShaderNode</span></a> <strong>&lt;</strong> <a class=\"reference internal\" href=\"class_resource.html#class-resource\"><span class=\"std std-ref\">Resource</span></a> <strong>&lt;</strong> <a class=\"reference internal\" href=\"class_refcounted.html#class-refcounted\"><span class=\"std std-ref\">RefCounted</span></a> <strong>&lt;</strong> <a class=\"reference internal\" href=\"class_object.html#class-object\"><span class=\"std std-ref\">Object</span></a></p><p>A Fresnel effect to be used within the visual shader graph.</p>",
                "description": "\n\n<p>Returns falloff based on the dot product of surface normal and view direction of camera (pass associated inputs to it).</p>\n"
            },
            "class_visualshadernodeglobalexpression": {
                "url": "https://docs.godotengine.org/en/4.1/classes/class_visualshadernodeglobalexpression.html",
                "title": "VisualShaderNodeGlobalExpression",
                "blurb": "<p><strong>Inherits:</strong> <a class=\"reference internal\" href=\"class_visualshadernodeexpression.html#class-visualshadernodeexpression\"><span class=\"std std-ref\">VisualShaderNodeExpression</span></a> <strong>&lt;</strong> <a class=\"reference internal\" href=\"class_visualshadernodegroupbase.html#class-visualshadernodegroupbase\"><span class=\"std std-ref\">VisualShaderNodeGroupBase</span></a> <strong>&lt;</strong> <a class=\"reference internal\" href=\"class_visualshadernoderesizablebase.html#class-visualshadernoderesizablebase\"><span class=\"std std-ref\">VisualShaderNodeResizableBase</span></a> <strong>&lt;</strong> <a class=\"reference internal\" href=\"class_visualshadernode.html#class-visualshadernode\"><span class=\"std std-ref\">VisualShaderNode</span></a> <strong>&lt;</strong> <a class=\"reference internal\" href=\"class_resource.html#class-resource\"><span class=\"std std-ref\">Resource</span></a> <strong>&lt;</strong> <a class=\"reference internal\" href=\"class_refcounted.html#class-refcounted\"><span class=\"std std-ref\">RefCounted</span></a> <strong>&lt;</strong> <a class=\"reference internal\" href=\"class_object.html#class-object\"><span class=\"std std-ref\">Object</span></a></p><p>A custom global visual shader graph expression written in Godot Shading Language.</p>",
                "description": "\n\n<p>Custom Godot Shader Language expression, which is placed on top of the generated shader. You can place various function definitions inside to call later in <a class=\"reference internal\" href=\"class_visualshadernodeexpression.html#class-visualshadernodeexpression\"><span class=\"std std-ref\">VisualShaderNodeExpression</span></a>s (which are injected in the main shader functions). You can also declare varyings, uniforms and global constants.</p>\n"
            },
            "class_visualshadernodegroupbase": {
                "url": "https://docs.godotengine.org/en/4.1/classes/class_visualshadernodegroupbase.html",
                "title": "VisualShaderNodeGroupBase",
                "blurb": "<p><strong>Inherits:</strong> <a class=\"reference internal\" href=\"class_visualshadernoderesizablebase.html#class-visualshadernoderesizablebase\"><span class=\"std std-ref\">VisualShaderNodeResizableBase</span></a> <strong>&lt;</strong> <a class=\"reference internal\" href=\"class_visualshadernode.html#class-visualshadernode\"><span class=\"std std-ref\">VisualShaderNode</span></a> <strong>&lt;</strong> <a class=\"reference internal\" href=\"class_resource.html#class-resource\"><span class=\"std std-ref\">Resource</span></a> <strong>&lt;</strong> <a class=\"reference internal\" href=\"class_refcounted.html#class-refcounted\"><span class=\"std std-ref\">RefCounted</span></a> <strong>&lt;</strong> <a class=\"reference internal\" href=\"class_object.html#class-object\"><span class=\"std std-ref\">Object</span></a></p><p><strong>Inherited By:</strong> <a class=\"reference internal\" href=\"class_visualshadernodeexpression.html#class-visualshadernodeexpression\"><span class=\"std std-ref\">VisualShaderNodeExpression</span></a></p><p>Base class for a family of nodes with variable number of input and output ports within the visual shader graph.</p>",
                "description": "\n\n<p>Currently, has no direct usage, use the derived classes instead.</p>\n"
            },
            "class_visualshadernodeif": {
                "url": "https://docs.godotengine.org/en/4.1/classes/class_visualshadernodeif.html",
                "title": "VisualShaderNodeIf",
                "blurb": "<p><strong>Inherits:</strong> <a class=\"reference internal\" href=\"class_visualshadernode.html#class-visualshadernode\"><span class=\"std std-ref\">VisualShaderNode</span></a> <strong>&lt;</strong> <a class=\"reference internal\" href=\"class_resource.html#class-resource\"><span class=\"std std-ref\">Resource</span></a> <strong>&lt;</strong> <a class=\"reference internal\" href=\"class_refcounted.html#class-refcounted\"><span class=\"std std-ref\">RefCounted</span></a> <strong>&lt;</strong> <a class=\"reference internal\" href=\"class_object.html#class-object\"><span class=\"std std-ref\">Object</span></a></p><p>Compares two floating-point numbers in order to return a required vector within the visual shader graph.</p>",
                "description": "\n\n<p>First two ports are scalar floating-point numbers to compare, third is tolerance comparison amount and last three ports represents a vectors returned if <code class=\"docutils literal notranslate\"><span class=\"pre\">a</span> <span class=\"pre\">==</span> <span class=\"pre\">b</span></code>, <code class=\"docutils literal notranslate\"><span class=\"pre\">a</span> <span class=\"pre\">&gt;</span> <span class=\"pre\">b</span></code> and <code class=\"docutils literal notranslate\"><span class=\"pre\">a</span> <span class=\"pre\">&lt;</span> <span class=\"pre\">b</span></code> respectively.</p>\n"
            },
            "class_visualshadernodeinput": {
                "url": "https://docs.godotengine.org/en/4.1/classes/class_visualshadernodeinput.html",
                "title": "VisualShaderNodeInput",
                "blurb": "<p><strong>Inherits:</strong> <a class=\"reference internal\" href=\"class_visualshadernode.html#class-visualshadernode\"><span class=\"std std-ref\">VisualShaderNode</span></a> <strong>&lt;</strong> <a class=\"reference internal\" href=\"class_resource.html#class-resource\"><span class=\"std std-ref\">Resource</span></a> <strong>&lt;</strong> <a class=\"reference internal\" href=\"class_refcounted.html#class-refcounted\"><span class=\"std std-ref\">RefCounted</span></a> <strong>&lt;</strong> <a class=\"reference internal\" href=\"class_object.html#class-object\"><span class=\"std std-ref\">Object</span></a></p><p>Represents the input shader parameter within the visual shader graph.</p>",
                "description": "\n\n<p>Gives access to input variables (built-ins) available for the shader. See the shading reference for the list of available built-ins for each shader type (check <code class=\"docutils literal notranslate\"><span class=\"pre\">Tutorials</span></code> section for link).</p>\n"
            },
            "class_visualshadernodeintconstant": {
                "url": "https://docs.godotengine.org/en/4.1/classes/class_visualshadernodeintconstant.html",
                "title": "VisualShaderNodeIntConstant",
                "blurb": "<p><strong>Inherits:</strong> <a class=\"reference internal\" href=\"class_visualshadernodeconstant.html#class-visualshadernodeconstant\"><span class=\"std std-ref\">VisualShaderNodeConstant</span></a> <strong>&lt;</strong> <a class=\"reference internal\" href=\"class_visualshadernode.html#class-visualshadernode\"><span class=\"std std-ref\">VisualShaderNode</span></a> <strong>&lt;</strong> <a class=\"reference internal\" href=\"class_resource.html#class-resource\"><span class=\"std std-ref\">Resource</span></a> <strong>&lt;</strong> <a class=\"reference internal\" href=\"class_refcounted.html#class-refcounted\"><span class=\"std std-ref\">RefCounted</span></a> <strong>&lt;</strong> <a class=\"reference internal\" href=\"class_object.html#class-object\"><span class=\"std std-ref\">Object</span></a></p><p>A scalar integer constant to be used within the visual shader graph.</p>",
                "description": "\n\n<p>Translated to <code class=\"docutils literal notranslate\"><span class=\"pre\">int</span></code> in the shader language.</p>\n"
            },
            "class_visualshadernodeintfunc": {
                "url": "https://docs.godotengine.org/en/4.1/classes/class_visualshadernodeintfunc.html",
                "title": "VisualShaderNodeIntFunc",
                "blurb": "<p><strong>Inherits:</strong> <a class=\"reference internal\" href=\"class_visualshadernode.html#class-visualshadernode\"><span class=\"std std-ref\">VisualShaderNode</span></a> <strong>&lt;</strong> <a class=\"reference internal\" href=\"class_resource.html#class-resource\"><span class=\"std std-ref\">Resource</span></a> <strong>&lt;</strong> <a class=\"reference internal\" href=\"class_refcounted.html#class-refcounted\"><span class=\"std std-ref\">RefCounted</span></a> <strong>&lt;</strong> <a class=\"reference internal\" href=\"class_object.html#class-object\"><span class=\"std std-ref\">Object</span></a></p><p>A scalar integer function to be used within the visual shader graph.</p>",
                "description": "\n\n<p>Accept an integer scalar (<code class=\"docutils literal notranslate\"><span class=\"pre\">x</span></code>) to the input port and transform it according to <a class=\"reference internal\" href=\"#class-visualshadernodeintfunc-property-function\"><span class=\"std std-ref\">function</span></a>.</p>\n"
            },
            "class_visualshadernodeintop": {
                "url": "https://docs.godotengine.org/en/4.1/classes/class_visualshadernodeintop.html",
                "title": "VisualShaderNodeIntOp",
                "blurb": "<p><strong>Inherits:</strong> <a class=\"reference internal\" href=\"class_visualshadernode.html#class-visualshadernode\"><span class=\"std std-ref\">VisualShaderNode</span></a> <strong>&lt;</strong> <a class=\"reference internal\" href=\"class_resource.html#class-resource\"><span class=\"std std-ref\">Resource</span></a> <strong>&lt;</strong> <a class=\"reference internal\" href=\"class_refcounted.html#class-refcounted\"><span class=\"std std-ref\">RefCounted</span></a> <strong>&lt;</strong> <a class=\"reference internal\" href=\"class_object.html#class-object\"><span class=\"std std-ref\">Object</span></a></p><p>An integer scalar operator to be used within the visual shader graph.</p>",
                "description": "\n\n<p>Applies <a class=\"reference internal\" href=\"#class-visualshadernodeintop-property-operator\"><span class=\"std std-ref\">operator</span></a> to two integer inputs: <code class=\"docutils literal notranslate\"><span class=\"pre\">a</span></code> and <code class=\"docutils literal notranslate\"><span class=\"pre\">b</span></code>.</p>\n"
            },
            "class_visualshadernodeintparameter": {
                "url": "https://docs.godotengine.org/en/4.1/classes/class_visualshadernodeintparameter.html",
                "title": "VisualShaderNodeIntParameter",
                "blurb": "<p><strong>Inherits:</strong> <a class=\"reference internal\" href=\"class_visualshadernodeparameter.html#class-visualshadernodeparameter\"><span class=\"std std-ref\">VisualShaderNodeParameter</span></a> <strong>&lt;</strong> <a class=\"reference internal\" href=\"class_visualshadernode.html#class-visualshadernode\"><span class=\"std std-ref\">VisualShaderNode</span></a> <strong>&lt;</strong> <a class=\"reference internal\" href=\"class_resource.html#class-resource\"><span class=\"std std-ref\">Resource</span></a> <strong>&lt;</strong> <a class=\"reference internal\" href=\"class_refcounted.html#class-refcounted\"><span class=\"std std-ref\">RefCounted</span></a> <strong>&lt;</strong> <a class=\"reference internal\" href=\"class_object.html#class-object\"><span class=\"std std-ref\">Object</span></a></p><p>A visual shader node for shader parameter (uniform) of type <a class=\"reference internal\" href=\"class_int.html#class-int\"><span class=\"std std-ref\">int</span></a>.</p>",
                "description": "\n\n<p>A <a class=\"reference internal\" href=\"class_visualshadernodeparameter.html#class-visualshadernodeparameter\"><span class=\"std std-ref\">VisualShaderNodeParameter</span></a> of type <a class=\"reference internal\" href=\"class_int.html#class-int\"><span class=\"std std-ref\">int</span></a>. Offers additional customization for range of accepted values.</p>\n"
            },
            "class_visualshadernodeis": {
                "url": "https://docs.godotengine.org/en/4.1/classes/class_visualshadernodeis.html",
                "title": "VisualShaderNodeIs",
                "blurb": "<p><strong>Inherits:</strong> <a class=\"reference internal\" href=\"class_visualshadernode.html#class-visualshadernode\"><span class=\"std std-ref\">VisualShaderNode</span></a> <strong>&lt;</strong> <a class=\"reference internal\" href=\"class_resource.html#class-resource\"><span class=\"std std-ref\">Resource</span></a> <strong>&lt;</strong> <a class=\"reference internal\" href=\"class_refcounted.html#class-refcounted\"><span class=\"std std-ref\">RefCounted</span></a> <strong>&lt;</strong> <a class=\"reference internal\" href=\"class_object.html#class-object\"><span class=\"std std-ref\">Object</span></a></p><p>A boolean comparison operator to be used within the visual shader graph.</p>",
                "description": "\n\n<p>Returns the boolean result of the comparison between <code class=\"docutils literal notranslate\"><span class=\"pre\">INF</span></code> or <code class=\"docutils literal notranslate\"><span class=\"pre\">NaN</span></code> and a scalar parameter.</p>\n"
            },
            "class_visualshadernodelinearscenedepth": {
                "url": "https://docs.godotengine.org/en/4.1/classes/class_visualshadernodelinearscenedepth.html",
                "title": "VisualShaderNodeLinearSceneDepth",
                "blurb": "<p><strong>Inherits:</strong> <a class=\"reference internal\" href=\"class_visualshadernode.html#class-visualshadernode\"><span class=\"std std-ref\">VisualShaderNode</span></a> <strong>&lt;</strong> <a class=\"reference internal\" href=\"class_resource.html#class-resource\"><span class=\"std std-ref\">Resource</span></a> <strong>&lt;</strong> <a class=\"reference internal\" href=\"class_refcounted.html#class-refcounted\"><span class=\"std std-ref\">RefCounted</span></a> <strong>&lt;</strong> <a class=\"reference internal\" href=\"class_object.html#class-object\"><span class=\"std std-ref\">Object</span></a></p><p>A visual shader node that returns the depth value of the DEPTH_TEXTURE node in a linear space.</p>",
                "description": "\n\n<p>This node can be used in fragment shaders.</p>\n"
            },
            "class_visualshadernodemix": {
                "url": "https://docs.godotengine.org/en/4.1/classes/class_visualshadernodemix.html",
                "title": "VisualShaderNodeMix",
                "blurb": "<p><strong>Inherits:</strong> <a class=\"reference internal\" href=\"class_visualshadernode.html#class-visualshadernode\"><span class=\"std std-ref\">VisualShaderNode</span></a> <strong>&lt;</strong> <a class=\"reference internal\" href=\"class_resource.html#class-resource\"><span class=\"std std-ref\">Resource</span></a> <strong>&lt;</strong> <a class=\"reference internal\" href=\"class_refcounted.html#class-refcounted\"><span class=\"std std-ref\">RefCounted</span></a> <strong>&lt;</strong> <a class=\"reference internal\" href=\"class_object.html#class-object\"><span class=\"std std-ref\">Object</span></a></p><p>Linearly interpolates between two values within the visual shader graph.</p>",
                "description": "\n\n<p>Translates to <code class=\"docutils literal notranslate\"><span class=\"pre\">mix(a,</span> <span class=\"pre\">b,</span> <span class=\"pre\">weight)</span></code> in the shader language.</p>\n"
            },
            "class_visualshadernodemultiplyadd": {
                "url": "https://docs.godotengine.org/en/4.1/classes/class_visualshadernodemultiplyadd.html",
                "title": "VisualShaderNodeMultiplyAdd",
                "blurb": "<p><strong>Inherits:</strong> <a class=\"reference internal\" href=\"class_visualshadernode.html#class-visualshadernode\"><span class=\"std std-ref\">VisualShaderNode</span></a> <strong>&lt;</strong> <a class=\"reference internal\" href=\"class_resource.html#class-resource\"><span class=\"std std-ref\">Resource</span></a> <strong>&lt;</strong> <a class=\"reference internal\" href=\"class_refcounted.html#class-refcounted\"><span class=\"std std-ref\">RefCounted</span></a> <strong>&lt;</strong> <a class=\"reference internal\" href=\"class_object.html#class-object\"><span class=\"std std-ref\">Object</span></a></p><p>Performs a fused multiply-add operation within the visual shader graph.</p>",
                "description": "\n\n<p>Uses three operands to compute <code class=\"docutils literal notranslate\"><span class=\"pre\">(a</span> <span class=\"pre\">*</span> <span class=\"pre\">b</span> <span class=\"pre\">+</span> <span class=\"pre\">c)</span></code> expression.</p>\n"
            },
            "class_visualshadernodeouterproduct": {
                "url": "https://docs.godotengine.org/en/4.1/classes/class_visualshadernodeouterproduct.html",
                "title": "VisualShaderNodeOuterProduct",
                "blurb": "<p><strong>Inherits:</strong> <a class=\"reference internal\" href=\"class_visualshadernode.html#class-visualshadernode\"><span class=\"std std-ref\">VisualShaderNode</span></a> <strong>&lt;</strong> <a class=\"reference internal\" href=\"class_resource.html#class-resource\"><span class=\"std std-ref\">Resource</span></a> <strong>&lt;</strong> <a class=\"reference internal\" href=\"class_refcounted.html#class-refcounted\"><span class=\"std std-ref\">RefCounted</span></a> <strong>&lt;</strong> <a class=\"reference internal\" href=\"class_object.html#class-object\"><span class=\"std std-ref\">Object</span></a></p><p>Calculates an outer product of two vectors within the visual shader graph.</p>",
                "description": "\n\n<p><code class=\"docutils literal notranslate\"><span class=\"pre\">OuterProduct</span></code> treats the first parameter <code class=\"docutils literal notranslate\"><span class=\"pre\">c</span></code> as a column vector (matrix with one column) and the second parameter <code class=\"docutils literal notranslate\"><span class=\"pre\">r</span></code> as a row vector (matrix with one row) and does a linear algebraic matrix multiply <code class=\"docutils literal notranslate\"><span class=\"pre\">c</span> <span class=\"pre\">*</span> <span class=\"pre\">r</span></code>, yielding a matrix whose number of rows is the number of components in <code class=\"docutils literal notranslate\"><span class=\"pre\">c</span></code> and whose number of columns is the number of components in <code class=\"docutils literal notranslate\"><span class=\"pre\">r</span></code>.</p>\n"
            },
            "class_visualshadernodeoutput": {
                "url": "https://docs.godotengine.org/en/4.1/classes/class_visualshadernodeoutput.html",
                "title": "VisualShaderNodeOutput",
                "blurb": "<p><strong>Inherits:</strong> <a class=\"reference internal\" href=\"class_visualshadernode.html#class-visualshadernode\"><span class=\"std std-ref\">VisualShaderNode</span></a> <strong>&lt;</strong> <a class=\"reference internal\" href=\"class_resource.html#class-resource\"><span class=\"std std-ref\">Resource</span></a> <strong>&lt;</strong> <a class=\"reference internal\" href=\"class_refcounted.html#class-refcounted\"><span class=\"std std-ref\">RefCounted</span></a> <strong>&lt;</strong> <a class=\"reference internal\" href=\"class_object.html#class-object\"><span class=\"std std-ref\">Object</span></a></p><p><strong>Inherited By:</strong> <a class=\"reference internal\" href=\"class_visualshadernodeparticleoutput.html#class-visualshadernodeparticleoutput\"><span class=\"std std-ref\">VisualShaderNodeParticleOutput</span></a></p><p>Represents the output shader parameters within the visual shader graph.</p>",
                "description": "\n\n<p>This visual shader node is present in all shader graphs in form of \"Output\" block with multiple output value ports.</p>\n"
            },
            "class_visualshadernodeparameter": {
                "url": "https://docs.godotengine.org/en/4.1/classes/class_visualshadernodeparameter.html",
                "title": "VisualShaderNodeParameter",
                "blurb": "<p><strong>Inherits:</strong> <a class=\"reference internal\" href=\"class_visualshadernode.html#class-visualshadernode\"><span class=\"std std-ref\">VisualShaderNode</span></a> <strong>&lt;</strong> <a class=\"reference internal\" href=\"class_resource.html#class-resource\"><span class=\"std std-ref\">Resource</span></a> <strong>&lt;</strong> <a class=\"reference internal\" href=\"class_refcounted.html#class-refcounted\"><span class=\"std std-ref\">RefCounted</span></a> <strong>&lt;</strong> <a class=\"reference internal\" href=\"class_object.html#class-object\"><span class=\"std std-ref\">Object</span></a></p><p><strong>Inherited By:</strong> <a class=\"reference internal\" href=\"class_visualshadernodebooleanparameter.html#class-visualshadernodebooleanparameter\"><span class=\"std std-ref\">VisualShaderNodeBooleanParameter</span></a>, <a class=\"reference internal\" href=\"class_visualshadernodecolorparameter.html#class-visualshadernodecolorparameter\"><span class=\"std std-ref\">VisualShaderNodeColorParameter</span></a>, <a class=\"reference internal\" href=\"class_visualshadernodefloatparameter.html#class-visualshadernodefloatparameter\"><span class=\"std std-ref\">VisualShaderNodeFloatParameter</span></a>, <a class=\"reference internal\" href=\"class_visualshadernodeintparameter.html#class-visualshadernodeintparameter\"><span class=\"std std-ref\">VisualShaderNodeIntParameter</span></a>, <a class=\"reference internal\" href=\"class_visualshadernodetextureparameter.html#class-visualshadernodetextureparameter\"><span class=\"std std-ref\">VisualShaderNodeTextureParameter</span></a>, <a class=\"reference internal\" href=\"class_visualshadernodetransformparameter.html#class-visualshadernodetransformparameter\"><span class=\"std std-ref\">VisualShaderNodeTransformParameter</span></a>, <a class=\"reference internal\" href=\"class_visualshadernodeuintparameter.html#class-visualshadernodeuintparameter\"><span class=\"std std-ref\">VisualShaderNodeUIntParameter</span></a>, <a class=\"reference internal\" href=\"class_visualshadernodevec2parameter.html#class-visualshadernodevec2parameter\"><span class=\"std std-ref\">VisualShaderNodeVec2Parameter</span></a>, <a class=\"reference internal\" href=\"class_visualshadernodevec3parameter.html#class-visualshadernodevec3parameter\"><span class=\"std std-ref\">VisualShaderNodeVec3Parameter</span></a>, <a class=\"reference internal\" href=\"class_visualshadernodevec4parameter.html#class-visualshadernodevec4parameter\"><span class=\"std std-ref\">VisualShaderNodeVec4Parameter</span></a></p><p>A base type for the parameters within the visual shader graph.</p>",
                "description": "\n\n<p>A parameter represents a variable in the shader which is set externally, i.e. from the <a class=\"reference internal\" href=\"class_shadermaterial.html#class-shadermaterial\"><span class=\"std std-ref\">ShaderMaterial</span></a>. Parameters are exposed as properties in the <a class=\"reference internal\" href=\"class_shadermaterial.html#class-shadermaterial\"><span class=\"std std-ref\">ShaderMaterial</span></a> and can be assigned from the Inspector or from a script.</p>\n"
            },
            "class_visualshadernodeparameterref": {
                "url": "https://docs.godotengine.org/en/4.1/classes/class_visualshadernodeparameterref.html",
                "title": "VisualShaderNodeParameterRef",
                "blurb": "<p><strong>Inherits:</strong> <a class=\"reference internal\" href=\"class_visualshadernode.html#class-visualshadernode\"><span class=\"std std-ref\">VisualShaderNode</span></a> <strong>&lt;</strong> <a class=\"reference internal\" href=\"class_resource.html#class-resource\"><span class=\"std std-ref\">Resource</span></a> <strong>&lt;</strong> <a class=\"reference internal\" href=\"class_refcounted.html#class-refcounted\"><span class=\"std std-ref\">RefCounted</span></a> <strong>&lt;</strong> <a class=\"reference internal\" href=\"class_object.html#class-object\"><span class=\"std std-ref\">Object</span></a></p><p>A reference to an existing <a class=\"reference internal\" href=\"class_visualshadernodeparameter.html#class-visualshadernodeparameter\"><span class=\"std std-ref\">VisualShaderNodeParameter</span></a>.</p>",
                "description": "\n\n<p>Creating a reference to a <a class=\"reference internal\" href=\"class_visualshadernodeparameter.html#class-visualshadernodeparameter\"><span class=\"std std-ref\">VisualShaderNodeParameter</span></a> allows you to reuse this parameter in different shaders or shader stages easily.</p>\n"
            },
            "class_visualshadernodeparticleaccelerator": {
                "url": "https://docs.godotengine.org/en/4.1/classes/class_visualshadernodeparticleaccelerator.html",
                "title": "VisualShaderNodeParticleAccelerator",
                "blurb": "<p><strong>Inherits:</strong> <a class=\"reference internal\" href=\"class_visualshadernode.html#class-visualshadernode\"><span class=\"std std-ref\">VisualShaderNode</span></a> <strong>&lt;</strong> <a class=\"reference internal\" href=\"class_resource.html#class-resource\"><span class=\"std std-ref\">Resource</span></a> <strong>&lt;</strong> <a class=\"reference internal\" href=\"class_refcounted.html#class-refcounted\"><span class=\"std std-ref\">RefCounted</span></a> <strong>&lt;</strong> <a class=\"reference internal\" href=\"class_object.html#class-object\"><span class=\"std std-ref\">Object</span></a></p><p>A visual shader node that accelerates particles.</p>",
                "description": "\n\n<p>Particle accelerator can be used in \"process\" step of particle shader. It will accelerate the particles. Connect it to the Velocity output port.</p>\n"
            },
            "class_visualshadernodeparticleboxemitter": {
                "url": "https://docs.godotengine.org/en/4.1/classes/class_visualshadernodeparticleboxemitter.html",
                "title": "VisualShaderNodeParticleBoxEmitter",
                "blurb": "<p><strong>Inherits:</strong> <a class=\"reference internal\" href=\"class_visualshadernodeparticleemitter.html#class-visualshadernodeparticleemitter\"><span class=\"std std-ref\">VisualShaderNodeParticleEmitter</span></a> <strong>&lt;</strong> <a class=\"reference internal\" href=\"class_visualshadernode.html#class-visualshadernode\"><span class=\"std std-ref\">VisualShaderNode</span></a> <strong>&lt;</strong> <a class=\"reference internal\" href=\"class_resource.html#class-resource\"><span class=\"std std-ref\">Resource</span></a> <strong>&lt;</strong> <a class=\"reference internal\" href=\"class_refcounted.html#class-refcounted\"><span class=\"std std-ref\">RefCounted</span></a> <strong>&lt;</strong> <a class=\"reference internal\" href=\"class_object.html#class-object\"><span class=\"std std-ref\">Object</span></a></p><p>A visual shader node that makes particles emitted in a box shape.</p>",
                "description": "\n\n<p><a class=\"reference internal\" href=\"class_visualshadernodeparticleemitter.html#class-visualshadernodeparticleemitter\"><span class=\"std std-ref\">VisualShaderNodeParticleEmitter</span></a> that makes the particles emitted in box shape with the specified extents.</p>\n"
            },
            "class_visualshadernodeparticleconevelocity": {
                "url": "https://docs.godotengine.org/en/4.1/classes/class_visualshadernodeparticleconevelocity.html",
                "title": "VisualShaderNodeParticleConeVelocity",
                "blurb": "<p><strong>Inherits:</strong> <a class=\"reference internal\" href=\"class_visualshadernode.html#class-visualshadernode\"><span class=\"std std-ref\">VisualShaderNode</span></a> <strong>&lt;</strong> <a class=\"reference internal\" href=\"class_resource.html#class-resource\"><span class=\"std std-ref\">Resource</span></a> <strong>&lt;</strong> <a class=\"reference internal\" href=\"class_refcounted.html#class-refcounted\"><span class=\"std std-ref\">RefCounted</span></a> <strong>&lt;</strong> <a class=\"reference internal\" href=\"class_object.html#class-object\"><span class=\"std std-ref\">Object</span></a></p><p>A visual shader node that makes particles move in a cone shape.</p>",
                "description": "\n\n<p>This node can be used in \"start\" step of particle shader. It defines the initial velocity of the particles, making them move in cone shape starting from the center, with a given spread.</p>\n"
            },
            "class_visualshadernodeparticleemit": {
                "url": "https://docs.godotengine.org/en/4.1/classes/class_visualshadernodeparticleemit.html",
                "title": "VisualShaderNodeParticleEmit",
                "blurb": "<p><strong>Inherits:</strong> <a class=\"reference internal\" href=\"class_visualshadernode.html#class-visualshadernode\"><span class=\"std std-ref\">VisualShaderNode</span></a> <strong>&lt;</strong> <a class=\"reference internal\" href=\"class_resource.html#class-resource\"><span class=\"std std-ref\">Resource</span></a> <strong>&lt;</strong> <a class=\"reference internal\" href=\"class_refcounted.html#class-refcounted\"><span class=\"std std-ref\">RefCounted</span></a> <strong>&lt;</strong> <a class=\"reference internal\" href=\"class_object.html#class-object\"><span class=\"std std-ref\">Object</span></a></p><p>A visual shader node that forces to emit a particle from a sub-emitter.</p>",
                "description": "\n\n<p>This node internally calls <code class=\"docutils literal notranslate\"><span class=\"pre\">emit_subparticle</span></code> shader method. It will emit a particle from the configured sub-emitter and also allows to customize how its emitted. Requires a sub-emitter assigned to the particles node with this shader.</p>\n"
            },
            "class_visualshadernodeparticleemitter": {
                "url": "https://docs.godotengine.org/en/4.1/classes/class_visualshadernodeparticleemitter.html",
                "title": "VisualShaderNodeParticleEmitter",
                "blurb": "<p><strong>Inherits:</strong> <a class=\"reference internal\" href=\"class_visualshadernode.html#class-visualshadernode\"><span class=\"std std-ref\">VisualShaderNode</span></a> <strong>&lt;</strong> <a class=\"reference internal\" href=\"class_resource.html#class-resource\"><span class=\"std std-ref\">Resource</span></a> <strong>&lt;</strong> <a class=\"reference internal\" href=\"class_refcounted.html#class-refcounted\"><span class=\"std std-ref\">RefCounted</span></a> <strong>&lt;</strong> <a class=\"reference internal\" href=\"class_object.html#class-object\"><span class=\"std std-ref\">Object</span></a></p><p><strong>Inherited By:</strong> <a class=\"reference internal\" href=\"class_visualshadernodeparticleboxemitter.html#class-visualshadernodeparticleboxemitter\"><span class=\"std std-ref\">VisualShaderNodeParticleBoxEmitter</span></a>, <a class=\"reference internal\" href=\"class_visualshadernodeparticlemeshemitter.html#class-visualshadernodeparticlemeshemitter\"><span class=\"std std-ref\">VisualShaderNodeParticleMeshEmitter</span></a>, <a class=\"reference internal\" href=\"class_visualshadernodeparticleringemitter.html#class-visualshadernodeparticleringemitter\"><span class=\"std std-ref\">VisualShaderNodeParticleRingEmitter</span></a>, <a class=\"reference internal\" href=\"class_visualshadernodeparticlesphereemitter.html#class-visualshadernodeparticlesphereemitter\"><span class=\"std std-ref\">VisualShaderNodeParticleSphereEmitter</span></a></p><p>A base class for particle emitters.</p>",
                "description": "\n\n<p>Particle emitter nodes can be used in \"start\" step of particle shaders and they define the starting position of the particles. Connect them to the Position output port.</p>\n"
            },
            "class_visualshadernodeparticlemeshemitter": {
                "url": "https://docs.godotengine.org/en/4.1/classes/class_visualshadernodeparticlemeshemitter.html",
                "title": "VisualShaderNodeParticleMeshEmitter",
                "blurb": "<p><strong>Inherits:</strong> <a class=\"reference internal\" href=\"class_visualshadernodeparticleemitter.html#class-visualshadernodeparticleemitter\"><span class=\"std std-ref\">VisualShaderNodeParticleEmitter</span></a> <strong>&lt;</strong> <a class=\"reference internal\" href=\"class_visualshadernode.html#class-visualshadernode\"><span class=\"std std-ref\">VisualShaderNode</span></a> <strong>&lt;</strong> <a class=\"reference internal\" href=\"class_resource.html#class-resource\"><span class=\"std std-ref\">Resource</span></a> <strong>&lt;</strong> <a class=\"reference internal\" href=\"class_refcounted.html#class-refcounted\"><span class=\"std std-ref\">RefCounted</span></a> <strong>&lt;</strong> <a class=\"reference internal\" href=\"class_object.html#class-object\"><span class=\"std std-ref\">Object</span></a></p><p>A visual shader node that makes particles emitted in a shape defined by a <a class=\"reference internal\" href=\"class_mesh.html#class-mesh\"><span class=\"std std-ref\">Mesh</span></a>.</p>",
                "description": "\n\n<p><a class=\"reference internal\" href=\"class_visualshadernodeparticleemitter.html#class-visualshadernodeparticleemitter\"><span class=\"std std-ref\">VisualShaderNodeParticleEmitter</span></a> that makes the particles emitted in a shape of the assigned <a class=\"reference internal\" href=\"#class-visualshadernodeparticlemeshemitter-property-mesh\"><span class=\"std std-ref\">mesh</span></a>. It will emit from the mesh's surfaces, either all or only the specified one.</p>\n"
            },
            "class_visualshadernodeparticlemultiplybyaxisangle": {
                "url": "https://docs.godotengine.org/en/4.1/classes/class_visualshadernodeparticlemultiplybyaxisangle.html",
                "title": "VisualShaderNodeParticleMultiplyByAxisAngle",
                "blurb": "<p><strong>Inherits:</strong> <a class=\"reference internal\" href=\"class_visualshadernode.html#class-visualshadernode\"><span class=\"std std-ref\">VisualShaderNode</span></a> <strong>&lt;</strong> <a class=\"reference internal\" href=\"class_resource.html#class-resource\"><span class=\"std std-ref\">Resource</span></a> <strong>&lt;</strong> <a class=\"reference internal\" href=\"class_refcounted.html#class-refcounted\"><span class=\"std std-ref\">RefCounted</span></a> <strong>&lt;</strong> <a class=\"reference internal\" href=\"class_object.html#class-object\"><span class=\"std std-ref\">Object</span></a></p><p>A visual shader helper node for multiplying position and rotation of particles.</p>",
                "description": "\n\n<p>This node helps to multiply a position input vector by rotation using specific axis. Intended to work with emitters.</p>\n"
            },
            "class_visualshadernodeparticleoutput": {
                "url": "https://docs.godotengine.org/en/4.1/classes/class_visualshadernodeparticleoutput.html",
                "title": "VisualShaderNodeParticleOutput",
                "blurb": "<p><strong>Inherits:</strong> <a class=\"reference internal\" href=\"class_visualshadernodeoutput.html#class-visualshadernodeoutput\"><span class=\"std std-ref\">VisualShaderNodeOutput</span></a> <strong>&lt;</strong> <a class=\"reference internal\" href=\"class_visualshadernode.html#class-visualshadernode\"><span class=\"std std-ref\">VisualShaderNode</span></a> <strong>&lt;</strong> <a class=\"reference internal\" href=\"class_resource.html#class-resource\"><span class=\"std std-ref\">Resource</span></a> <strong>&lt;</strong> <a class=\"reference internal\" href=\"class_refcounted.html#class-refcounted\"><span class=\"std std-ref\">RefCounted</span></a> <strong>&lt;</strong> <a class=\"reference internal\" href=\"class_object.html#class-object\"><span class=\"std std-ref\">Object</span></a></p><p>Visual shader node that defines output values for particle emitting.</p>",
                "description": "\n\n<p>This node defines how particles are emitted. It allows to customize e.g. position and velocity. Available ports are different depending on which function this node is inside (start, process, collision) and whether custom data is enabled.</p>\n"
            },
            "class_visualshadernodeparticlerandomness": {
                "url": "https://docs.godotengine.org/en/4.1/classes/class_visualshadernodeparticlerandomness.html",
                "title": "VisualShaderNodeParticleRandomness",
                "blurb": "<p><strong>Inherits:</strong> <a class=\"reference internal\" href=\"class_visualshadernode.html#class-visualshadernode\"><span class=\"std std-ref\">VisualShaderNode</span></a> <strong>&lt;</strong> <a class=\"reference internal\" href=\"class_resource.html#class-resource\"><span class=\"std std-ref\">Resource</span></a> <strong>&lt;</strong> <a class=\"reference internal\" href=\"class_refcounted.html#class-refcounted\"><span class=\"std std-ref\">RefCounted</span></a> <strong>&lt;</strong> <a class=\"reference internal\" href=\"class_object.html#class-object\"><span class=\"std std-ref\">Object</span></a></p><p>Visual shader node for randomizing particle values.</p>",
                "description": "\n\n<p>Randomness node will output pseudo-random values of the given type based on the specified minimum and maximum values.</p>\n"
            },
            "class_visualshadernodeparticleringemitter": {
                "url": "https://docs.godotengine.org/en/4.1/classes/class_visualshadernodeparticleringemitter.html",
                "title": "VisualShaderNodeParticleRingEmitter",
                "blurb": "<p><strong>Inherits:</strong> <a class=\"reference internal\" href=\"class_visualshadernodeparticleemitter.html#class-visualshadernodeparticleemitter\"><span class=\"std std-ref\">VisualShaderNodeParticleEmitter</span></a> <strong>&lt;</strong> <a class=\"reference internal\" href=\"class_visualshadernode.html#class-visualshadernode\"><span class=\"std std-ref\">VisualShaderNode</span></a> <strong>&lt;</strong> <a class=\"reference internal\" href=\"class_resource.html#class-resource\"><span class=\"std std-ref\">Resource</span></a> <strong>&lt;</strong> <a class=\"reference internal\" href=\"class_refcounted.html#class-refcounted\"><span class=\"std std-ref\">RefCounted</span></a> <strong>&lt;</strong> <a class=\"reference internal\" href=\"class_object.html#class-object\"><span class=\"std std-ref\">Object</span></a></p><p>A visual shader node that makes particles emitted in a ring shape.</p>",
                "description": "\n\n<p><a class=\"reference internal\" href=\"class_visualshadernodeparticleemitter.html#class-visualshadernodeparticleemitter\"><span class=\"std std-ref\">VisualShaderNodeParticleEmitter</span></a> that makes the particles emitted in ring shape with the specified inner and outer radii and height.</p>\n"
            },
            "class_visualshadernodeparticlesphereemitter": {
                "url": "https://docs.godotengine.org/en/4.1/classes/class_visualshadernodeparticlesphereemitter.html",
                "title": "VisualShaderNodeParticleSphereEmitter",
                "blurb": "<p><strong>Inherits:</strong> <a class=\"reference internal\" href=\"class_visualshadernodeparticleemitter.html#class-visualshadernodeparticleemitter\"><span class=\"std std-ref\">VisualShaderNodeParticleEmitter</span></a> <strong>&lt;</strong> <a class=\"reference internal\" href=\"class_visualshadernode.html#class-visualshadernode\"><span class=\"std std-ref\">VisualShaderNode</span></a> <strong>&lt;</strong> <a class=\"reference internal\" href=\"class_resource.html#class-resource\"><span class=\"std std-ref\">Resource</span></a> <strong>&lt;</strong> <a class=\"reference internal\" href=\"class_refcounted.html#class-refcounted\"><span class=\"std std-ref\">RefCounted</span></a> <strong>&lt;</strong> <a class=\"reference internal\" href=\"class_object.html#class-object\"><span class=\"std std-ref\">Object</span></a></p><p>A visual shader node that makes particles emitted in a sphere shape.</p>",
                "description": "\n\n<p><a class=\"reference internal\" href=\"class_visualshadernodeparticleemitter.html#class-visualshadernodeparticleemitter\"><span class=\"std std-ref\">VisualShaderNodeParticleEmitter</span></a> that makes the particles emitted in sphere shape with the specified inner and outer radii.</p>\n"
            },
            "class_visualshadernodeproximityfade": {
                "url": "https://docs.godotengine.org/en/4.1/classes/class_visualshadernodeproximityfade.html",
                "title": "VisualShaderNodeProximityFade",
                "blurb": "<p><strong>Inherits:</strong> <a class=\"reference internal\" href=\"class_visualshadernode.html#class-visualshadernode\"><span class=\"std std-ref\">VisualShaderNode</span></a> <strong>&lt;</strong> <a class=\"reference internal\" href=\"class_resource.html#class-resource\"><span class=\"std std-ref\">Resource</span></a> <strong>&lt;</strong> <a class=\"reference internal\" href=\"class_refcounted.html#class-refcounted\"><span class=\"std std-ref\">RefCounted</span></a> <strong>&lt;</strong> <a class=\"reference internal\" href=\"class_object.html#class-object\"><span class=\"std std-ref\">Object</span></a></p><p>A visual shader node representing proximity fade effect.</p>",
                "description": "\n\n<p>The proximity fade effect fades out each pixel based on its distance to another object.</p>\n"
            },
            "class_visualshadernoderandomrange": {
                "url": "https://docs.godotengine.org/en/4.1/classes/class_visualshadernoderandomrange.html",
                "title": "VisualShaderNodeRandomRange",
                "blurb": "<p><strong>Inherits:</strong> <a class=\"reference internal\" href=\"class_visualshadernode.html#class-visualshadernode\"><span class=\"std std-ref\">VisualShaderNode</span></a> <strong>&lt;</strong> <a class=\"reference internal\" href=\"class_resource.html#class-resource\"><span class=\"std std-ref\">Resource</span></a> <strong>&lt;</strong> <a class=\"reference internal\" href=\"class_refcounted.html#class-refcounted\"><span class=\"std std-ref\">RefCounted</span></a> <strong>&lt;</strong> <a class=\"reference internal\" href=\"class_object.html#class-object\"><span class=\"std std-ref\">Object</span></a></p><p>A visual shader node that generates a pseudo-random scalar.</p>",
                "description": "\n\n<p>Random range node will output a pseudo-random scalar value in the specified range, based on the seed. The value is always the same for the given seed and range, so you should provide a changing input, e.g. by using time.</p>\n"
            },
            "class_visualshadernoderemap": {
                "url": "https://docs.godotengine.org/en/4.1/classes/class_visualshadernoderemap.html",
                "title": "VisualShaderNodeRemap",
                "blurb": "<p><strong>Inherits:</strong> <a class=\"reference internal\" href=\"class_visualshadernode.html#class-visualshadernode\"><span class=\"std std-ref\">VisualShaderNode</span></a> <strong>&lt;</strong> <a class=\"reference internal\" href=\"class_resource.html#class-resource\"><span class=\"std std-ref\">Resource</span></a> <strong>&lt;</strong> <a class=\"reference internal\" href=\"class_refcounted.html#class-refcounted\"><span class=\"std std-ref\">RefCounted</span></a> <strong>&lt;</strong> <a class=\"reference internal\" href=\"class_object.html#class-object\"><span class=\"std std-ref\">Object</span></a></p><p>A visual shader node for remap function.</p>",
                "description": "\n\n<p>Remap will transform the input range into output range, e.g. you can change a <code class=\"docutils literal notranslate\"><span class=\"pre\">0..1</span></code> value to <code class=\"docutils literal notranslate\"><span class=\"pre\">-2..2</span></code> etc. See <a class=\"reference internal\" href=\"class_%40globalscope.html#class-globalscope-method-remap\"><span class=\"std std-ref\">@GlobalScope.remap</span></a> for more details.</p>\n"
            },
            "class_visualshadernoderesizablebase": {
                "url": "https://docs.godotengine.org/en/4.1/classes/class_visualshadernoderesizablebase.html",
                "title": "VisualShaderNodeResizableBase",
                "blurb": "<p><strong>Inherits:</strong> <a class=\"reference internal\" href=\"class_visualshadernode.html#class-visualshadernode\"><span class=\"std std-ref\">VisualShaderNode</span></a> <strong>&lt;</strong> <a class=\"reference internal\" href=\"class_resource.html#class-resource\"><span class=\"std std-ref\">Resource</span></a> <strong>&lt;</strong> <a class=\"reference internal\" href=\"class_refcounted.html#class-refcounted\"><span class=\"std std-ref\">RefCounted</span></a> <strong>&lt;</strong> <a class=\"reference internal\" href=\"class_object.html#class-object\"><span class=\"std std-ref\">Object</span></a></p><p><strong>Inherited By:</strong> <a class=\"reference internal\" href=\"class_visualshadernodecomment.html#class-visualshadernodecomment\"><span class=\"std std-ref\">VisualShaderNodeComment</span></a>, <a class=\"reference internal\" href=\"class_visualshadernodecurvetexture.html#class-visualshadernodecurvetexture\"><span class=\"std std-ref\">VisualShaderNodeCurveTexture</span></a>, <a class=\"reference internal\" href=\"class_visualshadernodecurvexyztexture.html#class-visualshadernodecurvexyztexture\"><span class=\"std std-ref\">VisualShaderNodeCurveXYZTexture</span></a>, <a class=\"reference internal\" href=\"class_visualshadernodegroupbase.html#class-visualshadernodegroupbase\"><span class=\"std std-ref\">VisualShaderNodeGroupBase</span></a></p><p>Base class for resizable nodes in a visual shader graph.</p>",
                "description": "\n\n<p>Resizable nodes have a handle that allows the user to adjust their size as needed.</p>\n"
            },
            "class_visualshadernodesample3d": {
                "url": "https://docs.godotengine.org/en/4.1/classes/class_visualshadernodesample3d.html",
                "title": "VisualShaderNodeSample3D",
                "blurb": "<p><strong>Inherits:</strong> <a class=\"reference internal\" href=\"class_visualshadernode.html#class-visualshadernode\"><span class=\"std std-ref\">VisualShaderNode</span></a> <strong>&lt;</strong> <a class=\"reference internal\" href=\"class_resource.html#class-resource\"><span class=\"std std-ref\">Resource</span></a> <strong>&lt;</strong> <a class=\"reference internal\" href=\"class_refcounted.html#class-refcounted\"><span class=\"std std-ref\">RefCounted</span></a> <strong>&lt;</strong> <a class=\"reference internal\" href=\"class_object.html#class-object\"><span class=\"std std-ref\">Object</span></a></p><p><strong>Inherited By:</strong> <a class=\"reference internal\" href=\"class_visualshadernodetexture2darray.html#class-visualshadernodetexture2darray\"><span class=\"std std-ref\">VisualShaderNodeTexture2DArray</span></a>, <a class=\"reference internal\" href=\"class_visualshadernodetexture3d.html#class-visualshadernodetexture3d\"><span class=\"std std-ref\">VisualShaderNodeTexture3D</span></a></p><p>A base node for nodes which samples 3D textures in the visual shader graph.</p>",
                "description": "\n\n<p>A virtual class, use the descendants instead.</p>\n"
            },
            "class_visualshadernodescreenuvtosdf": {
                "url": "https://docs.godotengine.org/en/4.1/classes/class_visualshadernodescreenuvtosdf.html",
                "title": "VisualShaderNodeScreenUVToSDF",
                "blurb": "<p><strong>Inherits:</strong> <a class=\"reference internal\" href=\"class_visualshadernode.html#class-visualshadernode\"><span class=\"std std-ref\">VisualShaderNode</span></a> <strong>&lt;</strong> <a class=\"reference internal\" href=\"class_resource.html#class-resource\"><span class=\"std std-ref\">Resource</span></a> <strong>&lt;</strong> <a class=\"reference internal\" href=\"class_refcounted.html#class-refcounted\"><span class=\"std std-ref\">RefCounted</span></a> <strong>&lt;</strong> <a class=\"reference internal\" href=\"class_object.html#class-object\"><span class=\"std std-ref\">Object</span></a></p><p>A function to convert screen UV to an SDF (signed-distance field), to be used within the visual shader graph.</p>",
                "description": "\n\n<p>Translates to <code class=\"docutils literal notranslate\"><span class=\"pre\">screen_uv_to_sdf(uv)</span></code> in the shader language. If the UV port isn't connected, <code class=\"docutils literal notranslate\"><span class=\"pre\">SCREEN_UV</span></code> is used instead.</p>\n"
            },
            "class_visualshadernodesdfraymarch": {
                "url": "https://docs.godotengine.org/en/4.1/classes/class_visualshadernodesdfraymarch.html",
                "title": "VisualShaderNodeSDFRaymarch",
                "blurb": "<p><strong>Inherits:</strong> <a class=\"reference internal\" href=\"class_visualshadernode.html#class-visualshadernode\"><span class=\"std std-ref\">VisualShaderNode</span></a> <strong>&lt;</strong> <a class=\"reference internal\" href=\"class_resource.html#class-resource\"><span class=\"std std-ref\">Resource</span></a> <strong>&lt;</strong> <a class=\"reference internal\" href=\"class_refcounted.html#class-refcounted\"><span class=\"std std-ref\">RefCounted</span></a> <strong>&lt;</strong> <a class=\"reference internal\" href=\"class_object.html#class-object\"><span class=\"std std-ref\">Object</span></a></p><p>SDF raymarching algorithm to be used within the visual shader graph.</p>",
                "description": "\n\n<p>Casts a ray against the screen SDF (signed-distance field) and returns the distance travelled.</p>\n"
            },
            "class_visualshadernodesdftoscreenuv": {
                "url": "https://docs.godotengine.org/en/4.1/classes/class_visualshadernodesdftoscreenuv.html",
                "title": "VisualShaderNodeSDFToScreenUV",
                "blurb": "<p><strong>Inherits:</strong> <a class=\"reference internal\" href=\"class_visualshadernode.html#class-visualshadernode\"><span class=\"std std-ref\">VisualShaderNode</span></a> <strong>&lt;</strong> <a class=\"reference internal\" href=\"class_resource.html#class-resource\"><span class=\"std std-ref\">Resource</span></a> <strong>&lt;</strong> <a class=\"reference internal\" href=\"class_refcounted.html#class-refcounted\"><span class=\"std std-ref\">RefCounted</span></a> <strong>&lt;</strong> <a class=\"reference internal\" href=\"class_object.html#class-object\"><span class=\"std std-ref\">Object</span></a></p><p>A function to convert an SDF (signed-distance field) to screen UV, to be used within the visual shader graph.</p>",
                "description": "\n\n<p>Translates to <code class=\"docutils literal notranslate\"><span class=\"pre\">sdf_to_screen_uv(sdf_pos)</span></code> in the shader language.</p>\n"
            },
            "class_visualshadernodesmoothstep": {
                "url": "https://docs.godotengine.org/en/4.1/classes/class_visualshadernodesmoothstep.html",
                "title": "VisualShaderNodeSmoothStep",
                "blurb": "<p><strong>Inherits:</strong> <a class=\"reference internal\" href=\"class_visualshadernode.html#class-visualshadernode\"><span class=\"std std-ref\">VisualShaderNode</span></a> <strong>&lt;</strong> <a class=\"reference internal\" href=\"class_resource.html#class-resource\"><span class=\"std std-ref\">Resource</span></a> <strong>&lt;</strong> <a class=\"reference internal\" href=\"class_refcounted.html#class-refcounted\"><span class=\"std std-ref\">RefCounted</span></a> <strong>&lt;</strong> <a class=\"reference internal\" href=\"class_object.html#class-object\"><span class=\"std std-ref\">Object</span></a></p><p>Calculates a SmoothStep function within the visual shader graph.</p>",
                "description": "\n\n<p>Translates to <code class=\"docutils literal notranslate\"><span class=\"pre\">smoothstep(edge0,</span> <span class=\"pre\">edge1,</span> <span class=\"pre\">x)</span></code> in the shader language.</p>\n<p>Returns <code class=\"docutils literal notranslate\"><span class=\"pre\">0.0</span></code> if <code class=\"docutils literal notranslate\"><span class=\"pre\">x</span></code> is smaller than <code class=\"docutils literal notranslate\"><span class=\"pre\">edge0</span></code> and <code class=\"docutils literal notranslate\"><span class=\"pre\">1.0</span></code> if <code class=\"docutils literal notranslate\"><span class=\"pre\">x</span></code> is larger than <code class=\"docutils literal notranslate\"><span class=\"pre\">edge1</span></code>. Otherwise, the return value is interpolated between <code class=\"docutils literal notranslate\"><span class=\"pre\">0.0</span></code> and <code class=\"docutils literal notranslate\"><span class=\"pre\">1.0</span></code> using Hermite polynomials.</p>\n"
            },
            "class_visualshadernodestep": {
                "url": "https://docs.godotengine.org/en/4.1/classes/class_visualshadernodestep.html",
                "title": "VisualShaderNodeStep",
                "blurb": "<p><strong>Inherits:</strong> <a class=\"reference internal\" href=\"class_visualshadernode.html#class-visualshadernode\"><span class=\"std std-ref\">VisualShaderNode</span></a> <strong>&lt;</strong> <a class=\"reference internal\" href=\"class_resource.html#class-resource\"><span class=\"std std-ref\">Resource</span></a> <strong>&lt;</strong> <a class=\"reference internal\" href=\"class_refcounted.html#class-refcounted\"><span class=\"std std-ref\">RefCounted</span></a> <strong>&lt;</strong> <a class=\"reference internal\" href=\"class_object.html#class-object\"><span class=\"std std-ref\">Object</span></a></p><p>Calculates a Step function within the visual shader graph.</p>",
                "description": "\n\n<p>Translates to <code class=\"docutils literal notranslate\"><span class=\"pre\">step(edge,</span> <span class=\"pre\">x)</span></code> in the shader language.</p>\n<p>Returns <code class=\"docutils literal notranslate\"><span class=\"pre\">0.0</span></code> if <code class=\"docutils literal notranslate\"><span class=\"pre\">x</span></code> is smaller than <code class=\"docutils literal notranslate\"><span class=\"pre\">edge</span></code> and <code class=\"docutils literal notranslate\"><span class=\"pre\">1.0</span></code> otherwise.</p>\n"
            },
            "class_visualshadernodeswitch": {
                "url": "https://docs.godotengine.org/en/4.1/classes/class_visualshadernodeswitch.html",
                "title": "VisualShaderNodeSwitch",
                "blurb": "<p><strong>Inherits:</strong> <a class=\"reference internal\" href=\"class_visualshadernode.html#class-visualshadernode\"><span class=\"std std-ref\">VisualShaderNode</span></a> <strong>&lt;</strong> <a class=\"reference internal\" href=\"class_resource.html#class-resource\"><span class=\"std std-ref\">Resource</span></a> <strong>&lt;</strong> <a class=\"reference internal\" href=\"class_refcounted.html#class-refcounted\"><span class=\"std std-ref\">RefCounted</span></a> <strong>&lt;</strong> <a class=\"reference internal\" href=\"class_object.html#class-object\"><span class=\"std std-ref\">Object</span></a></p><p>A selector function for use within the visual shader graph.</p>",
                "description": "\n\n<p>Returns an associated value of the <code class=\"docutils literal notranslate\"><span class=\"pre\">op_type</span></code> type if the provided boolean value is <code class=\"docutils literal notranslate\"><span class=\"pre\">true</span></code> or <code class=\"docutils literal notranslate\"><span class=\"pre\">false</span></code>.</p>\n"
            },
            "class_visualshadernodetexture": {
                "url": "https://docs.godotengine.org/en/4.1/classes/class_visualshadernodetexture.html",
                "title": "VisualShaderNodeTexture",
                "blurb": "<p><strong>Inherits:</strong> <a class=\"reference internal\" href=\"class_visualshadernode.html#class-visualshadernode\"><span class=\"std std-ref\">VisualShaderNode</span></a> <strong>&lt;</strong> <a class=\"reference internal\" href=\"class_resource.html#class-resource\"><span class=\"std std-ref\">Resource</span></a> <strong>&lt;</strong> <a class=\"reference internal\" href=\"class_refcounted.html#class-refcounted\"><span class=\"std std-ref\">RefCounted</span></a> <strong>&lt;</strong> <a class=\"reference internal\" href=\"class_object.html#class-object\"><span class=\"std std-ref\">Object</span></a></p><p>Performs a 2D texture lookup within the visual shader graph.</p>",
                "description": "\n\n<p>Performs a lookup operation on the provided texture, with support for multiple texture sources to choose from.</p>\n"
            },
            "class_visualshadernodetexture2darray": {
                "url": "https://docs.godotengine.org/en/4.1/classes/class_visualshadernodetexture2darray.html",
                "title": "VisualShaderNodeTexture2DArray",
                "blurb": "<p><strong>Inherits:</strong> <a class=\"reference internal\" href=\"class_visualshadernodesample3d.html#class-visualshadernodesample3d\"><span class=\"std std-ref\">VisualShaderNodeSample3D</span></a> <strong>&lt;</strong> <a class=\"reference internal\" href=\"class_visualshadernode.html#class-visualshadernode\"><span class=\"std std-ref\">VisualShaderNode</span></a> <strong>&lt;</strong> <a class=\"reference internal\" href=\"class_resource.html#class-resource\"><span class=\"std std-ref\">Resource</span></a> <strong>&lt;</strong> <a class=\"reference internal\" href=\"class_refcounted.html#class-refcounted\"><span class=\"std std-ref\">RefCounted</span></a> <strong>&lt;</strong> <a class=\"reference internal\" href=\"class_object.html#class-object\"><span class=\"std std-ref\">Object</span></a></p><p>A 2D texture uniform array to be used within the visual shader graph.</p>",
                "description": "\n\n<p>Translated to <code class=\"docutils literal notranslate\"><span class=\"pre\">uniform</span> <span class=\"pre\">sampler2DArray</span></code> in the shader language.</p>\n"
            },
            "class_visualshadernodetexture2darrayparameter": {
                "url": "https://docs.godotengine.org/en/4.1/classes/class_visualshadernodetexture2darrayparameter.html",
                "title": "VisualShaderNodeTexture2DArrayParameter",
                "blurb": "<p><strong>Inherits:</strong> <a class=\"reference internal\" href=\"class_visualshadernodetextureparameter.html#class-visualshadernodetextureparameter\"><span class=\"std std-ref\">VisualShaderNodeTextureParameter</span></a> <strong>&lt;</strong> <a class=\"reference internal\" href=\"class_visualshadernodeparameter.html#class-visualshadernodeparameter\"><span class=\"std std-ref\">VisualShaderNodeParameter</span></a> <strong>&lt;</strong> <a class=\"reference internal\" href=\"class_visualshadernode.html#class-visualshadernode\"><span class=\"std std-ref\">VisualShaderNode</span></a> <strong>&lt;</strong> <a class=\"reference internal\" href=\"class_resource.html#class-resource\"><span class=\"std std-ref\">Resource</span></a> <strong>&lt;</strong> <a class=\"reference internal\" href=\"class_refcounted.html#class-refcounted\"><span class=\"std std-ref\">RefCounted</span></a> <strong>&lt;</strong> <a class=\"reference internal\" href=\"class_object.html#class-object\"><span class=\"std std-ref\">Object</span></a></p><p>A visual shader node for shader parameter (uniform) of type <a class=\"reference internal\" href=\"class_texture2darray.html#class-texture2darray\"><span class=\"std std-ref\">Texture2DArray</span></a>.</p>",
                "description": "\n\n<p>This parameter allows to provide a collection of textures for the shader. You can use <a class=\"reference internal\" href=\"class_visualshadernodetexture2darray.html#class-visualshadernodetexture2darray\"><span class=\"std std-ref\">VisualShaderNodeTexture2DArray</span></a> to extract the textures from array.</p>\n"
            },
            "class_visualshadernodetexture2dparameter": {
                "url": "https://docs.godotengine.org/en/4.1/classes/class_visualshadernodetexture2dparameter.html",
                "title": "VisualShaderNodeTexture2DParameter",
                "blurb": "<p><strong>Inherits:</strong> <a class=\"reference internal\" href=\"class_visualshadernodetextureparameter.html#class-visualshadernodetextureparameter\"><span class=\"std std-ref\">VisualShaderNodeTextureParameter</span></a> <strong>&lt;</strong> <a class=\"reference internal\" href=\"class_visualshadernodeparameter.html#class-visualshadernodeparameter\"><span class=\"std std-ref\">VisualShaderNodeParameter</span></a> <strong>&lt;</strong> <a class=\"reference internal\" href=\"class_visualshadernode.html#class-visualshadernode\"><span class=\"std std-ref\">VisualShaderNode</span></a> <strong>&lt;</strong> <a class=\"reference internal\" href=\"class_resource.html#class-resource\"><span class=\"std std-ref\">Resource</span></a> <strong>&lt;</strong> <a class=\"reference internal\" href=\"class_refcounted.html#class-refcounted\"><span class=\"std std-ref\">RefCounted</span></a> <strong>&lt;</strong> <a class=\"reference internal\" href=\"class_object.html#class-object\"><span class=\"std std-ref\">Object</span></a></p><p>Provides a 2D texture parameter within the visual shader graph.</p>",
                "description": "\n\n<p>Translated to <code class=\"docutils literal notranslate\"><span class=\"pre\">uniform</span> <span class=\"pre\">sampler2D</span></code> in the shader language.</p>\n"
            },
            "class_visualshadernodetexture3d": {
                "url": "https://docs.godotengine.org/en/4.1/classes/class_visualshadernodetexture3d.html",
                "title": "VisualShaderNodeTexture3D",
                "blurb": "<p><strong>Inherits:</strong> <a class=\"reference internal\" href=\"class_visualshadernodesample3d.html#class-visualshadernodesample3d\"><span class=\"std std-ref\">VisualShaderNodeSample3D</span></a> <strong>&lt;</strong> <a class=\"reference internal\" href=\"class_visualshadernode.html#class-visualshadernode\"><span class=\"std std-ref\">VisualShaderNode</span></a> <strong>&lt;</strong> <a class=\"reference internal\" href=\"class_resource.html#class-resource\"><span class=\"std std-ref\">Resource</span></a> <strong>&lt;</strong> <a class=\"reference internal\" href=\"class_refcounted.html#class-refcounted\"><span class=\"std std-ref\">RefCounted</span></a> <strong>&lt;</strong> <a class=\"reference internal\" href=\"class_object.html#class-object\"><span class=\"std std-ref\">Object</span></a></p><p>Performs a 3D texture lookup within the visual shader graph.</p>",
                "description": "\n\n<p>Performs a lookup operation on the provided texture, with support for multiple texture sources to choose from.</p>\n"
            },
            "class_visualshadernodetexture3dparameter": {
                "url": "https://docs.godotengine.org/en/4.1/classes/class_visualshadernodetexture3dparameter.html",
                "title": "VisualShaderNodeTexture3DParameter",
                "blurb": "<p><strong>Inherits:</strong> <a class=\"reference internal\" href=\"class_visualshadernodetextureparameter.html#class-visualshadernodetextureparameter\"><span class=\"std std-ref\">VisualShaderNodeTextureParameter</span></a> <strong>&lt;</strong> <a class=\"reference internal\" href=\"class_visualshadernodeparameter.html#class-visualshadernodeparameter\"><span class=\"std std-ref\">VisualShaderNodeParameter</span></a> <strong>&lt;</strong> <a class=\"reference internal\" href=\"class_visualshadernode.html#class-visualshadernode\"><span class=\"std std-ref\">VisualShaderNode</span></a> <strong>&lt;</strong> <a class=\"reference internal\" href=\"class_resource.html#class-resource\"><span class=\"std std-ref\">Resource</span></a> <strong>&lt;</strong> <a class=\"reference internal\" href=\"class_refcounted.html#class-refcounted\"><span class=\"std std-ref\">RefCounted</span></a> <strong>&lt;</strong> <a class=\"reference internal\" href=\"class_object.html#class-object\"><span class=\"std std-ref\">Object</span></a></p><p>Provides a 3D texture parameter within the visual shader graph.</p>",
                "description": "\n\n<p>Translated to <code class=\"docutils literal notranslate\"><span class=\"pre\">uniform</span> <span class=\"pre\">sampler3D</span></code> in the shader language.</p>\n"
            },
            "class_visualshadernodetextureparameter": {
                "url": "https://docs.godotengine.org/en/4.1/classes/class_visualshadernodetextureparameter.html",
                "title": "VisualShaderNodeTextureParameter",
                "blurb": "<p><strong>Inherits:</strong> <a class=\"reference internal\" href=\"class_visualshadernodeparameter.html#class-visualshadernodeparameter\"><span class=\"std std-ref\">VisualShaderNodeParameter</span></a> <strong>&lt;</strong> <a class=\"reference internal\" href=\"class_visualshadernode.html#class-visualshadernode\"><span class=\"std std-ref\">VisualShaderNode</span></a> <strong>&lt;</strong> <a class=\"reference internal\" href=\"class_resource.html#class-resource\"><span class=\"std std-ref\">Resource</span></a> <strong>&lt;</strong> <a class=\"reference internal\" href=\"class_refcounted.html#class-refcounted\"><span class=\"std std-ref\">RefCounted</span></a> <strong>&lt;</strong> <a class=\"reference internal\" href=\"class_object.html#class-object\"><span class=\"std std-ref\">Object</span></a></p><p><strong>Inherited By:</strong> <a class=\"reference internal\" href=\"class_visualshadernodecubemapparameter.html#class-visualshadernodecubemapparameter\"><span class=\"std std-ref\">VisualShaderNodeCubemapParameter</span></a>, <a class=\"reference internal\" href=\"class_visualshadernodetexture2darrayparameter.html#class-visualshadernodetexture2darrayparameter\"><span class=\"std std-ref\">VisualShaderNodeTexture2DArrayParameter</span></a>, <a class=\"reference internal\" href=\"class_visualshadernodetexture2dparameter.html#class-visualshadernodetexture2dparameter\"><span class=\"std std-ref\">VisualShaderNodeTexture2DParameter</span></a>, <a class=\"reference internal\" href=\"class_visualshadernodetexture3dparameter.html#class-visualshadernodetexture3dparameter\"><span class=\"std std-ref\">VisualShaderNodeTexture3DParameter</span></a>, <a class=\"reference internal\" href=\"class_visualshadernodetextureparametertriplanar.html#class-visualshadernodetextureparametertriplanar\"><span class=\"std std-ref\">VisualShaderNodeTextureParameterTriplanar</span></a></p><p>Performs a uniform texture lookup within the visual shader graph.</p>",
                "description": "\n\n<p>Performs a lookup operation on the texture provided as a uniform for the shader.</p>\n"
            },
            "class_visualshadernodetextureparametertriplanar": {
                "url": "https://docs.godotengine.org/en/4.1/classes/class_visualshadernodetextureparametertriplanar.html",
                "title": "VisualShaderNodeTextureParameterTriplanar",
                "blurb": "<p><strong>Inherits:</strong> <a class=\"reference internal\" href=\"class_visualshadernodetextureparameter.html#class-visualshadernodetextureparameter\"><span class=\"std std-ref\">VisualShaderNodeTextureParameter</span></a> <strong>&lt;</strong> <a class=\"reference internal\" href=\"class_visualshadernodeparameter.html#class-visualshadernodeparameter\"><span class=\"std std-ref\">VisualShaderNodeParameter</span></a> <strong>&lt;</strong> <a class=\"reference internal\" href=\"class_visualshadernode.html#class-visualshadernode\"><span class=\"std std-ref\">VisualShaderNode</span></a> <strong>&lt;</strong> <a class=\"reference internal\" href=\"class_resource.html#class-resource\"><span class=\"std std-ref\">Resource</span></a> <strong>&lt;</strong> <a class=\"reference internal\" href=\"class_refcounted.html#class-refcounted\"><span class=\"std std-ref\">RefCounted</span></a> <strong>&lt;</strong> <a class=\"reference internal\" href=\"class_object.html#class-object\"><span class=\"std std-ref\">Object</span></a></p><p>Performs a uniform texture lookup with triplanar within the visual shader graph.</p>",
                "description": "\n\n<p>Performs a lookup operation on the texture provided as a uniform for the shader, with support for triplanar mapping.</p>\n"
            },
            "class_visualshadernodetexturesdf": {
                "url": "https://docs.godotengine.org/en/4.1/classes/class_visualshadernodetexturesdf.html",
                "title": "VisualShaderNodeTextureSDF",
                "blurb": "<p><strong>Inherits:</strong> <a class=\"reference internal\" href=\"class_visualshadernode.html#class-visualshadernode\"><span class=\"std std-ref\">VisualShaderNode</span></a> <strong>&lt;</strong> <a class=\"reference internal\" href=\"class_resource.html#class-resource\"><span class=\"std std-ref\">Resource</span></a> <strong>&lt;</strong> <a class=\"reference internal\" href=\"class_refcounted.html#class-refcounted\"><span class=\"std std-ref\">RefCounted</span></a> <strong>&lt;</strong> <a class=\"reference internal\" href=\"class_object.html#class-object\"><span class=\"std std-ref\">Object</span></a></p><p>Performs an SDF (signed-distance field) texture lookup within the visual shader graph.</p>",
                "description": "\n\n<p>Translates to <code class=\"docutils literal notranslate\"><span class=\"pre\">texture_sdf(sdf_pos)</span></code> in the shader language.</p>\n"
            },
            "class_visualshadernodetexturesdfnormal": {
                "url": "https://docs.godotengine.org/en/4.1/classes/class_visualshadernodetexturesdfnormal.html",
                "title": "VisualShaderNodeTextureSDFNormal",
                "blurb": "<p><strong>Inherits:</strong> <a class=\"reference internal\" href=\"class_visualshadernode.html#class-visualshadernode\"><span class=\"std std-ref\">VisualShaderNode</span></a> <strong>&lt;</strong> <a class=\"reference internal\" href=\"class_resource.html#class-resource\"><span class=\"std std-ref\">Resource</span></a> <strong>&lt;</strong> <a class=\"reference internal\" href=\"class_refcounted.html#class-refcounted\"><span class=\"std std-ref\">RefCounted</span></a> <strong>&lt;</strong> <a class=\"reference internal\" href=\"class_object.html#class-object\"><span class=\"std std-ref\">Object</span></a></p><p>Performs an SDF (signed-distance field) normal texture lookup within the visual shader graph.</p>",
                "description": "\n\n<p>Translates to <code class=\"docutils literal notranslate\"><span class=\"pre\">texture_sdf_normal(sdf_pos)</span></code> in the shader language.</p>\n"
            },
            "class_visualshadernodetransformcompose": {
                "url": "https://docs.godotengine.org/en/4.1/classes/class_visualshadernodetransformcompose.html",
                "title": "VisualShaderNodeTransformCompose",
                "blurb": "<p><strong>Inherits:</strong> <a class=\"reference internal\" href=\"class_visualshadernode.html#class-visualshadernode\"><span class=\"std std-ref\">VisualShaderNode</span></a> <strong>&lt;</strong> <a class=\"reference internal\" href=\"class_resource.html#class-resource\"><span class=\"std std-ref\">Resource</span></a> <strong>&lt;</strong> <a class=\"reference internal\" href=\"class_refcounted.html#class-refcounted\"><span class=\"std std-ref\">RefCounted</span></a> <strong>&lt;</strong> <a class=\"reference internal\" href=\"class_object.html#class-object\"><span class=\"std std-ref\">Object</span></a></p><p>Composes a <a class=\"reference internal\" href=\"class_transform3d.html#class-transform3d\"><span class=\"std std-ref\">Transform3D</span></a> from four <a class=\"reference internal\" href=\"class_vector3.html#class-vector3\"><span class=\"std std-ref\">Vector3</span></a>s within the visual shader graph.</p>",
                "description": "\n\n<p>Creates a 4x4 transform matrix using four vectors of type <code class=\"docutils literal notranslate\"><span class=\"pre\">vec3</span></code>. Each vector is one row in the matrix and the last column is a <code class=\"docutils literal notranslate\"><span class=\"pre\">vec4(0,</span> <span class=\"pre\">0,</span> <span class=\"pre\">0,</span> <span class=\"pre\">1)</span></code>.</p>\n"
            },
            "class_visualshadernodetransformconstant": {
                "url": "https://docs.godotengine.org/en/4.1/classes/class_visualshadernodetransformconstant.html",
                "title": "VisualShaderNodeTransformConstant",
                "blurb": "<p><strong>Inherits:</strong> <a class=\"reference internal\" href=\"class_visualshadernodeconstant.html#class-visualshadernodeconstant\"><span class=\"std std-ref\">VisualShaderNodeConstant</span></a> <strong>&lt;</strong> <a class=\"reference internal\" href=\"class_visualshadernode.html#class-visualshadernode\"><span class=\"std std-ref\">VisualShaderNode</span></a> <strong>&lt;</strong> <a class=\"reference internal\" href=\"class_resource.html#class-resource\"><span class=\"std std-ref\">Resource</span></a> <strong>&lt;</strong> <a class=\"reference internal\" href=\"class_refcounted.html#class-refcounted\"><span class=\"std std-ref\">RefCounted</span></a> <strong>&lt;</strong> <a class=\"reference internal\" href=\"class_object.html#class-object\"><span class=\"std std-ref\">Object</span></a></p><p>A <a class=\"reference internal\" href=\"class_transform3d.html#class-transform3d\"><span class=\"std std-ref\">Transform3D</span></a> constant for use within the visual shader graph.</p>",
                "description": "\n\n<p>A constant <a class=\"reference internal\" href=\"class_transform3d.html#class-transform3d\"><span class=\"std std-ref\">Transform3D</span></a>, which can be used as an input node.</p>\n"
            },
            "class_visualshadernodetransformdecompose": {
                "url": "https://docs.godotengine.org/en/4.1/classes/class_visualshadernodetransformdecompose.html",
                "title": "VisualShaderNodeTransformDecompose",
                "blurb": "<p><strong>Inherits:</strong> <a class=\"reference internal\" href=\"class_visualshadernode.html#class-visualshadernode\"><span class=\"std std-ref\">VisualShaderNode</span></a> <strong>&lt;</strong> <a class=\"reference internal\" href=\"class_resource.html#class-resource\"><span class=\"std std-ref\">Resource</span></a> <strong>&lt;</strong> <a class=\"reference internal\" href=\"class_refcounted.html#class-refcounted\"><span class=\"std std-ref\">RefCounted</span></a> <strong>&lt;</strong> <a class=\"reference internal\" href=\"class_object.html#class-object\"><span class=\"std std-ref\">Object</span></a></p><p>Decomposes a <a class=\"reference internal\" href=\"class_transform3d.html#class-transform3d\"><span class=\"std std-ref\">Transform3D</span></a> into four <a class=\"reference internal\" href=\"class_vector3.html#class-vector3\"><span class=\"std std-ref\">Vector3</span></a>s within the visual shader graph.</p>",
                "description": "\n\n<p>Takes a 4x4 transform matrix and decomposes it into four <code class=\"docutils literal notranslate\"><span class=\"pre\">vec3</span></code> values, one from each row of the matrix.</p>\n"
            },
            "class_visualshadernodetransformfunc": {
                "url": "https://docs.godotengine.org/en/4.1/classes/class_visualshadernodetransformfunc.html",
                "title": "VisualShaderNodeTransformFunc",
                "blurb": "<p><strong>Inherits:</strong> <a class=\"reference internal\" href=\"class_visualshadernode.html#class-visualshadernode\"><span class=\"std std-ref\">VisualShaderNode</span></a> <strong>&lt;</strong> <a class=\"reference internal\" href=\"class_resource.html#class-resource\"><span class=\"std std-ref\">Resource</span></a> <strong>&lt;</strong> <a class=\"reference internal\" href=\"class_refcounted.html#class-refcounted\"><span class=\"std std-ref\">RefCounted</span></a> <strong>&lt;</strong> <a class=\"reference internal\" href=\"class_object.html#class-object\"><span class=\"std std-ref\">Object</span></a></p><p>Computes a <a class=\"reference internal\" href=\"class_transform3d.html#class-transform3d\"><span class=\"std std-ref\">Transform3D</span></a> function within the visual shader graph.</p>",
                "description": "\n\n<p>Computes an inverse or transpose function on the provided <a class=\"reference internal\" href=\"class_transform3d.html#class-transform3d\"><span class=\"std std-ref\">Transform3D</span></a>.</p>\n"
            },
            "class_visualshadernodetransformop": {
                "url": "https://docs.godotengine.org/en/4.1/classes/class_visualshadernodetransformop.html",
                "title": "VisualShaderNodeTransformOp",
                "blurb": "<p><strong>Inherits:</strong> <a class=\"reference internal\" href=\"class_visualshadernode.html#class-visualshadernode\"><span class=\"std std-ref\">VisualShaderNode</span></a> <strong>&lt;</strong> <a class=\"reference internal\" href=\"class_resource.html#class-resource\"><span class=\"std std-ref\">Resource</span></a> <strong>&lt;</strong> <a class=\"reference internal\" href=\"class_refcounted.html#class-refcounted\"><span class=\"std std-ref\">RefCounted</span></a> <strong>&lt;</strong> <a class=\"reference internal\" href=\"class_object.html#class-object\"><span class=\"std std-ref\">Object</span></a></p><p>A <a class=\"reference internal\" href=\"class_transform3d.html#class-transform3d\"><span class=\"std std-ref\">Transform3D</span></a> operator to be used within the visual shader graph.</p>",
                "description": "\n\n<p>Applies <a class=\"reference internal\" href=\"#class-visualshadernodetransformop-property-operator\"><span class=\"std std-ref\">operator</span></a> to two transform (4x4 matrices) inputs.</p>\n"
            },
            "class_visualshadernodetransformparameter": {
                "url": "https://docs.godotengine.org/en/4.1/classes/class_visualshadernodetransformparameter.html",
                "title": "VisualShaderNodeTransformParameter",
                "blurb": "<p><strong>Inherits:</strong> <a class=\"reference internal\" href=\"class_visualshadernodeparameter.html#class-visualshadernodeparameter\"><span class=\"std std-ref\">VisualShaderNodeParameter</span></a> <strong>&lt;</strong> <a class=\"reference internal\" href=\"class_visualshadernode.html#class-visualshadernode\"><span class=\"std std-ref\">VisualShaderNode</span></a> <strong>&lt;</strong> <a class=\"reference internal\" href=\"class_resource.html#class-resource\"><span class=\"std std-ref\">Resource</span></a> <strong>&lt;</strong> <a class=\"reference internal\" href=\"class_refcounted.html#class-refcounted\"><span class=\"std std-ref\">RefCounted</span></a> <strong>&lt;</strong> <a class=\"reference internal\" href=\"class_object.html#class-object\"><span class=\"std std-ref\">Object</span></a></p><p>A <a class=\"reference internal\" href=\"class_transform3d.html#class-transform3d\"><span class=\"std std-ref\">Transform3D</span></a> parameter for use within the visual shader graph.</p>",
                "description": "\n\n<p>Translated to <code class=\"docutils literal notranslate\"><span class=\"pre\">uniform</span> <span class=\"pre\">mat4</span></code> in the shader language.</p>\n"
            },
            "class_visualshadernodetransformvecmult": {
                "url": "https://docs.godotengine.org/en/4.1/classes/class_visualshadernodetransformvecmult.html",
                "title": "VisualShaderNodeTransformVecMult",
                "blurb": "<p><strong>Inherits:</strong> <a class=\"reference internal\" href=\"class_visualshadernode.html#class-visualshadernode\"><span class=\"std std-ref\">VisualShaderNode</span></a> <strong>&lt;</strong> <a class=\"reference internal\" href=\"class_resource.html#class-resource\"><span class=\"std std-ref\">Resource</span></a> <strong>&lt;</strong> <a class=\"reference internal\" href=\"class_refcounted.html#class-refcounted\"><span class=\"std std-ref\">RefCounted</span></a> <strong>&lt;</strong> <a class=\"reference internal\" href=\"class_object.html#class-object\"><span class=\"std std-ref\">Object</span></a></p><p>Multiplies a <a class=\"reference internal\" href=\"class_transform3d.html#class-transform3d\"><span class=\"std std-ref\">Transform3D</span></a> and a <a class=\"reference internal\" href=\"class_vector3.html#class-vector3\"><span class=\"std std-ref\">Vector3</span></a> within the visual shader graph.</p>",
                "description": "\n\n<p>A multiplication operation on a transform (4x4 matrix) and a vector, with support for different multiplication operators.</p>\n"
            },
            "class_visualshadernodeuintconstant": {
                "url": "https://docs.godotengine.org/en/4.1/classes/class_visualshadernodeuintconstant.html",
                "title": "VisualShaderNodeUIntConstant",
                "blurb": "<p><strong>Inherits:</strong> <a class=\"reference internal\" href=\"class_visualshadernodeconstant.html#class-visualshadernodeconstant\"><span class=\"std std-ref\">VisualShaderNodeConstant</span></a> <strong>&lt;</strong> <a class=\"reference internal\" href=\"class_visualshadernode.html#class-visualshadernode\"><span class=\"std std-ref\">VisualShaderNode</span></a> <strong>&lt;</strong> <a class=\"reference internal\" href=\"class_resource.html#class-resource\"><span class=\"std std-ref\">Resource</span></a> <strong>&lt;</strong> <a class=\"reference internal\" href=\"class_refcounted.html#class-refcounted\"><span class=\"std std-ref\">RefCounted</span></a> <strong>&lt;</strong> <a class=\"reference internal\" href=\"class_object.html#class-object\"><span class=\"std std-ref\">Object</span></a></p><p>An unsigned scalar integer constant to be used within the visual shader graph.</p>",
                "description": "\n\n<p>Translated to <code class=\"docutils literal notranslate\"><span class=\"pre\">uint</span></code> in the shader language.</p>\n"
            },
            "class_visualshadernodeuintfunc": {
                "url": "https://docs.godotengine.org/en/4.1/classes/class_visualshadernodeuintfunc.html",
                "title": "VisualShaderNodeUIntFunc",
                "blurb": "<p><strong>Inherits:</strong> <a class=\"reference internal\" href=\"class_visualshadernode.html#class-visualshadernode\"><span class=\"std std-ref\">VisualShaderNode</span></a> <strong>&lt;</strong> <a class=\"reference internal\" href=\"class_resource.html#class-resource\"><span class=\"std std-ref\">Resource</span></a> <strong>&lt;</strong> <a class=\"reference internal\" href=\"class_refcounted.html#class-refcounted\"><span class=\"std std-ref\">RefCounted</span></a> <strong>&lt;</strong> <a class=\"reference internal\" href=\"class_object.html#class-object\"><span class=\"std std-ref\">Object</span></a></p><p>An unsigned scalar integer function to be used within the visual shader graph.</p>",
                "description": "\n\n<p>Accept an unsigned integer scalar (<code class=\"docutils literal notranslate\"><span class=\"pre\">x</span></code>) to the input port and transform it according to <a class=\"reference internal\" href=\"#class-visualshadernodeuintfunc-property-function\"><span class=\"std std-ref\">function</span></a>.</p>\n"
            },
            "class_visualshadernodeuintop": {
                "url": "https://docs.godotengine.org/en/4.1/classes/class_visualshadernodeuintop.html",
                "title": "VisualShaderNodeUIntOp",
                "blurb": "<p><strong>Inherits:</strong> <a class=\"reference internal\" href=\"class_visualshadernode.html#class-visualshadernode\"><span class=\"std std-ref\">VisualShaderNode</span></a> <strong>&lt;</strong> <a class=\"reference internal\" href=\"class_resource.html#class-resource\"><span class=\"std std-ref\">Resource</span></a> <strong>&lt;</strong> <a class=\"reference internal\" href=\"class_refcounted.html#class-refcounted\"><span class=\"std std-ref\">RefCounted</span></a> <strong>&lt;</strong> <a class=\"reference internal\" href=\"class_object.html#class-object\"><span class=\"std std-ref\">Object</span></a></p><p>An unsigned integer scalar operator to be used within the visual shader graph.</p>",
                "description": "\n\n<p>Applies <a class=\"reference internal\" href=\"#class-visualshadernodeuintop-property-operator\"><span class=\"std std-ref\">operator</span></a> to two unsigned integer inputs: <code class=\"docutils literal notranslate\"><span class=\"pre\">a</span></code> and <code class=\"docutils literal notranslate\"><span class=\"pre\">b</span></code>.</p>\n"
            },
            "class_visualshadernodeuintparameter": {
                "url": "https://docs.godotengine.org/en/4.1/classes/class_visualshadernodeuintparameter.html",
                "title": "VisualShaderNodeUIntParameter",
                "blurb": "<p><strong>Inherits:</strong> <a class=\"reference internal\" href=\"class_visualshadernodeparameter.html#class-visualshadernodeparameter\"><span class=\"std std-ref\">VisualShaderNodeParameter</span></a> <strong>&lt;</strong> <a class=\"reference internal\" href=\"class_visualshadernode.html#class-visualshadernode\"><span class=\"std std-ref\">VisualShaderNode</span></a> <strong>&lt;</strong> <a class=\"reference internal\" href=\"class_resource.html#class-resource\"><span class=\"std std-ref\">Resource</span></a> <strong>&lt;</strong> <a class=\"reference internal\" href=\"class_refcounted.html#class-refcounted\"><span class=\"std std-ref\">RefCounted</span></a> <strong>&lt;</strong> <a class=\"reference internal\" href=\"class_object.html#class-object\"><span class=\"std std-ref\">Object</span></a></p><p>A visual shader node for shader parameter (uniform) of type unsigned <a class=\"reference internal\" href=\"class_int.html#class-int\"><span class=\"std std-ref\">int</span></a>.</p>",
                "description": "\n\n<p>A <a class=\"reference internal\" href=\"class_visualshadernodeparameter.html#class-visualshadernodeparameter\"><span class=\"std std-ref\">VisualShaderNodeParameter</span></a> of type unsigned <a class=\"reference internal\" href=\"class_int.html#class-int\"><span class=\"std std-ref\">int</span></a>. Offers additional customization for range of accepted values.</p>\n"
            },
            "class_visualshadernodeuvfunc": {
                "url": "https://docs.godotengine.org/en/4.1/classes/class_visualshadernodeuvfunc.html",
                "title": "VisualShaderNodeUVFunc",
                "blurb": "<p><strong>Inherits:</strong> <a class=\"reference internal\" href=\"class_visualshadernode.html#class-visualshadernode\"><span class=\"std std-ref\">VisualShaderNode</span></a> <strong>&lt;</strong> <a class=\"reference internal\" href=\"class_resource.html#class-resource\"><span class=\"std std-ref\">Resource</span></a> <strong>&lt;</strong> <a class=\"reference internal\" href=\"class_refcounted.html#class-refcounted\"><span class=\"std std-ref\">RefCounted</span></a> <strong>&lt;</strong> <a class=\"reference internal\" href=\"class_object.html#class-object\"><span class=\"std std-ref\">Object</span></a></p><p>Contains functions to modify texture coordinates (<code class=\"docutils literal notranslate\"><span class=\"pre\">uv</span></code>) to be used within the visual shader graph.</p>",
                "description": "\n\n<p>UV functions are similar to <a class=\"reference internal\" href=\"class_vector2.html#class-vector2\"><span class=\"std std-ref\">Vector2</span></a> functions, but the input port of this node uses the shader's UV value by default.</p>\n"
            },
            "class_visualshadernodeuvpolarcoord": {
                "url": "https://docs.godotengine.org/en/4.1/classes/class_visualshadernodeuvpolarcoord.html",
                "title": "VisualShaderNodeUVPolarCoord",
                "blurb": "<p><strong>Inherits:</strong> <a class=\"reference internal\" href=\"class_visualshadernode.html#class-visualshadernode\"><span class=\"std std-ref\">VisualShaderNode</span></a> <strong>&lt;</strong> <a class=\"reference internal\" href=\"class_resource.html#class-resource\"><span class=\"std std-ref\">Resource</span></a> <strong>&lt;</strong> <a class=\"reference internal\" href=\"class_refcounted.html#class-refcounted\"><span class=\"std std-ref\">RefCounted</span></a> <strong>&lt;</strong> <a class=\"reference internal\" href=\"class_object.html#class-object\"><span class=\"std std-ref\">Object</span></a></p><p>A visual shader node that modifies the texture UV using polar coordinates.</p>",
                "description": "\n\n<p>UV polar coord node will transform UV values into polar coordinates, with specified scale, zoom strength and repeat parameters. It can be used to create various swirl distortions.</p>\n"
            },
            "class_visualshadernodevarying": {
                "url": "https://docs.godotengine.org/en/4.1/classes/class_visualshadernodevarying.html",
                "title": "VisualShaderNodeVarying",
                "blurb": "<p><strong>Inherits:</strong> <a class=\"reference internal\" href=\"class_visualshadernode.html#class-visualshadernode\"><span class=\"std std-ref\">VisualShaderNode</span></a> <strong>&lt;</strong> <a class=\"reference internal\" href=\"class_resource.html#class-resource\"><span class=\"std std-ref\">Resource</span></a> <strong>&lt;</strong> <a class=\"reference internal\" href=\"class_refcounted.html#class-refcounted\"><span class=\"std std-ref\">RefCounted</span></a> <strong>&lt;</strong> <a class=\"reference internal\" href=\"class_object.html#class-object\"><span class=\"std std-ref\">Object</span></a></p><p><strong>Inherited By:</strong> <a class=\"reference internal\" href=\"class_visualshadernodevaryinggetter.html#class-visualshadernodevaryinggetter\"><span class=\"std std-ref\">VisualShaderNodeVaryingGetter</span></a>, <a class=\"reference internal\" href=\"class_visualshadernodevaryingsetter.html#class-visualshadernodevaryingsetter\"><span class=\"std std-ref\">VisualShaderNodeVaryingSetter</span></a></p><p>A visual shader node that represents a \"varying\" shader value.</p>",
                "description": "\n\n<p>Varying values are shader variables that can be passed between shader functions, e.g. from Vertex shader to Fragment shader.</p>\n"
            },
            "class_visualshadernodevaryinggetter": {
                "url": "https://docs.godotengine.org/en/4.1/classes/class_visualshadernodevaryinggetter.html",
                "title": "VisualShaderNodeVaryingGetter",
                "blurb": "<p><strong>Inherits:</strong> <a class=\"reference internal\" href=\"class_visualshadernodevarying.html#class-visualshadernodevarying\"><span class=\"std std-ref\">VisualShaderNodeVarying</span></a> <strong>&lt;</strong> <a class=\"reference internal\" href=\"class_visualshadernode.html#class-visualshadernode\"><span class=\"std std-ref\">VisualShaderNode</span></a> <strong>&lt;</strong> <a class=\"reference internal\" href=\"class_resource.html#class-resource\"><span class=\"std std-ref\">Resource</span></a> <strong>&lt;</strong> <a class=\"reference internal\" href=\"class_refcounted.html#class-refcounted\"><span class=\"std std-ref\">RefCounted</span></a> <strong>&lt;</strong> <a class=\"reference internal\" href=\"class_object.html#class-object\"><span class=\"std std-ref\">Object</span></a></p><p>A visual shader node that gets a value of a varying.</p>",
                "description": "\n\n<p>Outputs a value of a varying defined in the shader. You need to first create a varying that can be used in the given function, e.g. varying getter in Fragment shader requires a varying with mode set to <a class=\"reference internal\" href=\"class_visualshader.html#class-visualshader-constant-varying-mode-vertex-to-frag-light\"><span class=\"std std-ref\">VisualShader.VARYING_MODE_VERTEX_TO_FRAG_LIGHT</span></a>.</p>\n"
            },
            "class_visualshadernodevaryingsetter": {
                "url": "https://docs.godotengine.org/en/4.1/classes/class_visualshadernodevaryingsetter.html",
                "title": "VisualShaderNodeVaryingSetter",
                "blurb": "<p><strong>Inherits:</strong> <a class=\"reference internal\" href=\"class_visualshadernodevarying.html#class-visualshadernodevarying\"><span class=\"std std-ref\">VisualShaderNodeVarying</span></a> <strong>&lt;</strong> <a class=\"reference internal\" href=\"class_visualshadernode.html#class-visualshadernode\"><span class=\"std std-ref\">VisualShaderNode</span></a> <strong>&lt;</strong> <a class=\"reference internal\" href=\"class_resource.html#class-resource\"><span class=\"std std-ref\">Resource</span></a> <strong>&lt;</strong> <a class=\"reference internal\" href=\"class_refcounted.html#class-refcounted\"><span class=\"std std-ref\">RefCounted</span></a> <strong>&lt;</strong> <a class=\"reference internal\" href=\"class_object.html#class-object\"><span class=\"std std-ref\">Object</span></a></p><p>A visual shader node that sets a value of a varying.</p>",
                "description": "\n\n<p>Inputs a value to a varying defined in the shader. You need to first create a varying that can be used in the given function, e.g. varying setter in Fragment shader requires a varying with mode set to <a class=\"reference internal\" href=\"class_visualshader.html#class-visualshader-constant-varying-mode-frag-to-light\"><span class=\"std std-ref\">VisualShader.VARYING_MODE_FRAG_TO_LIGHT</span></a>.</p>\n"
            },
            "class_visualshadernodevec2constant": {
                "url": "https://docs.godotengine.org/en/4.1/classes/class_visualshadernodevec2constant.html",
                "title": "VisualShaderNodeVec2Constant",
                "blurb": "<p><strong>Inherits:</strong> <a class=\"reference internal\" href=\"class_visualshadernodeconstant.html#class-visualshadernodeconstant\"><span class=\"std std-ref\">VisualShaderNodeConstant</span></a> <strong>&lt;</strong> <a class=\"reference internal\" href=\"class_visualshadernode.html#class-visualshadernode\"><span class=\"std std-ref\">VisualShaderNode</span></a> <strong>&lt;</strong> <a class=\"reference internal\" href=\"class_resource.html#class-resource\"><span class=\"std std-ref\">Resource</span></a> <strong>&lt;</strong> <a class=\"reference internal\" href=\"class_refcounted.html#class-refcounted\"><span class=\"std std-ref\">RefCounted</span></a> <strong>&lt;</strong> <a class=\"reference internal\" href=\"class_object.html#class-object\"><span class=\"std std-ref\">Object</span></a></p><p>A <a class=\"reference internal\" href=\"class_vector2.html#class-vector2\"><span class=\"std std-ref\">Vector2</span></a> constant to be used within the visual shader graph.</p>",
                "description": "\n\n<p>A constant <a class=\"reference internal\" href=\"class_vector2.html#class-vector2\"><span class=\"std std-ref\">Vector2</span></a>, which can be used as an input node.</p>\n"
            },
            "class_visualshadernodevec2parameter": {
                "url": "https://docs.godotengine.org/en/4.1/classes/class_visualshadernodevec2parameter.html",
                "title": "VisualShaderNodeVec2Parameter",
                "blurb": "<p><strong>Inherits:</strong> <a class=\"reference internal\" href=\"class_visualshadernodeparameter.html#class-visualshadernodeparameter\"><span class=\"std std-ref\">VisualShaderNodeParameter</span></a> <strong>&lt;</strong> <a class=\"reference internal\" href=\"class_visualshadernode.html#class-visualshadernode\"><span class=\"std std-ref\">VisualShaderNode</span></a> <strong>&lt;</strong> <a class=\"reference internal\" href=\"class_resource.html#class-resource\"><span class=\"std std-ref\">Resource</span></a> <strong>&lt;</strong> <a class=\"reference internal\" href=\"class_refcounted.html#class-refcounted\"><span class=\"std std-ref\">RefCounted</span></a> <strong>&lt;</strong> <a class=\"reference internal\" href=\"class_object.html#class-object\"><span class=\"std std-ref\">Object</span></a></p><p>A <a class=\"reference internal\" href=\"class_vector2.html#class-vector2\"><span class=\"std std-ref\">Vector2</span></a> parameter to be used within the visual shader graph.</p>",
                "description": "\n\n<p>Translated to <code class=\"docutils literal notranslate\"><span class=\"pre\">uniform</span> <span class=\"pre\">vec2</span></code> in the shader language.</p>\n"
            },
            "class_visualshadernodevec3constant": {
                "url": "https://docs.godotengine.org/en/4.1/classes/class_visualshadernodevec3constant.html",
                "title": "VisualShaderNodeVec3Constant",
                "blurb": "<p><strong>Inherits:</strong> <a class=\"reference internal\" href=\"class_visualshadernodeconstant.html#class-visualshadernodeconstant\"><span class=\"std std-ref\">VisualShaderNodeConstant</span></a> <strong>&lt;</strong> <a class=\"reference internal\" href=\"class_visualshadernode.html#class-visualshadernode\"><span class=\"std std-ref\">VisualShaderNode</span></a> <strong>&lt;</strong> <a class=\"reference internal\" href=\"class_resource.html#class-resource\"><span class=\"std std-ref\">Resource</span></a> <strong>&lt;</strong> <a class=\"reference internal\" href=\"class_refcounted.html#class-refcounted\"><span class=\"std std-ref\">RefCounted</span></a> <strong>&lt;</strong> <a class=\"reference internal\" href=\"class_object.html#class-object\"><span class=\"std std-ref\">Object</span></a></p><p>A <a class=\"reference internal\" href=\"class_vector3.html#class-vector3\"><span class=\"std std-ref\">Vector3</span></a> constant to be used within the visual shader graph.</p>",
                "description": "\n\n<p>A constant <a class=\"reference internal\" href=\"class_vector3.html#class-vector3\"><span class=\"std std-ref\">Vector3</span></a>, which can be used as an input node.</p>\n"
            },
            "class_visualshadernodevec3parameter": {
                "url": "https://docs.godotengine.org/en/4.1/classes/class_visualshadernodevec3parameter.html",
                "title": "VisualShaderNodeVec3Parameter",
                "blurb": "<p><strong>Inherits:</strong> <a class=\"reference internal\" href=\"class_visualshadernodeparameter.html#class-visualshadernodeparameter\"><span class=\"std std-ref\">VisualShaderNodeParameter</span></a> <strong>&lt;</strong> <a class=\"reference internal\" href=\"class_visualshadernode.html#class-visualshadernode\"><span class=\"std std-ref\">VisualShaderNode</span></a> <strong>&lt;</strong> <a class=\"reference internal\" href=\"class_resource.html#class-resource\"><span class=\"std std-ref\">Resource</span></a> <strong>&lt;</strong> <a class=\"reference internal\" href=\"class_refcounted.html#class-refcounted\"><span class=\"std std-ref\">RefCounted</span></a> <strong>&lt;</strong> <a class=\"reference internal\" href=\"class_object.html#class-object\"><span class=\"std std-ref\">Object</span></a></p><p>A <a class=\"reference internal\" href=\"class_vector3.html#class-vector3\"><span class=\"std std-ref\">Vector3</span></a> parameter to be used within the visual shader graph.</p>",
                "description": "\n\n<p>Translated to <code class=\"docutils literal notranslate\"><span class=\"pre\">uniform</span> <span class=\"pre\">vec3</span></code> in the shader language.</p>\n"
            },
            "class_visualshadernodevec4constant": {
                "url": "https://docs.godotengine.org/en/4.1/classes/class_visualshadernodevec4constant.html",
                "title": "VisualShaderNodeVec4Constant",
                "blurb": "<p><strong>Inherits:</strong> <a class=\"reference internal\" href=\"class_visualshadernodeconstant.html#class-visualshadernodeconstant\"><span class=\"std std-ref\">VisualShaderNodeConstant</span></a> <strong>&lt;</strong> <a class=\"reference internal\" href=\"class_visualshadernode.html#class-visualshadernode\"><span class=\"std std-ref\">VisualShaderNode</span></a> <strong>&lt;</strong> <a class=\"reference internal\" href=\"class_resource.html#class-resource\"><span class=\"std std-ref\">Resource</span></a> <strong>&lt;</strong> <a class=\"reference internal\" href=\"class_refcounted.html#class-refcounted\"><span class=\"std std-ref\">RefCounted</span></a> <strong>&lt;</strong> <a class=\"reference internal\" href=\"class_object.html#class-object\"><span class=\"std std-ref\">Object</span></a></p><p>A 4D vector constant to be used within the visual shader graph.</p>",
                "description": "\n\n<p>A constant 4D vector, which can be used as an input node.</p>\n"
            },
            "class_visualshadernodevec4parameter": {
                "url": "https://docs.godotengine.org/en/4.1/classes/class_visualshadernodevec4parameter.html",
                "title": "VisualShaderNodeVec4Parameter",
                "blurb": "<p><strong>Inherits:</strong> <a class=\"reference internal\" href=\"class_visualshadernodeparameter.html#class-visualshadernodeparameter\"><span class=\"std std-ref\">VisualShaderNodeParameter</span></a> <strong>&lt;</strong> <a class=\"reference internal\" href=\"class_visualshadernode.html#class-visualshadernode\"><span class=\"std std-ref\">VisualShaderNode</span></a> <strong>&lt;</strong> <a class=\"reference internal\" href=\"class_resource.html#class-resource\"><span class=\"std std-ref\">Resource</span></a> <strong>&lt;</strong> <a class=\"reference internal\" href=\"class_refcounted.html#class-refcounted\"><span class=\"std std-ref\">RefCounted</span></a> <strong>&lt;</strong> <a class=\"reference internal\" href=\"class_object.html#class-object\"><span class=\"std std-ref\">Object</span></a></p><p>A 4D vector parameter to be used within the visual shader graph.</p>",
                "description": "\n\n<p>Translated to <code class=\"docutils literal notranslate\"><span class=\"pre\">uniform</span> <span class=\"pre\">vec4</span></code> in the shader language.</p>\n"
            },
            "class_visualshadernodevectorbase": {
                "url": "https://docs.godotengine.org/en/4.1/classes/class_visualshadernodevectorbase.html",
                "title": "VisualShaderNodeVectorBase",
                "blurb": "<p><strong>Inherits:</strong> <a class=\"reference internal\" href=\"class_visualshadernode.html#class-visualshadernode\"><span class=\"std std-ref\">VisualShaderNode</span></a> <strong>&lt;</strong> <a class=\"reference internal\" href=\"class_resource.html#class-resource\"><span class=\"std std-ref\">Resource</span></a> <strong>&lt;</strong> <a class=\"reference internal\" href=\"class_refcounted.html#class-refcounted\"><span class=\"std std-ref\">RefCounted</span></a> <strong>&lt;</strong> <a class=\"reference internal\" href=\"class_object.html#class-object\"><span class=\"std std-ref\">Object</span></a></p><p><strong>Inherited By:</strong> <a class=\"reference internal\" href=\"class_visualshadernodefaceforward.html#class-visualshadernodefaceforward\"><span class=\"std std-ref\">VisualShaderNodeFaceForward</span></a>, <a class=\"reference internal\" href=\"class_visualshadernodevectorcompose.html#class-visualshadernodevectorcompose\"><span class=\"std std-ref\">VisualShaderNodeVectorCompose</span></a>, <a class=\"reference internal\" href=\"class_visualshadernodevectordecompose.html#class-visualshadernodevectordecompose\"><span class=\"std std-ref\">VisualShaderNodeVectorDecompose</span></a>, <a class=\"reference internal\" href=\"class_visualshadernodevectordistance.html#class-visualshadernodevectordistance\"><span class=\"std std-ref\">VisualShaderNodeVectorDistance</span></a>, <a class=\"reference internal\" href=\"class_visualshadernodevectorfunc.html#class-visualshadernodevectorfunc\"><span class=\"std std-ref\">VisualShaderNodeVectorFunc</span></a>, <a class=\"reference internal\" href=\"class_visualshadernodevectorlen.html#class-visualshadernodevectorlen\"><span class=\"std std-ref\">VisualShaderNodeVectorLen</span></a>, <a class=\"reference internal\" href=\"class_visualshadernodevectorop.html#class-visualshadernodevectorop\"><span class=\"std std-ref\">VisualShaderNodeVectorOp</span></a>, <a class=\"reference internal\" href=\"class_visualshadernodevectorrefract.html#class-visualshadernodevectorrefract\"><span class=\"std std-ref\">VisualShaderNodeVectorRefract</span></a></p><p>A base type for the nodes that perform vector operations within the visual shader graph.</p>",
                "description": "\n\n<p>This is an abstract class. See the derived types for descriptions of the possible operations.</p>\n"
            },
            "class_visualshadernodevectorcompose": {
                "url": "https://docs.godotengine.org/en/4.1/classes/class_visualshadernodevectorcompose.html",
                "title": "VisualShaderNodeVectorCompose",
                "blurb": "<p><strong>Inherits:</strong> <a class=\"reference internal\" href=\"class_visualshadernodevectorbase.html#class-visualshadernodevectorbase\"><span class=\"std std-ref\">VisualShaderNodeVectorBase</span></a> <strong>&lt;</strong> <a class=\"reference internal\" href=\"class_visualshadernode.html#class-visualshadernode\"><span class=\"std std-ref\">VisualShaderNode</span></a> <strong>&lt;</strong> <a class=\"reference internal\" href=\"class_resource.html#class-resource\"><span class=\"std std-ref\">Resource</span></a> <strong>&lt;</strong> <a class=\"reference internal\" href=\"class_refcounted.html#class-refcounted\"><span class=\"std std-ref\">RefCounted</span></a> <strong>&lt;</strong> <a class=\"reference internal\" href=\"class_object.html#class-object\"><span class=\"std std-ref\">Object</span></a></p><p>Composes a <a class=\"reference internal\" href=\"class_vector2.html#class-vector2\"><span class=\"std std-ref\">Vector2</span></a>, <a class=\"reference internal\" href=\"class_vector3.html#class-vector3\"><span class=\"std std-ref\">Vector3</span></a> or 4D vector (represented as a <a class=\"reference internal\" href=\"class_quaternion.html#class-quaternion\"><span class=\"std std-ref\">Quaternion</span></a>) from scalars within the visual shader graph.</p>",
                "description": "\n\n<p>Creates a <code class=\"docutils literal notranslate\"><span class=\"pre\">vec2</span></code>, <code class=\"docutils literal notranslate\"><span class=\"pre\">vec3</span></code> or <code class=\"docutils literal notranslate\"><span class=\"pre\">vec4</span></code> using scalar values that can be provided from separate inputs.</p>\n"
            },
            "class_visualshadernodevectordecompose": {
                "url": "https://docs.godotengine.org/en/4.1/classes/class_visualshadernodevectordecompose.html",
                "title": "VisualShaderNodeVectorDecompose",
                "blurb": "<p><strong>Inherits:</strong> <a class=\"reference internal\" href=\"class_visualshadernodevectorbase.html#class-visualshadernodevectorbase\"><span class=\"std std-ref\">VisualShaderNodeVectorBase</span></a> <strong>&lt;</strong> <a class=\"reference internal\" href=\"class_visualshadernode.html#class-visualshadernode\"><span class=\"std std-ref\">VisualShaderNode</span></a> <strong>&lt;</strong> <a class=\"reference internal\" href=\"class_resource.html#class-resource\"><span class=\"std std-ref\">Resource</span></a> <strong>&lt;</strong> <a class=\"reference internal\" href=\"class_refcounted.html#class-refcounted\"><span class=\"std std-ref\">RefCounted</span></a> <strong>&lt;</strong> <a class=\"reference internal\" href=\"class_object.html#class-object\"><span class=\"std std-ref\">Object</span></a></p><p>Decomposes a <a class=\"reference internal\" href=\"class_vector2.html#class-vector2\"><span class=\"std std-ref\">Vector2</span></a>, <a class=\"reference internal\" href=\"class_vector3.html#class-vector3\"><span class=\"std std-ref\">Vector3</span></a> or 4D vector (represented as a <a class=\"reference internal\" href=\"class_quaternion.html#class-quaternion\"><span class=\"std std-ref\">Quaternion</span></a>) into scalars within the visual shader graph.</p>",
                "description": "\n\n<p>Takes a <code class=\"docutils literal notranslate\"><span class=\"pre\">vec2</span></code>, <code class=\"docutils literal notranslate\"><span class=\"pre\">vec3</span></code> or <code class=\"docutils literal notranslate\"><span class=\"pre\">vec4</span></code> and decomposes it into scalar values that can be used as separate outputs.</p>\n"
            },
            "class_visualshadernodevectordistance": {
                "url": "https://docs.godotengine.org/en/4.1/classes/class_visualshadernodevectordistance.html",
                "title": "VisualShaderNodeVectorDistance",
                "blurb": "<p><strong>Inherits:</strong> <a class=\"reference internal\" href=\"class_visualshadernodevectorbase.html#class-visualshadernodevectorbase\"><span class=\"std std-ref\">VisualShaderNodeVectorBase</span></a> <strong>&lt;</strong> <a class=\"reference internal\" href=\"class_visualshadernode.html#class-visualshadernode\"><span class=\"std std-ref\">VisualShaderNode</span></a> <strong>&lt;</strong> <a class=\"reference internal\" href=\"class_resource.html#class-resource\"><span class=\"std std-ref\">Resource</span></a> <strong>&lt;</strong> <a class=\"reference internal\" href=\"class_refcounted.html#class-refcounted\"><span class=\"std std-ref\">RefCounted</span></a> <strong>&lt;</strong> <a class=\"reference internal\" href=\"class_object.html#class-object\"><span class=\"std std-ref\">Object</span></a></p><p>Returns the distance between two points. To be used within the visual shader graph.</p>",
                "description": "\n\n<p>Calculates distance from point represented by vector <code class=\"docutils literal notranslate\"><span class=\"pre\">p0</span></code> to vector <code class=\"docutils literal notranslate\"><span class=\"pre\">p1</span></code>.</p>\n<p>Translated to <code class=\"docutils literal notranslate\"><span class=\"pre\">distance(p0,</span> <span class=\"pre\">p1)</span></code> in the shader language.</p>\n"
            },
            "class_visualshadernodevectorfunc": {
                "url": "https://docs.godotengine.org/en/4.1/classes/class_visualshadernodevectorfunc.html",
                "title": "VisualShaderNodeVectorFunc",
                "blurb": "<p><strong>Inherits:</strong> <a class=\"reference internal\" href=\"class_visualshadernodevectorbase.html#class-visualshadernodevectorbase\"><span class=\"std std-ref\">VisualShaderNodeVectorBase</span></a> <strong>&lt;</strong> <a class=\"reference internal\" href=\"class_visualshadernode.html#class-visualshadernode\"><span class=\"std std-ref\">VisualShaderNode</span></a> <strong>&lt;</strong> <a class=\"reference internal\" href=\"class_resource.html#class-resource\"><span class=\"std std-ref\">Resource</span></a> <strong>&lt;</strong> <a class=\"reference internal\" href=\"class_refcounted.html#class-refcounted\"><span class=\"std std-ref\">RefCounted</span></a> <strong>&lt;</strong> <a class=\"reference internal\" href=\"class_object.html#class-object\"><span class=\"std std-ref\">Object</span></a></p><p>A vector function to be used within the visual shader graph.</p>",
                "description": "\n\n<p>A visual shader node able to perform different functions using vectors.</p>\n"
            },
            "class_visualshadernodevectorlen": {
                "url": "https://docs.godotengine.org/en/4.1/classes/class_visualshadernodevectorlen.html",
                "title": "VisualShaderNodeVectorLen",
                "blurb": "<p><strong>Inherits:</strong> <a class=\"reference internal\" href=\"class_visualshadernodevectorbase.html#class-visualshadernodevectorbase\"><span class=\"std std-ref\">VisualShaderNodeVectorBase</span></a> <strong>&lt;</strong> <a class=\"reference internal\" href=\"class_visualshadernode.html#class-visualshadernode\"><span class=\"std std-ref\">VisualShaderNode</span></a> <strong>&lt;</strong> <a class=\"reference internal\" href=\"class_resource.html#class-resource\"><span class=\"std std-ref\">Resource</span></a> <strong>&lt;</strong> <a class=\"reference internal\" href=\"class_refcounted.html#class-refcounted\"><span class=\"std std-ref\">RefCounted</span></a> <strong>&lt;</strong> <a class=\"reference internal\" href=\"class_object.html#class-object\"><span class=\"std std-ref\">Object</span></a></p><p>Returns the length of a <a class=\"reference internal\" href=\"class_vector3.html#class-vector3\"><span class=\"std std-ref\">Vector3</span></a> within the visual shader graph.</p>",
                "description": "\n\n<p>Translated to <code class=\"docutils literal notranslate\"><span class=\"pre\">length(p0)</span></code> in the shader language.</p>\n"
            },
            "class_visualshadernodevectorop": {
                "url": "https://docs.godotengine.org/en/4.1/classes/class_visualshadernodevectorop.html",
                "title": "VisualShaderNodeVectorOp",
                "blurb": "<p><strong>Inherits:</strong> <a class=\"reference internal\" href=\"class_visualshadernodevectorbase.html#class-visualshadernodevectorbase\"><span class=\"std std-ref\">VisualShaderNodeVectorBase</span></a> <strong>&lt;</strong> <a class=\"reference internal\" href=\"class_visualshadernode.html#class-visualshadernode\"><span class=\"std std-ref\">VisualShaderNode</span></a> <strong>&lt;</strong> <a class=\"reference internal\" href=\"class_resource.html#class-resource\"><span class=\"std std-ref\">Resource</span></a> <strong>&lt;</strong> <a class=\"reference internal\" href=\"class_refcounted.html#class-refcounted\"><span class=\"std std-ref\">RefCounted</span></a> <strong>&lt;</strong> <a class=\"reference internal\" href=\"class_object.html#class-object\"><span class=\"std std-ref\">Object</span></a></p><p>A vector operator to be used within the visual shader graph.</p>",
                "description": "\n\n<p>A visual shader node for use of vector operators. Operates on vector <code class=\"docutils literal notranslate\"><span class=\"pre\">a</span></code> and vector <code class=\"docutils literal notranslate\"><span class=\"pre\">b</span></code>.</p>\n"
            },
            "class_visualshadernodevectorrefract": {
                "url": "https://docs.godotengine.org/en/4.1/classes/class_visualshadernodevectorrefract.html",
                "title": "VisualShaderNodeVectorRefract",
                "blurb": "<p><strong>Inherits:</strong> <a class=\"reference internal\" href=\"class_visualshadernodevectorbase.html#class-visualshadernodevectorbase\"><span class=\"std std-ref\">VisualShaderNodeVectorBase</span></a> <strong>&lt;</strong> <a class=\"reference internal\" href=\"class_visualshadernode.html#class-visualshadernode\"><span class=\"std std-ref\">VisualShaderNode</span></a> <strong>&lt;</strong> <a class=\"reference internal\" href=\"class_resource.html#class-resource\"><span class=\"std std-ref\">Resource</span></a> <strong>&lt;</strong> <a class=\"reference internal\" href=\"class_refcounted.html#class-refcounted\"><span class=\"std std-ref\">RefCounted</span></a> <strong>&lt;</strong> <a class=\"reference internal\" href=\"class_object.html#class-object\"><span class=\"std std-ref\">Object</span></a></p><p>Returns the vector that points in the direction of refraction. For use within the visual shader graph.</p>",
                "description": "\n\n<p>Translated to <code class=\"docutils literal notranslate\"><span class=\"pre\">refract(I,</span> <span class=\"pre\">N,</span> <span class=\"pre\">eta)</span></code> in the shader language, where <code class=\"docutils literal notranslate\"><span class=\"pre\">I</span></code> is the incident vector, <code class=\"docutils literal notranslate\"><span class=\"pre\">N</span></code> is the normal vector and <code class=\"docutils literal notranslate\"><span class=\"pre\">eta</span></code> is the ratio of the indices of the refraction.</p>\n"
            },
            "class_voxelgidata": {
                "url": "https://docs.godotengine.org/en/4.1/classes/class_voxelgidata.html",
                "title": "VoxelGIData",
                "blurb": "<p><strong>Inherits:</strong> <a class=\"reference internal\" href=\"class_resource.html#class-resource\"><span class=\"std std-ref\">Resource</span></a> <strong>&lt;</strong> <a class=\"reference internal\" href=\"class_refcounted.html#class-refcounted\"><span class=\"std std-ref\">RefCounted</span></a> <strong>&lt;</strong> <a class=\"reference internal\" href=\"class_object.html#class-object\"><span class=\"std std-ref\">Object</span></a></p><p>Contains baked voxel global illumination data for use in a <a class=\"reference internal\" href=\"class_voxelgi.html#class-voxelgi\"><span class=\"std std-ref\">VoxelGI</span></a> node.</p>",
                "description": "\n\n<p><strong>VoxelGIData</strong> contains baked voxel global illumination for use in a <a class=\"reference internal\" href=\"class_voxelgi.html#class-voxelgi\"><span class=\"std std-ref\">VoxelGI</span></a> node. <strong>VoxelGIData</strong> also offers several properties to adjust the final appearance of the global illumination. These properties can be adjusted at run-time without having to bake the <a class=\"reference internal\" href=\"class_voxelgi.html#class-voxelgi\"><span class=\"std std-ref\">VoxelGI</span></a> node again.</p>\n<p><strong>Note:</strong> To prevent text-based scene files (<code class=\"docutils literal notranslate\"><span class=\"pre\">.tscn</span></code>) from growing too much and becoming slow to load and save, always save <strong>VoxelGIData</strong> to an external binary resource file (<code class=\"docutils literal notranslate\"><span class=\"pre\">.res</span></code>) instead of embedding it within the scene. This can be done by clicking the dropdown arrow next to the <strong>VoxelGIData</strong> resource, choosing <strong>Edit</strong>, clicking the floppy disk icon at the top of the Inspector then choosing <strong>Save As...</strong>.</p>\n"
            },
            "class_world2d": {
                "url": "https://docs.godotengine.org/en/4.1/classes/class_world2d.html",
                "title": "World2D",
                "blurb": "<p><strong>Inherits:</strong> <a class=\"reference internal\" href=\"class_resource.html#class-resource\"><span class=\"std std-ref\">Resource</span></a> <strong>&lt;</strong> <a class=\"reference internal\" href=\"class_refcounted.html#class-refcounted\"><span class=\"std std-ref\">RefCounted</span></a> <strong>&lt;</strong> <a class=\"reference internal\" href=\"class_object.html#class-object\"><span class=\"std std-ref\">Object</span></a></p><p>A resource that holds all components of a 2D world, such as a canvas and a physics space.</p>",
                "description": "\n\n<p>Class that has everything pertaining to a 2D world: A physics space, a canvas, and a sound space. 2D nodes register their resources into the current 2D world.</p>\n"
            },
            "class_world3d": {
                "url": "https://docs.godotengine.org/en/4.1/classes/class_world3d.html",
                "title": "World3D",
                "blurb": "<p><strong>Inherits:</strong> <a class=\"reference internal\" href=\"class_resource.html#class-resource\"><span class=\"std std-ref\">Resource</span></a> <strong>&lt;</strong> <a class=\"reference internal\" href=\"class_refcounted.html#class-refcounted\"><span class=\"std std-ref\">RefCounted</span></a> <strong>&lt;</strong> <a class=\"reference internal\" href=\"class_object.html#class-object\"><span class=\"std std-ref\">Object</span></a></p><p>A resource that holds all components of a 3D world, such as a visual scenario and a physics space.</p>",
                "description": "\n\n<p>Class that has everything pertaining to a world: A physics space, a visual scenario, and a sound space. 3D nodes register their resources into the current 3D world.</p>\n"
            },
            "class_worldboundaryshape2d": {
                "url": "https://docs.godotengine.org/en/4.1/classes/class_worldboundaryshape2d.html",
                "title": "WorldBoundaryShape2D",
                "blurb": "<p><strong>Inherits:</strong> <a class=\"reference internal\" href=\"class_shape2d.html#class-shape2d\"><span class=\"std std-ref\">Shape2D</span></a> <strong>&lt;</strong> <a class=\"reference internal\" href=\"class_resource.html#class-resource\"><span class=\"std std-ref\">Resource</span></a> <strong>&lt;</strong> <a class=\"reference internal\" href=\"class_refcounted.html#class-refcounted\"><span class=\"std std-ref\">RefCounted</span></a> <strong>&lt;</strong> <a class=\"reference internal\" href=\"class_object.html#class-object\"><span class=\"std std-ref\">Object</span></a></p><p>A 2D world boundary (half-plane) shape used for physics collision.</p>",
                "description": "\n\n<p>A 2D world boundary shape, intended for use in physics. <strong>WorldBoundaryShape2D</strong> works like an infinite straight line that forces all physics bodies to stay above it. The line's normal determines which direction is considered as \"above\" and in the editor, the smaller line over it represents this direction. It can for example be used for endless flat floors.</p>\n"
            },
            "class_worldboundaryshape3d": {
                "url": "https://docs.godotengine.org/en/4.1/classes/class_worldboundaryshape3d.html",
                "title": "WorldBoundaryShape3D",
                "blurb": "<p><strong>Inherits:</strong> <a class=\"reference internal\" href=\"class_shape3d.html#class-shape3d\"><span class=\"std std-ref\">Shape3D</span></a> <strong>&lt;</strong> <a class=\"reference internal\" href=\"class_resource.html#class-resource\"><span class=\"std std-ref\">Resource</span></a> <strong>&lt;</strong> <a class=\"reference internal\" href=\"class_refcounted.html#class-refcounted\"><span class=\"std std-ref\">RefCounted</span></a> <strong>&lt;</strong> <a class=\"reference internal\" href=\"class_object.html#class-object\"><span class=\"std std-ref\">Object</span></a></p><p>A 3D world boundary (half-space) shape used for physics collision.</p>",
                "description": "\n\n<p>A 3D world boundary shape, intended for use in physics. <strong>WorldBoundaryShape3D</strong> works like an infinite plane that forces all physics bodies to stay above it. The <a class=\"reference internal\" href=\"#class-worldboundaryshape3d-property-plane\"><span class=\"std std-ref\">plane</span></a>'s normal determines which direction is considered as \"above\" and in the editor, the line over the plane represents this direction. It can for example be used for endless flat floors.</p>\n"
            },
            "class_x509certificate": {
                "url": "https://docs.godotengine.org/en/4.1/classes/class_x509certificate.html",
                "title": "X509Certificate",
                "blurb": "<p><strong>Inherits:</strong> <a class=\"reference internal\" href=\"class_resource.html#class-resource\"><span class=\"std std-ref\">Resource</span></a> <strong>&lt;</strong> <a class=\"reference internal\" href=\"class_refcounted.html#class-refcounted\"><span class=\"std std-ref\">RefCounted</span></a> <strong>&lt;</strong> <a class=\"reference internal\" href=\"class_object.html#class-object\"><span class=\"std std-ref\">Object</span></a></p><p>An X509 certificate (e.g. for TLS).</p>",
                "description": "\n\n<p>The X509Certificate class represents an X509 certificate. Certificates can be loaded and saved like any other <a class=\"reference internal\" href=\"class_resource.html#class-resource\"><span class=\"std std-ref\">Resource</span></a>.</p>\n<p>They can be used as the server certificate in <a class=\"reference internal\" href=\"class_streampeertls.html#class-streampeertls-method-accept-stream\"><span class=\"std std-ref\">StreamPeerTLS.accept_stream</span></a> (along with the proper <a class=\"reference internal\" href=\"class_cryptokey.html#class-cryptokey\"><span class=\"std std-ref\">CryptoKey</span></a>), and to specify the only certificate that should be accepted when connecting to a TLS server via <a class=\"reference internal\" href=\"class_streampeertls.html#class-streampeertls-method-connect-to-stream\"><span class=\"std std-ref\">StreamPeerTLS.connect_to_stream</span></a>.</p>\n"
            },
            "class_object": {
                "url": "https://docs.godotengine.org/en/4.1/classes/class_object.html",
                "title": "Object",
                "blurb": "<p><strong>Inherited By:</strong> <a class=\"reference internal\" href=\"class_audioserver.html#class-audioserver\"><span class=\"std std-ref\">AudioServer</span></a>, <a class=\"reference internal\" href=\"class_cameraserver.html#class-cameraserver\"><span class=\"std std-ref\">CameraServer</span></a>, <a class=\"reference internal\" href=\"class_classdb.html#class-classdb\"><span class=\"std std-ref\">ClassDB</span></a>, <a class=\"reference internal\" href=\"class_displayserver.html#class-displayserver\"><span class=\"std std-ref\">DisplayServer</span></a>, <a class=\"reference internal\" href=\"class_editorfilesystemdirectory.html#class-editorfilesystemdirectory\"><span class=\"std std-ref\">EditorFileSystemDirectory</span></a>, <a class=\"reference internal\" href=\"class_editorinterface.html#class-editorinterface\"><span class=\"std std-ref\">EditorInterface</span></a>, <a class=\"reference internal\" href=\"class_editorpaths.html#class-editorpaths\"><span class=\"std std-ref\">EditorPaths</span></a>, <a class=\"reference internal\" href=\"class_editorselection.html#class-editorselection\"><span class=\"std std-ref\">EditorSelection</span></a>, <a class=\"reference internal\" href=\"class_editorundoredomanager.html#class-editorundoredomanager\"><span class=\"std std-ref\">EditorUndoRedoManager</span></a>, <a class=\"reference internal\" href=\"class_editorvcsinterface.html#class-editorvcsinterface\"><span class=\"std std-ref\">EditorVCSInterface</span></a>, <a class=\"reference internal\" href=\"class_engine.html#class-engine\"><span class=\"std std-ref\">Engine</span></a>, <a class=\"reference internal\" href=\"class_enginedebugger.html#class-enginedebugger\"><span class=\"std std-ref\">EngineDebugger</span></a>, <a class=\"reference internal\" href=\"class_gdextensionmanager.html#class-gdextensionmanager\"><span class=\"std std-ref\">GDExtensionManager</span></a>, <a class=\"reference internal\" href=\"class_geometry2d.html#class-geometry2d\"><span class=\"std std-ref\">Geometry2D</span></a>, <a class=\"reference internal\" href=\"class_geometry3d.html#class-geometry3d\"><span class=\"std std-ref\">Geometry3D</span></a>, <a class=\"reference internal\" href=\"class_godotsharp.html#class-godotsharp\"><span class=\"std std-ref\">GodotSharp</span></a>, <a class=\"reference internal\" href=\"class_input.html#class-input\"><span class=\"std std-ref\">Input</span></a>, <a class=\"reference internal\" href=\"class_inputmap.html#class-inputmap\"><span class=\"std std-ref\">InputMap</span></a>, <a class=\"reference internal\" href=\"class_ip.html#class-ip\"><span class=\"std std-ref\">IP</span></a>, <a class=\"reference internal\" href=\"class_javaclasswrapper.html#class-javaclasswrapper\"><span class=\"std std-ref\">JavaClassWrapper</span></a>, <a class=\"reference internal\" href=\"class_javascriptbridge.html#class-javascriptbridge\"><span class=\"std std-ref\">JavaScriptBridge</span></a>, <a class=\"reference internal\" href=\"class_jnisingleton.html#class-jnisingleton\"><span class=\"std std-ref\">JNISingleton</span></a>, <a class=\"reference internal\" href=\"class_jsonrpc.html#class-jsonrpc\"><span class=\"std std-ref\">JSONRPC</span></a>, <a class=\"reference internal\" href=\"class_mainloop.html#class-mainloop\"><span class=\"std std-ref\">MainLoop</span></a>, <a class=\"reference internal\" href=\"class_marshalls.html#class-marshalls\"><span class=\"std std-ref\">Marshalls</span></a>, <a class=\"reference internal\" href=\"class_moviewriter.html#class-moviewriter\"><span class=\"std std-ref\">MovieWriter</span></a>, <a class=\"reference internal\" href=\"class_navigationmeshgenerator.html#class-navigationmeshgenerator\"><span class=\"std std-ref\">NavigationMeshGenerator</span></a>, <a class=\"reference internal\" href=\"class_navigationserver2d.html#class-navigationserver2d\"><span class=\"std std-ref\">NavigationServer2D</span></a>, <a class=\"reference internal\" href=\"class_navigationserver3d.html#class-navigationserver3d\"><span class=\"std std-ref\">NavigationServer3D</span></a>, <a class=\"reference internal\" href=\"class_node.html#class-node\"><span class=\"std std-ref\">Node</span></a>, <a class=\"reference internal\" href=\"class_os.html#class-os\"><span class=\"std std-ref\">OS</span></a>, <a class=\"reference internal\" href=\"class_performance.html#class-performance\"><span class=\"std std-ref\">Performance</span></a>, <a class=\"reference internal\" href=\"class_physicsdirectbodystate2d.html#class-physicsdirectbodystate2d\"><span class=\"std std-ref\">PhysicsDirectBodyState2D</span></a>, <a class=\"reference internal\" href=\"class_physicsdirectbodystate3d.html#class-physicsdirectbodystate3d\"><span class=\"std std-ref\">PhysicsDirectBodyState3D</span></a>, <a class=\"reference internal\" href=\"class_physicsdirectspacestate2d.html#class-physicsdirectspacestate2d\"><span class=\"std std-ref\">PhysicsDirectSpaceState2D</span></a>, <a class=\"reference internal\" href=\"class_physicsdirectspacestate3d.html#class-physicsdirectspacestate3d\"><span class=\"std std-ref\">PhysicsDirectSpaceState3D</span></a>, <a class=\"reference internal\" href=\"class_physicsserver2d.html#class-physicsserver2d\"><span class=\"std std-ref\">PhysicsServer2D</span></a>, <a class=\"reference internal\" href=\"class_physicsserver2dmanager.html#class-physicsserver2dmanager\"><span class=\"std std-ref\">PhysicsServer2DManager</span></a>, <a class=\"reference internal\" href=\"class_physicsserver3d.html#class-physicsserver3d\"><span class=\"std std-ref\">PhysicsServer3D</span></a>, <a class=\"reference internal\" href=\"class_physicsserver3dmanager.html#class-physicsserver3dmanager\"><span class=\"std std-ref\">PhysicsServer3DManager</span></a>, <a class=\"reference internal\" href=\"class_physicsserver3drenderingserverhandler.html#class-physicsserver3drenderingserverhandler\"><span class=\"std std-ref\">PhysicsServer3DRenderingServerHandler</span></a>, <a class=\"reference internal\" href=\"class_projectsettings.html#class-projectsettings\"><span class=\"std std-ref\">ProjectSettings</span></a>, <a class=\"reference internal\" href=\"class_refcounted.html#class-refcounted\"><span class=\"std std-ref\">RefCounted</span></a>, <a class=\"reference internal\" href=\"class_renderingdevice.html#class-renderingdevice\"><span class=\"std std-ref\">RenderingDevice</span></a>, <a class=\"reference internal\" href=\"class_renderingserver.html#class-renderingserver\"><span class=\"std std-ref\">RenderingServer</span></a>, <a class=\"reference internal\" href=\"class_resourceloader.html#class-resourceloader\"><span class=\"std std-ref\">ResourceLoader</span></a>, <a class=\"reference internal\" href=\"class_resourcesaver.html#class-resourcesaver\"><span class=\"std std-ref\">ResourceSaver</span></a>, <a class=\"reference internal\" href=\"class_resourceuid.html#class-resourceuid\"><span class=\"std std-ref\">ResourceUID</span></a>, <a class=\"reference internal\" href=\"class_scriptlanguage.html#class-scriptlanguage\"><span class=\"std std-ref\">ScriptLanguage</span></a>, <a class=\"reference internal\" href=\"class_textservermanager.html#class-textservermanager\"><span class=\"std std-ref\">TextServerManager</span></a>, <a class=\"reference internal\" href=\"class_themedb.html#class-themedb\"><span class=\"std std-ref\">ThemeDB</span></a>, <a class=\"reference internal\" href=\"class_tiledata.html#class-tiledata\"><span class=\"std std-ref\">TileData</span></a>, <a class=\"reference internal\" href=\"class_time.html#class-time\"><span class=\"std std-ref\">Time</span></a>, <a class=\"reference internal\" href=\"class_translationserver.html#class-translationserver\"><span class=\"std std-ref\">TranslationServer</span></a>, <a class=\"reference internal\" href=\"class_treeitem.html#class-treeitem\"><span class=\"std std-ref\">TreeItem</span></a>, <a class=\"reference internal\" href=\"class_undoredo.html#class-undoredo\"><span class=\"std std-ref\">UndoRedo</span></a>, <a class=\"reference internal\" href=\"class_workerthreadpool.html#class-workerthreadpool\"><span class=\"std std-ref\">WorkerThreadPool</span></a>, <a class=\"reference internal\" href=\"class_xrserver.html#class-xrserver\"><span class=\"std std-ref\">XRServer</span></a></p><p>Base class for all other classes in the engine.</p>",
                "description": "\n\n<p>An advanced <a class=\"reference internal\" href=\"class_variant.html#class-variant\"><span class=\"std std-ref\">Variant</span></a> type. All classes in the engine inherit from Object. Each class may define new properties, methods or signals, which are available to all inheriting classes. For example, a <a class=\"reference internal\" href=\"class_sprite2d.html#class-sprite2d\"><span class=\"std std-ref\">Sprite2D</span></a> instance is able to call <a class=\"reference internal\" href=\"class_node.html#class-node-method-add-child\"><span class=\"std std-ref\">Node.add_child</span></a> because it inherits from <a class=\"reference internal\" href=\"class_node.html#class-node\"><span class=\"std std-ref\">Node</span></a>.</p>\n<p>You can create new instances, using <code class=\"docutils literal notranslate\"><span class=\"pre\">Object.new()</span></code> in GDScript, or <code class=\"docutils literal notranslate\"><span class=\"pre\">new</span> <span class=\"pre\">Object</span></code> in C#.</p>\n<p>To delete an Object instance, call <a class=\"reference internal\" href=\"#class-object-method-free\"><span class=\"std std-ref\">free</span></a>. This is necessary for most classes inheriting Object, because they do not manage memory on their own, and will otherwise cause memory leaks when no longer in use. There are a few classes that perform memory management. For example, <a class=\"reference internal\" href=\"class_refcounted.html#class-refcounted\"><span class=\"std std-ref\">RefCounted</span></a> (and by extension <a class=\"reference internal\" href=\"class_resource.html#class-resource\"><span class=\"std std-ref\">Resource</span></a>) deletes itself when no longer referenced, and <a class=\"reference internal\" href=\"class_node.html#class-node\"><span class=\"std std-ref\">Node</span></a> deletes its children when freed.</p>\n<p>Objects can have a <a class=\"reference internal\" href=\"class_script.html#class-script\"><span class=\"std std-ref\">Script</span></a> attached to them. Once the <a class=\"reference internal\" href=\"class_script.html#class-script\"><span class=\"std std-ref\">Script</span></a> is instantiated, it effectively acts as an extension to the base class, allowing it to define and inherit new properties, methods and signals.</p>\n<p>Inside a <a class=\"reference internal\" href=\"class_script.html#class-script\"><span class=\"std std-ref\">Script</span></a>, <a class=\"reference internal\" href=\"#class-object-method-get-property-list\"><span class=\"std std-ref\">_get_property_list</span></a> may be overridden to customize properties in several ways. This allows them to be available to the editor, display as lists of options, sub-divide into groups, save on disk, etc. Scripting languages offer easier ways to customize properties, such as with the <a class=\"reference internal\" href=\"class_%40gdscript.html#class-gdscript-annotation-export\"><span class=\"std std-ref\">@GDScript.@export</span></a> annotation.</p>\n<p>Godot is very dynamic. An object's script, and therefore its properties, methods and signals, can be changed at run-time. Because of this, there can be occasions where, for example, a property required by a method may not exist. To prevent run-time errors, see methods such as <a class=\"reference internal\" href=\"#id6\"><span class=\"std std-ref\">set</span></a>, <a class=\"reference internal\" href=\"#id1\"><span class=\"std std-ref\">get</span></a>, <a class=\"reference internal\" href=\"#class-object-method-call\"><span class=\"std std-ref\">call</span></a>, <a class=\"reference internal\" href=\"#class-object-method-has-method\"><span class=\"std std-ref\">has_method</span></a>, <a class=\"reference internal\" href=\"#class-object-method-has-signal\"><span class=\"std std-ref\">has_signal</span></a>, etc. Note that these methods are <strong>much</strong> slower than direct references.</p>\n<p>In GDScript, you can also check if a given property, method, or signal name exists in an object with the <code class=\"docutils literal notranslate\"><span class=\"pre\">in</span></code> operator:</p>\n<div class=\"highlight-gdscript notranslate\"><div class=\"highlight\"><pre><span></span><span class=\"k\">var</span> <span class=\"n\">node</span> <span class=\"o\">=</span> <span class=\"n\">Node</span><span class=\"o\">.</span><span class=\"n\">new</span><span class=\"p\">()</span>\n<span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"s2\">\"name\"</span> <span class=\"ow\">in</span> <span class=\"n\">node</span><span class=\"p\">)</span>         <span class=\"c1\"># Prints true</span>\n<span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"s2\">\"get_parent\"</span> <span class=\"ow\">in</span> <span class=\"n\">node</span><span class=\"p\">)</span>   <span class=\"c1\"># Prints true</span>\n<span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"s2\">\"tree_entered\"</span> <span class=\"ow\">in</span> <span class=\"n\">node</span><span class=\"p\">)</span> <span class=\"c1\"># Prints true</span>\n<span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"s2\">\"unknown\"</span> <span class=\"ow\">in</span> <span class=\"n\">node</span><span class=\"p\">)</span>      <span class=\"c1\"># Prints false</span>\n</pre></div>\n</div>\n<p>Notifications are <a class=\"reference internal\" href=\"class_int.html#class-int\"><span class=\"std std-ref\">int</span></a> constants commonly sent and received by objects. For example, on every rendered frame, the <a class=\"reference internal\" href=\"class_scenetree.html#class-scenetree\"><span class=\"std std-ref\">SceneTree</span></a> notifies nodes inside the tree with a <a class=\"reference internal\" href=\"class_node.html#class-node-constant-notification-process\"><span class=\"std std-ref\">Node.NOTIFICATION_PROCESS</span></a>. The nodes receive it and may call <a class=\"reference internal\" href=\"class_node.html#class-node-method-process\"><span class=\"std std-ref\">Node._process</span></a> to update. To make use of notifications, see <a class=\"reference internal\" href=\"#id3\"><span class=\"std std-ref\">notification</span></a> and <a class=\"reference internal\" href=\"#class-object-method-notification\"><span class=\"std std-ref\">_notification</span></a>.</p>\n<p>Lastly, every object can also contain metadata (data about data). <a class=\"reference internal\" href=\"#class-object-method-set-meta\"><span class=\"std std-ref\">set_meta</span></a> can be useful to store information that the object itself does not depend on. To keep your code clean, making excessive use of metadata is discouraged.</p>\n<p><strong>Note:</strong> Unlike references to a <a class=\"reference internal\" href=\"class_refcounted.html#class-refcounted\"><span class=\"std std-ref\">RefCounted</span></a>, references to an object stored in a variable can become invalid without being set to <code class=\"docutils literal notranslate\"><span class=\"pre\">null</span></code>. To check if an object has been deleted, do <em>not</em> compare it against <code class=\"docutils literal notranslate\"><span class=\"pre\">null</span></code>. Instead, use <a class=\"reference internal\" href=\"class_%40globalscope.html#class-globalscope-method-is-instance-valid\"><span class=\"std std-ref\">@GlobalScope.is_instance_valid</span></a>. It's also recommended to inherit from <a class=\"reference internal\" href=\"class_refcounted.html#class-refcounted\"><span class=\"std std-ref\">RefCounted</span></a> for classes storing data instead of <strong>Object</strong>.</p>\n<p><strong>Note:</strong> The <code class=\"docutils literal notranslate\"><span class=\"pre\">script</span></code> is not exposed like most properties. To set or get an object's <a class=\"reference internal\" href=\"class_script.html#class-script\"><span class=\"std std-ref\">Script</span></a> in code, use <a class=\"reference internal\" href=\"#class-object-method-set-script\"><span class=\"std std-ref\">set_script</span></a> and <a class=\"reference internal\" href=\"#class-object-method-get-script\"><span class=\"std std-ref\">get_script</span></a>, respectively.</p>\n"
            },
            "class_aescontext": {
                "url": "https://docs.godotengine.org/en/4.1/classes/class_aescontext.html",
                "title": "AESContext",
                "blurb": "<p><strong>Inherits:</strong> <a class=\"reference internal\" href=\"class_refcounted.html#class-refcounted\"><span class=\"std std-ref\">RefCounted</span></a> <strong>&lt;</strong> <a class=\"reference internal\" href=\"class_object.html#class-object\"><span class=\"std std-ref\">Object</span></a></p><p>Provides access to AES encryption/decryption of raw data.</p>",
                "description": "\n\n<p>This class holds the context information required for encryption and decryption operations with AES (Advanced Encryption Standard). Both AES-ECB and AES-CBC modes are supported.</p>\n<div class=\"sphinx-tabs docutils container\">\n<div aria-label=\"Tabbed content\" class=\"closeable\" role=\"tablist\"><button aria-controls=\"panel-0-R0RTY3JpcHQ=\" aria-selected=\"true\" class=\"sphinx-tabs-tab code-tab group-tab\" id=\"tab-0-R0RTY3JpcHQ=\" name=\"R0RTY3JpcHQ=\" role=\"tab\" tabindex=\"0\">GDScript</button><button aria-controls=\"panel-0-QyM=\" aria-selected=\"false\" class=\"sphinx-tabs-tab code-tab group-tab\" id=\"tab-0-QyM=\" name=\"QyM=\" role=\"tab\" tabindex=\"-1\">C#</button></div><div aria-labelledby=\"tab-0-R0RTY3JpcHQ=\" class=\"sphinx-tabs-panel code-tab group-tab\" id=\"panel-0-R0RTY3JpcHQ=\" name=\"R0RTY3JpcHQ=\" role=\"tabpanel\" tabindex=\"0\"><div class=\"highlight-gdscript notranslate\"><div class=\"highlight\"><pre><span></span><span class=\"k\">extends</span> <span class=\"n\">Node</span>\n\n<span class=\"k\">var</span> <span class=\"n\">aes</span> <span class=\"o\">=</span> <span class=\"n\">AESContext</span><span class=\"o\">.</span><span class=\"n\">new</span><span class=\"p\">()</span>\n\n<span class=\"k\">func</span> <span class=\"n\">_ready</span><span class=\"p\">():</span>\n    <span class=\"k\">var</span> <span class=\"n\">key</span> <span class=\"o\">=</span> <span class=\"s2\">\"My secret key!!!\"</span> <span class=\"c1\"># Key must be either 16 or 32 bytes.</span>\n    <span class=\"k\">var</span> <span class=\"n\">data</span> <span class=\"o\">=</span> <span class=\"s2\">\"My secret text!!\"</span> <span class=\"c1\"># Data size must be multiple of 16 bytes, apply padding if needed.</span>\n    <span class=\"c1\"># Encrypt ECB</span>\n    <span class=\"n\">aes</span><span class=\"o\">.</span><span class=\"n\">start</span><span class=\"p\">(</span><span class=\"n\">AESContext</span><span class=\"o\">.</span><span class=\"n\">MODE_ECB_ENCRYPT</span><span class=\"p\">,</span> <span class=\"n\">key</span><span class=\"o\">.</span><span class=\"n\">to_utf8_buffer</span><span class=\"p\">())</span>\n    <span class=\"k\">var</span> <span class=\"n\">encrypted</span> <span class=\"o\">=</span> <span class=\"n\">aes</span><span class=\"o\">.</span><span class=\"n\">update</span><span class=\"p\">(</span><span class=\"n\">data</span><span class=\"o\">.</span><span class=\"n\">to_utf8_buffer</span><span class=\"p\">())</span>\n    <span class=\"n\">aes</span><span class=\"o\">.</span><span class=\"n\">finish</span><span class=\"p\">()</span>\n    <span class=\"c1\"># Decrypt ECB</span>\n    <span class=\"n\">aes</span><span class=\"o\">.</span><span class=\"n\">start</span><span class=\"p\">(</span><span class=\"n\">AESContext</span><span class=\"o\">.</span><span class=\"n\">MODE_ECB_DECRYPT</span><span class=\"p\">,</span> <span class=\"n\">key</span><span class=\"o\">.</span><span class=\"n\">to_utf8_buffer</span><span class=\"p\">())</span>\n    <span class=\"k\">var</span> <span class=\"n\">decrypted</span> <span class=\"o\">=</span> <span class=\"n\">aes</span><span class=\"o\">.</span><span class=\"n\">update</span><span class=\"p\">(</span><span class=\"n\">encrypted</span><span class=\"p\">)</span>\n    <span class=\"n\">aes</span><span class=\"o\">.</span><span class=\"n\">finish</span><span class=\"p\">()</span>\n    <span class=\"c1\"># Check ECB</span>\n    <span class=\"nb\">assert</span><span class=\"p\">(</span><span class=\"n\">decrypted</span> <span class=\"o\">==</span> <span class=\"n\">data</span><span class=\"o\">.</span><span class=\"n\">to_utf8_buffer</span><span class=\"p\">())</span>\n\n    <span class=\"k\">var</span> <span class=\"n\">iv</span> <span class=\"o\">=</span> <span class=\"s2\">\"My secret iv!!!!\"</span> <span class=\"c1\"># IV must be of exactly 16 bytes.</span>\n    <span class=\"c1\"># Encrypt CBC</span>\n    <span class=\"n\">aes</span><span class=\"o\">.</span><span class=\"n\">start</span><span class=\"p\">(</span><span class=\"n\">AESContext</span><span class=\"o\">.</span><span class=\"n\">MODE_CBC_ENCRYPT</span><span class=\"p\">,</span> <span class=\"n\">key</span><span class=\"o\">.</span><span class=\"n\">to_utf8_buffer</span><span class=\"p\">(),</span> <span class=\"n\">iv</span><span class=\"o\">.</span><span class=\"n\">to_utf8_buffer</span><span class=\"p\">())</span>\n    <span class=\"n\">encrypted</span> <span class=\"o\">=</span> <span class=\"n\">aes</span><span class=\"o\">.</span><span class=\"n\">update</span><span class=\"p\">(</span><span class=\"n\">data</span><span class=\"o\">.</span><span class=\"n\">to_utf8_buffer</span><span class=\"p\">())</span>\n    <span class=\"n\">aes</span><span class=\"o\">.</span><span class=\"n\">finish</span><span class=\"p\">()</span>\n    <span class=\"c1\"># Decrypt CBC</span>\n    <span class=\"n\">aes</span><span class=\"o\">.</span><span class=\"n\">start</span><span class=\"p\">(</span><span class=\"n\">AESContext</span><span class=\"o\">.</span><span class=\"n\">MODE_CBC_DECRYPT</span><span class=\"p\">,</span> <span class=\"n\">key</span><span class=\"o\">.</span><span class=\"n\">to_utf8_buffer</span><span class=\"p\">(),</span> <span class=\"n\">iv</span><span class=\"o\">.</span><span class=\"n\">to_utf8_buffer</span><span class=\"p\">())</span>\n    <span class=\"n\">decrypted</span> <span class=\"o\">=</span> <span class=\"n\">aes</span><span class=\"o\">.</span><span class=\"n\">update</span><span class=\"p\">(</span><span class=\"n\">encrypted</span><span class=\"p\">)</span>\n    <span class=\"n\">aes</span><span class=\"o\">.</span><span class=\"n\">finish</span><span class=\"p\">()</span>\n    <span class=\"c1\"># Check CBC</span>\n    <span class=\"nb\">assert</span><span class=\"p\">(</span><span class=\"n\">decrypted</span> <span class=\"o\">==</span> <span class=\"n\">data</span><span class=\"o\">.</span><span class=\"n\">to_utf8_buffer</span><span class=\"p\">())</span>\n</pre></div>\n</div>\n</div><div aria-labelledby=\"tab-0-QyM=\" class=\"sphinx-tabs-panel code-tab group-tab\" hidden=\"true\" id=\"panel-0-QyM=\" name=\"QyM=\" role=\"tabpanel\" tabindex=\"0\"><div class=\"highlight-csharp notranslate\"><div class=\"highlight\"><pre><span></span><span class=\"k\">using</span><span class=\"w\"> </span><span class=\"nn\">Godot</span><span class=\"p\">;</span>\n<span class=\"k\">using</span><span class=\"w\"> </span><span class=\"nn\">System.Diagnostics</span><span class=\"p\">;</span>\n\n<span class=\"k\">public</span><span class=\"w\"> </span><span class=\"k\">partial</span><span class=\"w\"> </span><span class=\"k\">class</span><span class=\"w\"> </span><span class=\"nc\">MyNode</span><span class=\"w\"> </span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"n\">Node</span>\n<span class=\"p\">{</span>\n<span class=\"w\">    </span><span class=\"k\">private</span><span class=\"w\"> </span><span class=\"n\">AesContext</span><span class=\"w\"> </span><span class=\"n\">_aes</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"k\">new</span><span class=\"w\"> </span><span class=\"n\">AesContext</span><span class=\"p\">();</span>\n\n<span class=\"w\">    </span><span class=\"k\">public</span><span class=\"w\"> </span><span class=\"k\">override</span><span class=\"w\"> </span><span class=\"k\">void</span><span class=\"w\"> </span><span class=\"nf\">_Ready</span><span class=\"p\">()</span>\n<span class=\"w\">    </span><span class=\"p\">{</span>\n<span class=\"w\">        </span><span class=\"kt\">string</span><span class=\"w\"> </span><span class=\"n\">key</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"s\">\"My secret key!!!\"</span><span class=\"p\">;</span><span class=\"w\"> </span><span class=\"c1\">// Key must be either 16 or 32 bytes.</span>\n<span class=\"w\">        </span><span class=\"kt\">string</span><span class=\"w\"> </span><span class=\"n\">data</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"s\">\"My secret text!!\"</span><span class=\"p\">;</span><span class=\"w\"> </span><span class=\"c1\">// Data size must be multiple of 16 bytes, apply padding if needed.</span>\n<span class=\"w\">        </span><span class=\"c1\">// Encrypt ECB</span>\n<span class=\"w\">        </span><span class=\"n\">_aes</span><span class=\"p\">.</span><span class=\"n\">Start</span><span class=\"p\">(</span><span class=\"n\">AesContext</span><span class=\"p\">.</span><span class=\"n\">Mode</span><span class=\"p\">.</span><span class=\"n\">EcbEncrypt</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">key</span><span class=\"p\">.</span><span class=\"n\">ToUtf8Buffer</span><span class=\"p\">());</span>\n<span class=\"w\">        </span><span class=\"kt\">byte</span><span class=\"p\">[]</span><span class=\"w\"> </span><span class=\"n\">encrypted</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"n\">_aes</span><span class=\"p\">.</span><span class=\"n\">Update</span><span class=\"p\">(</span><span class=\"n\">data</span><span class=\"p\">.</span><span class=\"n\">ToUtf8Buffer</span><span class=\"p\">());</span>\n<span class=\"w\">        </span><span class=\"n\">_aes</span><span class=\"p\">.</span><span class=\"n\">Finish</span><span class=\"p\">();</span>\n<span class=\"w\">        </span><span class=\"c1\">// Decrypt ECB</span>\n<span class=\"w\">        </span><span class=\"n\">_aes</span><span class=\"p\">.</span><span class=\"n\">Start</span><span class=\"p\">(</span><span class=\"n\">AesContext</span><span class=\"p\">.</span><span class=\"n\">Mode</span><span class=\"p\">.</span><span class=\"n\">EcbDecrypt</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">key</span><span class=\"p\">.</span><span class=\"n\">ToUtf8Buffer</span><span class=\"p\">());</span>\n<span class=\"w\">        </span><span class=\"kt\">byte</span><span class=\"p\">[]</span><span class=\"w\"> </span><span class=\"n\">decrypted</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"n\">_aes</span><span class=\"p\">.</span><span class=\"n\">Update</span><span class=\"p\">(</span><span class=\"n\">encrypted</span><span class=\"p\">);</span>\n<span class=\"w\">        </span><span class=\"n\">_aes</span><span class=\"p\">.</span><span class=\"n\">Finish</span><span class=\"p\">();</span>\n<span class=\"w\">        </span><span class=\"c1\">// Check ECB</span>\n<span class=\"w\">        </span><span class=\"n\">Debug</span><span class=\"p\">.</span><span class=\"n\">Assert</span><span class=\"p\">(</span><span class=\"n\">decrypted</span><span class=\"w\"> </span><span class=\"o\">==</span><span class=\"w\"> </span><span class=\"n\">data</span><span class=\"p\">.</span><span class=\"n\">ToUtf8Buffer</span><span class=\"p\">());</span>\n\n<span class=\"w\">        </span><span class=\"kt\">string</span><span class=\"w\"> </span><span class=\"n\">iv</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"s\">\"My secret iv!!!!\"</span><span class=\"p\">;</span><span class=\"w\"> </span><span class=\"c1\">// IV must be of exactly 16 bytes.</span>\n<span class=\"w\">        </span><span class=\"c1\">// Encrypt CBC</span>\n<span class=\"w\">        </span><span class=\"n\">_aes</span><span class=\"p\">.</span><span class=\"n\">Start</span><span class=\"p\">(</span><span class=\"n\">AesContext</span><span class=\"p\">.</span><span class=\"n\">Mode</span><span class=\"p\">.</span><span class=\"n\">EcbEncrypt</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">key</span><span class=\"p\">.</span><span class=\"n\">ToUtf8Buffer</span><span class=\"p\">(),</span><span class=\"w\"> </span><span class=\"n\">iv</span><span class=\"p\">.</span><span class=\"n\">ToUtf8Buffer</span><span class=\"p\">());</span>\n<span class=\"w\">        </span><span class=\"n\">encrypted</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"n\">_aes</span><span class=\"p\">.</span><span class=\"n\">Update</span><span class=\"p\">(</span><span class=\"n\">data</span><span class=\"p\">.</span><span class=\"n\">ToUtf8Buffer</span><span class=\"p\">());</span>\n<span class=\"w\">        </span><span class=\"n\">_aes</span><span class=\"p\">.</span><span class=\"n\">Finish</span><span class=\"p\">();</span>\n<span class=\"w\">        </span><span class=\"c1\">// Decrypt CBC</span>\n<span class=\"w\">        </span><span class=\"n\">_aes</span><span class=\"p\">.</span><span class=\"n\">Start</span><span class=\"p\">(</span><span class=\"n\">AesContext</span><span class=\"p\">.</span><span class=\"n\">Mode</span><span class=\"p\">.</span><span class=\"n\">EcbDecrypt</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">key</span><span class=\"p\">.</span><span class=\"n\">ToUtf8Buffer</span><span class=\"p\">(),</span><span class=\"w\"> </span><span class=\"n\">iv</span><span class=\"p\">.</span><span class=\"n\">ToUtf8Buffer</span><span class=\"p\">());</span>\n<span class=\"w\">        </span><span class=\"n\">decrypted</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"n\">_aes</span><span class=\"p\">.</span><span class=\"n\">Update</span><span class=\"p\">(</span><span class=\"n\">encrypted</span><span class=\"p\">);</span>\n<span class=\"w\">        </span><span class=\"n\">_aes</span><span class=\"p\">.</span><span class=\"n\">Finish</span><span class=\"p\">();</span>\n<span class=\"w\">        </span><span class=\"c1\">// Check CBC</span>\n<span class=\"w\">        </span><span class=\"n\">Debug</span><span class=\"p\">.</span><span class=\"n\">Assert</span><span class=\"p\">(</span><span class=\"n\">decrypted</span><span class=\"w\"> </span><span class=\"o\">==</span><span class=\"w\"> </span><span class=\"n\">data</span><span class=\"p\">.</span><span class=\"n\">ToUtf8Buffer</span><span class=\"p\">());</span>\n<span class=\"w\">    </span><span class=\"p\">}</span>\n<span class=\"p\">}</span>\n</pre></div>\n</div>\n</div></div>\n"
            },
            "class_astar2d": {
                "url": "https://docs.godotengine.org/en/4.1/classes/class_astar2d.html",
                "title": "AStar2D",
                "blurb": "<p><strong>Inherits:</strong> <a class=\"reference internal\" href=\"class_refcounted.html#class-refcounted\"><span class=\"std std-ref\">RefCounted</span></a> <strong>&lt;</strong> <a class=\"reference internal\" href=\"class_object.html#class-object\"><span class=\"std std-ref\">Object</span></a></p><p>An implementation of A* for finding the shortest path between two vertices on a connected graph in 2D space.</p>",
                "description": "\n\n<p>An implementation of the A* algorithm, used to find the shortest path between two vertices on a connected graph in 2D space.</p>\n<p>See <a class=\"reference internal\" href=\"class_astar3d.html#class-astar3d\"><span class=\"std std-ref\">AStar3D</span></a> for a more thorough explanation on how to use this class. <strong>AStar2D</strong> is a wrapper for <a class=\"reference internal\" href=\"class_astar3d.html#class-astar3d\"><span class=\"std std-ref\">AStar3D</span></a> that enforces 2D coordinates.</p>\n"
            },
            "class_astar3d": {
                "url": "https://docs.godotengine.org/en/4.1/classes/class_astar3d.html",
                "title": "AStar3D",
                "blurb": "<p><strong>Inherits:</strong> <a class=\"reference internal\" href=\"class_refcounted.html#class-refcounted\"><span class=\"std std-ref\">RefCounted</span></a> <strong>&lt;</strong> <a class=\"reference internal\" href=\"class_object.html#class-object\"><span class=\"std std-ref\">Object</span></a></p><p>An implementation of A* for finding the shortest path between two vertices on a connected graph in 3D space.</p>",
                "description": "\n\n<p>A* (A star) is a computer algorithm used in pathfinding and graph traversal, the process of plotting short paths among vertices (points), passing through a given set of edges (segments). It enjoys widespread use due to its performance and accuracy. Godot's A* implementation uses points in 3D space and Euclidean distances by default.</p>\n<p>You must add points manually with <a class=\"reference internal\" href=\"#class-astar3d-method-add-point\"><span class=\"std std-ref\">add_point</span></a> and create segments manually with <a class=\"reference internal\" href=\"#class-astar3d-method-connect-points\"><span class=\"std std-ref\">connect_points</span></a>. Once done, you can test if there is a path between two points with the <a class=\"reference internal\" href=\"#class-astar3d-method-are-points-connected\"><span class=\"std std-ref\">are_points_connected</span></a> function, get a path containing indices by <a class=\"reference internal\" href=\"#class-astar3d-method-get-id-path\"><span class=\"std std-ref\">get_id_path</span></a>, or one containing actual coordinates with <a class=\"reference internal\" href=\"#class-astar3d-method-get-point-path\"><span class=\"std std-ref\">get_point_path</span></a>.</p>\n<p>It is also possible to use non-Euclidean distances. To do so, create a class that extends <code class=\"docutils literal notranslate\"><span class=\"pre\">AStar3D</span></code> and override methods <a class=\"reference internal\" href=\"#class-astar3d-method-compute-cost\"><span class=\"std std-ref\">_compute_cost</span></a> and <a class=\"reference internal\" href=\"#class-astar3d-method-estimate-cost\"><span class=\"std std-ref\">_estimate_cost</span></a>. Both take two indices and return a length, as is shown in the following example.</p>\n<div class=\"sphinx-tabs docutils container\">\n<div aria-label=\"Tabbed content\" class=\"closeable\" role=\"tablist\"><button aria-controls=\"panel-0-R0RTY3JpcHQ=\" aria-selected=\"true\" class=\"sphinx-tabs-tab code-tab group-tab\" id=\"tab-0-R0RTY3JpcHQ=\" name=\"R0RTY3JpcHQ=\" role=\"tab\" tabindex=\"0\">GDScript</button><button aria-controls=\"panel-0-QyM=\" aria-selected=\"false\" class=\"sphinx-tabs-tab code-tab group-tab\" id=\"tab-0-QyM=\" name=\"QyM=\" role=\"tab\" tabindex=\"-1\">C#</button></div><div aria-labelledby=\"tab-0-R0RTY3JpcHQ=\" class=\"sphinx-tabs-panel code-tab group-tab\" id=\"panel-0-R0RTY3JpcHQ=\" name=\"R0RTY3JpcHQ=\" role=\"tabpanel\" tabindex=\"0\"><div class=\"highlight-gdscript notranslate\"><div class=\"highlight\"><pre><span></span><span class=\"k\">class</span> <span class=\"n\">MyAStar</span><span class=\"p\">:</span>\n    <span class=\"k\">extends</span> <span class=\"n\">AStar3D</span>\n\n    <span class=\"k\">func</span> <span class=\"n\">_compute_cost</span><span class=\"p\">(</span><span class=\"n\">u</span><span class=\"p\">,</span> <span class=\"n\">v</span><span class=\"p\">):</span>\n        <span class=\"k k-ControlFlow\">return</span> <span class=\"nb\">abs</span><span class=\"p\">(</span><span class=\"n\">u</span> <span class=\"o\">-</span> <span class=\"n\">v</span><span class=\"p\">)</span>\n\n    <span class=\"k\">func</span> <span class=\"n\">_estimate_cost</span><span class=\"p\">(</span><span class=\"n\">u</span><span class=\"p\">,</span> <span class=\"n\">v</span><span class=\"p\">):</span>\n        <span class=\"k k-ControlFlow\">return</span> <span class=\"nb\">min</span><span class=\"p\">(</span><span class=\"mi\">0</span><span class=\"p\">,</span> <span class=\"nb\">abs</span><span class=\"p\">(</span><span class=\"n\">u</span> <span class=\"o\">-</span> <span class=\"n\">v</span><span class=\"p\">)</span> <span class=\"o\">-</span> <span class=\"mi\">1</span><span class=\"p\">)</span>\n</pre></div>\n</div>\n</div><div aria-labelledby=\"tab-0-QyM=\" class=\"sphinx-tabs-panel code-tab group-tab\" hidden=\"true\" id=\"panel-0-QyM=\" name=\"QyM=\" role=\"tabpanel\" tabindex=\"0\"><div class=\"highlight-csharp notranslate\"><div class=\"highlight\"><pre><span></span><span class=\"k\">public</span><span class=\"w\"> </span><span class=\"k\">partial</span><span class=\"w\"> </span><span class=\"k\">class</span><span class=\"w\"> </span><span class=\"nc\">MyAStar</span><span class=\"w\"> </span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"n\">AStar3D</span>\n<span class=\"p\">{</span>\n<span class=\"w\">    </span><span class=\"k\">public</span><span class=\"w\"> </span><span class=\"k\">override</span><span class=\"w\"> </span><span class=\"kt\">float</span><span class=\"w\"> </span><span class=\"nf\">_ComputeCost</span><span class=\"p\">(</span><span class=\"kt\">long</span><span class=\"w\"> </span><span class=\"n\">fromId</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"kt\">long</span><span class=\"w\"> </span><span class=\"n\">toId</span><span class=\"p\">)</span>\n<span class=\"w\">    </span><span class=\"p\">{</span>\n<span class=\"w\">        </span><span class=\"k\">return</span><span class=\"w\"> </span><span class=\"n\">Mathf</span><span class=\"p\">.</span><span class=\"n\">Abs</span><span class=\"p\">((</span><span class=\"kt\">int</span><span class=\"p\">)(</span><span class=\"n\">fromId</span><span class=\"w\"> </span><span class=\"o\">-</span><span class=\"w\"> </span><span class=\"n\">toId</span><span class=\"p\">));</span>\n<span class=\"w\">    </span><span class=\"p\">}</span>\n\n<span class=\"w\">    </span><span class=\"k\">public</span><span class=\"w\"> </span><span class=\"k\">override</span><span class=\"w\"> </span><span class=\"kt\">float</span><span class=\"w\"> </span><span class=\"nf\">_EstimateCost</span><span class=\"p\">(</span><span class=\"kt\">long</span><span class=\"w\"> </span><span class=\"n\">fromId</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"kt\">long</span><span class=\"w\"> </span><span class=\"n\">toId</span><span class=\"p\">)</span>\n<span class=\"w\">    </span><span class=\"p\">{</span>\n<span class=\"w\">        </span><span class=\"k\">return</span><span class=\"w\"> </span><span class=\"n\">Mathf</span><span class=\"p\">.</span><span class=\"n\">Min</span><span class=\"p\">(</span><span class=\"m\">0</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">Mathf</span><span class=\"p\">.</span><span class=\"n\">Abs</span><span class=\"p\">((</span><span class=\"kt\">int</span><span class=\"p\">)(</span><span class=\"n\">fromId</span><span class=\"w\"> </span><span class=\"o\">-</span><span class=\"w\"> </span><span class=\"n\">toId</span><span class=\"p\">))</span><span class=\"w\"> </span><span class=\"o\">-</span><span class=\"w\"> </span><span class=\"m\">1</span><span class=\"p\">);</span>\n<span class=\"w\">    </span><span class=\"p\">}</span>\n<span class=\"p\">}</span>\n</pre></div>\n</div>\n</div></div>\n<p><a class=\"reference internal\" href=\"#class-astar3d-method-estimate-cost\"><span class=\"std std-ref\">_estimate_cost</span></a> should return a lower bound of the distance, i.e. <code class=\"docutils literal notranslate\"><span class=\"pre\">_estimate_cost(u,</span> <span class=\"pre\">v)</span> <span class=\"pre\">&lt;=</span> <span class=\"pre\">_compute_cost(u,</span> <span class=\"pre\">v)</span></code>. This serves as a hint to the algorithm because the custom <code class=\"docutils literal notranslate\"><span class=\"pre\">_compute_cost</span></code> might be computation-heavy. If this is not the case, make <a class=\"reference internal\" href=\"#class-astar3d-method-estimate-cost\"><span class=\"std std-ref\">_estimate_cost</span></a> return the same value as <a class=\"reference internal\" href=\"#class-astar3d-method-compute-cost\"><span class=\"std std-ref\">_compute_cost</span></a> to provide the algorithm with the most accurate information.</p>\n<p>If the default <a class=\"reference internal\" href=\"#class-astar3d-method-estimate-cost\"><span class=\"std std-ref\">_estimate_cost</span></a> and <a class=\"reference internal\" href=\"#class-astar3d-method-compute-cost\"><span class=\"std std-ref\">_compute_cost</span></a> methods are used, or if the supplied <a class=\"reference internal\" href=\"#class-astar3d-method-estimate-cost\"><span class=\"std std-ref\">_estimate_cost</span></a> method returns a lower bound of the cost, then the paths returned by A* will be the lowest-cost paths. Here, the cost of a path equals the sum of the <a class=\"reference internal\" href=\"#class-astar3d-method-compute-cost\"><span class=\"std std-ref\">_compute_cost</span></a> results of all segments in the path multiplied by the <code class=\"docutils literal notranslate\"><span class=\"pre\">weight_scale</span></code>s of the endpoints of the respective segments. If the default methods are used and the <code class=\"docutils literal notranslate\"><span class=\"pre\">weight_scale</span></code>s of all points are set to <code class=\"docutils literal notranslate\"><span class=\"pre\">1.0</span></code>, then this equals the sum of Euclidean distances of all segments in the path.</p>\n"
            },
            "class_astargrid2d": {
                "url": "https://docs.godotengine.org/en/4.1/classes/class_astargrid2d.html",
                "title": "AStarGrid2D",
                "blurb": "<p><strong>Inherits:</strong> <a class=\"reference internal\" href=\"class_refcounted.html#class-refcounted\"><span class=\"std std-ref\">RefCounted</span></a> <strong>&lt;</strong> <a class=\"reference internal\" href=\"class_object.html#class-object\"><span class=\"std std-ref\">Object</span></a></p><p>An implementation of A* for finding the shortest path between two points on a partial 2D grid.</p>",
                "description": "\n\n<p><strong>AStarGrid2D</strong> is a variant of <a class=\"reference internal\" href=\"class_astar2d.html#class-astar2d\"><span class=\"std std-ref\">AStar2D</span></a> that is specialized for partial 2D grids. It is simpler to use because it doesn't require you to manually create points and connect them together. This class also supports multiple types of heuristics, modes for diagonal movement, and a jumping mode to speed up calculations.</p>\n<p>To use <strong>AStarGrid2D</strong>, you only need to set the <a class=\"reference internal\" href=\"#class-astargrid2d-property-region\"><span class=\"std std-ref\">region</span></a> of the grid, optionally set the <a class=\"reference internal\" href=\"#class-astargrid2d-property-cell-size\"><span class=\"std std-ref\">cell_size</span></a>, and then call the <a class=\"reference internal\" href=\"#class-astargrid2d-method-update\"><span class=\"std std-ref\">update</span></a> method:</p>\n<div class=\"sphinx-tabs docutils container\">\n<div aria-label=\"Tabbed content\" class=\"closeable\" role=\"tablist\"><button aria-controls=\"panel-0-R0RTY3JpcHQ=\" aria-selected=\"true\" class=\"sphinx-tabs-tab code-tab group-tab\" id=\"tab-0-R0RTY3JpcHQ=\" name=\"R0RTY3JpcHQ=\" role=\"tab\" tabindex=\"0\">GDScript</button><button aria-controls=\"panel-0-QyM=\" aria-selected=\"false\" class=\"sphinx-tabs-tab code-tab group-tab\" id=\"tab-0-QyM=\" name=\"QyM=\" role=\"tab\" tabindex=\"-1\">C#</button></div><div aria-labelledby=\"tab-0-R0RTY3JpcHQ=\" class=\"sphinx-tabs-panel code-tab group-tab\" id=\"panel-0-R0RTY3JpcHQ=\" name=\"R0RTY3JpcHQ=\" role=\"tabpanel\" tabindex=\"0\"><div class=\"highlight-gdscript notranslate\"><div class=\"highlight\"><pre><span></span><span class=\"k\">var</span> <span class=\"n\">astar_grid</span> <span class=\"o\">=</span> <span class=\"n\">AStarGrid2D</span><span class=\"o\">.</span><span class=\"n\">new</span><span class=\"p\">()</span>\n<span class=\"n\">astar_grid</span><span class=\"o\">.</span><span class=\"n\">region</span> <span class=\"o\">=</span> <span class=\"nb nb-Type\">Rect2i</span><span class=\"p\">(</span><span class=\"mi\">0</span><span class=\"p\">,</span> <span class=\"mi\">0</span><span class=\"p\">,</span> <span class=\"mi\">32</span><span class=\"p\">,</span> <span class=\"mi\">32</span><span class=\"p\">)</span>\n<span class=\"n\">astar_grid</span><span class=\"o\">.</span><span class=\"n\">cell_size</span> <span class=\"o\">=</span> <span class=\"nb nb-Type\">Vector2</span><span class=\"p\">(</span><span class=\"mi\">16</span><span class=\"p\">,</span> <span class=\"mi\">16</span><span class=\"p\">)</span>\n<span class=\"n\">astar_grid</span><span class=\"o\">.</span><span class=\"n\">update</span><span class=\"p\">()</span>\n<span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"n\">astar_grid</span><span class=\"o\">.</span><span class=\"n\">get_id_path</span><span class=\"p\">(</span><span class=\"nb nb-Type\">Vector2i</span><span class=\"p\">(</span><span class=\"mi\">0</span><span class=\"p\">,</span> <span class=\"mi\">0</span><span class=\"p\">),</span> <span class=\"nb nb-Type\">Vector2i</span><span class=\"p\">(</span><span class=\"mi\">3</span><span class=\"p\">,</span> <span class=\"mi\">4</span><span class=\"p\">)))</span> <span class=\"c1\"># prints (0, 0), (1, 1), (2, 2), (3, 3), (3, 4)</span>\n<span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"n\">astar_grid</span><span class=\"o\">.</span><span class=\"n\">get_point_path</span><span class=\"p\">(</span><span class=\"nb nb-Type\">Vector2i</span><span class=\"p\">(</span><span class=\"mi\">0</span><span class=\"p\">,</span> <span class=\"mi\">0</span><span class=\"p\">),</span> <span class=\"nb nb-Type\">Vector2i</span><span class=\"p\">(</span><span class=\"mi\">3</span><span class=\"p\">,</span> <span class=\"mi\">4</span><span class=\"p\">)))</span> <span class=\"c1\"># prints (0, 0), (16, 16), (32, 32), (48, 48), (48, 64)</span>\n</pre></div>\n</div>\n</div><div aria-labelledby=\"tab-0-QyM=\" class=\"sphinx-tabs-panel code-tab group-tab\" hidden=\"true\" id=\"panel-0-QyM=\" name=\"QyM=\" role=\"tabpanel\" tabindex=\"0\"><div class=\"highlight-csharp notranslate\"><div class=\"highlight\"><pre><span></span><span class=\"n\">AStarGrid2D</span><span class=\"w\"> </span><span class=\"n\">astarGrid</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"k\">new</span><span class=\"w\"> </span><span class=\"n\">AStarGrid2D</span><span class=\"p\">();</span>\n<span class=\"n\">astarGrid</span><span class=\"p\">.</span><span class=\"n\">Size</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"k\">new</span><span class=\"w\"> </span><span class=\"n\">Vector2I</span><span class=\"p\">(</span><span class=\"m\">32</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"m\">32</span><span class=\"p\">);</span>\n<span class=\"n\">astarGrid</span><span class=\"p\">.</span><span class=\"n\">CellSize</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"k\">new</span><span class=\"w\"> </span><span class=\"n\">Vector2I</span><span class=\"p\">(</span><span class=\"m\">16</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"m\">16</span><span class=\"p\">);</span>\n<span class=\"n\">astarGrid</span><span class=\"p\">.</span><span class=\"n\">Update</span><span class=\"p\">();</span>\n<span class=\"n\">GD</span><span class=\"p\">.</span><span class=\"n\">Print</span><span class=\"p\">(</span><span class=\"n\">astarGrid</span><span class=\"p\">.</span><span class=\"n\">GetIdPath</span><span class=\"p\">(</span><span class=\"n\">Vector2I</span><span class=\"p\">.</span><span class=\"n\">Zero</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"k\">new</span><span class=\"w\"> </span><span class=\"n\">Vector2I</span><span class=\"p\">(</span><span class=\"m\">3</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"m\">4</span><span class=\"p\">)));</span><span class=\"w\"> </span><span class=\"c1\">// prints (0, 0), (1, 1), (2, 2), (3, 3), (3, 4)</span>\n<span class=\"n\">GD</span><span class=\"p\">.</span><span class=\"n\">Print</span><span class=\"p\">(</span><span class=\"n\">astarGrid</span><span class=\"p\">.</span><span class=\"n\">GetPointPath</span><span class=\"p\">(</span><span class=\"n\">Vector2I</span><span class=\"p\">.</span><span class=\"n\">Zero</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"k\">new</span><span class=\"w\"> </span><span class=\"n\">Vector2I</span><span class=\"p\">(</span><span class=\"m\">3</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"m\">4</span><span class=\"p\">)));</span><span class=\"w\"> </span><span class=\"c1\">// prints (0, 0), (16, 16), (32, 32), (48, 48), (48, 64)</span>\n</pre></div>\n</div>\n</div></div>\n<p>To remove a point from the pathfinding grid, it must be set as \"solid\" with <a class=\"reference internal\" href=\"#class-astargrid2d-method-set-point-solid\"><span class=\"std std-ref\">set_point_solid</span></a>.</p>\n"
            },
            "class_audioeffectinstance": {
                "url": "https://docs.godotengine.org/en/4.1/classes/class_audioeffectinstance.html",
                "title": "AudioEffectInstance",
                "blurb": "<p><strong>Inherits:</strong> <a class=\"reference internal\" href=\"class_refcounted.html#class-refcounted\"><span class=\"std std-ref\">RefCounted</span></a> <strong>&lt;</strong> <a class=\"reference internal\" href=\"class_object.html#class-object\"><span class=\"std std-ref\">Object</span></a></p><p><strong>Inherited By:</strong> <a class=\"reference internal\" href=\"class_audioeffectspectrumanalyzerinstance.html#class-audioeffectspectrumanalyzerinstance\"><span class=\"std std-ref\">AudioEffectSpectrumAnalyzerInstance</span></a></p>",
                "description": null
            },
            "class_audioeffectspectrumanalyzerinstance": {
                "url": "https://docs.godotengine.org/en/4.1/classes/class_audioeffectspectrumanalyzerinstance.html",
                "title": "AudioEffectSpectrumAnalyzerInstance",
                "blurb": "<p><strong>Inherits:</strong> <a class=\"reference internal\" href=\"class_audioeffectinstance.html#class-audioeffectinstance\"><span class=\"std std-ref\">AudioEffectInstance</span></a> <strong>&lt;</strong> <a class=\"reference internal\" href=\"class_refcounted.html#class-refcounted\"><span class=\"std std-ref\">RefCounted</span></a> <strong>&lt;</strong> <a class=\"reference internal\" href=\"class_object.html#class-object\"><span class=\"std std-ref\">Object</span></a></p>",
                "description": null
            },
            "class_audioserver": {
                "url": "https://docs.godotengine.org/en/4.1/classes/class_audioserver.html",
                "title": "AudioServer",
                "blurb": "<p><strong>Inherits:</strong> <a class=\"reference internal\" href=\"class_object.html#class-object\"><span class=\"std std-ref\">Object</span></a></p><p>Server interface for low-level audio access.</p>",
                "description": "\n\n<p><strong>AudioServer</strong> is a low-level server interface for audio access. It is in charge of creating sample data (playable audio) as well as its playback via a voice interface.</p>\n"
            },
            "class_audiostreamgeneratorplayback": {
                "url": "https://docs.godotengine.org/en/4.1/classes/class_audiostreamgeneratorplayback.html",
                "title": "AudioStreamGeneratorPlayback",
                "blurb": "<p><strong>Inherits:</strong> <a class=\"reference internal\" href=\"class_audiostreamplaybackresampled.html#class-audiostreamplaybackresampled\"><span class=\"std std-ref\">AudioStreamPlaybackResampled</span></a> <strong>&lt;</strong> <a class=\"reference internal\" href=\"class_audiostreamplayback.html#class-audiostreamplayback\"><span class=\"std std-ref\">AudioStreamPlayback</span></a> <strong>&lt;</strong> <a class=\"reference internal\" href=\"class_refcounted.html#class-refcounted\"><span class=\"std std-ref\">RefCounted</span></a> <strong>&lt;</strong> <a class=\"reference internal\" href=\"class_object.html#class-object\"><span class=\"std std-ref\">Object</span></a></p><p>Plays back audio generated using <a class=\"reference internal\" href=\"class_audiostreamgenerator.html#class-audiostreamgenerator\"><span class=\"std std-ref\">AudioStreamGenerator</span></a>.</p>",
                "description": "\n\n<p>This class is meant to be used with <a class=\"reference internal\" href=\"class_audiostreamgenerator.html#class-audiostreamgenerator\"><span class=\"std std-ref\">AudioStreamGenerator</span></a> to play back the generated audio in real-time.</p>\n"
            },
            "class_audiostreamplayback": {
                "url": "https://docs.godotengine.org/en/4.1/classes/class_audiostreamplayback.html",
                "title": "AudioStreamPlayback",
                "blurb": "<p><strong>Inherits:</strong> <a class=\"reference internal\" href=\"class_refcounted.html#class-refcounted\"><span class=\"std std-ref\">RefCounted</span></a> <strong>&lt;</strong> <a class=\"reference internal\" href=\"class_object.html#class-object\"><span class=\"std std-ref\">Object</span></a></p><p><strong>Inherited By:</strong> <a class=\"reference internal\" href=\"class_audiostreamplaybackpolyphonic.html#class-audiostreamplaybackpolyphonic\"><span class=\"std std-ref\">AudioStreamPlaybackPolyphonic</span></a>, <a class=\"reference internal\" href=\"class_audiostreamplaybackresampled.html#class-audiostreamplaybackresampled\"><span class=\"std std-ref\">AudioStreamPlaybackResampled</span></a></p><p>Meta class for playing back audio.</p>",
                "description": "\n\n<p>Can play, loop, pause a scroll through audio. See <a class=\"reference internal\" href=\"class_audiostream.html#class-audiostream\"><span class=\"std std-ref\">AudioStream</span></a> and <a class=\"reference internal\" href=\"class_audiostreamoggvorbis.html#class-audiostreamoggvorbis\"><span class=\"std std-ref\">AudioStreamOggVorbis</span></a> for usage.</p>\n"
            },
            "class_audiostreamplaybackoggvorbis": {
                "url": "https://docs.godotengine.org/en/4.1/classes/class_audiostreamplaybackoggvorbis.html",
                "title": "AudioStreamPlaybackOggVorbis",
                "blurb": "<p><strong>Inherits:</strong> <a class=\"reference internal\" href=\"class_audiostreamplaybackresampled.html#class-audiostreamplaybackresampled\"><span class=\"std std-ref\">AudioStreamPlaybackResampled</span></a> <strong>&lt;</strong> <a class=\"reference internal\" href=\"class_audiostreamplayback.html#class-audiostreamplayback\"><span class=\"std std-ref\">AudioStreamPlayback</span></a> <strong>&lt;</strong> <a class=\"reference internal\" href=\"class_refcounted.html#class-refcounted\"><span class=\"std std-ref\">RefCounted</span></a> <strong>&lt;</strong> <a class=\"reference internal\" href=\"class_object.html#class-object\"><span class=\"std std-ref\">Object</span></a></p>",
                "description": null
            },
            "class_audiostreamplaybackpolyphonic": {
                "url": "https://docs.godotengine.org/en/4.1/classes/class_audiostreamplaybackpolyphonic.html",
                "title": "AudioStreamPlaybackPolyphonic",
                "blurb": "<p><strong>Inherits:</strong> <a class=\"reference internal\" href=\"class_audiostreamplayback.html#class-audiostreamplayback\"><span class=\"std std-ref\">AudioStreamPlayback</span></a> <strong>&lt;</strong> <a class=\"reference internal\" href=\"class_refcounted.html#class-refcounted\"><span class=\"std std-ref\">RefCounted</span></a> <strong>&lt;</strong> <a class=\"reference internal\" href=\"class_object.html#class-object\"><span class=\"std std-ref\">Object</span></a></p><p>Playback instance for <a class=\"reference internal\" href=\"class_audiostreampolyphonic.html#class-audiostreampolyphonic\"><span class=\"std std-ref\">AudioStreamPolyphonic</span></a>.</p>",
                "description": "\n\n<p>Playback instance for <a class=\"reference internal\" href=\"class_audiostreampolyphonic.html#class-audiostreampolyphonic\"><span class=\"std std-ref\">AudioStreamPolyphonic</span></a>. After setting the <code class=\"docutils literal notranslate\"><span class=\"pre\">stream</span></code> property of <a class=\"reference internal\" href=\"class_audiostreamplayer.html#class-audiostreamplayer\"><span class=\"std std-ref\">AudioStreamPlayer</span></a>, <a class=\"reference internal\" href=\"class_audiostreamplayer2d.html#class-audiostreamplayer2d\"><span class=\"std std-ref\">AudioStreamPlayer2D</span></a>, or <a class=\"reference internal\" href=\"class_audiostreamplayer3d.html#class-audiostreamplayer3d\"><span class=\"std std-ref\">AudioStreamPlayer3D</span></a>, the playback instance can be obtained by calling <a class=\"reference internal\" href=\"class_audiostreamplayer.html#class-audiostreamplayer-method-get-stream-playback\"><span class=\"std std-ref\">AudioStreamPlayer.get_stream_playback</span></a>, <a class=\"reference internal\" href=\"class_audiostreamplayer2d.html#class-audiostreamplayer2d-method-get-stream-playback\"><span class=\"std std-ref\">AudioStreamPlayer2D.get_stream_playback</span></a> or <a class=\"reference internal\" href=\"class_audiostreamplayer3d.html#class-audiostreamplayer3d-method-get-stream-playback\"><span class=\"std std-ref\">AudioStreamPlayer3D.get_stream_playback</span></a> methods.</p>\n"
            },
            "class_audiostreamplaybackresampled": {
                "url": "https://docs.godotengine.org/en/4.1/classes/class_audiostreamplaybackresampled.html",
                "title": "AudioStreamPlaybackResampled",
                "blurb": "<p><strong>Inherits:</strong> <a class=\"reference internal\" href=\"class_audiostreamplayback.html#class-audiostreamplayback\"><span class=\"std std-ref\">AudioStreamPlayback</span></a> <strong>&lt;</strong> <a class=\"reference internal\" href=\"class_refcounted.html#class-refcounted\"><span class=\"std std-ref\">RefCounted</span></a> <strong>&lt;</strong> <a class=\"reference internal\" href=\"class_object.html#class-object\"><span class=\"std std-ref\">Object</span></a></p><p><strong>Inherited By:</strong> <a class=\"reference internal\" href=\"class_audiostreamgeneratorplayback.html#class-audiostreamgeneratorplayback\"><span class=\"std std-ref\">AudioStreamGeneratorPlayback</span></a>, <a class=\"reference internal\" href=\"class_audiostreamplaybackoggvorbis.html#class-audiostreamplaybackoggvorbis\"><span class=\"std std-ref\">AudioStreamPlaybackOggVorbis</span></a></p>",
                "description": null
            },
            "class_callbacktweener": {
                "url": "https://docs.godotengine.org/en/4.1/classes/class_callbacktweener.html",
                "title": "CallbackTweener",
                "blurb": "<p><strong>Inherits:</strong> <a class=\"reference internal\" href=\"class_tweener.html#class-tweener\"><span class=\"std std-ref\">Tweener</span></a> <strong>&lt;</strong> <a class=\"reference internal\" href=\"class_refcounted.html#class-refcounted\"><span class=\"std std-ref\">RefCounted</span></a> <strong>&lt;</strong> <a class=\"reference internal\" href=\"class_object.html#class-object\"><span class=\"std std-ref\">Object</span></a></p><p>Calls the specified method after optional delay.</p>",
                "description": "\n\n<p><strong>CallbackTweener</strong> is used to call a method in a tweening sequence. See <a class=\"reference internal\" href=\"class_tween.html#class-tween-method-tween-callback\"><span class=\"std std-ref\">Tween.tween_callback</span></a> for more usage information.</p>\n<p><strong>Note:</strong> <a class=\"reference internal\" href=\"class_tween.html#class-tween-method-tween-callback\"><span class=\"std std-ref\">Tween.tween_callback</span></a> is the only correct way to create <strong>CallbackTweener</strong>. Any <strong>CallbackTweener</strong> created manually will not function correctly.</p>\n"
            },
            "class_camerafeed": {
                "url": "https://docs.godotengine.org/en/4.1/classes/class_camerafeed.html",
                "title": "CameraFeed",
                "blurb": "<p><strong>Inherits:</strong> <a class=\"reference internal\" href=\"class_refcounted.html#class-refcounted\"><span class=\"std std-ref\">RefCounted</span></a> <strong>&lt;</strong> <a class=\"reference internal\" href=\"class_object.html#class-object\"><span class=\"std std-ref\">Object</span></a></p><p>A camera feed gives you access to a single physical camera attached to your device.</p>",
                "description": "\n\n<p>A camera feed gives you access to a single physical camera attached to your device. When enabled, Godot will start capturing frames from the camera which can then be used. See also <a class=\"reference internal\" href=\"class_cameraserver.html#class-cameraserver\"><span class=\"std std-ref\">CameraServer</span></a>.</p>\n<p><strong>Note:</strong> Many cameras will return YCbCr images which are split into two textures and need to be combined in a shader. Godot does this automatically for you if you set the environment to show the camera image in the background.</p>\n"
            },
            "class_cameraserver": {
                "url": "https://docs.godotengine.org/en/4.1/classes/class_cameraserver.html",
                "title": "CameraServer",
                "blurb": "<p><strong>Inherits:</strong> <a class=\"reference internal\" href=\"class_object.html#class-object\"><span class=\"std std-ref\">Object</span></a></p><p>Server keeping track of different cameras accessible in Godot.</p>",
                "description": "\n\n<p>The <strong>CameraServer</strong> keeps track of different cameras accessible in Godot. These are external cameras such as webcams or the cameras on your phone.</p>\n<p>It is notably used to provide AR modules with a video feed from the camera.</p>\n<p><strong>Note:</strong> This class is currently only implemented on macOS and iOS. On other platforms, no <a class=\"reference internal\" href=\"class_camerafeed.html#class-camerafeed\"><span class=\"std std-ref\">CameraFeed</span></a>s will be available.</p>\n"
            },
            "class_charfxtransform": {
                "url": "https://docs.godotengine.org/en/4.1/classes/class_charfxtransform.html",
                "title": "CharFXTransform",
                "blurb": "<p><strong>Inherits:</strong> <a class=\"reference internal\" href=\"class_refcounted.html#class-refcounted\"><span class=\"std std-ref\">RefCounted</span></a> <strong>&lt;</strong> <a class=\"reference internal\" href=\"class_object.html#class-object\"><span class=\"std std-ref\">Object</span></a></p><p>Controls how an individual character will be displayed in a <a class=\"reference internal\" href=\"class_richtexteffect.html#class-richtexteffect\"><span class=\"std std-ref\">RichTextEffect</span></a>.</p>",
                "description": "\n\n<p>By setting various properties on this object, you can control how individual characters will be displayed in a <a class=\"reference internal\" href=\"class_richtexteffect.html#class-richtexteffect\"><span class=\"std std-ref\">RichTextEffect</span></a>.</p>\n"
            },
            "class_classdb": {
                "url": "https://docs.godotengine.org/en/4.1/classes/class_classdb.html",
                "title": "ClassDB",
                "blurb": "<p><strong>Inherits:</strong> <a class=\"reference internal\" href=\"class_object.html#class-object\"><span class=\"std std-ref\">Object</span></a></p><p>A class information repository.</p>",
                "description": "\n\n<p>Provides access to metadata stored for every available class.</p>\n"
            },
            "class_configfile": {
                "url": "https://docs.godotengine.org/en/4.1/classes/class_configfile.html",
                "title": "ConfigFile",
                "blurb": "<p><strong>Inherits:</strong> <a class=\"reference internal\" href=\"class_refcounted.html#class-refcounted\"><span class=\"std std-ref\">RefCounted</span></a> <strong>&lt;</strong> <a class=\"reference internal\" href=\"class_object.html#class-object\"><span class=\"std std-ref\">Object</span></a></p><p>Helper class to handle INI-style files.</p>",
                "description": "\n\n<p>This helper class can be used to store <a class=\"reference internal\" href=\"class_variant.html#class-variant\"><span class=\"std std-ref\">Variant</span></a> values on the filesystem using INI-style formatting. The stored values are identified by a section and a key:</p>\n<div class=\"highlight-gdscript notranslate\"><div class=\"highlight\"><pre><span></span><span class=\"p\">[</span><span class=\"n\">section</span><span class=\"p\">]</span>\n<span class=\"n\">some_key</span><span class=\"o\">=</span><span class=\"mi\">42</span>\n<span class=\"n\">string_example</span><span class=\"o\">=</span><span class=\"s2\">\"Hello World3D!\"</span>\n<span class=\"n\">a_vector</span><span class=\"o\">=</span><span class=\"nb nb-Type\">Vector3</span><span class=\"p\">(</span><span class=\"mi\">1</span><span class=\"p\">,</span> <span class=\"mi\">0</span><span class=\"p\">,</span> <span class=\"mi\">2</span><span class=\"p\">)</span>\n</pre></div>\n</div>\n<p>The stored data can be saved to or parsed from a file, though ConfigFile objects can also be used directly without accessing the filesystem.</p>\n<p>The following example shows how to create a simple <strong>ConfigFile</strong> and save it on disc:</p>\n<div class=\"sphinx-tabs docutils container\">\n<div aria-label=\"Tabbed content\" class=\"closeable\" role=\"tablist\"><button aria-controls=\"panel-0-R0RTY3JpcHQ=\" aria-selected=\"true\" class=\"sphinx-tabs-tab code-tab group-tab\" id=\"tab-0-R0RTY3JpcHQ=\" name=\"R0RTY3JpcHQ=\" role=\"tab\" tabindex=\"0\">GDScript</button><button aria-controls=\"panel-0-QyM=\" aria-selected=\"false\" class=\"sphinx-tabs-tab code-tab group-tab\" id=\"tab-0-QyM=\" name=\"QyM=\" role=\"tab\" tabindex=\"-1\">C#</button></div><div aria-labelledby=\"tab-0-R0RTY3JpcHQ=\" class=\"sphinx-tabs-panel code-tab group-tab\" id=\"panel-0-R0RTY3JpcHQ=\" name=\"R0RTY3JpcHQ=\" role=\"tabpanel\" tabindex=\"0\"><div class=\"highlight-gdscript notranslate\"><div class=\"highlight\"><pre><span></span><span class=\"c1\"># Create new ConfigFile object.</span>\n<span class=\"k\">var</span> <span class=\"n\">config</span> <span class=\"o\">=</span> <span class=\"n\">ConfigFile</span><span class=\"o\">.</span><span class=\"n\">new</span><span class=\"p\">()</span>\n\n<span class=\"c1\"># Store some values.</span>\n<span class=\"n\">config</span><span class=\"o\">.</span><span class=\"n\">set_value</span><span class=\"p\">(</span><span class=\"s2\">\"Player1\"</span><span class=\"p\">,</span> <span class=\"s2\">\"player_name\"</span><span class=\"p\">,</span> <span class=\"s2\">\"Steve\"</span><span class=\"p\">)</span>\n<span class=\"n\">config</span><span class=\"o\">.</span><span class=\"n\">set_value</span><span class=\"p\">(</span><span class=\"s2\">\"Player1\"</span><span class=\"p\">,</span> <span class=\"s2\">\"best_score\"</span><span class=\"p\">,</span> <span class=\"mi\">10</span><span class=\"p\">)</span>\n<span class=\"n\">config</span><span class=\"o\">.</span><span class=\"n\">set_value</span><span class=\"p\">(</span><span class=\"s2\">\"Player2\"</span><span class=\"p\">,</span> <span class=\"s2\">\"player_name\"</span><span class=\"p\">,</span> <span class=\"s2\">\"V3geta\"</span><span class=\"p\">)</span>\n<span class=\"n\">config</span><span class=\"o\">.</span><span class=\"n\">set_value</span><span class=\"p\">(</span><span class=\"s2\">\"Player2\"</span><span class=\"p\">,</span> <span class=\"s2\">\"best_score\"</span><span class=\"p\">,</span> <span class=\"mi\">9001</span><span class=\"p\">)</span>\n\n<span class=\"c1\"># Save it to a file (overwrite if already exists).</span>\n<span class=\"n\">config</span><span class=\"o\">.</span><span class=\"n\">save</span><span class=\"p\">(</span><span class=\"s2\">\"user://scores.cfg\"</span><span class=\"p\">)</span>\n</pre></div>\n</div>\n</div><div aria-labelledby=\"tab-0-QyM=\" class=\"sphinx-tabs-panel code-tab group-tab\" hidden=\"true\" id=\"panel-0-QyM=\" name=\"QyM=\" role=\"tabpanel\" tabindex=\"0\"><div class=\"highlight-csharp notranslate\"><div class=\"highlight\"><pre><span></span><span class=\"c1\">// Create new ConfigFile object.</span>\n<span class=\"kt\">var</span><span class=\"w\"> </span><span class=\"n\">config</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"k\">new</span><span class=\"w\"> </span><span class=\"n\">ConfigFile</span><span class=\"p\">();</span>\n\n<span class=\"c1\">// Store some values.</span>\n<span class=\"n\">config</span><span class=\"p\">.</span><span class=\"n\">SetValue</span><span class=\"p\">(</span><span class=\"s\">\"Player1\"</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"s\">\"player_name\"</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"s\">\"Steve\"</span><span class=\"p\">);</span>\n<span class=\"n\">config</span><span class=\"p\">.</span><span class=\"n\">SetValue</span><span class=\"p\">(</span><span class=\"s\">\"Player1\"</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"s\">\"best_score\"</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"m\">10</span><span class=\"p\">);</span>\n<span class=\"n\">config</span><span class=\"p\">.</span><span class=\"n\">SetValue</span><span class=\"p\">(</span><span class=\"s\">\"Player2\"</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"s\">\"player_name\"</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"s\">\"V3geta\"</span><span class=\"p\">);</span>\n<span class=\"n\">config</span><span class=\"p\">.</span><span class=\"n\">SetValue</span><span class=\"p\">(</span><span class=\"s\">\"Player2\"</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"s\">\"best_score\"</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"m\">9001</span><span class=\"p\">);</span>\n\n<span class=\"c1\">// Save it to a file (overwrite if already exists).</span>\n<span class=\"n\">config</span><span class=\"p\">.</span><span class=\"n\">Save</span><span class=\"p\">(</span><span class=\"s\">\"user://scores.cfg\"</span><span class=\"p\">);</span>\n</pre></div>\n</div>\n</div></div>\n<p>This example shows how the above file could be loaded:</p>\n<div class=\"sphinx-tabs docutils container\">\n<div aria-label=\"Tabbed content\" class=\"closeable\" role=\"tablist\"><button aria-controls=\"panel-1-R0RTY3JpcHQ=\" aria-selected=\"true\" class=\"sphinx-tabs-tab code-tab group-tab\" id=\"tab-1-R0RTY3JpcHQ=\" name=\"R0RTY3JpcHQ=\" role=\"tab\" tabindex=\"0\">GDScript</button><button aria-controls=\"panel-1-QyM=\" aria-selected=\"false\" class=\"sphinx-tabs-tab code-tab group-tab\" id=\"tab-1-QyM=\" name=\"QyM=\" role=\"tab\" tabindex=\"-1\">C#</button></div><div aria-labelledby=\"tab-1-R0RTY3JpcHQ=\" class=\"sphinx-tabs-panel code-tab group-tab\" id=\"panel-1-R0RTY3JpcHQ=\" name=\"R0RTY3JpcHQ=\" role=\"tabpanel\" tabindex=\"0\"><div class=\"highlight-gdscript notranslate\"><div class=\"highlight\"><pre><span></span><span class=\"k\">var</span> <span class=\"n\">score_data</span> <span class=\"o\">=</span> <span class=\"p\">{}</span>\n<span class=\"k\">var</span> <span class=\"n\">config</span> <span class=\"o\">=</span> <span class=\"n\">ConfigFile</span><span class=\"o\">.</span><span class=\"n\">new</span><span class=\"p\">()</span>\n\n<span class=\"c1\"># Load data from a file.</span>\n<span class=\"k\">var</span> <span class=\"n\">err</span> <span class=\"o\">=</span> <span class=\"n\">config</span><span class=\"o\">.</span><span class=\"n\">load</span><span class=\"p\">(</span><span class=\"s2\">\"user://scores.cfg\"</span><span class=\"p\">)</span>\n\n<span class=\"c1\"># If the file didn't load, ignore it.</span>\n<span class=\"k k-ControlFlow\">if</span> <span class=\"n\">err</span> <span class=\"o\">!=</span> <span class=\"n\">OK</span><span class=\"p\">:</span>\n    <span class=\"k k-ControlFlow\">return</span>\n\n<span class=\"c1\"># Iterate over all sections.</span>\n<span class=\"k k-ControlFlow\">for</span> <span class=\"n\">player</span> <span class=\"ow\">in</span> <span class=\"n\">config</span><span class=\"o\">.</span><span class=\"n\">get_sections</span><span class=\"p\">():</span>\n    <span class=\"c1\"># Fetch the data for each section.</span>\n    <span class=\"k\">var</span> <span class=\"n\">player_name</span> <span class=\"o\">=</span> <span class=\"n\">config</span><span class=\"o\">.</span><span class=\"n\">get_value</span><span class=\"p\">(</span><span class=\"n\">player</span><span class=\"p\">,</span> <span class=\"s2\">\"player_name\"</span><span class=\"p\">)</span>\n    <span class=\"k\">var</span> <span class=\"n\">player_score</span> <span class=\"o\">=</span> <span class=\"n\">config</span><span class=\"o\">.</span><span class=\"n\">get_value</span><span class=\"p\">(</span><span class=\"n\">player</span><span class=\"p\">,</span> <span class=\"s2\">\"best_score\"</span><span class=\"p\">)</span>\n    <span class=\"n\">score_data</span><span class=\"p\">[</span><span class=\"n\">player_name</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"n\">player_score</span>\n</pre></div>\n</div>\n</div><div aria-labelledby=\"tab-1-QyM=\" class=\"sphinx-tabs-panel code-tab group-tab\" hidden=\"true\" id=\"panel-1-QyM=\" name=\"QyM=\" role=\"tabpanel\" tabindex=\"0\"><div class=\"highlight-csharp notranslate\"><div class=\"highlight\"><pre><span></span><span class=\"kt\">var</span><span class=\"w\"> </span><span class=\"n\">score_data</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"k\">new</span><span class=\"w\"> </span><span class=\"n\">Godot</span><span class=\"p\">.</span><span class=\"n\">Collections</span><span class=\"p\">.</span><span class=\"n\">Dictionary</span><span class=\"p\">();</span>\n<span class=\"kt\">var</span><span class=\"w\"> </span><span class=\"n\">config</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"k\">new</span><span class=\"w\"> </span><span class=\"n\">ConfigFile</span><span class=\"p\">();</span>\n\n<span class=\"c1\">// Load data from a file.</span>\n<span class=\"n\">Error</span><span class=\"w\"> </span><span class=\"n\">err</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"n\">config</span><span class=\"p\">.</span><span class=\"n\">Load</span><span class=\"p\">(</span><span class=\"s\">\"user://scores.cfg\"</span><span class=\"p\">);</span>\n\n<span class=\"c1\">// If the file didn't load, ignore it.</span>\n<span class=\"k\">if</span><span class=\"w\"> </span><span class=\"p\">(</span><span class=\"n\">err</span><span class=\"w\"> </span><span class=\"o\">!=</span><span class=\"w\"> </span><span class=\"n\">Error</span><span class=\"p\">.</span><span class=\"n\">Ok</span><span class=\"p\">)</span>\n<span class=\"p\">{</span>\n<span class=\"w\">    </span><span class=\"k\">return</span><span class=\"p\">;</span>\n<span class=\"p\">}</span>\n\n<span class=\"c1\">// Iterate over all sections.</span>\n<span class=\"k\">foreach</span><span class=\"w\"> </span><span class=\"p\">(</span><span class=\"n\">String</span><span class=\"w\"> </span><span class=\"n\">player</span><span class=\"w\"> </span><span class=\"k\">in</span><span class=\"w\"> </span><span class=\"n\">config</span><span class=\"p\">.</span><span class=\"n\">GetSections</span><span class=\"p\">())</span>\n<span class=\"p\">{</span>\n<span class=\"w\">    </span><span class=\"c1\">// Fetch the data for each section.</span>\n<span class=\"w\">    </span><span class=\"kt\">var</span><span class=\"w\"> </span><span class=\"n\">player_name</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"p\">(</span><span class=\"n\">String</span><span class=\"p\">)</span><span class=\"n\">config</span><span class=\"p\">.</span><span class=\"n\">GetValue</span><span class=\"p\">(</span><span class=\"n\">player</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"s\">\"player_name\"</span><span class=\"p\">);</span>\n<span class=\"w\">    </span><span class=\"kt\">var</span><span class=\"w\"> </span><span class=\"n\">player_score</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"p\">(</span><span class=\"kt\">int</span><span class=\"p\">)</span><span class=\"n\">config</span><span class=\"p\">.</span><span class=\"n\">GetValue</span><span class=\"p\">(</span><span class=\"n\">player</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"s\">\"best_score\"</span><span class=\"p\">);</span>\n<span class=\"w\">    </span><span class=\"n\">score_data</span><span class=\"p\">[</span><span class=\"n\">player_name</span><span class=\"p\">]</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"n\">player_score</span><span class=\"p\">;</span>\n<span class=\"p\">}</span>\n</pre></div>\n</div>\n</div></div>\n<p>Any operation that mutates the ConfigFile such as <a class=\"reference internal\" href=\"#class-configfile-method-set-value\"><span class=\"std std-ref\">set_value</span></a>, <a class=\"reference internal\" href=\"#class-configfile-method-clear\"><span class=\"std std-ref\">clear</span></a>, or <a class=\"reference internal\" href=\"#class-configfile-method-erase-section\"><span class=\"std std-ref\">erase_section</span></a>, only changes what is loaded in memory. If you want to write the change to a file, you have to save the changes with <a class=\"reference internal\" href=\"#class-configfile-method-save\"><span class=\"std std-ref\">save</span></a>, <a class=\"reference internal\" href=\"#class-configfile-method-save-encrypted\"><span class=\"std std-ref\">save_encrypted</span></a>, or <a class=\"reference internal\" href=\"#class-configfile-method-save-encrypted-pass\"><span class=\"std std-ref\">save_encrypted_pass</span></a>.</p>\n<p>Keep in mind that section and property names can't contain spaces. Anything after a space will be ignored on save and on load.</p>\n<p>ConfigFiles can also contain manually written comment lines starting with a semicolon (<code class=\"docutils literal notranslate\"><span class=\"pre\">;</span></code>). Those lines will be ignored when parsing the file. Note that comments will be lost when saving the ConfigFile. This can still be useful for dedicated server configuration files, which are typically never overwritten without explicit user action.</p>\n<p><strong>Note:</strong> The file extension given to a ConfigFile does not have any impact on its formatting or behavior. By convention, the <code class=\"docutils literal notranslate\"><span class=\"pre\">.cfg</span></code> extension is used here, but any other extension such as <code class=\"docutils literal notranslate\"><span class=\"pre\">.ini</span></code> is also valid. Since neither <code class=\"docutils literal notranslate\"><span class=\"pre\">.cfg</span></code> nor <code class=\"docutils literal notranslate\"><span class=\"pre\">.ini</span></code> are standardized, Godot's ConfigFile formatting may differ from files written by other programs.</p>\n"
            },
            "class_crypto": {
                "url": "https://docs.godotengine.org/en/4.1/classes/class_crypto.html",
                "title": "Crypto",
                "blurb": "<p><strong>Inherits:</strong> <a class=\"reference internal\" href=\"class_refcounted.html#class-refcounted\"><span class=\"std std-ref\">RefCounted</span></a> <strong>&lt;</strong> <a class=\"reference internal\" href=\"class_object.html#class-object\"><span class=\"std std-ref\">Object</span></a></p><p>Provides access to advanced cryptographic functionalities.</p>",
                "description": "\n\n<p>The Crypto class provides access to advanced cryptographic functionalities.</p>\n<p>Currently, this includes asymmetric key encryption/decryption, signing/verification, and generating cryptographically secure random bytes, RSA keys, HMAC digests, and self-signed <a class=\"reference internal\" href=\"class_x509certificate.html#class-x509certificate\"><span class=\"std std-ref\">X509Certificate</span></a>s.</p>\n<div class=\"sphinx-tabs docutils container\">\n<div aria-label=\"Tabbed content\" class=\"closeable\" role=\"tablist\"><button aria-controls=\"panel-0-R0RTY3JpcHQ=\" aria-selected=\"true\" class=\"sphinx-tabs-tab code-tab group-tab\" id=\"tab-0-R0RTY3JpcHQ=\" name=\"R0RTY3JpcHQ=\" role=\"tab\" tabindex=\"0\">GDScript</button><button aria-controls=\"panel-0-QyM=\" aria-selected=\"false\" class=\"sphinx-tabs-tab code-tab group-tab\" id=\"tab-0-QyM=\" name=\"QyM=\" role=\"tab\" tabindex=\"-1\">C#</button></div><div aria-labelledby=\"tab-0-R0RTY3JpcHQ=\" class=\"sphinx-tabs-panel code-tab group-tab\" id=\"panel-0-R0RTY3JpcHQ=\" name=\"R0RTY3JpcHQ=\" role=\"tabpanel\" tabindex=\"0\"><div class=\"highlight-gdscript notranslate\"><div class=\"highlight\"><pre><span></span><span class=\"k\">extends</span> <span class=\"n\">Node</span>\n\n<span class=\"k\">var</span> <span class=\"n\">crypto</span> <span class=\"o\">=</span> <span class=\"n\">Crypto</span><span class=\"o\">.</span><span class=\"n\">new</span><span class=\"p\">()</span>\n<span class=\"k\">var</span> <span class=\"n\">key</span> <span class=\"o\">=</span> <span class=\"n\">CryptoKey</span><span class=\"o\">.</span><span class=\"n\">new</span><span class=\"p\">()</span>\n<span class=\"k\">var</span> <span class=\"n\">cert</span> <span class=\"o\">=</span> <span class=\"n\">X509Certificate</span><span class=\"o\">.</span><span class=\"n\">new</span><span class=\"p\">()</span>\n\n<span class=\"k\">func</span> <span class=\"n\">_ready</span><span class=\"p\">():</span>\n    <span class=\"c1\"># Generate new RSA key.</span>\n    <span class=\"n\">key</span> <span class=\"o\">=</span> <span class=\"n\">crypto</span><span class=\"o\">.</span><span class=\"n\">generate_rsa</span><span class=\"p\">(</span><span class=\"mi\">4096</span><span class=\"p\">)</span>\n    <span class=\"c1\"># Generate new self-signed certificate with the given key.</span>\n    <span class=\"n\">cert</span> <span class=\"o\">=</span> <span class=\"n\">crypto</span><span class=\"o\">.</span><span class=\"n\">generate_self_signed_certificate</span><span class=\"p\">(</span><span class=\"n\">key</span><span class=\"p\">,</span> <span class=\"s2\">\"CN=mydomain.com,O=My Game Company,C=IT\"</span><span class=\"p\">)</span>\n    <span class=\"c1\"># Save key and certificate in the user folder.</span>\n    <span class=\"n\">key</span><span class=\"o\">.</span><span class=\"n\">save</span><span class=\"p\">(</span><span class=\"s2\">\"user://generated.key\"</span><span class=\"p\">)</span>\n    <span class=\"n\">cert</span><span class=\"o\">.</span><span class=\"n\">save</span><span class=\"p\">(</span><span class=\"s2\">\"user://generated.crt\"</span><span class=\"p\">)</span>\n    <span class=\"c1\"># Encryption</span>\n    <span class=\"k\">var</span> <span class=\"n\">data</span> <span class=\"o\">=</span> <span class=\"s2\">\"Some data\"</span>\n    <span class=\"k\">var</span> <span class=\"n\">encrypted</span> <span class=\"o\">=</span> <span class=\"n\">crypto</span><span class=\"o\">.</span><span class=\"n\">encrypt</span><span class=\"p\">(</span><span class=\"n\">key</span><span class=\"p\">,</span> <span class=\"n\">data</span><span class=\"o\">.</span><span class=\"n\">to_utf8_buffer</span><span class=\"p\">())</span>\n    <span class=\"c1\"># Decryption</span>\n    <span class=\"k\">var</span> <span class=\"n\">decrypted</span> <span class=\"o\">=</span> <span class=\"n\">crypto</span><span class=\"o\">.</span><span class=\"n\">decrypt</span><span class=\"p\">(</span><span class=\"n\">key</span><span class=\"p\">,</span> <span class=\"n\">encrypted</span><span class=\"p\">)</span>\n    <span class=\"c1\"># Signing</span>\n    <span class=\"k\">var</span> <span class=\"n\">signature</span> <span class=\"o\">=</span> <span class=\"n\">crypto</span><span class=\"o\">.</span><span class=\"n\">sign</span><span class=\"p\">(</span><span class=\"n\">HashingContext</span><span class=\"o\">.</span><span class=\"n\">HASH_SHA256</span><span class=\"p\">,</span> <span class=\"n\">data</span><span class=\"o\">.</span><span class=\"n\">sha256_buffer</span><span class=\"p\">(),</span> <span class=\"n\">key</span><span class=\"p\">)</span>\n    <span class=\"c1\"># Verifying</span>\n    <span class=\"k\">var</span> <span class=\"n\">verified</span> <span class=\"o\">=</span> <span class=\"n\">crypto</span><span class=\"o\">.</span><span class=\"n\">verify</span><span class=\"p\">(</span><span class=\"n\">HashingContext</span><span class=\"o\">.</span><span class=\"n\">HASH_SHA256</span><span class=\"p\">,</span> <span class=\"n\">data</span><span class=\"o\">.</span><span class=\"n\">sha256_buffer</span><span class=\"p\">(),</span> <span class=\"n\">signature</span><span class=\"p\">,</span> <span class=\"n\">key</span><span class=\"p\">)</span>\n    <span class=\"c1\"># Checks</span>\n    <span class=\"nb\">assert</span><span class=\"p\">(</span><span class=\"n\">verified</span><span class=\"p\">)</span>\n    <span class=\"nb\">assert</span><span class=\"p\">(</span><span class=\"n\">data</span><span class=\"o\">.</span><span class=\"n\">to_utf8_buffer</span><span class=\"p\">()</span> <span class=\"o\">==</span> <span class=\"n\">decrypted</span><span class=\"p\">)</span>\n</pre></div>\n</div>\n</div><div aria-labelledby=\"tab-0-QyM=\" class=\"sphinx-tabs-panel code-tab group-tab\" hidden=\"true\" id=\"panel-0-QyM=\" name=\"QyM=\" role=\"tabpanel\" tabindex=\"0\"><div class=\"highlight-csharp notranslate\"><div class=\"highlight\"><pre><span></span><span class=\"k\">using</span><span class=\"w\"> </span><span class=\"nn\">Godot</span><span class=\"p\">;</span>\n<span class=\"k\">using</span><span class=\"w\"> </span><span class=\"nn\">System.Diagnostics</span><span class=\"p\">;</span>\n\n<span class=\"k\">public</span><span class=\"w\"> </span><span class=\"k\">partial</span><span class=\"w\"> </span><span class=\"k\">class</span><span class=\"w\"> </span><span class=\"nc\">MyNode</span><span class=\"w\"> </span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"n\">Node</span>\n<span class=\"p\">{</span>\n<span class=\"w\">    </span><span class=\"k\">private</span><span class=\"w\"> </span><span class=\"n\">Crypto</span><span class=\"w\"> </span><span class=\"n\">_crypto</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"k\">new</span><span class=\"w\"> </span><span class=\"n\">Crypto</span><span class=\"p\">();</span>\n<span class=\"w\">    </span><span class=\"k\">private</span><span class=\"w\"> </span><span class=\"n\">CryptoKey</span><span class=\"w\"> </span><span class=\"n\">_key</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"k\">new</span><span class=\"w\"> </span><span class=\"n\">CryptoKey</span><span class=\"p\">();</span>\n<span class=\"w\">    </span><span class=\"k\">private</span><span class=\"w\"> </span><span class=\"n\">X509Certificate</span><span class=\"w\"> </span><span class=\"n\">_cert</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"k\">new</span><span class=\"w\"> </span><span class=\"n\">X509Certificate</span><span class=\"p\">();</span>\n\n<span class=\"w\">    </span><span class=\"k\">public</span><span class=\"w\"> </span><span class=\"k\">override</span><span class=\"w\"> </span><span class=\"k\">void</span><span class=\"w\"> </span><span class=\"nf\">_Ready</span><span class=\"p\">()</span>\n<span class=\"w\">    </span><span class=\"p\">{</span>\n<span class=\"w\">        </span><span class=\"c1\">// Generate new RSA key.</span>\n<span class=\"w\">        </span><span class=\"n\">_key</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"n\">_crypto</span><span class=\"p\">.</span><span class=\"n\">GenerateRsa</span><span class=\"p\">(</span><span class=\"m\">4096</span><span class=\"p\">);</span>\n<span class=\"w\">        </span><span class=\"c1\">// Generate new self-signed certificate with the given key.</span>\n<span class=\"w\">        </span><span class=\"n\">_cert</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"n\">_crypto</span><span class=\"p\">.</span><span class=\"n\">GenerateSelfSignedCertificate</span><span class=\"p\">(</span><span class=\"n\">_key</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"s\">\"CN=mydomain.com,O=My Game Company,C=IT\"</span><span class=\"p\">);</span>\n<span class=\"w\">        </span><span class=\"c1\">// Save key and certificate in the user folder.</span>\n<span class=\"w\">        </span><span class=\"n\">_key</span><span class=\"p\">.</span><span class=\"n\">Save</span><span class=\"p\">(</span><span class=\"s\">\"user://generated.key\"</span><span class=\"p\">);</span>\n<span class=\"w\">        </span><span class=\"n\">_cert</span><span class=\"p\">.</span><span class=\"n\">Save</span><span class=\"p\">(</span><span class=\"s\">\"user://generated.crt\"</span><span class=\"p\">);</span>\n<span class=\"w\">        </span><span class=\"c1\">// Encryption</span>\n<span class=\"w\">        </span><span class=\"kt\">string</span><span class=\"w\"> </span><span class=\"n\">data</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"s\">\"Some data\"</span><span class=\"p\">;</span>\n<span class=\"w\">        </span><span class=\"kt\">byte</span><span class=\"p\">[]</span><span class=\"w\"> </span><span class=\"n\">encrypted</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"n\">_crypto</span><span class=\"p\">.</span><span class=\"n\">Encrypt</span><span class=\"p\">(</span><span class=\"n\">_key</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">data</span><span class=\"p\">.</span><span class=\"n\">ToUtf8Buffer</span><span class=\"p\">());</span>\n<span class=\"w\">        </span><span class=\"c1\">// Decryption</span>\n<span class=\"w\">        </span><span class=\"kt\">byte</span><span class=\"p\">[]</span><span class=\"w\"> </span><span class=\"n\">decrypted</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"n\">_crypto</span><span class=\"p\">.</span><span class=\"n\">Decrypt</span><span class=\"p\">(</span><span class=\"n\">_key</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">encrypted</span><span class=\"p\">);</span>\n<span class=\"w\">        </span><span class=\"c1\">// Signing</span>\n<span class=\"w\">        </span><span class=\"kt\">byte</span><span class=\"p\">[]</span><span class=\"w\"> </span><span class=\"n\">signature</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"n\">_crypto</span><span class=\"p\">.</span><span class=\"n\">Sign</span><span class=\"p\">(</span><span class=\"n\">HashingContext</span><span class=\"p\">.</span><span class=\"n\">HashType</span><span class=\"p\">.</span><span class=\"n\">Sha256</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">Data</span><span class=\"p\">.</span><span class=\"n\">Sha256Buffer</span><span class=\"p\">(),</span><span class=\"w\"> </span><span class=\"n\">_key</span><span class=\"p\">);</span>\n<span class=\"w\">        </span><span class=\"c1\">// Verifying</span>\n<span class=\"w\">        </span><span class=\"kt\">bool</span><span class=\"w\"> </span><span class=\"n\">verified</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"n\">_crypto</span><span class=\"p\">.</span><span class=\"n\">Verify</span><span class=\"p\">(</span><span class=\"n\">HashingContext</span><span class=\"p\">.</span><span class=\"n\">HashType</span><span class=\"p\">.</span><span class=\"n\">Sha256</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">Data</span><span class=\"p\">.</span><span class=\"n\">Sha256Buffer</span><span class=\"p\">(),</span><span class=\"w\"> </span><span class=\"n\">signature</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">_key</span><span class=\"p\">);</span>\n<span class=\"w\">        </span><span class=\"c1\">// Checks</span>\n<span class=\"w\">        </span><span class=\"n\">Debug</span><span class=\"p\">.</span><span class=\"n\">Assert</span><span class=\"p\">(</span><span class=\"n\">verified</span><span class=\"p\">);</span>\n<span class=\"w\">        </span><span class=\"n\">Debug</span><span class=\"p\">.</span><span class=\"n\">Assert</span><span class=\"p\">(</span><span class=\"n\">data</span><span class=\"p\">.</span><span class=\"n\">ToUtf8Buffer</span><span class=\"p\">()</span><span class=\"w\"> </span><span class=\"o\">==</span><span class=\"w\"> </span><span class=\"n\">decrypted</span><span class=\"p\">);</span>\n<span class=\"w\">    </span><span class=\"p\">}</span>\n<span class=\"p\">}</span>\n</pre></div>\n</div>\n</div></div>\n"
            },
            "class_diraccess": {
                "url": "https://docs.godotengine.org/en/4.1/classes/class_diraccess.html",
                "title": "DirAccess",
                "blurb": "<p><strong>Inherits:</strong> <a class=\"reference internal\" href=\"class_refcounted.html#class-refcounted\"><span class=\"std std-ref\">RefCounted</span></a> <strong>&lt;</strong> <a class=\"reference internal\" href=\"class_object.html#class-object\"><span class=\"std std-ref\">Object</span></a></p><p>Provides methods for managing directories and their content.</p>",
                "description": "\n\n<p>This class is used to manage directories and their content, even outside of the project folder.</p>\n<p><strong>DirAccess</strong> can't be instantiated directly. Instead it is created with a static method that takes a path for which it will be opened.</p>\n<p>Most of the methods have a static alternative that can be used without creating a <strong>DirAccess</strong>. Static methods only support absolute paths (including <code class=\"docutils literal notranslate\"><span class=\"pre\">res://</span></code> and <code class=\"docutils literal notranslate\"><span class=\"pre\">user://</span></code>).</p>\n<div class=\"highlight-gdscript notranslate\"><div class=\"highlight\"><pre><span></span><span class=\"c1\"># Standard</span>\n<span class=\"k\">var</span> <span class=\"n\">dir</span> <span class=\"o\">=</span> <span class=\"n\">DirAccess</span><span class=\"o\">.</span><span class=\"n\">open</span><span class=\"p\">(</span><span class=\"s2\">\"user://levels\"</span><span class=\"p\">)</span>\n<span class=\"n\">dir</span><span class=\"o\">.</span><span class=\"n\">make_dir</span><span class=\"p\">(</span><span class=\"s2\">\"world1\"</span><span class=\"p\">)</span>\n<span class=\"c1\"># Static</span>\n<span class=\"n\">DirAccess</span><span class=\"o\">.</span><span class=\"n\">make_dir_absolute</span><span class=\"p\">(</span><span class=\"s2\">\"user://levels/world1\"</span><span class=\"p\">)</span>\n</pre></div>\n</div>\n<p><strong>Note:</strong> Many resources types are imported (e.g. textures or sound files), and their source asset will not be included in the exported game, as only the imported version is used. Use <a class=\"reference internal\" href=\"class_resourceloader.html#class-resourceloader\"><span class=\"std std-ref\">ResourceLoader</span></a> to access imported resources.</p>\n<p>Here is an example on how to iterate through the files of a directory:</p>\n<div class=\"sphinx-tabs docutils container\">\n<div aria-label=\"Tabbed content\" class=\"closeable\" role=\"tablist\"><button aria-controls=\"panel-0-R0RTY3JpcHQ=\" aria-selected=\"true\" class=\"sphinx-tabs-tab code-tab group-tab\" id=\"tab-0-R0RTY3JpcHQ=\" name=\"R0RTY3JpcHQ=\" role=\"tab\" tabindex=\"0\">GDScript</button><button aria-controls=\"panel-0-QyM=\" aria-selected=\"false\" class=\"sphinx-tabs-tab code-tab group-tab\" id=\"tab-0-QyM=\" name=\"QyM=\" role=\"tab\" tabindex=\"-1\">C#</button></div><div aria-labelledby=\"tab-0-R0RTY3JpcHQ=\" class=\"sphinx-tabs-panel code-tab group-tab\" id=\"panel-0-R0RTY3JpcHQ=\" name=\"R0RTY3JpcHQ=\" role=\"tabpanel\" tabindex=\"0\"><div class=\"highlight-gdscript notranslate\"><div class=\"highlight\"><pre><span></span><span class=\"k\">func</span> <span class=\"n\">dir_contents</span><span class=\"p\">(</span><span class=\"n\">path</span><span class=\"p\">):</span>\n    <span class=\"k\">var</span> <span class=\"n\">dir</span> <span class=\"o\">=</span> <span class=\"n\">DirAccess</span><span class=\"o\">.</span><span class=\"n\">open</span><span class=\"p\">(</span><span class=\"n\">path</span><span class=\"p\">)</span>\n    <span class=\"k k-ControlFlow\">if</span> <span class=\"n\">dir</span><span class=\"p\">:</span>\n        <span class=\"n\">dir</span><span class=\"o\">.</span><span class=\"n\">list_dir_begin</span><span class=\"p\">()</span>\n        <span class=\"k\">var</span> <span class=\"n\">file_name</span> <span class=\"o\">=</span> <span class=\"n\">dir</span><span class=\"o\">.</span><span class=\"n\">get_next</span><span class=\"p\">()</span>\n        <span class=\"k k-ControlFlow\">while</span> <span class=\"n\">file_name</span> <span class=\"o\">!=</span> <span class=\"s2\">\"\"</span><span class=\"p\">:</span>\n            <span class=\"k k-ControlFlow\">if</span> <span class=\"n\">dir</span><span class=\"o\">.</span><span class=\"n\">current_is_dir</span><span class=\"p\">():</span>\n                <span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"s2\">\"Found directory: \"</span> <span class=\"o\">+</span> <span class=\"n\">file_name</span><span class=\"p\">)</span>\n            <span class=\"k k-ControlFlow\">else</span><span class=\"p\">:</span>\n                <span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"s2\">\"Found file: \"</span> <span class=\"o\">+</span> <span class=\"n\">file_name</span><span class=\"p\">)</span>\n            <span class=\"n\">file_name</span> <span class=\"o\">=</span> <span class=\"n\">dir</span><span class=\"o\">.</span><span class=\"n\">get_next</span><span class=\"p\">()</span>\n    <span class=\"k k-ControlFlow\">else</span><span class=\"p\">:</span>\n        <span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"s2\">\"An error occurred when trying to access the path.\"</span><span class=\"p\">)</span>\n</pre></div>\n</div>\n</div><div aria-labelledby=\"tab-0-QyM=\" class=\"sphinx-tabs-panel code-tab group-tab\" hidden=\"true\" id=\"panel-0-QyM=\" name=\"QyM=\" role=\"tabpanel\" tabindex=\"0\"><div class=\"highlight-csharp notranslate\"><div class=\"highlight\"><pre><span></span><span class=\"k\">public</span><span class=\"w\"> </span><span class=\"k\">void</span><span class=\"w\"> </span><span class=\"nf\">DirContents</span><span class=\"p\">(</span><span class=\"kt\">string</span><span class=\"w\"> </span><span class=\"n\">path</span><span class=\"p\">)</span>\n<span class=\"p\">{</span>\n<span class=\"w\">    </span><span class=\"k\">using</span><span class=\"w\"> </span><span class=\"nn\">var</span><span class=\"w\"> </span><span class=\"n\">dir</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"n\">DirAccess</span><span class=\"p\">.</span><span class=\"n\">Open</span><span class=\"p\">(</span><span class=\"n\">path</span><span class=\"p\">);</span>\n<span class=\"w\">    </span><span class=\"k\">if</span><span class=\"w\"> </span><span class=\"p\">(</span><span class=\"n\">dir</span><span class=\"w\"> </span><span class=\"o\">!=</span><span class=\"w\"> </span><span class=\"k\">null</span><span class=\"p\">)</span>\n<span class=\"w\">    </span><span class=\"p\">{</span>\n<span class=\"w\">        </span><span class=\"n\">dir</span><span class=\"p\">.</span><span class=\"n\">ListDirBegin</span><span class=\"p\">();</span>\n<span class=\"w\">        </span><span class=\"kt\">string</span><span class=\"w\"> </span><span class=\"n\">fileName</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"n\">dir</span><span class=\"p\">.</span><span class=\"n\">GetNext</span><span class=\"p\">();</span>\n<span class=\"w\">        </span><span class=\"k\">while</span><span class=\"w\"> </span><span class=\"p\">(</span><span class=\"n\">fileName</span><span class=\"w\"> </span><span class=\"o\">!=</span><span class=\"w\"> </span><span class=\"s\">\"\"</span><span class=\"p\">)</span>\n<span class=\"w\">        </span><span class=\"p\">{</span>\n<span class=\"w\">            </span><span class=\"k\">if</span><span class=\"w\"> </span><span class=\"p\">(</span><span class=\"n\">dir</span><span class=\"p\">.</span><span class=\"n\">CurrentIsDir</span><span class=\"p\">())</span>\n<span class=\"w\">            </span><span class=\"p\">{</span>\n<span class=\"w\">                </span><span class=\"n\">GD</span><span class=\"p\">.</span><span class=\"n\">Print</span><span class=\"p\">(</span><span class=\"s\">$\"Found directory: {fileName}\"</span><span class=\"p\">);</span>\n<span class=\"w\">            </span><span class=\"p\">}</span>\n<span class=\"w\">            </span><span class=\"k\">else</span>\n<span class=\"w\">            </span><span class=\"p\">{</span>\n<span class=\"w\">                </span><span class=\"n\">GD</span><span class=\"p\">.</span><span class=\"n\">Print</span><span class=\"p\">(</span><span class=\"s\">$\"Found file: {fileName}\"</span><span class=\"p\">);</span>\n<span class=\"w\">            </span><span class=\"p\">}</span>\n<span class=\"w\">            </span><span class=\"n\">fileName</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"n\">dir</span><span class=\"p\">.</span><span class=\"n\">GetNext</span><span class=\"p\">();</span>\n<span class=\"w\">        </span><span class=\"p\">}</span>\n<span class=\"w\">    </span><span class=\"p\">}</span>\n<span class=\"w\">    </span><span class=\"k\">else</span>\n<span class=\"w\">    </span><span class=\"p\">{</span>\n<span class=\"w\">        </span><span class=\"n\">GD</span><span class=\"p\">.</span><span class=\"n\">Print</span><span class=\"p\">(</span><span class=\"s\">\"An error occurred when trying to access the path.\"</span><span class=\"p\">);</span>\n<span class=\"w\">    </span><span class=\"p\">}</span>\n<span class=\"p\">}</span>\n</pre></div>\n</div>\n</div></div>\n"
            },
            "class_displayserver": {
                "url": "https://docs.godotengine.org/en/4.1/classes/class_displayserver.html",
                "title": "DisplayServer",
                "blurb": "<p><strong>Inherits:</strong> <a class=\"reference internal\" href=\"class_object.html#class-object\"><span class=\"std std-ref\">Object</span></a></p><p>A server interface for low-level window management.</p>",
                "description": "\n\n<p><strong>DisplayServer</strong> handles everything related to window management. It is separated from <a class=\"reference internal\" href=\"class_os.html#class-os\"><span class=\"std std-ref\">OS</span></a> as a single operating system may support multiple display servers.</p>\n<p><strong>Headless mode:</strong> Starting the engine with the <code class=\"docutils literal notranslate\"><span class=\"pre\">--headless</span></code> <a class=\"reference internal\" href=\"../tutorials/editor/command_line_tutorial.html\"><span class=\"doc\">command line argument</span></a> disables all rendering and window management functions. Most functions from <strong>DisplayServer</strong> will return dummy values in this case.</p>\n"
            },
            "class_dtlsserver": {
                "url": "https://docs.godotengine.org/en/4.1/classes/class_dtlsserver.html",
                "title": "DTLSServer",
                "blurb": "<p><strong>Inherits:</strong> <a class=\"reference internal\" href=\"class_refcounted.html#class-refcounted\"><span class=\"std std-ref\">RefCounted</span></a> <strong>&lt;</strong> <a class=\"reference internal\" href=\"class_object.html#class-object\"><span class=\"std std-ref\">Object</span></a></p><p>Helper class to implement a DTLS server.</p>",
                "description": "\n\n<p>This class is used to store the state of a DTLS server. Upon <a class=\"reference internal\" href=\"#class-dtlsserver-method-setup\"><span class=\"std std-ref\">setup</span></a> it converts connected <a class=\"reference internal\" href=\"class_packetpeerudp.html#class-packetpeerudp\"><span class=\"std std-ref\">PacketPeerUDP</span></a> to <a class=\"reference internal\" href=\"class_packetpeerdtls.html#class-packetpeerdtls\"><span class=\"std std-ref\">PacketPeerDTLS</span></a> accepting them via <a class=\"reference internal\" href=\"#class-dtlsserver-method-take-connection\"><span class=\"std std-ref\">take_connection</span></a> as DTLS clients. Under the hood, this class is used to store the DTLS state and cookies of the server. The reason of why the state and cookies are needed is outside of the scope of this documentation.</p>\n<p>Below a small example of how to use it:</p>\n<div class=\"sphinx-tabs docutils container\">\n<div aria-label=\"Tabbed content\" class=\"closeable\" role=\"tablist\"><button aria-controls=\"panel-0-R0RTY3JpcHQ=\" aria-selected=\"true\" class=\"sphinx-tabs-tab code-tab group-tab\" id=\"tab-0-R0RTY3JpcHQ=\" name=\"R0RTY3JpcHQ=\" role=\"tab\" tabindex=\"0\">GDScript</button><button aria-controls=\"panel-0-QyM=\" aria-selected=\"false\" class=\"sphinx-tabs-tab code-tab group-tab\" id=\"tab-0-QyM=\" name=\"QyM=\" role=\"tab\" tabindex=\"-1\">C#</button></div><div aria-labelledby=\"tab-0-R0RTY3JpcHQ=\" class=\"sphinx-tabs-panel code-tab group-tab\" id=\"panel-0-R0RTY3JpcHQ=\" name=\"R0RTY3JpcHQ=\" role=\"tabpanel\" tabindex=\"0\"><div class=\"highlight-gdscript notranslate\"><div class=\"highlight\"><pre><span></span><span class=\"c1\"># server_node.gd</span>\n<span class=\"k\">extends</span> <span class=\"n\">Node</span>\n\n<span class=\"k\">var</span> <span class=\"n\">dtls</span> <span class=\"p\">:</span><span class=\"o\">=</span> <span class=\"n\">DTLSServer</span><span class=\"o\">.</span><span class=\"n\">new</span><span class=\"p\">()</span>\n<span class=\"k\">var</span> <span class=\"n\">server</span> <span class=\"p\">:</span><span class=\"o\">=</span> <span class=\"n\">UDPServer</span><span class=\"o\">.</span><span class=\"n\">new</span><span class=\"p\">()</span>\n<span class=\"k\">var</span> <span class=\"n\">peers</span> <span class=\"o\">=</span> <span class=\"p\">[]</span>\n\n<span class=\"k\">func</span> <span class=\"n\">_ready</span><span class=\"p\">():</span>\n    <span class=\"n\">server</span><span class=\"o\">.</span><span class=\"n\">listen</span><span class=\"p\">(</span><span class=\"mi\">4242</span><span class=\"p\">)</span>\n    <span class=\"k\">var</span> <span class=\"n\">key</span> <span class=\"o\">=</span> <span class=\"nb\">load</span><span class=\"p\">(</span><span class=\"s2\">\"key.key\"</span><span class=\"p\">)</span> <span class=\"c1\"># Your private key.</span>\n    <span class=\"k\">var</span> <span class=\"n\">cert</span> <span class=\"o\">=</span> <span class=\"nb\">load</span><span class=\"p\">(</span><span class=\"s2\">\"cert.crt\"</span><span class=\"p\">)</span> <span class=\"c1\"># Your X509 certificate.</span>\n    <span class=\"n\">dtls</span><span class=\"o\">.</span><span class=\"n\">setup</span><span class=\"p\">(</span><span class=\"n\">key</span><span class=\"p\">,</span> <span class=\"n\">cert</span><span class=\"p\">)</span>\n\n<span class=\"k\">func</span> <span class=\"n\">_process</span><span class=\"p\">(</span><span class=\"n\">delta</span><span class=\"p\">):</span>\n    <span class=\"k k-ControlFlow\">while</span> <span class=\"n\">server</span><span class=\"o\">.</span><span class=\"n\">is_connection_available</span><span class=\"p\">():</span>\n        <span class=\"k\">var</span> <span class=\"n\">peer</span><span class=\"p\">:</span> <span class=\"n\">PacketPeerUDP</span> <span class=\"o\">=</span> <span class=\"n\">server</span><span class=\"o\">.</span><span class=\"n\">take_connection</span><span class=\"p\">()</span>\n        <span class=\"k\">var</span> <span class=\"n\">dtls_peer</span><span class=\"p\">:</span> <span class=\"n\">PacketPeerDTLS</span> <span class=\"o\">=</span> <span class=\"n\">dtls</span><span class=\"o\">.</span><span class=\"n\">take_connection</span><span class=\"p\">(</span><span class=\"n\">peer</span><span class=\"p\">)</span>\n        <span class=\"k k-ControlFlow\">if</span> <span class=\"n\">dtls_peer</span><span class=\"o\">.</span><span class=\"n\">get_status</span><span class=\"p\">()</span> <span class=\"o\">!=</span> <span class=\"n\">PacketPeerDTLS</span><span class=\"o\">.</span><span class=\"n\">STATUS_HANDSHAKING</span><span class=\"p\">:</span>\n            <span class=\"k k-ControlFlow\">continue</span> <span class=\"c1\"># It is normal that 50% of the connections fails due to cookie exchange.</span>\n        <span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"s2\">\"Peer connected!\"</span><span class=\"p\">)</span>\n        <span class=\"n\">peers</span><span class=\"o\">.</span><span class=\"n\">append</span><span class=\"p\">(</span><span class=\"n\">dtls_peer</span><span class=\"p\">)</span>\n\n    <span class=\"k k-ControlFlow\">for</span> <span class=\"n\">p</span> <span class=\"ow\">in</span> <span class=\"n\">peers</span><span class=\"p\">:</span>\n        <span class=\"n\">p</span><span class=\"o\">.</span><span class=\"n\">poll</span><span class=\"p\">()</span> <span class=\"c1\"># Must poll to update the state.</span>\n        <span class=\"k k-ControlFlow\">if</span> <span class=\"n\">p</span><span class=\"o\">.</span><span class=\"n\">get_status</span><span class=\"p\">()</span> <span class=\"o\">==</span> <span class=\"n\">PacketPeerDTLS</span><span class=\"o\">.</span><span class=\"n\">STATUS_CONNECTED</span><span class=\"p\">:</span>\n            <span class=\"k k-ControlFlow\">while</span> <span class=\"n\">p</span><span class=\"o\">.</span><span class=\"n\">get_available_packet_count</span><span class=\"p\">()</span> <span class=\"o\">&gt;</span> <span class=\"mi\">0</span><span class=\"p\">:</span>\n                <span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"s2\">\"Received message from client: </span><span class=\"si\">%s</span><span class=\"s2\">\"</span> <span class=\"o\">%</span> <span class=\"n\">p</span><span class=\"o\">.</span><span class=\"n\">get_packet</span><span class=\"p\">()</span><span class=\"o\">.</span><span class=\"n\">get_string_from_utf8</span><span class=\"p\">())</span>\n                <span class=\"n\">p</span><span class=\"o\">.</span><span class=\"n\">put_packet</span><span class=\"p\">(</span><span class=\"s2\">\"Hello DTLS client\"</span><span class=\"o\">.</span><span class=\"n\">to_utf8_buffer</span><span class=\"p\">())</span>\n</pre></div>\n</div>\n</div><div aria-labelledby=\"tab-0-QyM=\" class=\"sphinx-tabs-panel code-tab group-tab\" hidden=\"true\" id=\"panel-0-QyM=\" name=\"QyM=\" role=\"tabpanel\" tabindex=\"0\"><div class=\"highlight-csharp notranslate\"><div class=\"highlight\"><pre><span></span><span class=\"c1\">// ServerNode.cs</span>\n<span class=\"k\">using</span><span class=\"w\"> </span><span class=\"nn\">Godot</span><span class=\"p\">;</span>\n\n<span class=\"k\">public</span><span class=\"w\"> </span><span class=\"k\">partial</span><span class=\"w\"> </span><span class=\"k\">class</span><span class=\"w\"> </span><span class=\"nc\">ServerNode</span><span class=\"w\"> </span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"n\">Node</span>\n<span class=\"p\">{</span>\n<span class=\"w\">    </span><span class=\"k\">private</span><span class=\"w\"> </span><span class=\"n\">DtlsServer</span><span class=\"w\"> </span><span class=\"n\">_dtls</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"k\">new</span><span class=\"w\"> </span><span class=\"n\">DtlsServer</span><span class=\"p\">();</span>\n<span class=\"w\">    </span><span class=\"k\">private</span><span class=\"w\"> </span><span class=\"n\">UdpServer</span><span class=\"w\"> </span><span class=\"n\">_server</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"k\">new</span><span class=\"w\"> </span><span class=\"n\">UdpServer</span><span class=\"p\">();</span>\n<span class=\"w\">    </span><span class=\"k\">private</span><span class=\"w\"> </span><span class=\"n\">Godot</span><span class=\"p\">.</span><span class=\"n\">Collections</span><span class=\"p\">.</span><span class=\"n\">Array</span><span class=\"o\">&lt;</span><span class=\"n\">PacketPeerDTLS</span><span class=\"o\">&gt;</span><span class=\"w\"> </span><span class=\"n\">_peers</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"k\">new</span><span class=\"w\"> </span><span class=\"n\">Godot</span><span class=\"p\">.</span><span class=\"n\">Collections</span><span class=\"p\">.</span><span class=\"n\">Array</span><span class=\"o\">&lt;</span><span class=\"n\">PacketPeerDTLS</span><span class=\"o\">&gt;</span><span class=\"p\">();</span>\n\n<span class=\"w\">    </span><span class=\"k\">public</span><span class=\"w\"> </span><span class=\"k\">override</span><span class=\"w\"> </span><span class=\"k\">void</span><span class=\"w\"> </span><span class=\"nf\">_Ready</span><span class=\"p\">()</span>\n<span class=\"w\">    </span><span class=\"p\">{</span>\n<span class=\"w\">        </span><span class=\"n\">_server</span><span class=\"p\">.</span><span class=\"n\">Listen</span><span class=\"p\">(</span><span class=\"m\">4242</span><span class=\"p\">);</span>\n<span class=\"w\">        </span><span class=\"kt\">var</span><span class=\"w\"> </span><span class=\"n\">key</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"n\">GD</span><span class=\"p\">.</span><span class=\"n\">Load</span><span class=\"o\">&lt;</span><span class=\"n\">CryptoKey</span><span class=\"o\">&gt;</span><span class=\"p\">(</span><span class=\"s\">\"key.key\"</span><span class=\"p\">);</span><span class=\"w\"> </span><span class=\"c1\">// Your private key.</span>\n<span class=\"w\">        </span><span class=\"kt\">var</span><span class=\"w\"> </span><span class=\"n\">cert</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"n\">GD</span><span class=\"p\">.</span><span class=\"n\">Load</span><span class=\"o\">&lt;</span><span class=\"n\">X509Certificate</span><span class=\"o\">&gt;</span><span class=\"p\">(</span><span class=\"s\">\"cert.crt\"</span><span class=\"p\">);</span><span class=\"w\"> </span><span class=\"c1\">// Your X509 certificate.</span>\n<span class=\"w\">        </span><span class=\"n\">_dtls</span><span class=\"p\">.</span><span class=\"n\">Setup</span><span class=\"p\">(</span><span class=\"n\">key</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">cert</span><span class=\"p\">);</span>\n<span class=\"w\">    </span><span class=\"p\">}</span>\n\n<span class=\"w\">    </span><span class=\"k\">public</span><span class=\"w\"> </span><span class=\"k\">override</span><span class=\"w\"> </span><span class=\"k\">void</span><span class=\"w\"> </span><span class=\"nf\">_Process</span><span class=\"p\">(</span><span class=\"kt\">double</span><span class=\"w\"> </span><span class=\"n\">delta</span><span class=\"p\">)</span>\n<span class=\"w\">    </span><span class=\"p\">{</span>\n<span class=\"w\">        </span><span class=\"k\">while</span><span class=\"w\"> </span><span class=\"p\">(</span><span class=\"n\">Server</span><span class=\"p\">.</span><span class=\"n\">IsConnectionAvailable</span><span class=\"p\">())</span>\n<span class=\"w\">        </span><span class=\"p\">{</span>\n<span class=\"w\">            </span><span class=\"n\">PacketPeerUDP</span><span class=\"w\"> </span><span class=\"n\">peer</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"n\">_server</span><span class=\"p\">.</span><span class=\"n\">TakeConnection</span><span class=\"p\">();</span>\n<span class=\"w\">            </span><span class=\"n\">PacketPeerDTLS</span><span class=\"w\"> </span><span class=\"n\">dtlsPeer</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"n\">_dtls</span><span class=\"p\">.</span><span class=\"n\">TakeConnection</span><span class=\"p\">(</span><span class=\"n\">peer</span><span class=\"p\">);</span>\n<span class=\"w\">            </span><span class=\"k\">if</span><span class=\"w\"> </span><span class=\"p\">(</span><span class=\"n\">dtlsPeer</span><span class=\"p\">.</span><span class=\"n\">GetStatus</span><span class=\"p\">()</span><span class=\"w\"> </span><span class=\"o\">!=</span><span class=\"w\"> </span><span class=\"n\">PacketPeerDtls</span><span class=\"p\">.</span><span class=\"n\">Status</span><span class=\"p\">.</span><span class=\"n\">Handshaking</span><span class=\"p\">)</span>\n<span class=\"w\">            </span><span class=\"p\">{</span>\n<span class=\"w\">                </span><span class=\"k\">continue</span><span class=\"p\">;</span><span class=\"w\"> </span><span class=\"c1\">// It is normal that 50% of the connections fails due to cookie exchange.</span>\n<span class=\"w\">            </span><span class=\"p\">}</span>\n<span class=\"w\">            </span><span class=\"n\">GD</span><span class=\"p\">.</span><span class=\"n\">Print</span><span class=\"p\">(</span><span class=\"s\">\"Peer connected!\"</span><span class=\"p\">);</span>\n<span class=\"w\">            </span><span class=\"n\">_peers</span><span class=\"p\">.</span><span class=\"n\">Add</span><span class=\"p\">(</span><span class=\"n\">dtlsPeer</span><span class=\"p\">);</span>\n<span class=\"w\">        </span><span class=\"p\">}</span>\n\n<span class=\"w\">        </span><span class=\"k\">foreach</span><span class=\"w\"> </span><span class=\"p\">(</span><span class=\"kt\">var</span><span class=\"w\"> </span><span class=\"n\">p</span><span class=\"w\"> </span><span class=\"k\">in</span><span class=\"w\"> </span><span class=\"n\">_peers</span><span class=\"p\">)</span>\n<span class=\"w\">        </span><span class=\"p\">{</span>\n<span class=\"w\">            </span><span class=\"n\">p</span><span class=\"p\">.</span><span class=\"n\">Poll</span><span class=\"p\">();</span><span class=\"w\"> </span><span class=\"c1\">// Must poll to update the state.</span>\n<span class=\"w\">            </span><span class=\"k\">if</span><span class=\"w\"> </span><span class=\"p\">(</span><span class=\"n\">p</span><span class=\"p\">.</span><span class=\"n\">GetStatus</span><span class=\"p\">()</span><span class=\"w\"> </span><span class=\"o\">==</span><span class=\"w\"> </span><span class=\"n\">PacketPeerDtls</span><span class=\"p\">.</span><span class=\"n\">Status</span><span class=\"p\">.</span><span class=\"n\">Connected</span><span class=\"p\">)</span>\n<span class=\"w\">            </span><span class=\"p\">{</span>\n<span class=\"w\">                </span><span class=\"k\">while</span><span class=\"w\"> </span><span class=\"p\">(</span><span class=\"n\">p</span><span class=\"p\">.</span><span class=\"n\">GetAvailablePacketCount</span><span class=\"p\">()</span><span class=\"w\"> </span><span class=\"o\">&gt;</span><span class=\"w\"> </span><span class=\"m\">0</span><span class=\"p\">)</span>\n<span class=\"w\">                </span><span class=\"p\">{</span>\n<span class=\"w\">                    </span><span class=\"n\">GD</span><span class=\"p\">.</span><span class=\"n\">Print</span><span class=\"p\">(</span><span class=\"s\">$\"Received Message From Client: {p.GetPacket().GetStringFromUtf8()}\"</span><span class=\"p\">);</span>\n<span class=\"w\">                    </span><span class=\"n\">p</span><span class=\"p\">.</span><span class=\"n\">PutPacket</span><span class=\"p\">(</span><span class=\"s\">\"Hello DTLS Client\"</span><span class=\"p\">.</span><span class=\"n\">ToUtf8Buffer</span><span class=\"p\">());</span>\n<span class=\"w\">                </span><span class=\"p\">}</span>\n<span class=\"w\">            </span><span class=\"p\">}</span>\n<span class=\"w\">        </span><span class=\"p\">}</span>\n<span class=\"w\">    </span><span class=\"p\">}</span>\n<span class=\"p\">}</span>\n</pre></div>\n</div>\n</div></div>\n<div class=\"sphinx-tabs docutils container\">\n<div aria-label=\"Tabbed content\" class=\"closeable\" role=\"tablist\"><button aria-controls=\"panel-1-R0RTY3JpcHQ=\" aria-selected=\"true\" class=\"sphinx-tabs-tab code-tab group-tab\" id=\"tab-1-R0RTY3JpcHQ=\" name=\"R0RTY3JpcHQ=\" role=\"tab\" tabindex=\"0\">GDScript</button><button aria-controls=\"panel-1-QyM=\" aria-selected=\"false\" class=\"sphinx-tabs-tab code-tab group-tab\" id=\"tab-1-QyM=\" name=\"QyM=\" role=\"tab\" tabindex=\"-1\">C#</button></div><div aria-labelledby=\"tab-1-R0RTY3JpcHQ=\" class=\"sphinx-tabs-panel code-tab group-tab\" id=\"panel-1-R0RTY3JpcHQ=\" name=\"R0RTY3JpcHQ=\" role=\"tabpanel\" tabindex=\"0\"><div class=\"highlight-gdscript notranslate\"><div class=\"highlight\"><pre><span></span><span class=\"c1\"># client_node.gd</span>\n<span class=\"k\">extends</span> <span class=\"n\">Node</span>\n\n<span class=\"k\">var</span> <span class=\"n\">dtls</span> <span class=\"p\">:</span><span class=\"o\">=</span> <span class=\"n\">PacketPeerDTLS</span><span class=\"o\">.</span><span class=\"n\">new</span><span class=\"p\">()</span>\n<span class=\"k\">var</span> <span class=\"n\">udp</span> <span class=\"p\">:</span><span class=\"o\">=</span> <span class=\"n\">PacketPeerUDP</span><span class=\"o\">.</span><span class=\"n\">new</span><span class=\"p\">()</span>\n<span class=\"k\">var</span> <span class=\"n\">connected</span> <span class=\"o\">=</span> <span class=\"bp\">false</span>\n\n<span class=\"k\">func</span> <span class=\"n\">_ready</span><span class=\"p\">():</span>\n    <span class=\"n\">udp</span><span class=\"o\">.</span><span class=\"n\">connect_to_host</span><span class=\"p\">(</span><span class=\"s2\">\"127.0.0.1\"</span><span class=\"p\">,</span> <span class=\"mi\">4242</span><span class=\"p\">)</span>\n    <span class=\"n\">dtls</span><span class=\"o\">.</span><span class=\"n\">connect_to_peer</span><span class=\"p\">(</span><span class=\"n\">udp</span><span class=\"p\">,</span> <span class=\"bp\">false</span><span class=\"p\">)</span> <span class=\"c1\"># Use true in production for certificate validation!</span>\n\n<span class=\"k\">func</span> <span class=\"n\">_process</span><span class=\"p\">(</span><span class=\"n\">delta</span><span class=\"p\">):</span>\n    <span class=\"n\">dtls</span><span class=\"o\">.</span><span class=\"n\">poll</span><span class=\"p\">()</span>\n    <span class=\"k k-ControlFlow\">if</span> <span class=\"n\">dtls</span><span class=\"o\">.</span><span class=\"n\">get_status</span><span class=\"p\">()</span> <span class=\"o\">==</span> <span class=\"n\">PacketPeerDTLS</span><span class=\"o\">.</span><span class=\"n\">STATUS_CONNECTED</span><span class=\"p\">:</span>\n        <span class=\"k k-ControlFlow\">if</span> <span class=\"o\">!</span><span class=\"n\">connected</span><span class=\"p\">:</span>\n            <span class=\"c1\"># Try to contact server</span>\n            <span class=\"n\">dtls</span><span class=\"o\">.</span><span class=\"n\">put_packet</span><span class=\"p\">(</span><span class=\"s2\">\"The answer is... 42!\"</span><span class=\"o\">.</span><span class=\"n\">to_utf8_buffer</span><span class=\"p\">())</span>\n        <span class=\"k k-ControlFlow\">while</span> <span class=\"n\">dtls</span><span class=\"o\">.</span><span class=\"n\">get_available_packet_count</span><span class=\"p\">()</span> <span class=\"o\">&gt;</span> <span class=\"mi\">0</span><span class=\"p\">:</span>\n            <span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"s2\">\"Connected: </span><span class=\"si\">%s</span><span class=\"s2\">\"</span> <span class=\"o\">%</span> <span class=\"n\">dtls</span><span class=\"o\">.</span><span class=\"n\">get_packet</span><span class=\"p\">()</span><span class=\"o\">.</span><span class=\"n\">get_string_from_utf8</span><span class=\"p\">())</span>\n            <span class=\"n\">connected</span> <span class=\"o\">=</span> <span class=\"bp\">true</span>\n</pre></div>\n</div>\n</div><div aria-labelledby=\"tab-1-QyM=\" class=\"sphinx-tabs-panel code-tab group-tab\" hidden=\"true\" id=\"panel-1-QyM=\" name=\"QyM=\" role=\"tabpanel\" tabindex=\"0\"><div class=\"highlight-csharp notranslate\"><div class=\"highlight\"><pre><span></span><span class=\"c1\">// ClientNode.cs</span>\n<span class=\"k\">using</span><span class=\"w\"> </span><span class=\"nn\">Godot</span><span class=\"p\">;</span>\n<span class=\"k\">using</span><span class=\"w\"> </span><span class=\"nn\">System.Text</span><span class=\"p\">;</span>\n\n<span class=\"k\">public</span><span class=\"w\"> </span><span class=\"k\">partial</span><span class=\"w\"> </span><span class=\"k\">class</span><span class=\"w\"> </span><span class=\"nc\">ClientNode</span><span class=\"w\"> </span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"n\">Node</span>\n<span class=\"p\">{</span>\n<span class=\"w\">    </span><span class=\"k\">private</span><span class=\"w\"> </span><span class=\"n\">PacketPeerDtls</span><span class=\"w\"> </span><span class=\"n\">_dtls</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"k\">new</span><span class=\"w\"> </span><span class=\"n\">PacketPeerDtls</span><span class=\"p\">();</span>\n<span class=\"w\">    </span><span class=\"k\">private</span><span class=\"w\"> </span><span class=\"n\">PacketPeerUdp</span><span class=\"w\"> </span><span class=\"n\">_udp</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"k\">new</span><span class=\"w\"> </span><span class=\"n\">PacketPeerUdp</span><span class=\"p\">();</span>\n<span class=\"w\">    </span><span class=\"k\">private</span><span class=\"w\"> </span><span class=\"kt\">bool</span><span class=\"w\"> </span><span class=\"n\">_connected</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"k\">false</span><span class=\"p\">;</span>\n\n<span class=\"w\">    </span><span class=\"k\">public</span><span class=\"w\"> </span><span class=\"k\">override</span><span class=\"w\"> </span><span class=\"k\">void</span><span class=\"w\"> </span><span class=\"nf\">_Ready</span><span class=\"p\">()</span>\n<span class=\"w\">    </span><span class=\"p\">{</span>\n<span class=\"w\">        </span><span class=\"n\">_udp</span><span class=\"p\">.</span><span class=\"n\">ConnectToHost</span><span class=\"p\">(</span><span class=\"s\">\"127.0.0.1\"</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"m\">4242</span><span class=\"p\">);</span>\n<span class=\"w\">        </span><span class=\"n\">_dtls</span><span class=\"p\">.</span><span class=\"n\">ConnectToPeer</span><span class=\"p\">(</span><span class=\"n\">_udp</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">validateCerts</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"k\">false</span><span class=\"p\">);</span><span class=\"w\"> </span><span class=\"c1\">// Use true in production for certificate validation!</span>\n<span class=\"w\">    </span><span class=\"p\">}</span>\n\n<span class=\"w\">    </span><span class=\"k\">public</span><span class=\"w\"> </span><span class=\"k\">override</span><span class=\"w\"> </span><span class=\"k\">void</span><span class=\"w\"> </span><span class=\"nf\">_Process</span><span class=\"p\">(</span><span class=\"kt\">double</span><span class=\"w\"> </span><span class=\"n\">delta</span><span class=\"p\">)</span>\n<span class=\"w\">    </span><span class=\"p\">{</span>\n<span class=\"w\">        </span><span class=\"n\">_dtls</span><span class=\"p\">.</span><span class=\"n\">Poll</span><span class=\"p\">();</span>\n<span class=\"w\">        </span><span class=\"k\">if</span><span class=\"w\"> </span><span class=\"p\">(</span><span class=\"n\">_dtls</span><span class=\"p\">.</span><span class=\"n\">GetStatus</span><span class=\"p\">()</span><span class=\"w\"> </span><span class=\"o\">==</span><span class=\"w\"> </span><span class=\"n\">PacketPeerDtls</span><span class=\"p\">.</span><span class=\"n\">Status</span><span class=\"p\">.</span><span class=\"n\">Connected</span><span class=\"p\">)</span>\n<span class=\"w\">        </span><span class=\"p\">{</span>\n<span class=\"w\">            </span><span class=\"k\">if</span><span class=\"w\"> </span><span class=\"p\">(</span><span class=\"o\">!</span><span class=\"n\">_connected</span><span class=\"p\">)</span>\n<span class=\"w\">            </span><span class=\"p\">{</span>\n<span class=\"w\">                </span><span class=\"c1\">// Try to contact server</span>\n<span class=\"w\">                </span><span class=\"n\">_dtls</span><span class=\"p\">.</span><span class=\"n\">PutPacket</span><span class=\"p\">(</span><span class=\"s\">\"The Answer Is..42!\"</span><span class=\"p\">.</span><span class=\"n\">ToUtf8Buffer</span><span class=\"p\">());</span>\n<span class=\"w\">            </span><span class=\"p\">}</span>\n<span class=\"w\">            </span><span class=\"k\">while</span><span class=\"w\"> </span><span class=\"p\">(</span><span class=\"n\">_dtls</span><span class=\"p\">.</span><span class=\"n\">GetAvailablePacketCount</span><span class=\"p\">()</span><span class=\"w\"> </span><span class=\"o\">&gt;</span><span class=\"w\"> </span><span class=\"m\">0</span><span class=\"p\">)</span>\n<span class=\"w\">            </span><span class=\"p\">{</span>\n<span class=\"w\">                </span><span class=\"n\">GD</span><span class=\"p\">.</span><span class=\"n\">Print</span><span class=\"p\">(</span><span class=\"s\">$\"Connected: {_dtls.GetPacket().GetStringFromUtf8()}\"</span><span class=\"p\">);</span>\n<span class=\"w\">                </span><span class=\"n\">_connected</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"k\">true</span><span class=\"p\">;</span>\n<span class=\"w\">            </span><span class=\"p\">}</span>\n<span class=\"w\">        </span><span class=\"p\">}</span>\n<span class=\"w\">    </span><span class=\"p\">}</span>\n<span class=\"p\">}</span>\n</pre></div>\n</div>\n</div></div>\n"
            },
            "class_editordebuggerplugin": {
                "url": "https://docs.godotengine.org/en/4.1/classes/class_editordebuggerplugin.html",
                "title": "EditorDebuggerPlugin",
                "blurb": "<p><strong>Inherits:</strong> <a class=\"reference internal\" href=\"class_refcounted.html#class-refcounted\"><span class=\"std std-ref\">RefCounted</span></a> <strong>&lt;</strong> <a class=\"reference internal\" href=\"class_object.html#class-object\"><span class=\"std std-ref\">Object</span></a></p><p>A base class to implement debugger plugins.</p>",
                "description": "\n\n<p><strong>EditorDebuggerPlugin</strong> provides functions related to the editor side of the debugger.</p>\n<p>To interact with the debugger, an instance of this class must be added to the editor via <a class=\"reference internal\" href=\"class_editorplugin.html#class-editorplugin-method-add-debugger-plugin\"><span class=\"std std-ref\">EditorPlugin.add_debugger_plugin</span></a>.</p>\n<p>Once added, the <a class=\"reference internal\" href=\"#class-editordebuggerplugin-method-setup-session\"><span class=\"std std-ref\">_setup_session</span></a> callback will be called for every <a class=\"reference internal\" href=\"class_editordebuggersession.html#class-editordebuggersession\"><span class=\"std std-ref\">EditorDebuggerSession</span></a> available to the plugin, and when new ones are created (the sessions may be inactive during this stage).</p>\n<p>You can retrieve the available <a class=\"reference internal\" href=\"class_editordebuggersession.html#class-editordebuggersession\"><span class=\"std std-ref\">EditorDebuggerSession</span></a>s via <a class=\"reference internal\" href=\"#class-editordebuggerplugin-method-get-sessions\"><span class=\"std std-ref\">get_sessions</span></a> or get a specific one via <a class=\"reference internal\" href=\"#class-editordebuggerplugin-method-get-session\"><span class=\"std std-ref\">get_session</span></a>.</p>\n<div class=\"sphinx-tabs docutils container\">\n<div aria-label=\"Tabbed content\" class=\"closeable\" role=\"tablist\"><button aria-controls=\"panel-0-R0RTY3JpcHQ=\" aria-selected=\"true\" class=\"sphinx-tabs-tab code-tab group-tab\" id=\"tab-0-R0RTY3JpcHQ=\" name=\"R0RTY3JpcHQ=\" role=\"tab\" tabindex=\"0\">GDScript</button></div><div aria-labelledby=\"tab-0-R0RTY3JpcHQ=\" class=\"sphinx-tabs-panel code-tab group-tab\" id=\"panel-0-R0RTY3JpcHQ=\" name=\"R0RTY3JpcHQ=\" role=\"tabpanel\" tabindex=\"0\"><div class=\"highlight-gdscript notranslate\"><div class=\"highlight\"><pre><span></span><span class=\"nd\">@tool</span>\n<span class=\"k\">extends</span> <span class=\"n\">EditorPlugin</span>\n\n<span class=\"k\">class</span> <span class=\"n\">ExampleEditorDebugger</span> <span class=\"k\">extends</span> <span class=\"n\">EditorDebuggerPlugin</span><span class=\"p\">:</span>\n\n    <span class=\"k\">func</span> <span class=\"n\">_has_capture</span><span class=\"p\">(</span><span class=\"n\">prefix</span><span class=\"p\">):</span>\n        <span class=\"c1\"># Return true if you wish to handle message with this prefix.</span>\n        <span class=\"k k-ControlFlow\">return</span> <span class=\"n\">prefix</span> <span class=\"o\">==</span> <span class=\"s2\">\"my_plugin\"</span>\n\n    <span class=\"k\">func</span> <span class=\"n\">_capture</span><span class=\"p\">(</span><span class=\"n\">message</span><span class=\"p\">,</span> <span class=\"n\">data</span><span class=\"p\">,</span> <span class=\"n\">session_id</span><span class=\"p\">):</span>\n        <span class=\"k k-ControlFlow\">if</span> <span class=\"n\">message</span> <span class=\"o\">==</span> <span class=\"s2\">\"my_plugin:ping\"</span><span class=\"p\">:</span>\n            <span class=\"n\">get_session</span><span class=\"p\">(</span><span class=\"n\">session_id</span><span class=\"p\">)</span><span class=\"o\">.</span><span class=\"n\">send_message</span><span class=\"p\">(</span><span class=\"s2\">\"my_plugin:echo\"</span><span class=\"p\">,</span> <span class=\"n\">data</span><span class=\"p\">)</span>\n\n    <span class=\"k\">func</span> <span class=\"n\">_setup_session</span><span class=\"p\">(</span><span class=\"n\">session_id</span><span class=\"p\">):</span>\n        <span class=\"c1\"># Add a new tab in the debugger session UI containing a label.</span>\n        <span class=\"k\">var</span> <span class=\"n\">label</span> <span class=\"o\">=</span> <span class=\"n\">Label</span><span class=\"o\">.</span><span class=\"n\">new</span><span class=\"p\">()</span>\n        <span class=\"n\">label</span><span class=\"o\">.</span><span class=\"n\">name</span> <span class=\"o\">=</span> <span class=\"s2\">\"Example plugin\"</span>\n        <span class=\"n\">label</span><span class=\"o\">.</span><span class=\"n\">text</span> <span class=\"o\">=</span> <span class=\"s2\">\"Example plugin\"</span>\n        <span class=\"k\">var</span> <span class=\"n\">session</span> <span class=\"o\">=</span> <span class=\"n\">get_session</span><span class=\"p\">(</span><span class=\"n\">session_id</span><span class=\"p\">)</span>\n        <span class=\"c1\"># Listens to the session started and stopped signals.</span>\n        <span class=\"n\">session</span><span class=\"o\">.</span><span class=\"n\">started</span><span class=\"o\">.</span><span class=\"n\">connect</span><span class=\"p\">(</span><span class=\"k\">func</span> <span class=\"p\">():</span> <span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"s2\">\"Session started\"</span><span class=\"p\">))</span>\n        <span class=\"n\">session</span><span class=\"o\">.</span><span class=\"n\">stopped</span><span class=\"o\">.</span><span class=\"n\">connect</span><span class=\"p\">(</span><span class=\"k\">func</span> <span class=\"p\">():</span> <span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"s2\">\"Session stopped\"</span><span class=\"p\">))</span>\n        <span class=\"n\">session</span><span class=\"o\">.</span><span class=\"n\">add_session_tab</span><span class=\"p\">(</span><span class=\"n\">label</span><span class=\"p\">)</span>\n\n<span class=\"k\">var</span> <span class=\"n\">debugger</span> <span class=\"o\">=</span> <span class=\"n\">ExampleEditorDebugger</span><span class=\"o\">.</span><span class=\"n\">new</span><span class=\"p\">()</span>\n\n<span class=\"k\">func</span> <span class=\"n\">_enter_tree</span><span class=\"p\">():</span>\n    <span class=\"n\">add_debugger_plugin</span><span class=\"p\">(</span><span class=\"n\">debugger</span><span class=\"p\">)</span>\n\n<span class=\"k\">func</span> <span class=\"n\">_exit_tree</span><span class=\"p\">():</span>\n    <span class=\"n\">remove_debugger_plugin</span><span class=\"p\">(</span><span class=\"n\">debugger</span><span class=\"p\">)</span>\n</pre></div>\n</div>\n</div></div>\n"
            },
            "class_editordebuggersession": {
                "url": "https://docs.godotengine.org/en/4.1/classes/class_editordebuggersession.html",
                "title": "EditorDebuggerSession",
                "blurb": "<p><strong>Inherits:</strong> <a class=\"reference internal\" href=\"class_refcounted.html#class-refcounted\"><span class=\"std std-ref\">RefCounted</span></a> <strong>&lt;</strong> <a class=\"reference internal\" href=\"class_object.html#class-object\"><span class=\"std std-ref\">Object</span></a></p><p>A class to interact with the editor debugger.</p>",
                "description": "\n\n<p>This class cannot be directly instantiated and must be retrieved via a <a class=\"reference internal\" href=\"class_editordebuggerplugin.html#class-editordebuggerplugin\"><span class=\"std std-ref\">EditorDebuggerPlugin</span></a>.</p>\n<p>You can add tabs to the session UI via <a class=\"reference internal\" href=\"#class-editordebuggersession-method-add-session-tab\"><span class=\"std std-ref\">add_session_tab</span></a>, send messages via <a class=\"reference internal\" href=\"#class-editordebuggersession-method-send-message\"><span class=\"std std-ref\">send_message</span></a>, and toggle <a class=\"reference internal\" href=\"class_engineprofiler.html#class-engineprofiler\"><span class=\"std std-ref\">EngineProfiler</span></a>s via <a class=\"reference internal\" href=\"#class-editordebuggersession-method-toggle-profiler\"><span class=\"std std-ref\">toggle_profiler</span></a>.</p>\n"
            },
            "class_editorexportplatform": {
                "url": "https://docs.godotengine.org/en/4.1/classes/class_editorexportplatform.html",
                "title": "EditorExportPlatform",
                "blurb": "<p><strong>Inherits:</strong> <a class=\"reference internal\" href=\"class_refcounted.html#class-refcounted\"><span class=\"std std-ref\">RefCounted</span></a> <strong>&lt;</strong> <a class=\"reference internal\" href=\"class_object.html#class-object\"><span class=\"std std-ref\">Object</span></a></p><p><strong>Inherited By:</strong> <a class=\"reference internal\" href=\"class_editorexportplatformandroid.html#class-editorexportplatformandroid\"><span class=\"std std-ref\">EditorExportPlatformAndroid</span></a>, <a class=\"reference internal\" href=\"class_editorexportplatformios.html#class-editorexportplatformios\"><span class=\"std std-ref\">EditorExportPlatformIOS</span></a>, <a class=\"reference internal\" href=\"class_editorexportplatformmacos.html#class-editorexportplatformmacos\"><span class=\"std std-ref\">EditorExportPlatformMacOS</span></a>, <a class=\"reference internal\" href=\"class_editorexportplatformpc.html#class-editorexportplatformpc\"><span class=\"std std-ref\">EditorExportPlatformPC</span></a>, <a class=\"reference internal\" href=\"class_editorexportplatformweb.html#class-editorexportplatformweb\"><span class=\"std std-ref\">EditorExportPlatformWeb</span></a></p><p>Identifies a supported export platform, and internally provides the functionality of exporting to that platform.</p>",
                "description": "\n\n<p>Base resource that provides the functionality of exporting a release build of a project to a platform, from the editor. Stores platform-specific metadata such as the name and supported features of the platform, and performs the exporting of projects, PCK files, and ZIP files. Uses an export template for the platform provided at the time of project exporting.</p>\n<p>Used in scripting by <a class=\"reference internal\" href=\"class_editorexportplugin.html#class-editorexportplugin\"><span class=\"std std-ref\">EditorExportPlugin</span></a> to configure platform-specific customization of scenes and resources. See <a class=\"reference internal\" href=\"class_editorexportplugin.html#class-editorexportplugin-method-begin-customize-scenes\"><span class=\"std std-ref\">EditorExportPlugin._begin_customize_scenes</span></a> and <a class=\"reference internal\" href=\"class_editorexportplugin.html#class-editorexportplugin-method-begin-customize-resources\"><span class=\"std std-ref\">EditorExportPlugin._begin_customize_resources</span></a> for more details.</p>\n"
            },
            "class_editorexportplatformandroid": {
                "url": "https://docs.godotengine.org/en/4.1/classes/class_editorexportplatformandroid.html",
                "title": "EditorExportPlatformAndroid",
                "blurb": "<p><strong>Inherits:</strong> <a class=\"reference internal\" href=\"class_editorexportplatform.html#class-editorexportplatform\"><span class=\"std std-ref\">EditorExportPlatform</span></a> <strong>&lt;</strong> <a class=\"reference internal\" href=\"class_refcounted.html#class-refcounted\"><span class=\"std std-ref\">RefCounted</span></a> <strong>&lt;</strong> <a class=\"reference internal\" href=\"class_object.html#class-object\"><span class=\"std std-ref\">Object</span></a></p><p>Exporter for Android.</p>",
                "description": null
            },
            "class_editorexportplatformios": {
                "url": "https://docs.godotengine.org/en/4.1/classes/class_editorexportplatformios.html",
                "title": "EditorExportPlatformIOS",
                "blurb": "<p><strong>Inherits:</strong> <a class=\"reference internal\" href=\"class_editorexportplatform.html#class-editorexportplatform\"><span class=\"std std-ref\">EditorExportPlatform</span></a> <strong>&lt;</strong> <a class=\"reference internal\" href=\"class_refcounted.html#class-refcounted\"><span class=\"std std-ref\">RefCounted</span></a> <strong>&lt;</strong> <a class=\"reference internal\" href=\"class_object.html#class-object\"><span class=\"std std-ref\">Object</span></a></p><p>Exporter for iOS.</p>",
                "description": null
            },
            "class_editorexportplatformlinuxbsd": {
                "url": "https://docs.godotengine.org/en/4.1/classes/class_editorexportplatformlinuxbsd.html",
                "title": "EditorExportPlatformLinuxBSD",
                "blurb": "<p><strong>Inherits:</strong> <a class=\"reference internal\" href=\"class_editorexportplatformpc.html#class-editorexportplatformpc\"><span class=\"std std-ref\">EditorExportPlatformPC</span></a> <strong>&lt;</strong> <a class=\"reference internal\" href=\"class_editorexportplatform.html#class-editorexportplatform\"><span class=\"std std-ref\">EditorExportPlatform</span></a> <strong>&lt;</strong> <a class=\"reference internal\" href=\"class_refcounted.html#class-refcounted\"><span class=\"std std-ref\">RefCounted</span></a> <strong>&lt;</strong> <a class=\"reference internal\" href=\"class_object.html#class-object\"><span class=\"std std-ref\">Object</span></a></p><p>Exporter for Linux/BSD.</p>",
                "description": null
            },
            "class_editorexportplatformmacos": {
                "url": "https://docs.godotengine.org/en/4.1/classes/class_editorexportplatformmacos.html",
                "title": "EditorExportPlatformMacOS",
                "blurb": "<p><strong>Inherits:</strong> <a class=\"reference internal\" href=\"class_editorexportplatform.html#class-editorexportplatform\"><span class=\"std std-ref\">EditorExportPlatform</span></a> <strong>&lt;</strong> <a class=\"reference internal\" href=\"class_refcounted.html#class-refcounted\"><span class=\"std std-ref\">RefCounted</span></a> <strong>&lt;</strong> <a class=\"reference internal\" href=\"class_object.html#class-object\"><span class=\"std std-ref\">Object</span></a></p><p>Exporter for macOS.</p>",
                "description": null
            },
            "class_editorexportplatformpc": {
                "url": "https://docs.godotengine.org/en/4.1/classes/class_editorexportplatformpc.html",
                "title": "EditorExportPlatformPC",
                "blurb": "<p><strong>Inherits:</strong> <a class=\"reference internal\" href=\"class_editorexportplatform.html#class-editorexportplatform\"><span class=\"std std-ref\">EditorExportPlatform</span></a> <strong>&lt;</strong> <a class=\"reference internal\" href=\"class_refcounted.html#class-refcounted\"><span class=\"std std-ref\">RefCounted</span></a> <strong>&lt;</strong> <a class=\"reference internal\" href=\"class_object.html#class-object\"><span class=\"std std-ref\">Object</span></a></p><p><strong>Inherited By:</strong> <a class=\"reference internal\" href=\"class_editorexportplatformlinuxbsd.html#class-editorexportplatformlinuxbsd\"><span class=\"std std-ref\">EditorExportPlatformLinuxBSD</span></a>, <a class=\"reference internal\" href=\"class_editorexportplatformwindows.html#class-editorexportplatformwindows\"><span class=\"std std-ref\">EditorExportPlatformWindows</span></a></p><p>Base class for the desktop platform exporter (Windows and Linux/BSD).</p>",
                "description": null
            },
            "class_editorexportplatformweb": {
                "url": "https://docs.godotengine.org/en/4.1/classes/class_editorexportplatformweb.html",
                "title": "EditorExportPlatformWeb",
                "blurb": "<p><strong>Inherits:</strong> <a class=\"reference internal\" href=\"class_editorexportplatform.html#class-editorexportplatform\"><span class=\"std std-ref\">EditorExportPlatform</span></a> <strong>&lt;</strong> <a class=\"reference internal\" href=\"class_refcounted.html#class-refcounted\"><span class=\"std std-ref\">RefCounted</span></a> <strong>&lt;</strong> <a class=\"reference internal\" href=\"class_object.html#class-object\"><span class=\"std std-ref\">Object</span></a></p><p>Exporter for the Web.</p>",
                "description": null
            },
            "class_editorexportplatformwindows": {
                "url": "https://docs.godotengine.org/en/4.1/classes/class_editorexportplatformwindows.html",
                "title": "EditorExportPlatformWindows",
                "blurb": "<p><strong>Inherits:</strong> <a class=\"reference internal\" href=\"class_editorexportplatformpc.html#class-editorexportplatformpc\"><span class=\"std std-ref\">EditorExportPlatformPC</span></a> <strong>&lt;</strong> <a class=\"reference internal\" href=\"class_editorexportplatform.html#class-editorexportplatform\"><span class=\"std std-ref\">EditorExportPlatform</span></a> <strong>&lt;</strong> <a class=\"reference internal\" href=\"class_refcounted.html#class-refcounted\"><span class=\"std std-ref\">RefCounted</span></a> <strong>&lt;</strong> <a class=\"reference internal\" href=\"class_object.html#class-object\"><span class=\"std std-ref\">Object</span></a></p><p>Exporter for Windows.</p>",
                "description": null
            },
            "class_editorexportplugin": {
                "url": "https://docs.godotengine.org/en/4.1/classes/class_editorexportplugin.html",
                "title": "EditorExportPlugin",
                "blurb": "<p><strong>Inherits:</strong> <a class=\"reference internal\" href=\"class_refcounted.html#class-refcounted\"><span class=\"std std-ref\">RefCounted</span></a> <strong>&lt;</strong> <a class=\"reference internal\" href=\"class_object.html#class-object\"><span class=\"std std-ref\">Object</span></a></p><p>A script that is executed when exporting the project.</p>",
                "description": "\n\n<p><strong>EditorExportPlugin</strong>s are automatically invoked whenever the user exports the project. Their most common use is to determine what files are being included in the exported project. For each plugin, <a class=\"reference internal\" href=\"#class-editorexportplugin-method-export-begin\"><span class=\"std std-ref\">_export_begin</span></a> is called at the beginning of the export process and then <a class=\"reference internal\" href=\"#class-editorexportplugin-method-export-file\"><span class=\"std std-ref\">_export_file</span></a> is called for each exported file.</p>\n<p>To use <strong>EditorExportPlugin</strong>, register it using the <a class=\"reference internal\" href=\"class_editorplugin.html#class-editorplugin-method-add-export-plugin\"><span class=\"std std-ref\">EditorPlugin.add_export_plugin</span></a> method first.</p>\n"
            },
            "class_editorfeatureprofile": {
                "url": "https://docs.godotengine.org/en/4.1/classes/class_editorfeatureprofile.html",
                "title": "EditorFeatureProfile",
                "blurb": "<p><strong>Inherits:</strong> <a class=\"reference internal\" href=\"class_refcounted.html#class-refcounted\"><span class=\"std std-ref\">RefCounted</span></a> <strong>&lt;</strong> <a class=\"reference internal\" href=\"class_object.html#class-object\"><span class=\"std std-ref\">Object</span></a></p><p>An editor feature profile which can be used to disable specific features.</p>",
                "description": "\n\n<p>An editor feature profile can be used to disable specific features of the Godot editor. When disabled, the features won't appear in the editor, which makes the editor less cluttered. This is useful in education settings to reduce confusion or when working in a team. For example, artists and level designers could use a feature profile that disables the script editor to avoid accidentally making changes to files they aren't supposed to edit.</p>\n<p>To manage editor feature profiles visually, use <strong>Editor &gt; Manage Feature Profiles...</strong> at the top of the editor window.</p>\n"
            },
            "class_editorfilesystemdirectory": {
                "url": "https://docs.godotengine.org/en/4.1/classes/class_editorfilesystemdirectory.html",
                "title": "EditorFileSystemDirectory",
                "blurb": "<p><strong>Inherits:</strong> <a class=\"reference internal\" href=\"class_object.html#class-object\"><span class=\"std std-ref\">Object</span></a></p><p>A directory for the resource filesystem.</p>",
                "description": "\n\n<p>A more generalized, low-level variation of the directory concept.</p>\n"
            },
            "class_editorfilesystemimportformatsupportquery": {
                "url": "https://docs.godotengine.org/en/4.1/classes/class_editorfilesystemimportformatsupportquery.html",
                "title": "EditorFileSystemImportFormatSupportQuery",
                "blurb": "<p><strong>Inherits:</strong> <a class=\"reference internal\" href=\"class_refcounted.html#class-refcounted\"><span class=\"std std-ref\">RefCounted</span></a> <strong>&lt;</strong> <a class=\"reference internal\" href=\"class_object.html#class-object\"><span class=\"std std-ref\">Object</span></a></p><p>Used to query and configure import format support.</p>",
                "description": "\n\n<p>This class is used to query and configure a certain import format. It is used in conjunction with asset format import plugins.</p>\n"
            },
            "class_editorimportplugin": {
                "url": "https://docs.godotengine.org/en/4.1/classes/class_editorimportplugin.html",
                "title": "EditorImportPlugin",
                "blurb": "<p><strong>Inherits:</strong> <a class=\"reference internal\" href=\"class_resourceimporter.html#class-resourceimporter\"><span class=\"std std-ref\">ResourceImporter</span></a> <strong>&lt;</strong> <a class=\"reference internal\" href=\"class_refcounted.html#class-refcounted\"><span class=\"std std-ref\">RefCounted</span></a> <strong>&lt;</strong> <a class=\"reference internal\" href=\"class_object.html#class-object\"><span class=\"std std-ref\">Object</span></a></p><p>Registers a custom resource importer in the editor. Use the class to parse any file and import it as a new resource type.</p>",
                "description": "\n\n<p><strong>EditorImportPlugin</strong>s provide a way to extend the editor's resource import functionality. Use them to import resources from custom files or to provide alternatives to the editor's existing importers.</p>\n<p>EditorImportPlugins work by associating with specific file extensions and a resource type. See <a class=\"reference internal\" href=\"#class-editorimportplugin-method-get-recognized-extensions\"><span class=\"std std-ref\">_get_recognized_extensions</span></a> and <a class=\"reference internal\" href=\"#class-editorimportplugin-method-get-resource-type\"><span class=\"std std-ref\">_get_resource_type</span></a>. They may optionally specify some import presets that affect the import process. EditorImportPlugins are responsible for creating the resources and saving them in the <code class=\"docutils literal notranslate\"><span class=\"pre\">.godot/imported</span></code> directory (see <a class=\"reference internal\" href=\"class_projectsettings.html#class-projectsettings-property-application-config-use-hidden-project-data-directory\"><span class=\"std std-ref\">ProjectSettings.application/config/use_hidden_project_data_directory</span></a>).</p>\n<p>Below is an example EditorImportPlugin that imports a <a class=\"reference internal\" href=\"class_mesh.html#class-mesh\"><span class=\"std std-ref\">Mesh</span></a> from a file with the extension \".special\" or \".spec\":</p>\n<div class=\"sphinx-tabs docutils container\">\n<div aria-label=\"Tabbed content\" class=\"closeable\" role=\"tablist\"><button aria-controls=\"panel-0-R0RTY3JpcHQ=\" aria-selected=\"true\" class=\"sphinx-tabs-tab code-tab group-tab\" id=\"tab-0-R0RTY3JpcHQ=\" name=\"R0RTY3JpcHQ=\" role=\"tab\" tabindex=\"0\">GDScript</button><button aria-controls=\"panel-0-QyM=\" aria-selected=\"false\" class=\"sphinx-tabs-tab code-tab group-tab\" id=\"tab-0-QyM=\" name=\"QyM=\" role=\"tab\" tabindex=\"-1\">C#</button></div><div aria-labelledby=\"tab-0-R0RTY3JpcHQ=\" class=\"sphinx-tabs-panel code-tab group-tab\" id=\"panel-0-R0RTY3JpcHQ=\" name=\"R0RTY3JpcHQ=\" role=\"tabpanel\" tabindex=\"0\"><div class=\"highlight-gdscript notranslate\"><div class=\"highlight\"><pre><span></span><span class=\"nd\">@tool</span>\n<span class=\"k\">extends</span> <span class=\"n\">EditorImportPlugin</span>\n\n<span class=\"k\">func</span> <span class=\"n\">_get_importer_name</span><span class=\"p\">():</span>\n    <span class=\"k k-ControlFlow\">return</span> <span class=\"s2\">\"my.special.plugin\"</span>\n\n<span class=\"k\">func</span> <span class=\"n\">_get_visible_name</span><span class=\"p\">():</span>\n    <span class=\"k k-ControlFlow\">return</span> <span class=\"s2\">\"Special Mesh\"</span>\n\n<span class=\"k\">func</span> <span class=\"n\">_get_recognized_extensions</span><span class=\"p\">():</span>\n    <span class=\"k k-ControlFlow\">return</span> <span class=\"p\">[</span><span class=\"s2\">\"special\"</span><span class=\"p\">,</span> <span class=\"s2\">\"spec\"</span><span class=\"p\">]</span>\n\n<span class=\"k\">func</span> <span class=\"n\">_get_save_extension</span><span class=\"p\">():</span>\n    <span class=\"k k-ControlFlow\">return</span> <span class=\"s2\">\"mesh\"</span>\n\n<span class=\"k\">func</span> <span class=\"n\">_get_resource_type</span><span class=\"p\">():</span>\n    <span class=\"k k-ControlFlow\">return</span> <span class=\"s2\">\"Mesh\"</span>\n\n<span class=\"k\">func</span> <span class=\"n\">_get_preset_count</span><span class=\"p\">():</span>\n    <span class=\"k k-ControlFlow\">return</span> <span class=\"mi\">1</span>\n\n<span class=\"k\">func</span> <span class=\"n\">_get_preset_name</span><span class=\"p\">(</span><span class=\"n\">preset_index</span><span class=\"p\">):</span>\n    <span class=\"k k-ControlFlow\">return</span> <span class=\"s2\">\"Default\"</span>\n\n<span class=\"k\">func</span> <span class=\"n\">_get_import_options</span><span class=\"p\">(</span><span class=\"n\">path</span><span class=\"p\">,</span> <span class=\"n\">preset_index</span><span class=\"p\">):</span>\n    <span class=\"k k-ControlFlow\">return</span> <span class=\"p\">[{</span><span class=\"s2\">\"name\"</span><span class=\"p\">:</span> <span class=\"s2\">\"my_option\"</span><span class=\"p\">,</span> <span class=\"s2\">\"default_value\"</span><span class=\"p\">:</span> <span class=\"bp\">false</span><span class=\"p\">}]</span>\n\n<span class=\"k\">func</span> <span class=\"n\">_import</span><span class=\"p\">(</span><span class=\"n\">source_file</span><span class=\"p\">,</span> <span class=\"n\">save_path</span><span class=\"p\">,</span> <span class=\"n\">options</span><span class=\"p\">,</span> <span class=\"n\">platform_variants</span><span class=\"p\">,</span> <span class=\"n\">gen_files</span><span class=\"p\">):</span>\n    <span class=\"k\">var</span> <span class=\"n\">file</span> <span class=\"o\">=</span> <span class=\"n\">FileAccess</span><span class=\"o\">.</span><span class=\"n\">open</span><span class=\"p\">(</span><span class=\"n\">source_file</span><span class=\"p\">,</span> <span class=\"n\">FileAccess</span><span class=\"o\">.</span><span class=\"n\">READ</span><span class=\"p\">)</span>\n    <span class=\"k k-ControlFlow\">if</span> <span class=\"n\">file</span> <span class=\"o\">==</span> <span class=\"nb nb-Type\">null</span><span class=\"p\">:</span>\n        <span class=\"k k-ControlFlow\">return</span> <span class=\"n\">FAILED</span>\n    <span class=\"k\">var</span> <span class=\"n\">mesh</span> <span class=\"o\">=</span> <span class=\"n\">ArrayMesh</span><span class=\"o\">.</span><span class=\"n\">new</span><span class=\"p\">()</span>\n    <span class=\"c1\"># Fill the Mesh with data read in \"file\", left as an exercise to the reader.</span>\n\n    <span class=\"k\">var</span> <span class=\"n\">filename</span> <span class=\"o\">=</span> <span class=\"n\">save_path</span> <span class=\"o\">+</span> <span class=\"s2\">\".\"</span> <span class=\"o\">+</span> <span class=\"n\">_get_save_extension</span><span class=\"p\">()</span>\n    <span class=\"k k-ControlFlow\">return</span> <span class=\"n\">ResourceSaver</span><span class=\"o\">.</span><span class=\"n\">save</span><span class=\"p\">(</span><span class=\"n\">mesh</span><span class=\"p\">,</span> <span class=\"n\">filename</span><span class=\"p\">)</span>\n</pre></div>\n</div>\n</div><div aria-labelledby=\"tab-0-QyM=\" class=\"sphinx-tabs-panel code-tab group-tab\" hidden=\"true\" id=\"panel-0-QyM=\" name=\"QyM=\" role=\"tabpanel\" tabindex=\"0\"><div class=\"highlight-csharp notranslate\"><div class=\"highlight\"><pre><span></span><span class=\"k\">using</span><span class=\"w\"> </span><span class=\"nn\">Godot</span><span class=\"p\">;</span>\n\n<span class=\"k\">public</span><span class=\"w\"> </span><span class=\"k\">partial</span><span class=\"w\"> </span><span class=\"k\">class</span><span class=\"w\"> </span><span class=\"nc\">MySpecialPlugin</span><span class=\"w\"> </span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"n\">EditorImportPlugin</span>\n<span class=\"p\">{</span>\n<span class=\"w\">    </span><span class=\"k\">public</span><span class=\"w\"> </span><span class=\"k\">override</span><span class=\"w\"> </span><span class=\"kt\">string</span><span class=\"w\"> </span><span class=\"nf\">_GetImporterName</span><span class=\"p\">()</span>\n<span class=\"w\">    </span><span class=\"p\">{</span>\n<span class=\"w\">        </span><span class=\"k\">return</span><span class=\"w\"> </span><span class=\"s\">\"my.special.plugin\"</span><span class=\"p\">;</span>\n<span class=\"w\">    </span><span class=\"p\">}</span>\n\n<span class=\"w\">    </span><span class=\"k\">public</span><span class=\"w\"> </span><span class=\"k\">override</span><span class=\"w\"> </span><span class=\"kt\">string</span><span class=\"w\"> </span><span class=\"nf\">_GetVisibleName</span><span class=\"p\">()</span>\n<span class=\"w\">    </span><span class=\"p\">{</span>\n<span class=\"w\">        </span><span class=\"k\">return</span><span class=\"w\"> </span><span class=\"s\">\"Special Mesh\"</span><span class=\"p\">;</span>\n<span class=\"w\">    </span><span class=\"p\">}</span>\n\n<span class=\"w\">    </span><span class=\"k\">public</span><span class=\"w\"> </span><span class=\"k\">override</span><span class=\"w\"> </span><span class=\"kt\">string</span><span class=\"p\">[]</span><span class=\"w\"> </span><span class=\"nf\">_GetRecognizedExtensions</span><span class=\"p\">()</span>\n<span class=\"w\">    </span><span class=\"p\">{</span>\n<span class=\"w\">        </span><span class=\"k\">return</span><span class=\"w\"> </span><span class=\"k\">new</span><span class=\"w\"> </span><span class=\"kt\">string</span><span class=\"p\">[]</span><span class=\"w\"> </span><span class=\"p\">{</span><span class=\"w\"> </span><span class=\"s\">\"special\"</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"s\">\"spec\"</span><span class=\"w\"> </span><span class=\"p\">};</span>\n<span class=\"w\">    </span><span class=\"p\">}</span>\n\n<span class=\"w\">    </span><span class=\"k\">public</span><span class=\"w\"> </span><span class=\"k\">override</span><span class=\"w\"> </span><span class=\"kt\">string</span><span class=\"w\"> </span><span class=\"nf\">_GetSaveExtension</span><span class=\"p\">()</span>\n<span class=\"w\">    </span><span class=\"p\">{</span>\n<span class=\"w\">        </span><span class=\"k\">return</span><span class=\"w\"> </span><span class=\"s\">\"mesh\"</span><span class=\"p\">;</span>\n<span class=\"w\">    </span><span class=\"p\">}</span>\n\n<span class=\"w\">    </span><span class=\"k\">public</span><span class=\"w\"> </span><span class=\"k\">override</span><span class=\"w\"> </span><span class=\"kt\">string</span><span class=\"w\"> </span><span class=\"nf\">_GetResourceType</span><span class=\"p\">()</span>\n<span class=\"w\">    </span><span class=\"p\">{</span>\n<span class=\"w\">        </span><span class=\"k\">return</span><span class=\"w\"> </span><span class=\"s\">\"Mesh\"</span><span class=\"p\">;</span>\n<span class=\"w\">    </span><span class=\"p\">}</span>\n\n<span class=\"w\">    </span><span class=\"k\">public</span><span class=\"w\"> </span><span class=\"k\">override</span><span class=\"w\"> </span><span class=\"kt\">int</span><span class=\"w\"> </span><span class=\"nf\">_GetPresetCount</span><span class=\"p\">()</span>\n<span class=\"w\">    </span><span class=\"p\">{</span>\n<span class=\"w\">        </span><span class=\"k\">return</span><span class=\"w\"> </span><span class=\"m\">1</span><span class=\"p\">;</span>\n<span class=\"w\">    </span><span class=\"p\">}</span>\n\n<span class=\"w\">    </span><span class=\"k\">public</span><span class=\"w\"> </span><span class=\"k\">override</span><span class=\"w\"> </span><span class=\"kt\">string</span><span class=\"w\"> </span><span class=\"nf\">_GetPresetName</span><span class=\"p\">(</span><span class=\"kt\">int</span><span class=\"w\"> </span><span class=\"n\">presetIndex</span><span class=\"p\">)</span>\n<span class=\"w\">    </span><span class=\"p\">{</span>\n<span class=\"w\">        </span><span class=\"k\">return</span><span class=\"w\"> </span><span class=\"s\">\"Default\"</span><span class=\"p\">;</span>\n<span class=\"w\">    </span><span class=\"p\">}</span>\n\n<span class=\"w\">    </span><span class=\"k\">public</span><span class=\"w\"> </span><span class=\"k\">override</span><span class=\"w\"> </span><span class=\"n\">Godot</span><span class=\"p\">.</span><span class=\"n\">Collections</span><span class=\"p\">.</span><span class=\"n\">Array</span><span class=\"o\">&lt;</span><span class=\"n\">Godot</span><span class=\"p\">.</span><span class=\"n\">Collections</span><span class=\"p\">.</span><span class=\"n\">Dictionary</span><span class=\"o\">&gt;</span><span class=\"w\"> </span><span class=\"n\">_GetImportOptions</span><span class=\"p\">(</span><span class=\"kt\">string</span><span class=\"w\"> </span><span class=\"n\">path</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"kt\">int</span><span class=\"w\"> </span><span class=\"n\">presetIndex</span><span class=\"p\">)</span>\n<span class=\"w\">    </span><span class=\"p\">{</span>\n<span class=\"w\">        </span><span class=\"k\">return</span><span class=\"w\"> </span><span class=\"k\">new</span><span class=\"w\"> </span><span class=\"n\">Godot</span><span class=\"p\">.</span><span class=\"n\">Collections</span><span class=\"p\">.</span><span class=\"n\">Array</span><span class=\"o\">&lt;</span><span class=\"n\">Godot</span><span class=\"p\">.</span><span class=\"n\">Collections</span><span class=\"p\">.</span><span class=\"n\">Dictionary</span><span class=\"o\">&gt;</span>\n<span class=\"w\">        </span><span class=\"p\">{</span>\n<span class=\"w\">            </span><span class=\"k\">new</span><span class=\"w\"> </span><span class=\"n\">Godot</span><span class=\"p\">.</span><span class=\"n\">Collections</span><span class=\"p\">.</span><span class=\"n\">Dictionary</span>\n<span class=\"w\">            </span><span class=\"p\">{</span>\n<span class=\"w\">                </span><span class=\"p\">{</span><span class=\"w\"> </span><span class=\"s\">\"name\"</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"s\">\"myOption\"</span><span class=\"w\"> </span><span class=\"p\">},</span>\n<span class=\"w\">                </span><span class=\"p\">{</span><span class=\"w\"> </span><span class=\"s\">\"default_value\"</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"k\">false</span><span class=\"w\"> </span><span class=\"p\">},</span>\n<span class=\"w\">            </span><span class=\"p\">}</span>\n<span class=\"w\">        </span><span class=\"p\">};</span>\n<span class=\"w\">    </span><span class=\"p\">}</span>\n\n<span class=\"w\">    </span><span class=\"k\">public</span><span class=\"w\"> </span><span class=\"k\">override</span><span class=\"w\"> </span><span class=\"kt\">int</span><span class=\"w\"> </span><span class=\"nf\">_Import</span><span class=\"p\">(</span><span class=\"kt\">string</span><span class=\"w\"> </span><span class=\"n\">sourceFile</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"kt\">string</span><span class=\"w\"> </span><span class=\"n\">savePath</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">Godot</span><span class=\"p\">.</span><span class=\"n\">Collections</span><span class=\"p\">.</span><span class=\"n\">Dictionary</span><span class=\"w\"> </span><span class=\"n\">options</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">Godot</span><span class=\"p\">.</span><span class=\"n\">Collections</span><span class=\"p\">.</span><span class=\"n\">Array</span><span class=\"o\">&lt;</span><span class=\"kt\">string</span><span class=\"o\">&gt;</span><span class=\"w\"> </span><span class=\"n\">platformVariants</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">Godot</span><span class=\"p\">.</span><span class=\"n\">Collections</span><span class=\"p\">.</span><span class=\"n\">Array</span><span class=\"o\">&lt;</span><span class=\"kt\">string</span><span class=\"o\">&gt;</span><span class=\"w\"> </span><span class=\"n\">genFiles</span><span class=\"p\">)</span>\n<span class=\"w\">    </span><span class=\"p\">{</span>\n<span class=\"w\">        </span><span class=\"k\">using</span><span class=\"w\"> </span><span class=\"nn\">var</span><span class=\"w\"> </span><span class=\"n\">file</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"n\">FileAccess</span><span class=\"p\">.</span><span class=\"n\">Open</span><span class=\"p\">(</span><span class=\"n\">sourceFile</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">FileAccess</span><span class=\"p\">.</span><span class=\"n\">ModeFlags</span><span class=\"p\">.</span><span class=\"n\">Read</span><span class=\"p\">);</span>\n<span class=\"w\">        </span><span class=\"k\">if</span><span class=\"w\"> </span><span class=\"p\">(</span><span class=\"n\">file</span><span class=\"p\">.</span><span class=\"n\">GetError</span><span class=\"p\">()</span><span class=\"w\"> </span><span class=\"o\">!=</span><span class=\"w\"> </span><span class=\"n\">Error</span><span class=\"p\">.</span><span class=\"n\">Ok</span><span class=\"p\">)</span>\n<span class=\"w\">        </span><span class=\"p\">{</span>\n<span class=\"w\">            </span><span class=\"k\">return</span><span class=\"w\"> </span><span class=\"p\">(</span><span class=\"kt\">int</span><span class=\"p\">)</span><span class=\"n\">Error</span><span class=\"p\">.</span><span class=\"n\">Failed</span><span class=\"p\">;</span>\n<span class=\"w\">        </span><span class=\"p\">}</span>\n\n<span class=\"w\">        </span><span class=\"kt\">var</span><span class=\"w\"> </span><span class=\"n\">mesh</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"k\">new</span><span class=\"w\"> </span><span class=\"n\">ArrayMesh</span><span class=\"p\">();</span>\n<span class=\"w\">        </span><span class=\"c1\">// Fill the Mesh with data read in \"file\", left as an exercise to the reader.</span>\n<span class=\"w\">        </span><span class=\"kt\">string</span><span class=\"w\"> </span><span class=\"n\">filename</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"s\">$\"{savePath}.{_GetSaveExtension()}\"</span><span class=\"p\">;</span>\n<span class=\"w\">        </span><span class=\"k\">return</span><span class=\"w\"> </span><span class=\"p\">(</span><span class=\"kt\">int</span><span class=\"p\">)</span><span class=\"n\">ResourceSaver</span><span class=\"p\">.</span><span class=\"n\">Save</span><span class=\"p\">(</span><span class=\"n\">mesh</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">filename</span><span class=\"p\">);</span>\n<span class=\"w\">    </span><span class=\"p\">}</span>\n<span class=\"p\">}</span>\n</pre></div>\n</div>\n</div></div>\n<p>To use <strong>EditorImportPlugin</strong>, register it using the <a class=\"reference internal\" href=\"class_editorplugin.html#class-editorplugin-method-add-import-plugin\"><span class=\"std std-ref\">EditorPlugin.add_import_plugin</span></a> method first.</p>\n"
            },
            "class_editorinspectorplugin": {
                "url": "https://docs.godotengine.org/en/4.1/classes/class_editorinspectorplugin.html",
                "title": "EditorInspectorPlugin",
                "blurb": "<p><strong>Inherits:</strong> <a class=\"reference internal\" href=\"class_refcounted.html#class-refcounted\"><span class=\"std std-ref\">RefCounted</span></a> <strong>&lt;</strong> <a class=\"reference internal\" href=\"class_object.html#class-object\"><span class=\"std std-ref\">Object</span></a></p><p>Plugin for adding custom property editors on the inspector.</p>",
                "description": "\n\n<p><strong>EditorInspectorPlugin</strong> allows adding custom property editors to <a class=\"reference internal\" href=\"class_editorinspector.html#class-editorinspector\"><span class=\"std std-ref\">EditorInspector</span></a>.</p>\n<p>When an object is edited, the <a class=\"reference internal\" href=\"#class-editorinspectorplugin-method-can-handle\"><span class=\"std std-ref\">_can_handle</span></a> function is called and must return <code class=\"docutils literal notranslate\"><span class=\"pre\">true</span></code> if the object type is supported.</p>\n<p>If supported, the function <a class=\"reference internal\" href=\"#class-editorinspectorplugin-method-parse-begin\"><span class=\"std std-ref\">_parse_begin</span></a> will be called, allowing to place custom controls at the beginning of the class.</p>\n<p>Subsequently, the <a class=\"reference internal\" href=\"#class-editorinspectorplugin-method-parse-category\"><span class=\"std std-ref\">_parse_category</span></a> and <a class=\"reference internal\" href=\"#class-editorinspectorplugin-method-parse-property\"><span class=\"std std-ref\">_parse_property</span></a> are called for every category and property. They offer the ability to add custom controls to the inspector too.</p>\n<p>Finally, <a class=\"reference internal\" href=\"#class-editorinspectorplugin-method-parse-end\"><span class=\"std std-ref\">_parse_end</span></a> will be called.</p>\n<p>On each of these calls, the \"add\" functions can be called.</p>\n<p>To use <strong>EditorInspectorPlugin</strong>, register it using the <a class=\"reference internal\" href=\"class_editorplugin.html#class-editorplugin-method-add-inspector-plugin\"><span class=\"std std-ref\">EditorPlugin.add_inspector_plugin</span></a> method first.</p>\n"
            },
            "class_editorinterface": {
                "url": "https://docs.godotengine.org/en/4.1/classes/class_editorinterface.html",
                "title": "EditorInterface",
                "blurb": "<p><strong>Inherits:</strong> <a class=\"reference internal\" href=\"class_object.html#class-object\"><span class=\"std std-ref\">Object</span></a></p><p>Godot editor's interface.</p>",
                "description": "\n\n<p><strong>EditorInterface</strong> gives you control over Godot editor's window. It allows customizing the window, saving and (re-)loading scenes, rendering mesh previews, inspecting and editing resources and objects, and provides access to <a class=\"reference internal\" href=\"class_editorsettings.html#class-editorsettings\"><span class=\"std std-ref\">EditorSettings</span></a>, <a class=\"reference internal\" href=\"class_editorfilesystem.html#class-editorfilesystem\"><span class=\"std std-ref\">EditorFileSystem</span></a>, <a class=\"reference internal\" href=\"class_editorresourcepreview.html#class-editorresourcepreview\"><span class=\"std std-ref\">EditorResourcePreview</span></a>, <a class=\"reference internal\" href=\"class_scripteditor.html#class-scripteditor\"><span class=\"std std-ref\">ScriptEditor</span></a>, the editor viewport, and information about scenes.</p>\n<p><strong>Note:</strong> This class shouldn't be instantiated directly. Instead, access the singleton using <a class=\"reference internal\" href=\"class_editorplugin.html#class-editorplugin-method-get-editor-interface\"><span class=\"std std-ref\">EditorPlugin.get_editor_interface</span></a>.</p>\n"
            },
            "class_editornode3dgizmo": {
                "url": "https://docs.godotengine.org/en/4.1/classes/class_editornode3dgizmo.html",
                "title": "EditorNode3DGizmo",
                "blurb": "<p><strong>Inherits:</strong> <a class=\"reference internal\" href=\"class_node3dgizmo.html#class-node3dgizmo\"><span class=\"std std-ref\">Node3DGizmo</span></a> <strong>&lt;</strong> <a class=\"reference internal\" href=\"class_refcounted.html#class-refcounted\"><span class=\"std std-ref\">RefCounted</span></a> <strong>&lt;</strong> <a class=\"reference internal\" href=\"class_object.html#class-object\"><span class=\"std std-ref\">Object</span></a></p><p>Gizmo for editing Node3D objects.</p>",
                "description": "\n\n<p>Gizmo that is used for providing custom visualization and editing (handles and subgizmos) for Node3D objects. Can be overridden to create custom gizmos, but for simple gizmos creating a <a class=\"reference internal\" href=\"class_editornode3dgizmoplugin.html#class-editornode3dgizmoplugin\"><span class=\"std std-ref\">EditorNode3DGizmoPlugin</span></a> is usually recommended.</p>\n"
            },
            "class_editorpaths": {
                "url": "https://docs.godotengine.org/en/4.1/classes/class_editorpaths.html",
                "title": "EditorPaths",
                "blurb": "<p><strong>Inherits:</strong> <a class=\"reference internal\" href=\"class_object.html#class-object\"><span class=\"std std-ref\">Object</span></a></p><p>Editor-only singleton that returns paths to various OS-specific data folders and files.</p>",
                "description": "\n\n<p>This editor-only singleton returns OS-specific paths to various data folders and files. It can be used in editor plugins to ensure files are saved in the correct location on each operating system.</p>\n<p><strong>Note:</strong> This singleton is not accessible in exported projects. Attempting to access it in an exported project will result in a script error as the singleton won't be declared. To prevent script errors in exported projects, use <a class=\"reference internal\" href=\"class_engine.html#class-engine-method-has-singleton\"><span class=\"std std-ref\">Engine.has_singleton</span></a> to check whether the singleton is available before using it.</p>\n<p><strong>Note:</strong> On the Linux/BSD platform, Godot complies with the <a class=\"reference external\" href=\"https://specifications.freedesktop.org/basedir-spec/basedir-spec-latest.html\">XDG Base Directory Specification</a>. You can override environment variables following the specification to change the editor and project data paths.</p>\n"
            },
            "class_editorresourceconversionplugin": {
                "url": "https://docs.godotengine.org/en/4.1/classes/class_editorresourceconversionplugin.html",
                "title": "EditorResourceConversionPlugin",
                "blurb": "<p><strong>Inherits:</strong> <a class=\"reference internal\" href=\"class_refcounted.html#class-refcounted\"><span class=\"std std-ref\">RefCounted</span></a> <strong>&lt;</strong> <a class=\"reference internal\" href=\"class_object.html#class-object\"><span class=\"std std-ref\">Object</span></a></p><p>Plugin for adding custom converters from one resource format to another in the editor resource picker context menu; for example, converting a <a class=\"reference internal\" href=\"class_standardmaterial3d.html#class-standardmaterial3d\"><span class=\"std std-ref\">StandardMaterial3D</span></a> to a <a class=\"reference internal\" href=\"class_shadermaterial.html#class-shadermaterial\"><span class=\"std std-ref\">ShaderMaterial</span></a>.</p>",
                "description": "\n\n<p><strong>EditorResourceConversionPlugin</strong> is invoked when the context menu is brought up for a resource in the editor inspector. Relevant conversion plugins will appear as menu options to convert the given resource to a target type.</p>\n<p>Below shows an example of a basic plugin that will convert an <a class=\"reference internal\" href=\"class_imagetexture.html#class-imagetexture\"><span class=\"std std-ref\">ImageTexture</span></a> to a <a class=\"reference internal\" href=\"class_portablecompressedtexture2d.html#class-portablecompressedtexture2d\"><span class=\"std std-ref\">PortableCompressedTexture2D</span></a>.</p>\n<div class=\"sphinx-tabs docutils container\">\n<div aria-label=\"Tabbed content\" class=\"closeable\" role=\"tablist\"><button aria-controls=\"panel-0-R0RTY3JpcHQ=\" aria-selected=\"true\" class=\"sphinx-tabs-tab code-tab group-tab\" id=\"tab-0-R0RTY3JpcHQ=\" name=\"R0RTY3JpcHQ=\" role=\"tab\" tabindex=\"0\">GDScript</button></div><div aria-labelledby=\"tab-0-R0RTY3JpcHQ=\" class=\"sphinx-tabs-panel code-tab group-tab\" id=\"panel-0-R0RTY3JpcHQ=\" name=\"R0RTY3JpcHQ=\" role=\"tabpanel\" tabindex=\"0\"><div class=\"highlight-gdscript notranslate\"><div class=\"highlight\"><pre><span></span><span class=\"k\">extends</span> <span class=\"n\">EditorResourceConversionPlugin</span>\n\n<span class=\"k\">func</span> <span class=\"n\">_handles</span><span class=\"p\">(</span><span class=\"n\">resource</span><span class=\"p\">:</span> <span class=\"n\">Resource</span><span class=\"p\">):</span>\n    <span class=\"k k-ControlFlow\">return</span> <span class=\"n\">resource</span> <span class=\"k\">is</span> <span class=\"n\">ImageTexture</span>\n\n<span class=\"k\">func</span> <span class=\"n\">_converts_to</span><span class=\"p\">():</span>\n    <span class=\"k k-ControlFlow\">return</span> <span class=\"s2\">\"PortableCompressedTexture2D\"</span>\n\n<span class=\"k\">func</span> <span class=\"n\">_convert</span><span class=\"p\">(</span><span class=\"n\">itex</span><span class=\"p\">:</span> <span class=\"n\">Resource</span><span class=\"p\">):</span>\n    <span class=\"k\">var</span> <span class=\"n\">ptex</span> <span class=\"o\">=</span> <span class=\"n\">PortableCompressedTexture2D</span><span class=\"o\">.</span><span class=\"n\">new</span><span class=\"p\">()</span>\n    <span class=\"n\">ptex</span><span class=\"o\">.</span><span class=\"n\">create_from_image</span><span class=\"p\">(</span><span class=\"n\">itex</span><span class=\"o\">.</span><span class=\"n\">get_image</span><span class=\"p\">(),</span> <span class=\"n\">PortableCompressedTexture2D</span><span class=\"o\">.</span><span class=\"n\">COMPRESSION_MODE_LOSSLESS</span><span class=\"p\">)</span>\n    <span class=\"k k-ControlFlow\">return</span> <span class=\"n\">ptex</span>\n</pre></div>\n</div>\n</div></div>\n<p>To use an <strong>EditorResourceConversionPlugin</strong>, register it using the <a class=\"reference internal\" href=\"class_editorplugin.html#class-editorplugin-method-add-resource-conversion-plugin\"><span class=\"std std-ref\">EditorPlugin.add_resource_conversion_plugin</span></a> method first.</p>\n"
            },
            "class_editorresourcepreviewgenerator": {
                "url": "https://docs.godotengine.org/en/4.1/classes/class_editorresourcepreviewgenerator.html",
                "title": "EditorResourcePreviewGenerator",
                "blurb": "<p><strong>Inherits:</strong> <a class=\"reference internal\" href=\"class_refcounted.html#class-refcounted\"><span class=\"std std-ref\">RefCounted</span></a> <strong>&lt;</strong> <a class=\"reference internal\" href=\"class_object.html#class-object\"><span class=\"std std-ref\">Object</span></a></p><p>Custom generator of previews.</p>",
                "description": "\n\n<p>Custom code to generate previews. Please check <code class=\"docutils literal notranslate\"><span class=\"pre\">file_dialog/thumbnail_size</span></code> in <a class=\"reference internal\" href=\"class_editorsettings.html#class-editorsettings\"><span class=\"std std-ref\">EditorSettings</span></a> to find out the right size to do previews at.</p>\n"
            },
            "class_editorresourcetooltipplugin": {
                "url": "https://docs.godotengine.org/en/4.1/classes/class_editorresourcetooltipplugin.html",
                "title": "EditorResourceTooltipPlugin",
                "blurb": "<p><strong>Inherits:</strong> <a class=\"reference internal\" href=\"class_refcounted.html#class-refcounted\"><span class=\"std std-ref\">RefCounted</span></a> <strong>&lt;</strong> <a class=\"reference internal\" href=\"class_object.html#class-object\"><span class=\"std std-ref\">Object</span></a></p><p>A plugin that advanced tooltip for its handled resource type.</p>",
                "description": "\n\n<p>Resource tooltip plugins are used by <a class=\"reference internal\" href=\"class_filesystemdock.html#class-filesystemdock\"><span class=\"std std-ref\">FileSystemDock</span></a> to generate customized tooltips for specific resources. E.g. tooltip for a <a class=\"reference internal\" href=\"class_texture2d.html#class-texture2d\"><span class=\"std std-ref\">Texture2D</span></a> displays a bigger preview and the texture's dimensions.</p>\n<p>A plugin must be first registered with <a class=\"reference internal\" href=\"class_filesystemdock.html#class-filesystemdock-method-add-resource-tooltip-plugin\"><span class=\"std std-ref\">FileSystemDock.add_resource_tooltip_plugin</span></a>. When the user hovers a resource in filesystem dock which is handled by the plugin, <a class=\"reference internal\" href=\"#class-editorresourcetooltipplugin-method-make-tooltip-for-path\"><span class=\"std std-ref\">_make_tooltip_for_path</span></a> is called to create the tooltip. It works similarly to <a class=\"reference internal\" href=\"class_control.html#class-control-method-make-custom-tooltip\"><span class=\"std std-ref\">Control._make_custom_tooltip</span></a>.</p>\n"
            },
            "class_editorsceneformatimporter": {
                "url": "https://docs.godotengine.org/en/4.1/classes/class_editorsceneformatimporter.html",
                "title": "EditorSceneFormatImporter",
                "blurb": "<p><strong>Inherits:</strong> <a class=\"reference internal\" href=\"class_refcounted.html#class-refcounted\"><span class=\"std std-ref\">RefCounted</span></a> <strong>&lt;</strong> <a class=\"reference internal\" href=\"class_object.html#class-object\"><span class=\"std std-ref\">Object</span></a></p><p><strong>Inherited By:</strong> <a class=\"reference internal\" href=\"class_editorsceneformatimporterblend.html#class-editorsceneformatimporterblend\"><span class=\"std std-ref\">EditorSceneFormatImporterBlend</span></a>, <a class=\"reference internal\" href=\"class_editorsceneformatimporterfbx.html#class-editorsceneformatimporterfbx\"><span class=\"std std-ref\">EditorSceneFormatImporterFBX</span></a>, <a class=\"reference internal\" href=\"class_editorsceneformatimportergltf.html#class-editorsceneformatimportergltf\"><span class=\"std std-ref\">EditorSceneFormatImporterGLTF</span></a></p><p>Imports scenes from third-parties' 3D files.</p>",
                "description": "\n\n<p><strong>EditorSceneFormatImporter</strong> allows to define an importer script for a third-party 3D format.</p>\n<p>To use <strong>EditorSceneFormatImporter</strong>, register it using the <a class=\"reference internal\" href=\"class_editorplugin.html#class-editorplugin-method-add-scene-format-importer-plugin\"><span class=\"std std-ref\">EditorPlugin.add_scene_format_importer_plugin</span></a> method first.</p>\n"
            },
            "class_editorsceneformatimporterblend": {
                "url": "https://docs.godotengine.org/en/4.1/classes/class_editorsceneformatimporterblend.html",
                "title": "EditorSceneFormatImporterBlend",
                "blurb": "<p><strong>Inherits:</strong> <a class=\"reference internal\" href=\"class_editorsceneformatimporter.html#class-editorsceneformatimporter\"><span class=\"std std-ref\">EditorSceneFormatImporter</span></a> <strong>&lt;</strong> <a class=\"reference internal\" href=\"class_refcounted.html#class-refcounted\"><span class=\"std std-ref\">RefCounted</span></a> <strong>&lt;</strong> <a class=\"reference internal\" href=\"class_object.html#class-object\"><span class=\"std std-ref\">Object</span></a></p><p>Importer for Blender's <code class=\"docutils literal notranslate\"><span class=\"pre\">.blend</span></code> scene file format.</p>",
                "description": "\n\n<p>Imports Blender scenes in the <code class=\"docutils literal notranslate\"><span class=\"pre\">.blend</span></code> file format through the glTF 2.0 3D import pipeline. This importer requires Blender to be installed by the user, so that it can be used to export the scene as glTF 2.0.</p>\n<p>The location of the Blender binary is set via the <code class=\"docutils literal notranslate\"><span class=\"pre\">filesystem/import/blender/blender3_path</span></code> editor setting.</p>\n<p>This importer is only used if <a class=\"reference internal\" href=\"class_projectsettings.html#class-projectsettings-property-filesystem-import-blender-enabled\"><span class=\"std std-ref\">ProjectSettings.filesystem/import/blender/enabled</span></a> is enabled, otherwise <code class=\"docutils literal notranslate\"><span class=\"pre\">.blend</span></code> files present in the project folder are not imported.</p>\n<p>Blend import requires Blender 3.0.</p>\n<p>Internally, the EditorSceneFormatImporterBlend uses the Blender glTF \"Use Original\" mode to reference external textures.</p>\n"
            },
            "class_editorsceneformatimporterfbx": {
                "url": "https://docs.godotengine.org/en/4.1/classes/class_editorsceneformatimporterfbx.html",
                "title": "EditorSceneFormatImporterFBX",
                "blurb": "<p><strong>Inherits:</strong> <a class=\"reference internal\" href=\"class_editorsceneformatimporter.html#class-editorsceneformatimporter\"><span class=\"std std-ref\">EditorSceneFormatImporter</span></a> <strong>&lt;</strong> <a class=\"reference internal\" href=\"class_refcounted.html#class-refcounted\"><span class=\"std std-ref\">RefCounted</span></a> <strong>&lt;</strong> <a class=\"reference internal\" href=\"class_object.html#class-object\"><span class=\"std std-ref\">Object</span></a></p><p>Importer for the <code class=\"docutils literal notranslate\"><span class=\"pre\">.fbx</span></code> scene file format.</p>",
                "description": "\n\n<p>Imports Autodesk FBX 3D scenes by way of converting them to glTF 2.0 using the FBX2glTF command line tool.</p>\n<p>The location of the FBX2glTF binary is set via the <code class=\"docutils literal notranslate\"><span class=\"pre\">filesystem/import/fbx/fbx2gltf_path</span></code> editor setting.</p>\n<p>This importer is only used if <a class=\"reference internal\" href=\"class_projectsettings.html#class-projectsettings-property-filesystem-import-fbx-enabled\"><span class=\"std std-ref\">ProjectSettings.filesystem/import/fbx/enabled</span></a> is enabled, otherwise <code class=\"docutils literal notranslate\"><span class=\"pre\">.fbx</span></code> files present in the project folder are not imported.</p>\n"
            },
            "class_editorsceneformatimportergltf": {
                "url": "https://docs.godotengine.org/en/4.1/classes/class_editorsceneformatimportergltf.html",
                "title": "EditorSceneFormatImporterGLTF",
                "blurb": "<p><strong>Inherits:</strong> <a class=\"reference internal\" href=\"class_editorsceneformatimporter.html#class-editorsceneformatimporter\"><span class=\"std std-ref\">EditorSceneFormatImporter</span></a> <strong>&lt;</strong> <a class=\"reference internal\" href=\"class_refcounted.html#class-refcounted\"><span class=\"std std-ref\">RefCounted</span></a> <strong>&lt;</strong> <a class=\"reference internal\" href=\"class_object.html#class-object\"><span class=\"std std-ref\">Object</span></a></p>",
                "description": null
            },
            "class_editorscenepostimport": {
                "url": "https://docs.godotengine.org/en/4.1/classes/class_editorscenepostimport.html",
                "title": "EditorScenePostImport",
                "blurb": "<p><strong>Inherits:</strong> <a class=\"reference internal\" href=\"class_refcounted.html#class-refcounted\"><span class=\"std std-ref\">RefCounted</span></a> <strong>&lt;</strong> <a class=\"reference internal\" href=\"class_object.html#class-object\"><span class=\"std std-ref\">Object</span></a></p><p>Post-processes scenes after import.</p>",
                "description": "\n\n<p>Imported scenes can be automatically modified right after import by setting their <strong>Custom Script</strong> Import property to a <code class=\"docutils literal notranslate\"><span class=\"pre\">tool</span></code> script that inherits from this class.</p>\n<p>The <a class=\"reference internal\" href=\"#class-editorscenepostimport-method-post-import\"><span class=\"std std-ref\">_post_import</span></a> callback receives the imported scene's root node and returns the modified version of the scene. Usage example:</p>\n<div class=\"sphinx-tabs docutils container\">\n<div aria-label=\"Tabbed content\" class=\"closeable\" role=\"tablist\"><button aria-controls=\"panel-0-R0RTY3JpcHQ=\" aria-selected=\"true\" class=\"sphinx-tabs-tab code-tab group-tab\" id=\"tab-0-R0RTY3JpcHQ=\" name=\"R0RTY3JpcHQ=\" role=\"tab\" tabindex=\"0\">GDScript</button><button aria-controls=\"panel-0-QyM=\" aria-selected=\"false\" class=\"sphinx-tabs-tab code-tab group-tab\" id=\"tab-0-QyM=\" name=\"QyM=\" role=\"tab\" tabindex=\"-1\">C#</button></div><div aria-labelledby=\"tab-0-R0RTY3JpcHQ=\" class=\"sphinx-tabs-panel code-tab group-tab\" id=\"panel-0-R0RTY3JpcHQ=\" name=\"R0RTY3JpcHQ=\" role=\"tabpanel\" tabindex=\"0\"><div class=\"highlight-gdscript notranslate\"><div class=\"highlight\"><pre><span></span><span class=\"nd\">@tool</span> <span class=\"c1\"># Needed so it runs in editor.</span>\n<span class=\"k\">extends</span> <span class=\"n\">EditorScenePostImport</span>\n\n<span class=\"c1\"># This sample changes all node names.</span>\n<span class=\"c1\"># Called right after the scene is imported and gets the root node.</span>\n<span class=\"k\">func</span> <span class=\"n\">_post_import</span><span class=\"p\">(</span><span class=\"n\">scene</span><span class=\"p\">):</span>\n    <span class=\"c1\"># Change all node names to \"modified_[oldnodename]\"</span>\n    <span class=\"n\">iterate</span><span class=\"p\">(</span><span class=\"n\">scene</span><span class=\"p\">)</span>\n    <span class=\"k k-ControlFlow\">return</span> <span class=\"n\">scene</span> <span class=\"c1\"># Remember to return the imported scene</span>\n\n<span class=\"k\">func</span> <span class=\"n\">iterate</span><span class=\"p\">(</span><span class=\"n\">node</span><span class=\"p\">):</span>\n    <span class=\"k k-ControlFlow\">if</span> <span class=\"n\">node</span> <span class=\"o\">!=</span> <span class=\"nb nb-Type\">null</span><span class=\"p\">:</span>\n        <span class=\"n\">node</span><span class=\"o\">.</span><span class=\"n\">name</span> <span class=\"o\">=</span> <span class=\"s2\">\"modified_\"</span> <span class=\"o\">+</span> <span class=\"n\">node</span><span class=\"o\">.</span><span class=\"n\">name</span>\n        <span class=\"k k-ControlFlow\">for</span> <span class=\"n\">child</span> <span class=\"ow\">in</span> <span class=\"n\">node</span><span class=\"o\">.</span><span class=\"n\">get_children</span><span class=\"p\">():</span>\n            <span class=\"n\">iterate</span><span class=\"p\">(</span><span class=\"n\">child</span><span class=\"p\">)</span>\n</pre></div>\n</div>\n</div><div aria-labelledby=\"tab-0-QyM=\" class=\"sphinx-tabs-panel code-tab group-tab\" hidden=\"true\" id=\"panel-0-QyM=\" name=\"QyM=\" role=\"tabpanel\" tabindex=\"0\"><div class=\"highlight-csharp notranslate\"><div class=\"highlight\"><pre><span></span><span class=\"k\">using</span><span class=\"w\"> </span><span class=\"nn\">Godot</span><span class=\"p\">;</span>\n\n<span class=\"c1\">// This sample changes all node names.</span>\n<span class=\"c1\">// Called right after the scene is imported and gets the root node.</span>\n<span class=\"na\">[Tool]</span>\n<span class=\"k\">public</span><span class=\"w\"> </span><span class=\"k\">partial</span><span class=\"w\"> </span><span class=\"k\">class</span><span class=\"w\"> </span><span class=\"nc\">NodeRenamer</span><span class=\"w\"> </span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"n\">EditorScenePostImport</span>\n<span class=\"p\">{</span>\n<span class=\"w\">    </span><span class=\"k\">public</span><span class=\"w\"> </span><span class=\"k\">override</span><span class=\"w\"> </span><span class=\"n\">GodotObject</span><span class=\"w\"> </span><span class=\"nf\">_PostImport</span><span class=\"p\">(</span><span class=\"n\">Node</span><span class=\"w\"> </span><span class=\"n\">scene</span><span class=\"p\">)</span>\n<span class=\"w\">    </span><span class=\"p\">{</span>\n<span class=\"w\">        </span><span class=\"c1\">// Change all node names to \"modified_[oldnodename]\"</span>\n<span class=\"w\">        </span><span class=\"n\">Iterate</span><span class=\"p\">(</span><span class=\"n\">scene</span><span class=\"p\">);</span>\n<span class=\"w\">        </span><span class=\"k\">return</span><span class=\"w\"> </span><span class=\"n\">scene</span><span class=\"p\">;</span><span class=\"w\"> </span><span class=\"c1\">// Remember to return the imported scene</span>\n<span class=\"w\">    </span><span class=\"p\">}</span>\n\n<span class=\"w\">    </span><span class=\"k\">public</span><span class=\"w\"> </span><span class=\"k\">void</span><span class=\"w\"> </span><span class=\"nf\">Iterate</span><span class=\"p\">(</span><span class=\"n\">Node</span><span class=\"w\"> </span><span class=\"n\">node</span><span class=\"p\">)</span>\n<span class=\"w\">    </span><span class=\"p\">{</span>\n<span class=\"w\">        </span><span class=\"k\">if</span><span class=\"w\"> </span><span class=\"p\">(</span><span class=\"n\">node</span><span class=\"w\"> </span><span class=\"o\">!=</span><span class=\"w\"> </span><span class=\"k\">null</span><span class=\"p\">)</span>\n<span class=\"w\">        </span><span class=\"p\">{</span>\n<span class=\"w\">            </span><span class=\"n\">node</span><span class=\"p\">.</span><span class=\"n\">Name</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"s\">$\"modified_{node.Name}\"</span><span class=\"p\">;</span>\n<span class=\"w\">            </span><span class=\"k\">foreach</span><span class=\"w\"> </span><span class=\"p\">(</span><span class=\"n\">Node</span><span class=\"w\"> </span><span class=\"n\">child</span><span class=\"w\"> </span><span class=\"k\">in</span><span class=\"w\"> </span><span class=\"n\">node</span><span class=\"p\">.</span><span class=\"n\">GetChildren</span><span class=\"p\">())</span>\n<span class=\"w\">            </span><span class=\"p\">{</span>\n<span class=\"w\">                </span><span class=\"n\">Iterate</span><span class=\"p\">(</span><span class=\"n\">child</span><span class=\"p\">);</span>\n<span class=\"w\">            </span><span class=\"p\">}</span>\n<span class=\"w\">        </span><span class=\"p\">}</span>\n<span class=\"w\">    </span><span class=\"p\">}</span>\n<span class=\"p\">}</span>\n</pre></div>\n</div>\n</div></div>\n"
            },
            "class_editorscenepostimportplugin": {
                "url": "https://docs.godotengine.org/en/4.1/classes/class_editorscenepostimportplugin.html",
                "title": "EditorScenePostImportPlugin",
                "blurb": "<p><strong>Inherits:</strong> <a class=\"reference internal\" href=\"class_refcounted.html#class-refcounted\"><span class=\"std std-ref\">RefCounted</span></a> <strong>&lt;</strong> <a class=\"reference internal\" href=\"class_object.html#class-object\"><span class=\"std std-ref\">Object</span></a></p><p>Plugin to control and modifying the process of importing a scene.</p>",
                "description": "\n\n<p>This plugin type exists to modify the process of importing scenes, allowing to change the content as well as add importer options at every stage of the process.</p>\n"
            },
            "class_editorscript": {
                "url": "https://docs.godotengine.org/en/4.1/classes/class_editorscript.html",
                "title": "EditorScript",
                "blurb": "<p><strong>Inherits:</strong> <a class=\"reference internal\" href=\"class_refcounted.html#class-refcounted\"><span class=\"std std-ref\">RefCounted</span></a> <strong>&lt;</strong> <a class=\"reference internal\" href=\"class_object.html#class-object\"><span class=\"std std-ref\">Object</span></a></p><p>Base script that can be used to add extension functions to the editor.</p>",
                "description": "\n\n<p>Scripts extending this class and implementing its <a class=\"reference internal\" href=\"#class-editorscript-method-run\"><span class=\"std std-ref\">_run</span></a> method can be executed from the Script Editor's <strong>File &gt; Run</strong> menu option (or by pressing <kbd class=\"kbd compound docutils literal notranslate\"><kbd class=\"kbd docutils literal notranslate\">Ctrl</kbd> <kbd class=\"kbd docutils literal notranslate\"></kbd>+<kbd class=\"kbd docutils literal notranslate\"></kbd> <kbd class=\"kbd docutils literal notranslate\">Shift</kbd> <kbd class=\"kbd docutils literal notranslate\"></kbd>+<kbd class=\"kbd docutils literal notranslate\"></kbd> <kbd class=\"kbd docutils literal notranslate\">X</kbd></kbd>) while the editor is running. This is useful for adding custom in-editor functionality to Godot. For more complex additions, consider using <a class=\"reference internal\" href=\"class_editorplugin.html#class-editorplugin\"><span class=\"std std-ref\">EditorPlugin</span></a>s instead.</p>\n<p><strong>Note:</strong> Extending scripts need to have <code class=\"docutils literal notranslate\"><span class=\"pre\">tool</span></code> mode enabled.</p>\n<p><strong>Example script:</strong></p>\n<div class=\"sphinx-tabs docutils container\">\n<div aria-label=\"Tabbed content\" class=\"closeable\" role=\"tablist\"><button aria-controls=\"panel-0-R0RTY3JpcHQ=\" aria-selected=\"true\" class=\"sphinx-tabs-tab code-tab group-tab\" id=\"tab-0-R0RTY3JpcHQ=\" name=\"R0RTY3JpcHQ=\" role=\"tab\" tabindex=\"0\">GDScript</button><button aria-controls=\"panel-0-QyM=\" aria-selected=\"false\" class=\"sphinx-tabs-tab code-tab group-tab\" id=\"tab-0-QyM=\" name=\"QyM=\" role=\"tab\" tabindex=\"-1\">C#</button></div><div aria-labelledby=\"tab-0-R0RTY3JpcHQ=\" class=\"sphinx-tabs-panel code-tab group-tab\" id=\"panel-0-R0RTY3JpcHQ=\" name=\"R0RTY3JpcHQ=\" role=\"tabpanel\" tabindex=\"0\"><div class=\"highlight-gdscript notranslate\"><div class=\"highlight\"><pre><span></span><span class=\"nd\">@tool</span>\n<span class=\"k\">extends</span> <span class=\"n\">EditorScript</span>\n\n<span class=\"k\">func</span> <span class=\"n\">_run</span><span class=\"p\">():</span>\n    <span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"s2\">\"Hello from the Godot Editor!\"</span><span class=\"p\">)</span>\n</pre></div>\n</div>\n</div><div aria-labelledby=\"tab-0-QyM=\" class=\"sphinx-tabs-panel code-tab group-tab\" hidden=\"true\" id=\"panel-0-QyM=\" name=\"QyM=\" role=\"tabpanel\" tabindex=\"0\"><div class=\"highlight-csharp notranslate\"><div class=\"highlight\"><pre><span></span><span class=\"k\">using</span><span class=\"w\"> </span><span class=\"nn\">Godot</span><span class=\"p\">;</span>\n\n<span class=\"na\">[Tool]</span>\n<span class=\"k\">public</span><span class=\"w\"> </span><span class=\"k\">partial</span><span class=\"w\"> </span><span class=\"k\">class</span><span class=\"w\"> </span><span class=\"nc\">HelloEditor</span><span class=\"w\"> </span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"n\">EditorScript</span>\n<span class=\"p\">{</span>\n<span class=\"w\">    </span><span class=\"k\">public</span><span class=\"w\"> </span><span class=\"k\">override</span><span class=\"w\"> </span><span class=\"k\">void</span><span class=\"w\"> </span><span class=\"nf\">_Run</span><span class=\"p\">()</span>\n<span class=\"w\">    </span><span class=\"p\">{</span>\n<span class=\"w\">        </span><span class=\"n\">GD</span><span class=\"p\">.</span><span class=\"n\">Print</span><span class=\"p\">(</span><span class=\"s\">\"Hello from the Godot Editor!\"</span><span class=\"p\">);</span>\n<span class=\"w\">    </span><span class=\"p\">}</span>\n<span class=\"p\">}</span>\n</pre></div>\n</div>\n</div></div>\n<p><strong>Note:</strong> The script is run in the Editor context, which means the output is visible in the console window started with the Editor (stdout) instead of the usual Godot <strong>Output</strong> dock.</p>\n<p><strong>Note:</strong> EditorScript is <a class=\"reference internal\" href=\"class_refcounted.html#class-refcounted\"><span class=\"std std-ref\">RefCounted</span></a>, meaning it is destroyed when nothing references it. This can cause errors during asynchronous operations if there are no references to the script.</p>\n"
            },
            "class_editorselection": {
                "url": "https://docs.godotengine.org/en/4.1/classes/class_editorselection.html",
                "title": "EditorSelection",
                "blurb": "<p><strong>Inherits:</strong> <a class=\"reference internal\" href=\"class_object.html#class-object\"><span class=\"std std-ref\">Object</span></a></p><p>Manages the SceneTree selection in the editor.</p>",
                "description": "\n\n<p>This object manages the SceneTree selection in the editor.</p>\n<p><strong>Note:</strong> This class shouldn't be instantiated directly. Instead, access the singleton using <a class=\"reference internal\" href=\"class_editorinterface.html#class-editorinterface-method-get-selection\"><span class=\"std std-ref\">EditorInterface.get_selection</span></a>.</p>\n"
            },
            "class_editortranslationparserplugin": {
                "url": "https://docs.godotengine.org/en/4.1/classes/class_editortranslationparserplugin.html",
                "title": "EditorTranslationParserPlugin",
                "blurb": "<p><strong>Inherits:</strong> <a class=\"reference internal\" href=\"class_refcounted.html#class-refcounted\"><span class=\"std std-ref\">RefCounted</span></a> <strong>&lt;</strong> <a class=\"reference internal\" href=\"class_object.html#class-object\"><span class=\"std std-ref\">Object</span></a></p><p>Plugin for adding custom parsers to extract strings that are to be translated from custom files (.csv, .json etc.).</p>",
                "description": "\n\n<p><strong>EditorTranslationParserPlugin</strong> is invoked when a file is being parsed to extract strings that require translation. To define the parsing and string extraction logic, override the <a class=\"reference internal\" href=\"#class-editortranslationparserplugin-method-parse-file\"><span class=\"std std-ref\">_parse_file</span></a> method in script.</p>\n<p>Add the extracted strings to argument <code class=\"docutils literal notranslate\"><span class=\"pre\">msgids</span></code> or <code class=\"docutils literal notranslate\"><span class=\"pre\">msgids_context_plural</span></code> if context or plural is used.</p>\n<p>When adding to <code class=\"docutils literal notranslate\"><span class=\"pre\">msgids_context_plural</span></code>, you must add the data using the format <code class=\"docutils literal notranslate\"><span class=\"pre\">[\"A\",</span> <span class=\"pre\">\"B\",</span> <span class=\"pre\">\"C\"]</span></code>, where <code class=\"docutils literal notranslate\"><span class=\"pre\">A</span></code> represents the extracted string, <code class=\"docutils literal notranslate\"><span class=\"pre\">B</span></code> represents the context, and <code class=\"docutils literal notranslate\"><span class=\"pre\">C</span></code> represents the plural version of the extracted string. If you want to add only context but not plural, put <code class=\"docutils literal notranslate\"><span class=\"pre\">\"\"</span></code> for the plural slot. The idea is the same if you only want to add plural but not context. See the code below for concrete examples.</p>\n<p>The extracted strings will be written into a POT file selected by user under \"POT Generation\" in \"Localization\" tab in \"Project Settings\" menu.</p>\n<p>Below shows an example of a custom parser that extracts strings from a CSV file to write into a POT.</p>\n<div class=\"sphinx-tabs docutils container\">\n<div aria-label=\"Tabbed content\" class=\"closeable\" role=\"tablist\"><button aria-controls=\"panel-0-R0RTY3JpcHQ=\" aria-selected=\"true\" class=\"sphinx-tabs-tab code-tab group-tab\" id=\"tab-0-R0RTY3JpcHQ=\" name=\"R0RTY3JpcHQ=\" role=\"tab\" tabindex=\"0\">GDScript</button><button aria-controls=\"panel-0-QyM=\" aria-selected=\"false\" class=\"sphinx-tabs-tab code-tab group-tab\" id=\"tab-0-QyM=\" name=\"QyM=\" role=\"tab\" tabindex=\"-1\">C#</button></div><div aria-labelledby=\"tab-0-R0RTY3JpcHQ=\" class=\"sphinx-tabs-panel code-tab group-tab\" id=\"panel-0-R0RTY3JpcHQ=\" name=\"R0RTY3JpcHQ=\" role=\"tabpanel\" tabindex=\"0\"><div class=\"highlight-gdscript notranslate\"><div class=\"highlight\"><pre><span></span><span class=\"nd\">@tool</span>\n<span class=\"k\">extends</span> <span class=\"n\">EditorTranslationParserPlugin</span>\n\n<span class=\"k\">func</span> <span class=\"n\">_parse_file</span><span class=\"p\">(</span><span class=\"n\">path</span><span class=\"p\">,</span> <span class=\"n\">msgids</span><span class=\"p\">,</span> <span class=\"n\">msgids_context_plural</span><span class=\"p\">):</span>\n    <span class=\"k\">var</span> <span class=\"n\">file</span> <span class=\"o\">=</span> <span class=\"n\">FileAccess</span><span class=\"o\">.</span><span class=\"n\">open</span><span class=\"p\">(</span><span class=\"n\">path</span><span class=\"p\">,</span> <span class=\"n\">FileAccess</span><span class=\"o\">.</span><span class=\"n\">READ</span><span class=\"p\">)</span>\n    <span class=\"k\">var</span> <span class=\"n\">text</span> <span class=\"o\">=</span> <span class=\"n\">file</span><span class=\"o\">.</span><span class=\"n\">get_as_text</span><span class=\"p\">()</span>\n    <span class=\"k\">var</span> <span class=\"n\">split_strs</span> <span class=\"o\">=</span> <span class=\"n\">text</span><span class=\"o\">.</span><span class=\"n\">split</span><span class=\"p\">(</span><span class=\"s2\">\",\"</span><span class=\"p\">,</span> <span class=\"bp\">false</span><span class=\"p\">)</span>\n    <span class=\"k k-ControlFlow\">for</span> <span class=\"n\">s</span> <span class=\"ow\">in</span> <span class=\"n\">split_strs</span><span class=\"p\">:</span>\n        <span class=\"n\">msgids</span><span class=\"o\">.</span><span class=\"n\">append</span><span class=\"p\">(</span><span class=\"n\">s</span><span class=\"p\">)</span>\n        <span class=\"c1\">#print(\"Extracted string: \" + s)</span>\n\n<span class=\"k\">func</span> <span class=\"n\">_get_recognized_extensions</span><span class=\"p\">():</span>\n    <span class=\"k k-ControlFlow\">return</span> <span class=\"p\">[</span><span class=\"s2\">\"csv\"</span><span class=\"p\">]</span>\n</pre></div>\n</div>\n</div><div aria-labelledby=\"tab-0-QyM=\" class=\"sphinx-tabs-panel code-tab group-tab\" hidden=\"true\" id=\"panel-0-QyM=\" name=\"QyM=\" role=\"tabpanel\" tabindex=\"0\"><div class=\"highlight-csharp notranslate\"><div class=\"highlight\"><pre><span></span><span class=\"k\">using</span><span class=\"w\"> </span><span class=\"nn\">Godot</span><span class=\"p\">;</span>\n\n<span class=\"na\">[Tool]</span>\n<span class=\"k\">public</span><span class=\"w\"> </span><span class=\"k\">partial</span><span class=\"w\"> </span><span class=\"k\">class</span><span class=\"w\"> </span><span class=\"nc\">CustomParser</span><span class=\"w\"> </span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"n\">EditorTranslationParserPlugin</span>\n<span class=\"p\">{</span>\n<span class=\"w\">    </span><span class=\"k\">public</span><span class=\"w\"> </span><span class=\"k\">override</span><span class=\"w\"> </span><span class=\"k\">void</span><span class=\"w\"> </span><span class=\"nf\">_ParseFile</span><span class=\"p\">(</span><span class=\"kt\">string</span><span class=\"w\"> </span><span class=\"n\">path</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">Godot</span><span class=\"p\">.</span><span class=\"n\">Collections</span><span class=\"p\">.</span><span class=\"n\">Array</span><span class=\"o\">&lt;</span><span class=\"kt\">string</span><span class=\"o\">&gt;</span><span class=\"w\"> </span><span class=\"n\">msgids</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">Godot</span><span class=\"p\">.</span><span class=\"n\">Collections</span><span class=\"p\">.</span><span class=\"n\">Array</span><span class=\"o\">&lt;</span><span class=\"n\">Godot</span><span class=\"p\">.</span><span class=\"n\">Collections</span><span class=\"p\">.</span><span class=\"n\">Array</span><span class=\"o\">&gt;</span><span class=\"w\"> </span><span class=\"n\">msgidsContextPlural</span><span class=\"p\">)</span>\n<span class=\"w\">    </span><span class=\"p\">{</span>\n<span class=\"w\">        </span><span class=\"k\">using</span><span class=\"w\"> </span><span class=\"nn\">var</span><span class=\"w\"> </span><span class=\"n\">file</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"n\">FileAccess</span><span class=\"p\">.</span><span class=\"n\">Open</span><span class=\"p\">(</span><span class=\"n\">path</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">FileAccess</span><span class=\"p\">.</span><span class=\"n\">ModeFlags</span><span class=\"p\">.</span><span class=\"n\">Read</span><span class=\"p\">);</span>\n<span class=\"w\">        </span><span class=\"kt\">string</span><span class=\"w\"> </span><span class=\"n\">text</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"n\">file</span><span class=\"p\">.</span><span class=\"n\">GetAsText</span><span class=\"p\">();</span>\n<span class=\"w\">        </span><span class=\"kt\">string</span><span class=\"p\">[]</span><span class=\"w\"> </span><span class=\"n\">splitStrs</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"n\">text</span><span class=\"p\">.</span><span class=\"n\">Split</span><span class=\"p\">(</span><span class=\"s\">\",\"</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">allowEmpty</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"k\">false</span><span class=\"p\">);</span>\n<span class=\"w\">        </span><span class=\"k\">foreach</span><span class=\"w\"> </span><span class=\"p\">(</span><span class=\"kt\">string</span><span class=\"w\"> </span><span class=\"n\">s</span><span class=\"w\"> </span><span class=\"k\">in</span><span class=\"w\"> </span><span class=\"n\">splitStrs</span><span class=\"p\">)</span>\n<span class=\"w\">        </span><span class=\"p\">{</span>\n<span class=\"w\">            </span><span class=\"n\">msgids</span><span class=\"p\">.</span><span class=\"n\">Add</span><span class=\"p\">(</span><span class=\"n\">s</span><span class=\"p\">);</span>\n<span class=\"w\">            </span><span class=\"c1\">//GD.Print($\"Extracted string: {s}\");</span>\n<span class=\"w\">        </span><span class=\"p\">}</span>\n<span class=\"w\">    </span><span class=\"p\">}</span>\n\n<span class=\"w\">    </span><span class=\"k\">public</span><span class=\"w\"> </span><span class=\"k\">override</span><span class=\"w\"> </span><span class=\"kt\">string</span><span class=\"p\">[]</span><span class=\"w\"> </span><span class=\"nf\">_GetRecognizedExtensions</span><span class=\"p\">()</span>\n<span class=\"w\">    </span><span class=\"p\">{</span>\n<span class=\"w\">        </span><span class=\"k\">return</span><span class=\"w\"> </span><span class=\"k\">new</span><span class=\"w\"> </span><span class=\"kt\">string</span><span class=\"p\">[]</span><span class=\"w\"> </span><span class=\"p\">{</span><span class=\"w\"> </span><span class=\"s\">\"csv\"</span><span class=\"w\"> </span><span class=\"p\">};</span>\n<span class=\"w\">    </span><span class=\"p\">}</span>\n<span class=\"p\">}</span>\n</pre></div>\n</div>\n</div></div>\n<p>To add a translatable string associated with context or plural, add it to <code class=\"docutils literal notranslate\"><span class=\"pre\">msgids_context_plural</span></code>:</p>\n<div class=\"sphinx-tabs docutils container\">\n<div aria-label=\"Tabbed content\" class=\"closeable\" role=\"tablist\"><button aria-controls=\"panel-1-R0RTY3JpcHQ=\" aria-selected=\"true\" class=\"sphinx-tabs-tab code-tab group-tab\" id=\"tab-1-R0RTY3JpcHQ=\" name=\"R0RTY3JpcHQ=\" role=\"tab\" tabindex=\"0\">GDScript</button><button aria-controls=\"panel-1-QyM=\" aria-selected=\"false\" class=\"sphinx-tabs-tab code-tab group-tab\" id=\"tab-1-QyM=\" name=\"QyM=\" role=\"tab\" tabindex=\"-1\">C#</button></div><div aria-labelledby=\"tab-1-R0RTY3JpcHQ=\" class=\"sphinx-tabs-panel code-tab group-tab\" id=\"panel-1-R0RTY3JpcHQ=\" name=\"R0RTY3JpcHQ=\" role=\"tabpanel\" tabindex=\"0\"><div class=\"highlight-gdscript notranslate\"><div class=\"highlight\"><pre><span></span><span class=\"c1\"># This will add a message with msgid \"Test 1\", msgctxt \"context\", and msgid_plural \"test 1 plurals\".</span>\n<span class=\"n\">msgids_context_plural</span><span class=\"o\">.</span><span class=\"n\">append</span><span class=\"p\">([</span><span class=\"s2\">\"Test 1\"</span><span class=\"p\">,</span> <span class=\"s2\">\"context\"</span><span class=\"p\">,</span> <span class=\"s2\">\"test 1 plurals\"</span><span class=\"p\">])</span>\n<span class=\"c1\"># This will add a message with msgid \"A test without context\" and msgid_plural \"plurals\".</span>\n<span class=\"n\">msgids_context_plural</span><span class=\"o\">.</span><span class=\"n\">append</span><span class=\"p\">([</span><span class=\"s2\">\"A test without context\"</span><span class=\"p\">,</span> <span class=\"s2\">\"\"</span><span class=\"p\">,</span> <span class=\"s2\">\"plurals\"</span><span class=\"p\">])</span>\n<span class=\"c1\"># This will add a message with msgid \"Only with context\" and msgctxt \"a friendly context\".</span>\n<span class=\"n\">msgids_context_plural</span><span class=\"o\">.</span><span class=\"n\">append</span><span class=\"p\">([</span><span class=\"s2\">\"Only with context\"</span><span class=\"p\">,</span> <span class=\"s2\">\"a friendly context\"</span><span class=\"p\">,</span> <span class=\"s2\">\"\"</span><span class=\"p\">])</span>\n</pre></div>\n</div>\n</div><div aria-labelledby=\"tab-1-QyM=\" class=\"sphinx-tabs-panel code-tab group-tab\" hidden=\"true\" id=\"panel-1-QyM=\" name=\"QyM=\" role=\"tabpanel\" tabindex=\"0\"><div class=\"highlight-csharp notranslate\"><div class=\"highlight\"><pre><span></span><span class=\"c1\">// This will add a message with msgid \"Test 1\", msgctxt \"context\", and msgid_plural \"test 1 plurals\".</span>\n<span class=\"n\">msgidsContextPlural</span><span class=\"p\">.</span><span class=\"n\">Add</span><span class=\"p\">(</span><span class=\"k\">new</span><span class=\"w\"> </span><span class=\"n\">Godot</span><span class=\"p\">.</span><span class=\"n\">Collections</span><span class=\"p\">.</span><span class=\"n\">Array</span><span class=\"p\">{</span><span class=\"s\">\"Test 1\"</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"s\">\"context\"</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"s\">\"test 1 Plurals\"</span><span class=\"p\">});</span>\n<span class=\"c1\">// This will add a message with msgid \"A test without context\" and msgid_plural \"plurals\".</span>\n<span class=\"n\">msgidsContextPlural</span><span class=\"p\">.</span><span class=\"n\">Add</span><span class=\"p\">(</span><span class=\"k\">new</span><span class=\"w\"> </span><span class=\"n\">Godot</span><span class=\"p\">.</span><span class=\"n\">Collections</span><span class=\"p\">.</span><span class=\"n\">Array</span><span class=\"p\">{</span><span class=\"s\">\"A test without context\"</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"s\">\"\"</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"s\">\"plurals\"</span><span class=\"p\">});</span>\n<span class=\"c1\">// This will add a message with msgid \"Only with context\" and msgctxt \"a friendly context\".</span>\n<span class=\"n\">msgidsContextPlural</span><span class=\"p\">.</span><span class=\"n\">Add</span><span class=\"p\">(</span><span class=\"k\">new</span><span class=\"w\"> </span><span class=\"n\">Godot</span><span class=\"p\">.</span><span class=\"n\">Collections</span><span class=\"p\">.</span><span class=\"n\">Array</span><span class=\"p\">{</span><span class=\"s\">\"Only with context\"</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"s\">\"a friendly context\"</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"s\">\"\"</span><span class=\"p\">});</span>\n</pre></div>\n</div>\n</div></div>\n<p><strong>Note:</strong> If you override parsing logic for standard script types (GDScript, C#, etc.), it would be better to load the <code class=\"docutils literal notranslate\"><span class=\"pre\">path</span></code> argument using <a class=\"reference internal\" href=\"class_resourceloader.html#class-resourceloader-method-load\"><span class=\"std std-ref\">ResourceLoader.load</span></a>. This is because built-in scripts are loaded as <a class=\"reference internal\" href=\"class_resource.html#class-resource\"><span class=\"std std-ref\">Resource</span></a> type, not <a class=\"reference internal\" href=\"class_fileaccess.html#class-fileaccess\"><span class=\"std std-ref\">FileAccess</span></a> type.</p>\n<p>For example:</p>\n<div class=\"sphinx-tabs docutils container\">\n<div aria-label=\"Tabbed content\" class=\"closeable\" role=\"tablist\"><button aria-controls=\"panel-2-R0RTY3JpcHQ=\" aria-selected=\"true\" class=\"sphinx-tabs-tab code-tab group-tab\" id=\"tab-2-R0RTY3JpcHQ=\" name=\"R0RTY3JpcHQ=\" role=\"tab\" tabindex=\"0\">GDScript</button><button aria-controls=\"panel-2-QyM=\" aria-selected=\"false\" class=\"sphinx-tabs-tab code-tab group-tab\" id=\"tab-2-QyM=\" name=\"QyM=\" role=\"tab\" tabindex=\"-1\">C#</button></div><div aria-labelledby=\"tab-2-R0RTY3JpcHQ=\" class=\"sphinx-tabs-panel code-tab group-tab\" id=\"panel-2-R0RTY3JpcHQ=\" name=\"R0RTY3JpcHQ=\" role=\"tabpanel\" tabindex=\"0\"><div class=\"highlight-gdscript notranslate\"><div class=\"highlight\"><pre><span></span><span class=\"k\">func</span> <span class=\"n\">_parse_file</span><span class=\"p\">(</span><span class=\"n\">path</span><span class=\"p\">,</span> <span class=\"n\">msgids</span><span class=\"p\">,</span> <span class=\"n\">msgids_context_plural</span><span class=\"p\">):</span>\n    <span class=\"k\">var</span> <span class=\"n\">res</span> <span class=\"o\">=</span> <span class=\"n\">ResourceLoader</span><span class=\"o\">.</span><span class=\"n\">load</span><span class=\"p\">(</span><span class=\"n\">path</span><span class=\"p\">,</span> <span class=\"s2\">\"Script\"</span><span class=\"p\">)</span>\n    <span class=\"k\">var</span> <span class=\"n\">text</span> <span class=\"o\">=</span> <span class=\"n\">res</span><span class=\"o\">.</span><span class=\"n\">source_code</span>\n    <span class=\"c1\"># Parsing logic.</span>\n\n<span class=\"k\">func</span> <span class=\"n\">_get_recognized_extensions</span><span class=\"p\">():</span>\n    <span class=\"k k-ControlFlow\">return</span> <span class=\"p\">[</span><span class=\"s2\">\"gd\"</span><span class=\"p\">]</span>\n</pre></div>\n</div>\n</div><div aria-labelledby=\"tab-2-QyM=\" class=\"sphinx-tabs-panel code-tab group-tab\" hidden=\"true\" id=\"panel-2-QyM=\" name=\"QyM=\" role=\"tabpanel\" tabindex=\"0\"><div class=\"highlight-csharp notranslate\"><div class=\"highlight\"><pre><span></span><span class=\"k\">public</span><span class=\"w\"> </span><span class=\"k\">override</span><span class=\"w\"> </span><span class=\"k\">void</span><span class=\"w\"> </span><span class=\"nf\">_ParseFile</span><span class=\"p\">(</span><span class=\"kt\">string</span><span class=\"w\"> </span><span class=\"n\">path</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">Godot</span><span class=\"p\">.</span><span class=\"n\">Collections</span><span class=\"p\">.</span><span class=\"n\">Array</span><span class=\"o\">&lt;</span><span class=\"kt\">string</span><span class=\"o\">&gt;</span><span class=\"w\"> </span><span class=\"n\">msgids</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">Godot</span><span class=\"p\">.</span><span class=\"n\">Collections</span><span class=\"p\">.</span><span class=\"n\">Array</span><span class=\"o\">&lt;</span><span class=\"n\">Godot</span><span class=\"p\">.</span><span class=\"n\">Collections</span><span class=\"p\">.</span><span class=\"n\">Array</span><span class=\"o\">&gt;</span><span class=\"w\"> </span><span class=\"n\">msgidsContextPlural</span><span class=\"p\">)</span>\n<span class=\"p\">{</span>\n<span class=\"w\">    </span><span class=\"kt\">var</span><span class=\"w\"> </span><span class=\"n\">res</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"n\">ResourceLoader</span><span class=\"p\">.</span><span class=\"n\">Load</span><span class=\"o\">&lt;</span><span class=\"n\">Script</span><span class=\"o\">&gt;</span><span class=\"p\">(</span><span class=\"n\">path</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"s\">\"Script\"</span><span class=\"p\">);</span>\n<span class=\"w\">    </span><span class=\"kt\">string</span><span class=\"w\"> </span><span class=\"n\">text</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"n\">res</span><span class=\"p\">.</span><span class=\"n\">SourceCode</span><span class=\"p\">;</span>\n<span class=\"w\">    </span><span class=\"c1\">// Parsing logic.</span>\n<span class=\"p\">}</span>\n\n<span class=\"k\">public</span><span class=\"w\"> </span><span class=\"k\">override</span><span class=\"w\"> </span><span class=\"kt\">string</span><span class=\"p\">[]</span><span class=\"w\"> </span><span class=\"nf\">_GetRecognizedExtensions</span><span class=\"p\">()</span>\n<span class=\"p\">{</span>\n<span class=\"w\">    </span><span class=\"k\">return</span><span class=\"w\"> </span><span class=\"k\">new</span><span class=\"w\"> </span><span class=\"kt\">string</span><span class=\"p\">[]</span><span class=\"w\"> </span><span class=\"p\">{</span><span class=\"w\"> </span><span class=\"s\">\"gd\"</span><span class=\"w\"> </span><span class=\"p\">};</span>\n<span class=\"p\">}</span>\n</pre></div>\n</div>\n</div></div>\n<p>To use <strong>EditorTranslationParserPlugin</strong>, register it using the <a class=\"reference internal\" href=\"class_editorplugin.html#class-editorplugin-method-add-translation-parser-plugin\"><span class=\"std std-ref\">EditorPlugin.add_translation_parser_plugin</span></a> method first.</p>\n"
            },
            "class_editorundoredomanager": {
                "url": "https://docs.godotengine.org/en/4.1/classes/class_editorundoredomanager.html",
                "title": "EditorUndoRedoManager",
                "blurb": "<p><strong>Inherits:</strong> <a class=\"reference internal\" href=\"class_object.html#class-object\"><span class=\"std std-ref\">Object</span></a></p><p>Manages undo history of scenes opened in the editor.</p>",
                "description": "\n\n<p><strong>EditorUndoRedoManager</strong> is a manager for <a class=\"reference internal\" href=\"class_undoredo.html#class-undoredo\"><span class=\"std std-ref\">UndoRedo</span></a> objects associated with edited scenes. Each scene has its own undo history and <strong>EditorUndoRedoManager</strong> ensures that each action performed in the editor gets associated with a proper scene. For actions not related to scenes (<a class=\"reference internal\" href=\"class_projectsettings.html#class-projectsettings\"><span class=\"std std-ref\">ProjectSettings</span></a> edits, external resources, etc.), a separate global history is used.</p>\n<p>The usage is mostly the same as <a class=\"reference internal\" href=\"class_undoredo.html#class-undoredo\"><span class=\"std std-ref\">UndoRedo</span></a>. You create and commit actions and the manager automatically decides under-the-hood what scenes it belongs to. The scene is deduced based on the first operation in an action, using the object from the operation. The rules are as follows:</p>\n<ul class=\"simple\">\n<li><p>If the object is a <a class=\"reference internal\" href=\"class_node.html#class-node\"><span class=\"std std-ref\">Node</span></a>, use the currently edited scene;</p></li>\n<li><p>If the object is a built-in resource, use the scene from its path;</p></li>\n<li><p>If the object is external resource or anything else, use global history.</p></li>\n</ul>\n<p>This guessing can sometimes yield false results, so you can provide a custom context object when creating an action.</p>\n<p><strong>EditorUndoRedoManager</strong> is intended to be used by Godot editor plugins. You can obtain it using <a class=\"reference internal\" href=\"class_editorplugin.html#class-editorplugin-method-get-undo-redo\"><span class=\"std std-ref\">EditorPlugin.get_undo_redo</span></a>. For non-editor uses or plugins that don't need to integrate with the editor's undo history, use <a class=\"reference internal\" href=\"class_undoredo.html#class-undoredo\"><span class=\"std std-ref\">UndoRedo</span></a> instead.</p>\n<p>The manager's API is mostly the same as in <a class=\"reference internal\" href=\"class_undoredo.html#class-undoredo\"><span class=\"std std-ref\">UndoRedo</span></a>, so you can refer to its documentation for more examples. The main difference is that <strong>EditorUndoRedoManager</strong> uses object + method name for actions, instead of <a class=\"reference internal\" href=\"class_callable.html#class-callable\"><span class=\"std std-ref\">Callable</span></a>.</p>\n"
            },
            "class_editorvcsinterface": {
                "url": "https://docs.godotengine.org/en/4.1/classes/class_editorvcsinterface.html",
                "title": "EditorVCSInterface",
                "blurb": "<p><strong>Inherits:</strong> <a class=\"reference internal\" href=\"class_object.html#class-object\"><span class=\"std std-ref\">Object</span></a></p><p>Version Control System (VCS) interface, which reads and writes to the local VCS in use.</p>",
                "description": "\n\n<p>Defines the API that the editor uses to extract information from the underlying VCS. The implementation of this API is included in VCS plugins, which are GDExtension plugins that inherit <strong>EditorVCSInterface</strong> and are attached (on demand) to the singleton instance of <strong>EditorVCSInterface</strong>. Instead of performing the task themselves, all the virtual functions listed below are calling the internally overridden functions in the VCS plugins to provide a plug-n-play experience. A custom VCS plugin is supposed to inherit from <strong>EditorVCSInterface</strong> and override each of these virtual functions.</p>\n"
            },
            "class_encodedobjectasid": {
                "url": "https://docs.godotengine.org/en/4.1/classes/class_encodedobjectasid.html",
                "title": "EncodedObjectAsID",
                "blurb": "<p><strong>Inherits:</strong> <a class=\"reference internal\" href=\"class_refcounted.html#class-refcounted\"><span class=\"std std-ref\">RefCounted</span></a> <strong>&lt;</strong> <a class=\"reference internal\" href=\"class_object.html#class-object\"><span class=\"std std-ref\">Object</span></a></p><p>Holds a reference to an <a class=\"reference internal\" href=\"class_object.html#class-object\"><span class=\"std std-ref\">Object</span></a>'s instance ID.</p>",
                "description": "\n\n<p>Utility class which holds a reference to the internal identifier of an <a class=\"reference internal\" href=\"class_object.html#class-object\"><span class=\"std std-ref\">Object</span></a> instance, as given by <a class=\"reference internal\" href=\"class_object.html#class-object-method-get-instance-id\"><span class=\"std std-ref\">Object.get_instance_id</span></a>. This ID can then be used to retrieve the object instance with <a class=\"reference internal\" href=\"class_%40globalscope.html#class-globalscope-method-instance-from-id\"><span class=\"std std-ref\">@GlobalScope.instance_from_id</span></a>.</p>\n<p>This class is used internally by the editor inspector and script debugger, but can also be used in plugins to pass and display objects as their IDs.</p>\n"
            },
            "class_enetconnection": {
                "url": "https://docs.godotengine.org/en/4.1/classes/class_enetconnection.html",
                "title": "ENetConnection",
                "blurb": "<p><strong>Inherits:</strong> <a class=\"reference internal\" href=\"class_refcounted.html#class-refcounted\"><span class=\"std std-ref\">RefCounted</span></a> <strong>&lt;</strong> <a class=\"reference internal\" href=\"class_object.html#class-object\"><span class=\"std std-ref\">Object</span></a></p><p>A wrapper class for an <a class=\"reference external\" href=\"http://enet.bespin.org/group__host.html\">ENetHost</a>.</p>",
                "description": "\n\n<p>ENet's purpose is to provide a relatively thin, simple and robust network communication layer on top of UDP (User Datagram Protocol).</p>\n"
            },
            "class_enetmultiplayerpeer": {
                "url": "https://docs.godotengine.org/en/4.1/classes/class_enetmultiplayerpeer.html",
                "title": "ENetMultiplayerPeer",
                "blurb": "<p><strong>Inherits:</strong> <a class=\"reference internal\" href=\"class_multiplayerpeer.html#class-multiplayerpeer\"><span class=\"std std-ref\">MultiplayerPeer</span></a> <strong>&lt;</strong> <a class=\"reference internal\" href=\"class_packetpeer.html#class-packetpeer\"><span class=\"std std-ref\">PacketPeer</span></a> <strong>&lt;</strong> <a class=\"reference internal\" href=\"class_refcounted.html#class-refcounted\"><span class=\"std std-ref\">RefCounted</span></a> <strong>&lt;</strong> <a class=\"reference internal\" href=\"class_object.html#class-object\"><span class=\"std std-ref\">Object</span></a></p><p>A MultiplayerPeer implementation using the <a class=\"reference external\" href=\"http://enet.bespin.org/index.html\">ENet</a> library.</p>",
                "description": "\n\n<p>A MultiplayerPeer implementation that should be passed to <a class=\"reference internal\" href=\"class_multiplayerapi.html#class-multiplayerapi-property-multiplayer-peer\"><span class=\"std std-ref\">MultiplayerAPI.multiplayer_peer</span></a> after being initialized as either a client, server, or mesh. Events can then be handled by connecting to <a class=\"reference internal\" href=\"class_multiplayerapi.html#class-multiplayerapi\"><span class=\"std std-ref\">MultiplayerAPI</span></a> signals. See <a class=\"reference internal\" href=\"class_enetconnection.html#class-enetconnection\"><span class=\"std std-ref\">ENetConnection</span></a> for more information on the ENet library wrapper.</p>\n<p><strong>Note:</strong> ENet only uses UDP, not TCP. When forwarding the server port to make your server accessible on the public Internet, you only need to forward the server port in UDP. You can use the <a class=\"reference internal\" href=\"class_upnp.html#class-upnp\"><span class=\"std std-ref\">UPNP</span></a> class to try to forward the server port automatically when starting the server.</p>\n"
            },
            "class_enetpacketpeer": {
                "url": "https://docs.godotengine.org/en/4.1/classes/class_enetpacketpeer.html",
                "title": "ENetPacketPeer",
                "blurb": "<p><strong>Inherits:</strong> <a class=\"reference internal\" href=\"class_packetpeer.html#class-packetpeer\"><span class=\"std std-ref\">PacketPeer</span></a> <strong>&lt;</strong> <a class=\"reference internal\" href=\"class_refcounted.html#class-refcounted\"><span class=\"std std-ref\">RefCounted</span></a> <strong>&lt;</strong> <a class=\"reference internal\" href=\"class_object.html#class-object\"><span class=\"std std-ref\">Object</span></a></p><p>A wrapper class for an <a class=\"reference external\" href=\"http://enet.bespin.org/group__peer.html\">ENetPeer</a>.</p>",
                "description": "\n\n<p>A PacketPeer implementation representing a peer of an <a class=\"reference internal\" href=\"class_enetconnection.html#class-enetconnection\"><span class=\"std std-ref\">ENetConnection</span></a>.</p>\n<p>This class cannot be instantiated directly but can be retrieved during <a class=\"reference internal\" href=\"class_enetconnection.html#class-enetconnection-method-service\"><span class=\"std std-ref\">ENetConnection.service</span></a> or via <a class=\"reference internal\" href=\"class_enetconnection.html#class-enetconnection-method-get-peers\"><span class=\"std std-ref\">ENetConnection.get_peers</span></a>.</p>\n<p><strong>Note:</strong> When exporting to Android, make sure to enable the <code class=\"docutils literal notranslate\"><span class=\"pre\">INTERNET</span></code> permission in the Android export preset before exporting the project or using one-click deploy. Otherwise, network communication of any kind will be blocked by Android.</p>\n"
            },
            "class_engine": {
                "url": "https://docs.godotengine.org/en/4.1/classes/class_engine.html",
                "title": "Engine",
                "blurb": "<p><strong>Inherits:</strong> <a class=\"reference internal\" href=\"class_object.html#class-object\"><span class=\"std std-ref\">Object</span></a></p><p>Provides access to engine properties.</p>",
                "description": "\n\n<p>The <strong>Engine</strong> singleton allows you to query and modify the project's run-time parameters, such as frames per second, time scale, and others.</p>\n"
            },
            "class_enginedebugger": {
                "url": "https://docs.godotengine.org/en/4.1/classes/class_enginedebugger.html",
                "title": "EngineDebugger",
                "blurb": "<p><strong>Inherits:</strong> <a class=\"reference internal\" href=\"class_object.html#class-object\"><span class=\"std std-ref\">Object</span></a></p><p>Exposes the internal debugger.</p>",
                "description": "\n\n<p><strong>EngineDebugger</strong> handles the communication between the editor and the running game. It is active in the running game. Messages can be sent/received through it. It also manages the profilers.</p>\n"
            },
            "class_engineprofiler": {
                "url": "https://docs.godotengine.org/en/4.1/classes/class_engineprofiler.html",
                "title": "EngineProfiler",
                "blurb": "<p><strong>Inherits:</strong> <a class=\"reference internal\" href=\"class_refcounted.html#class-refcounted\"><span class=\"std std-ref\">RefCounted</span></a> <strong>&lt;</strong> <a class=\"reference internal\" href=\"class_object.html#class-object\"><span class=\"std std-ref\">Object</span></a></p><p>Base class for creating custom profilers.</p>",
                "description": "\n\n<p>This class can be used to implement custom profilers that are able to interact with the engine and editor debugger.</p>\n<p>See <a class=\"reference internal\" href=\"class_enginedebugger.html#class-enginedebugger\"><span class=\"std std-ref\">EngineDebugger</span></a> and <a class=\"reference internal\" href=\"class_editordebuggerplugin.html#class-editordebuggerplugin\"><span class=\"std std-ref\">EditorDebuggerPlugin</span></a> for more information.</p>\n"
            },
            "class_expression": {
                "url": "https://docs.godotengine.org/en/4.1/classes/class_expression.html",
                "title": "Expression",
                "blurb": "<p><strong>Inherits:</strong> <a class=\"reference internal\" href=\"class_refcounted.html#class-refcounted\"><span class=\"std std-ref\">RefCounted</span></a> <strong>&lt;</strong> <a class=\"reference internal\" href=\"class_object.html#class-object\"><span class=\"std std-ref\">Object</span></a></p><p>A class that stores an expression you can execute.</p>",
                "description": "\n\n<p>An expression can be made of any arithmetic operation, built-in math function call, method call of a passed instance, or built-in type construction call.</p>\n<p>An example expression text using the built-in math functions could be <code class=\"docutils literal notranslate\"><span class=\"pre\">sqrt(pow(3,</span> <span class=\"pre\">2)</span> <span class=\"pre\">+</span> <span class=\"pre\">pow(4,</span> <span class=\"pre\">2))</span></code>.</p>\n<p>In the following example we use a <a class=\"reference internal\" href=\"class_lineedit.html#class-lineedit\"><span class=\"std std-ref\">LineEdit</span></a> node to write our expression and show the result.</p>\n<div class=\"sphinx-tabs docutils container\">\n<div aria-label=\"Tabbed content\" class=\"closeable\" role=\"tablist\"><button aria-controls=\"panel-0-R0RTY3JpcHQ=\" aria-selected=\"true\" class=\"sphinx-tabs-tab code-tab group-tab\" id=\"tab-0-R0RTY3JpcHQ=\" name=\"R0RTY3JpcHQ=\" role=\"tab\" tabindex=\"0\">GDScript</button><button aria-controls=\"panel-0-QyM=\" aria-selected=\"false\" class=\"sphinx-tabs-tab code-tab group-tab\" id=\"tab-0-QyM=\" name=\"QyM=\" role=\"tab\" tabindex=\"-1\">C#</button></div><div aria-labelledby=\"tab-0-R0RTY3JpcHQ=\" class=\"sphinx-tabs-panel code-tab group-tab\" id=\"panel-0-R0RTY3JpcHQ=\" name=\"R0RTY3JpcHQ=\" role=\"tabpanel\" tabindex=\"0\"><div class=\"highlight-gdscript notranslate\"><div class=\"highlight\"><pre><span></span><span class=\"k\">var</span> <span class=\"n\">expression</span> <span class=\"o\">=</span> <span class=\"n\">Expression</span><span class=\"o\">.</span><span class=\"n\">new</span><span class=\"p\">()</span>\n\n<span class=\"k\">func</span> <span class=\"n\">_ready</span><span class=\"p\">():</span>\n    <span class=\"o\">$</span><span class=\"n\">LineEdit</span><span class=\"o\">.</span><span class=\"n\">text_submitted</span><span class=\"o\">.</span><span class=\"n\">connect</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_on_text_submitted</span><span class=\"p\">)</span>\n\n<span class=\"k\">func</span> <span class=\"n\">_on_text_submitted</span><span class=\"p\">(</span><span class=\"n\">command</span><span class=\"p\">):</span>\n    <span class=\"k\">var</span> <span class=\"n\">error</span> <span class=\"o\">=</span> <span class=\"n\">expression</span><span class=\"o\">.</span><span class=\"n\">parse</span><span class=\"p\">(</span><span class=\"n\">command</span><span class=\"p\">)</span>\n    <span class=\"k k-ControlFlow\">if</span> <span class=\"n\">error</span> <span class=\"o\">!=</span> <span class=\"n\">OK</span><span class=\"p\">:</span>\n        <span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"n\">expression</span><span class=\"o\">.</span><span class=\"n\">get_error_text</span><span class=\"p\">())</span>\n        <span class=\"k k-ControlFlow\">return</span>\n    <span class=\"k\">var</span> <span class=\"n\">result</span> <span class=\"o\">=</span> <span class=\"n\">expression</span><span class=\"o\">.</span><span class=\"n\">execute</span><span class=\"p\">()</span>\n    <span class=\"k k-ControlFlow\">if</span> <span class=\"ow\">not</span> <span class=\"n\">expression</span><span class=\"o\">.</span><span class=\"n\">has_execute_failed</span><span class=\"p\">():</span>\n        <span class=\"o\">$</span><span class=\"n\">LineEdit</span><span class=\"o\">.</span><span class=\"n\">text</span> <span class=\"o\">=</span> <span class=\"nb\">str</span><span class=\"p\">(</span><span class=\"n\">result</span><span class=\"p\">)</span>\n</pre></div>\n</div>\n</div><div aria-labelledby=\"tab-0-QyM=\" class=\"sphinx-tabs-panel code-tab group-tab\" hidden=\"true\" id=\"panel-0-QyM=\" name=\"QyM=\" role=\"tabpanel\" tabindex=\"0\"><div class=\"highlight-csharp notranslate\"><div class=\"highlight\"><pre><span></span><span class=\"k\">private</span><span class=\"w\"> </span><span class=\"n\">Expression</span><span class=\"w\"> </span><span class=\"n\">_expression</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"k\">new</span><span class=\"w\"> </span><span class=\"n\">Expression</span><span class=\"p\">();</span>\n\n<span class=\"k\">public</span><span class=\"w\"> </span><span class=\"k\">override</span><span class=\"w\"> </span><span class=\"k\">void</span><span class=\"w\"> </span><span class=\"nf\">_Ready</span><span class=\"p\">()</span>\n<span class=\"p\">{</span>\n<span class=\"w\">    </span><span class=\"n\">GetNode</span><span class=\"o\">&lt;</span><span class=\"n\">LineEdit</span><span class=\"o\">&gt;</span><span class=\"p\">(</span><span class=\"s\">\"LineEdit\"</span><span class=\"p\">).</span><span class=\"n\">TextSubmitted</span><span class=\"w\"> </span><span class=\"o\">+=</span><span class=\"w\"> </span><span class=\"n\">OnTextEntered</span><span class=\"p\">;</span>\n<span class=\"p\">}</span>\n\n<span class=\"k\">private</span><span class=\"w\"> </span><span class=\"k\">void</span><span class=\"w\"> </span><span class=\"nf\">OnTextEntered</span><span class=\"p\">(</span><span class=\"kt\">string</span><span class=\"w\"> </span><span class=\"n\">command</span><span class=\"p\">)</span>\n<span class=\"p\">{</span>\n<span class=\"w\">    </span><span class=\"n\">Error</span><span class=\"w\"> </span><span class=\"n\">error</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"n\">_expression</span><span class=\"p\">.</span><span class=\"n\">Parse</span><span class=\"p\">(</span><span class=\"n\">command</span><span class=\"p\">);</span>\n<span class=\"w\">    </span><span class=\"k\">if</span><span class=\"w\"> </span><span class=\"p\">(</span><span class=\"n\">error</span><span class=\"w\"> </span><span class=\"o\">!=</span><span class=\"w\"> </span><span class=\"n\">Error</span><span class=\"p\">.</span><span class=\"n\">Ok</span><span class=\"p\">)</span>\n<span class=\"w\">    </span><span class=\"p\">{</span>\n<span class=\"w\">        </span><span class=\"n\">GD</span><span class=\"p\">.</span><span class=\"n\">Print</span><span class=\"p\">(</span><span class=\"n\">_expression</span><span class=\"p\">.</span><span class=\"n\">GetErrorText</span><span class=\"p\">());</span>\n<span class=\"w\">        </span><span class=\"k\">return</span><span class=\"p\">;</span>\n<span class=\"w\">    </span><span class=\"p\">}</span>\n<span class=\"w\">    </span><span class=\"n\">Variant</span><span class=\"w\"> </span><span class=\"n\">result</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"n\">_expression</span><span class=\"p\">.</span><span class=\"n\">Execute</span><span class=\"p\">();</span>\n<span class=\"w\">    </span><span class=\"k\">if</span><span class=\"w\"> </span><span class=\"p\">(</span><span class=\"o\">!</span><span class=\"n\">_expression</span><span class=\"p\">.</span><span class=\"n\">HasExecuteFailed</span><span class=\"p\">())</span>\n<span class=\"w\">    </span><span class=\"p\">{</span>\n<span class=\"w\">        </span><span class=\"n\">GetNode</span><span class=\"o\">&lt;</span><span class=\"n\">LineEdit</span><span class=\"o\">&gt;</span><span class=\"p\">(</span><span class=\"s\">\"LineEdit\"</span><span class=\"p\">).</span><span class=\"n\">Text</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"n\">result</span><span class=\"p\">.</span><span class=\"n\">ToString</span><span class=\"p\">();</span>\n<span class=\"w\">    </span><span class=\"p\">}</span>\n<span class=\"p\">}</span>\n</pre></div>\n</div>\n</div></div>\n"
            },
            "class_fileaccess": {
                "url": "https://docs.godotengine.org/en/4.1/classes/class_fileaccess.html",
                "title": "FileAccess",
                "blurb": "<p><strong>Inherits:</strong> <a class=\"reference internal\" href=\"class_refcounted.html#class-refcounted\"><span class=\"std std-ref\">RefCounted</span></a> <strong>&lt;</strong> <a class=\"reference internal\" href=\"class_object.html#class-object\"><span class=\"std std-ref\">Object</span></a></p><p>Provides methods for file reading and writing operations.</p>",
                "description": "\n\n<p>This class can be used to permanently store data in the user device's file system and to read from it. This is useful for store game save data or player configuration files.</p>\n<p>Here's a sample on how to write and read from a file:</p>\n<div class=\"sphinx-tabs docutils container\">\n<div aria-label=\"Tabbed content\" class=\"closeable\" role=\"tablist\"><button aria-controls=\"panel-0-R0RTY3JpcHQ=\" aria-selected=\"true\" class=\"sphinx-tabs-tab code-tab group-tab\" id=\"tab-0-R0RTY3JpcHQ=\" name=\"R0RTY3JpcHQ=\" role=\"tab\" tabindex=\"0\">GDScript</button><button aria-controls=\"panel-0-QyM=\" aria-selected=\"false\" class=\"sphinx-tabs-tab code-tab group-tab\" id=\"tab-0-QyM=\" name=\"QyM=\" role=\"tab\" tabindex=\"-1\">C#</button></div><div aria-labelledby=\"tab-0-R0RTY3JpcHQ=\" class=\"sphinx-tabs-panel code-tab group-tab\" id=\"panel-0-R0RTY3JpcHQ=\" name=\"R0RTY3JpcHQ=\" role=\"tabpanel\" tabindex=\"0\"><div class=\"highlight-gdscript notranslate\"><div class=\"highlight\"><pre><span></span><span class=\"k\">func</span> <span class=\"n\">save</span><span class=\"p\">(</span><span class=\"n\">content</span><span class=\"p\">):</span>\n    <span class=\"k\">var</span> <span class=\"n\">file</span> <span class=\"o\">=</span> <span class=\"n\">FileAccess</span><span class=\"o\">.</span><span class=\"n\">open</span><span class=\"p\">(</span><span class=\"s2\">\"user://save_game.dat\"</span><span class=\"p\">,</span> <span class=\"n\">FileAccess</span><span class=\"o\">.</span><span class=\"n\">WRITE</span><span class=\"p\">)</span>\n    <span class=\"n\">file</span><span class=\"o\">.</span><span class=\"n\">store_string</span><span class=\"p\">(</span><span class=\"n\">content</span><span class=\"p\">)</span>\n\n<span class=\"k\">func</span> <span class=\"nb\">load</span><span class=\"p\">():</span>\n    <span class=\"k\">var</span> <span class=\"n\">file</span> <span class=\"o\">=</span> <span class=\"n\">FileAccess</span><span class=\"o\">.</span><span class=\"n\">open</span><span class=\"p\">(</span><span class=\"s2\">\"user://save_game.dat\"</span><span class=\"p\">,</span> <span class=\"n\">FileAccess</span><span class=\"o\">.</span><span class=\"n\">READ</span><span class=\"p\">)</span>\n    <span class=\"k\">var</span> <span class=\"n\">content</span> <span class=\"o\">=</span> <span class=\"n\">file</span><span class=\"o\">.</span><span class=\"n\">get_as_text</span><span class=\"p\">()</span>\n    <span class=\"k k-ControlFlow\">return</span> <span class=\"n\">content</span>\n</pre></div>\n</div>\n</div><div aria-labelledby=\"tab-0-QyM=\" class=\"sphinx-tabs-panel code-tab group-tab\" hidden=\"true\" id=\"panel-0-QyM=\" name=\"QyM=\" role=\"tabpanel\" tabindex=\"0\"><div class=\"highlight-csharp notranslate\"><div class=\"highlight\"><pre><span></span><span class=\"k\">public</span><span class=\"w\"> </span><span class=\"k\">void</span><span class=\"w\"> </span><span class=\"nf\">Save</span><span class=\"p\">(</span><span class=\"kt\">string</span><span class=\"w\"> </span><span class=\"n\">content</span><span class=\"p\">)</span>\n<span class=\"p\">{</span>\n<span class=\"w\">    </span><span class=\"k\">using</span><span class=\"w\"> </span><span class=\"nn\">var</span><span class=\"w\"> </span><span class=\"n\">file</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"n\">FileAccess</span><span class=\"p\">.</span><span class=\"n\">Open</span><span class=\"p\">(</span><span class=\"s\">\"user://save_game.dat\"</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">FileAccess</span><span class=\"p\">.</span><span class=\"n\">ModeFlags</span><span class=\"p\">.</span><span class=\"n\">Write</span><span class=\"p\">);</span>\n<span class=\"w\">    </span><span class=\"n\">file</span><span class=\"p\">.</span><span class=\"n\">StoreString</span><span class=\"p\">(</span><span class=\"n\">content</span><span class=\"p\">);</span>\n<span class=\"p\">}</span>\n\n<span class=\"k\">public</span><span class=\"w\"> </span><span class=\"kt\">string</span><span class=\"w\"> </span><span class=\"nf\">Load</span><span class=\"p\">()</span>\n<span class=\"p\">{</span>\n<span class=\"w\">    </span><span class=\"k\">using</span><span class=\"w\"> </span><span class=\"nn\">var</span><span class=\"w\"> </span><span class=\"n\">file</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"n\">FileAccess</span><span class=\"p\">.</span><span class=\"n\">Open</span><span class=\"p\">(</span><span class=\"s\">\"user://save_game.dat\"</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">FileAccess</span><span class=\"p\">.</span><span class=\"n\">ModeFlags</span><span class=\"p\">.</span><span class=\"n\">Read</span><span class=\"p\">);</span>\n<span class=\"w\">    </span><span class=\"kt\">string</span><span class=\"w\"> </span><span class=\"n\">content</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"n\">file</span><span class=\"p\">.</span><span class=\"n\">GetAsText</span><span class=\"p\">();</span>\n<span class=\"w\">    </span><span class=\"k\">return</span><span class=\"w\"> </span><span class=\"n\">content</span><span class=\"p\">;</span>\n<span class=\"p\">}</span>\n</pre></div>\n</div>\n</div></div>\n<p>In the example above, the file will be saved in the user data folder as specified in the <a class=\"reference internal\" href=\"../tutorials/io/data_paths.html\"><span class=\"doc\">Data paths</span></a> documentation.</p>\n<p><strong>FileAccess</strong> will close when it's freed, which happens when it goes out of scope or when it gets assigned with <code class=\"docutils literal notranslate\"><span class=\"pre\">null</span></code>. <a class=\"reference internal\" href=\"#class-fileaccess-method-close\"><span class=\"std std-ref\">close</span></a> can be used to close it before then explicitly. In C# the reference must be disposed manually, which can be done with the <code class=\"docutils literal notranslate\"><span class=\"pre\">using</span></code> statement or by calling the <code class=\"docutils literal notranslate\"><span class=\"pre\">Dispose</span></code> method directly.</p>\n<p><strong>Note:</strong> To access project resources once exported, it is recommended to use <a class=\"reference internal\" href=\"class_resourceloader.html#class-resourceloader\"><span class=\"std std-ref\">ResourceLoader</span></a> instead of <strong>FileAccess</strong>, as some files are converted to engine-specific formats and their original source files might not be present in the exported PCK package.</p>\n<p><strong>Note:</strong> Files are automatically closed only if the process exits \"normally\" (such as by clicking the window manager's close button or pressing <strong>Alt + F4</strong>). If you stop the project execution by pressing <strong>F8</strong> while the project is running, the file won't be closed as the game process will be killed. You can work around this by calling <a class=\"reference internal\" href=\"#class-fileaccess-method-flush\"><span class=\"std std-ref\">flush</span></a> at regular intervals.</p>\n"
            },
            "class_gdextensionmanager": {
                "url": "https://docs.godotengine.org/en/4.1/classes/class_gdextensionmanager.html",
                "title": "GDExtensionManager",
                "blurb": "<p><strong>Inherits:</strong> <a class=\"reference internal\" href=\"class_object.html#class-object\"><span class=\"std std-ref\">Object</span></a></p>",
                "description": null
            },
            "class_geometry2d": {
                "url": "https://docs.godotengine.org/en/4.1/classes/class_geometry2d.html",
                "title": "Geometry2D",
                "blurb": "<p><strong>Inherits:</strong> <a class=\"reference internal\" href=\"class_object.html#class-object\"><span class=\"std std-ref\">Object</span></a></p><p>Provides methods for some common 2D geometric operations.</p>",
                "description": "\n\n<p>Provides a set of helper functions to create geometric shapes, compute intersections between shapes, and process various other geometric operations in 2D.</p>\n"
            },
            "class_geometry3d": {
                "url": "https://docs.godotengine.org/en/4.1/classes/class_geometry3d.html",
                "title": "Geometry3D",
                "blurb": "<p><strong>Inherits:</strong> <a class=\"reference internal\" href=\"class_object.html#class-object\"><span class=\"std std-ref\">Object</span></a></p><p>Provides methods for some common 3D geometric operations.</p>",
                "description": "\n\n<p>Provides a set of helper functions to create geometric shapes, compute intersections between shapes, and process various other geometric operations in 3D.</p>\n"
            },
            "class_godotsharp": {
                "url": "https://docs.godotengine.org/en/4.1/classes/class_godotsharp.html",
                "title": "GodotSharp",
                "blurb": "<p><strong>Inherits:</strong> <a class=\"reference internal\" href=\"class_object.html#class-object\"><span class=\"std std-ref\">Object</span></a></p><p>Bridge between Godot and the Mono runtime (Mono-enabled builds only).</p>",
                "description": "\n\n<p>This class is a bridge between Godot and the Mono runtime. It exposes several low-level operations and is only available in Mono-enabled Godot builds.</p>\n<p>See also <a class=\"reference internal\" href=\"class_csharpscript.html#class-csharpscript\"><span class=\"std std-ref\">CSharpScript</span></a>.</p>\n"
            },
            "class_hashingcontext": {
                "url": "https://docs.godotengine.org/en/4.1/classes/class_hashingcontext.html",
                "title": "HashingContext",
                "blurb": "<p><strong>Inherits:</strong> <a class=\"reference internal\" href=\"class_refcounted.html#class-refcounted\"><span class=\"std std-ref\">RefCounted</span></a> <strong>&lt;</strong> <a class=\"reference internal\" href=\"class_object.html#class-object\"><span class=\"std std-ref\">Object</span></a></p><p>Provides functionality for computing cryptographic hashes chunk by chunk.</p>",
                "description": "\n\n<p>The HashingContext class provides an interface for computing cryptographic hashes over multiple iterations. Useful for computing hashes of big files (so you don't have to load them all in memory), network streams, and data streams in general (so you don't have to hold buffers).</p>\n<p>The <a class=\"reference internal\" href=\"#enum-hashingcontext-hashtype\"><span class=\"std std-ref\">HashType</span></a> enum shows the supported hashing algorithms.</p>\n<div class=\"sphinx-tabs docutils container\">\n<div aria-label=\"Tabbed content\" class=\"closeable\" role=\"tablist\"><button aria-controls=\"panel-0-R0RTY3JpcHQ=\" aria-selected=\"true\" class=\"sphinx-tabs-tab code-tab group-tab\" id=\"tab-0-R0RTY3JpcHQ=\" name=\"R0RTY3JpcHQ=\" role=\"tab\" tabindex=\"0\">GDScript</button><button aria-controls=\"panel-0-QyM=\" aria-selected=\"false\" class=\"sphinx-tabs-tab code-tab group-tab\" id=\"tab-0-QyM=\" name=\"QyM=\" role=\"tab\" tabindex=\"-1\">C#</button></div><div aria-labelledby=\"tab-0-R0RTY3JpcHQ=\" class=\"sphinx-tabs-panel code-tab group-tab\" id=\"panel-0-R0RTY3JpcHQ=\" name=\"R0RTY3JpcHQ=\" role=\"tabpanel\" tabindex=\"0\"><div class=\"highlight-gdscript notranslate\"><div class=\"highlight\"><pre><span></span><span class=\"k\">const</span> <span class=\"n\">CHUNK_SIZE</span> <span class=\"o\">=</span> <span class=\"mi\">1024</span>\n\n<span class=\"k\">func</span> <span class=\"n\">hash_file</span><span class=\"p\">(</span><span class=\"n\">path</span><span class=\"p\">):</span>\n    <span class=\"c1\"># Check that file exists.</span>\n    <span class=\"k k-ControlFlow\">if</span> <span class=\"ow\">not</span> <span class=\"n\">FileAccess</span><span class=\"o\">.</span><span class=\"n\">file_exists</span><span class=\"p\">(</span><span class=\"n\">path</span><span class=\"p\">):</span>\n        <span class=\"k k-ControlFlow\">return</span>\n    <span class=\"c1\"># Start a SHA-256 context.</span>\n    <span class=\"k\">var</span> <span class=\"n\">ctx</span> <span class=\"o\">=</span> <span class=\"n\">HashingContext</span><span class=\"o\">.</span><span class=\"n\">new</span><span class=\"p\">()</span>\n    <span class=\"n\">ctx</span><span class=\"o\">.</span><span class=\"n\">start</span><span class=\"p\">(</span><span class=\"n\">HashingContext</span><span class=\"o\">.</span><span class=\"n\">HASH_SHA256</span><span class=\"p\">)</span>\n    <span class=\"c1\"># Open the file to hash.</span>\n    <span class=\"k\">var</span> <span class=\"n\">file</span> <span class=\"o\">=</span> <span class=\"n\">FileAccess</span><span class=\"o\">.</span><span class=\"n\">open</span><span class=\"p\">(</span><span class=\"n\">path</span><span class=\"p\">,</span> <span class=\"n\">FileAccess</span><span class=\"o\">.</span><span class=\"n\">READ</span><span class=\"p\">)</span>\n    <span class=\"c1\"># Update the context after reading each chunk.</span>\n    <span class=\"k k-ControlFlow\">while</span> <span class=\"ow\">not</span> <span class=\"n\">file</span><span class=\"o\">.</span><span class=\"n\">eof_reached</span><span class=\"p\">():</span>\n        <span class=\"n\">ctx</span><span class=\"o\">.</span><span class=\"n\">update</span><span class=\"p\">(</span><span class=\"n\">file</span><span class=\"o\">.</span><span class=\"n\">get_buffer</span><span class=\"p\">(</span><span class=\"n\">CHUNK_SIZE</span><span class=\"p\">))</span>\n    <span class=\"c1\"># Get the computed hash.</span>\n    <span class=\"k\">var</span> <span class=\"n\">res</span> <span class=\"o\">=</span> <span class=\"n\">ctx</span><span class=\"o\">.</span><span class=\"n\">finish</span><span class=\"p\">()</span>\n    <span class=\"c1\"># Print the result as hex string and array.</span>\n    <span class=\"nb\">printt</span><span class=\"p\">(</span><span class=\"n\">res</span><span class=\"o\">.</span><span class=\"n\">hex_encode</span><span class=\"p\">(),</span> <span class=\"nb nb-Type\">Array</span><span class=\"p\">(</span><span class=\"n\">res</span><span class=\"p\">))</span>\n</pre></div>\n</div>\n</div><div aria-labelledby=\"tab-0-QyM=\" class=\"sphinx-tabs-panel code-tab group-tab\" hidden=\"true\" id=\"panel-0-QyM=\" name=\"QyM=\" role=\"tabpanel\" tabindex=\"0\"><div class=\"highlight-csharp notranslate\"><div class=\"highlight\"><pre><span></span><span class=\"k\">public</span><span class=\"w\"> </span><span class=\"k\">const</span><span class=\"w\"> </span><span class=\"kt\">int</span><span class=\"w\"> </span><span class=\"n\">ChunkSize</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"m\">1024</span><span class=\"p\">;</span>\n\n<span class=\"k\">public</span><span class=\"w\"> </span><span class=\"k\">void</span><span class=\"w\"> </span><span class=\"nf\">HashFile</span><span class=\"p\">(</span><span class=\"kt\">string</span><span class=\"w\"> </span><span class=\"n\">path</span><span class=\"p\">)</span>\n<span class=\"p\">{</span>\n<span class=\"w\">    </span><span class=\"c1\">// Check that file exists.</span>\n<span class=\"w\">    </span><span class=\"k\">if</span><span class=\"w\"> </span><span class=\"p\">(</span><span class=\"o\">!</span><span class=\"n\">FileAccess</span><span class=\"p\">.</span><span class=\"n\">FileExists</span><span class=\"p\">(</span><span class=\"n\">path</span><span class=\"p\">))</span>\n<span class=\"w\">    </span><span class=\"p\">{</span>\n<span class=\"w\">        </span><span class=\"k\">return</span><span class=\"p\">;</span>\n<span class=\"w\">    </span><span class=\"p\">}</span>\n<span class=\"w\">    </span><span class=\"c1\">// Start a SHA-256 context.</span>\n<span class=\"w\">    </span><span class=\"kt\">var</span><span class=\"w\"> </span><span class=\"n\">ctx</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"k\">new</span><span class=\"w\"> </span><span class=\"n\">HashingContext</span><span class=\"p\">();</span>\n<span class=\"w\">    </span><span class=\"n\">ctx</span><span class=\"p\">.</span><span class=\"n\">Start</span><span class=\"p\">(</span><span class=\"n\">HashingContext</span><span class=\"p\">.</span><span class=\"n\">HashType</span><span class=\"p\">.</span><span class=\"n\">Sha256</span><span class=\"p\">);</span>\n<span class=\"w\">    </span><span class=\"c1\">// Open the file to hash.</span>\n<span class=\"w\">    </span><span class=\"k\">using</span><span class=\"w\"> </span><span class=\"nn\">var</span><span class=\"w\"> </span><span class=\"n\">file</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"n\">FileAccess</span><span class=\"p\">.</span><span class=\"n\">Open</span><span class=\"p\">(</span><span class=\"n\">path</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">FileAccess</span><span class=\"p\">.</span><span class=\"n\">ModeFlags</span><span class=\"p\">.</span><span class=\"n\">Read</span><span class=\"p\">);</span>\n<span class=\"w\">    </span><span class=\"c1\">// Update the context after reading each chunk.</span>\n<span class=\"w\">    </span><span class=\"k\">while</span><span class=\"w\"> </span><span class=\"p\">(</span><span class=\"o\">!</span><span class=\"n\">file</span><span class=\"p\">.</span><span class=\"n\">EofReached</span><span class=\"p\">())</span>\n<span class=\"w\">    </span><span class=\"p\">{</span>\n<span class=\"w\">        </span><span class=\"n\">ctx</span><span class=\"p\">.</span><span class=\"n\">Update</span><span class=\"p\">(</span><span class=\"n\">file</span><span class=\"p\">.</span><span class=\"n\">GetBuffer</span><span class=\"p\">(</span><span class=\"n\">ChunkSize</span><span class=\"p\">));</span>\n<span class=\"w\">    </span><span class=\"p\">}</span>\n<span class=\"w\">    </span><span class=\"c1\">// Get the computed hash.</span>\n<span class=\"w\">    </span><span class=\"kt\">byte</span><span class=\"p\">[]</span><span class=\"w\"> </span><span class=\"n\">res</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"n\">ctx</span><span class=\"p\">.</span><span class=\"n\">Finish</span><span class=\"p\">();</span>\n<span class=\"w\">    </span><span class=\"c1\">// Print the result as hex string and array.</span>\n<span class=\"w\">    </span><span class=\"n\">GD</span><span class=\"p\">.</span><span class=\"n\">PrintT</span><span class=\"p\">(</span><span class=\"n\">res</span><span class=\"p\">.</span><span class=\"n\">HexEncode</span><span class=\"p\">(),</span><span class=\"w\"> </span><span class=\"p\">(</span><span class=\"n\">Variant</span><span class=\"p\">)</span><span class=\"n\">res</span><span class=\"p\">);</span>\n<span class=\"p\">}</span>\n</pre></div>\n</div>\n</div></div>\n"
            },
            "class_hmaccontext": {
                "url": "https://docs.godotengine.org/en/4.1/classes/class_hmaccontext.html",
                "title": "HMACContext",
                "blurb": "<p><strong>Inherits:</strong> <a class=\"reference internal\" href=\"class_refcounted.html#class-refcounted\"><span class=\"std std-ref\">RefCounted</span></a> <strong>&lt;</strong> <a class=\"reference internal\" href=\"class_object.html#class-object\"><span class=\"std std-ref\">Object</span></a></p><p>Used to create an HMAC for a message using a key.</p>",
                "description": "\n\n<p>The HMACContext class is useful for advanced HMAC use cases, such as streaming the message as it supports creating the message over time rather than providing it all at once.</p>\n<div class=\"sphinx-tabs docutils container\">\n<div aria-label=\"Tabbed content\" class=\"closeable\" role=\"tablist\"><button aria-controls=\"panel-0-R0RTY3JpcHQ=\" aria-selected=\"true\" class=\"sphinx-tabs-tab code-tab group-tab\" id=\"tab-0-R0RTY3JpcHQ=\" name=\"R0RTY3JpcHQ=\" role=\"tab\" tabindex=\"0\">GDScript</button><button aria-controls=\"panel-0-QyM=\" aria-selected=\"false\" class=\"sphinx-tabs-tab code-tab group-tab\" id=\"tab-0-QyM=\" name=\"QyM=\" role=\"tab\" tabindex=\"-1\">C#</button></div><div aria-labelledby=\"tab-0-R0RTY3JpcHQ=\" class=\"sphinx-tabs-panel code-tab group-tab\" id=\"panel-0-R0RTY3JpcHQ=\" name=\"R0RTY3JpcHQ=\" role=\"tabpanel\" tabindex=\"0\"><div class=\"highlight-gdscript notranslate\"><div class=\"highlight\"><pre><span></span><span class=\"k\">extends</span> <span class=\"n\">Node</span>\n<span class=\"k\">var</span> <span class=\"n\">ctx</span> <span class=\"o\">=</span> <span class=\"n\">HMACContext</span><span class=\"o\">.</span><span class=\"n\">new</span><span class=\"p\">()</span>\n\n<span class=\"k\">func</span> <span class=\"n\">_ready</span><span class=\"p\">():</span>\n    <span class=\"k\">var</span> <span class=\"n\">key</span> <span class=\"o\">=</span> <span class=\"s2\">\"supersecret\"</span><span class=\"o\">.</span><span class=\"n\">to_utf8_buffer</span><span class=\"p\">()</span>\n    <span class=\"k\">var</span> <span class=\"n\">err</span> <span class=\"o\">=</span> <span class=\"n\">ctx</span><span class=\"o\">.</span><span class=\"n\">start</span><span class=\"p\">(</span><span class=\"n\">HashingContext</span><span class=\"o\">.</span><span class=\"n\">HASH_SHA256</span><span class=\"p\">,</span> <span class=\"n\">key</span><span class=\"p\">)</span>\n    <span class=\"nb\">assert</span><span class=\"p\">(</span><span class=\"n\">err</span> <span class=\"o\">==</span> <span class=\"n\">OK</span><span class=\"p\">)</span>\n    <span class=\"k\">var</span> <span class=\"n\">msg1</span> <span class=\"o\">=</span> <span class=\"s2\">\"this is \"</span><span class=\"o\">.</span><span class=\"n\">to_utf8_buffer</span><span class=\"p\">()</span>\n    <span class=\"k\">var</span> <span class=\"n\">msg2</span> <span class=\"o\">=</span> <span class=\"s2\">\"super duper secret\"</span><span class=\"o\">.</span><span class=\"n\">to_utf8_buffer</span><span class=\"p\">()</span>\n    <span class=\"n\">err</span> <span class=\"o\">=</span> <span class=\"n\">ctx</span><span class=\"o\">.</span><span class=\"n\">update</span><span class=\"p\">(</span><span class=\"n\">msg1</span><span class=\"p\">)</span>\n    <span class=\"nb\">assert</span><span class=\"p\">(</span><span class=\"n\">err</span> <span class=\"o\">==</span> <span class=\"n\">OK</span><span class=\"p\">)</span>\n    <span class=\"n\">err</span> <span class=\"o\">=</span> <span class=\"n\">ctx</span><span class=\"o\">.</span><span class=\"n\">update</span><span class=\"p\">(</span><span class=\"n\">msg2</span><span class=\"p\">)</span>\n    <span class=\"nb\">assert</span><span class=\"p\">(</span><span class=\"n\">err</span> <span class=\"o\">==</span> <span class=\"n\">OK</span><span class=\"p\">)</span>\n    <span class=\"k\">var</span> <span class=\"n\">hmac</span> <span class=\"o\">=</span> <span class=\"n\">ctx</span><span class=\"o\">.</span><span class=\"n\">finish</span><span class=\"p\">()</span>\n    <span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"n\">hmac</span><span class=\"o\">.</span><span class=\"n\">hex_encode</span><span class=\"p\">())</span>\n</pre></div>\n</div>\n</div><div aria-labelledby=\"tab-0-QyM=\" class=\"sphinx-tabs-panel code-tab group-tab\" hidden=\"true\" id=\"panel-0-QyM=\" name=\"QyM=\" role=\"tabpanel\" tabindex=\"0\"><div class=\"highlight-csharp notranslate\"><div class=\"highlight\"><pre><span></span><span class=\"k\">using</span><span class=\"w\"> </span><span class=\"nn\">Godot</span><span class=\"p\">;</span>\n<span class=\"k\">using</span><span class=\"w\"> </span><span class=\"nn\">System.Diagnostics</span><span class=\"p\">;</span>\n\n<span class=\"k\">public</span><span class=\"w\"> </span><span class=\"k\">partial</span><span class=\"w\"> </span><span class=\"k\">class</span><span class=\"w\"> </span><span class=\"nc\">MyNode</span><span class=\"w\"> </span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"n\">Node</span>\n<span class=\"p\">{</span>\n<span class=\"w\">    </span><span class=\"k\">private</span><span class=\"w\"> </span><span class=\"n\">HmacContext</span><span class=\"w\"> </span><span class=\"n\">_ctx</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"k\">new</span><span class=\"w\"> </span><span class=\"n\">HmacContext</span><span class=\"p\">();</span>\n\n<span class=\"w\">    </span><span class=\"k\">public</span><span class=\"w\"> </span><span class=\"k\">override</span><span class=\"w\"> </span><span class=\"k\">void</span><span class=\"w\"> </span><span class=\"nf\">_Ready</span><span class=\"p\">()</span>\n<span class=\"w\">    </span><span class=\"p\">{</span>\n<span class=\"w\">        </span><span class=\"kt\">byte</span><span class=\"p\">[]</span><span class=\"w\"> </span><span class=\"n\">key</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"s\">\"supersecret\"</span><span class=\"p\">.</span><span class=\"n\">ToUtf8Buffer</span><span class=\"p\">();</span>\n<span class=\"w\">        </span><span class=\"n\">Error</span><span class=\"w\"> </span><span class=\"n\">err</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"n\">_ctx</span><span class=\"p\">.</span><span class=\"n\">Start</span><span class=\"p\">(</span><span class=\"n\">HashingContext</span><span class=\"p\">.</span><span class=\"n\">HashType</span><span class=\"p\">.</span><span class=\"n\">Sha256</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">key</span><span class=\"p\">);</span>\n<span class=\"w\">        </span><span class=\"n\">Debug</span><span class=\"p\">.</span><span class=\"n\">Assert</span><span class=\"p\">(</span><span class=\"n\">err</span><span class=\"w\"> </span><span class=\"o\">==</span><span class=\"w\"> </span><span class=\"n\">Error</span><span class=\"p\">.</span><span class=\"n\">Ok</span><span class=\"p\">);</span>\n<span class=\"w\">        </span><span class=\"kt\">byte</span><span class=\"p\">[]</span><span class=\"w\"> </span><span class=\"n\">msg1</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"s\">\"this is \"</span><span class=\"p\">.</span><span class=\"n\">ToUtf8Buffer</span><span class=\"p\">();</span>\n<span class=\"w\">        </span><span class=\"kt\">byte</span><span class=\"p\">[]</span><span class=\"w\"> </span><span class=\"n\">msg2</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"s\">\"super duper secret\"</span><span class=\"p\">.</span><span class=\"n\">ToUtf8Buffer</span><span class=\"p\">();</span>\n<span class=\"w\">        </span><span class=\"n\">err</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"n\">_ctx</span><span class=\"p\">.</span><span class=\"n\">Update</span><span class=\"p\">(</span><span class=\"n\">msg1</span><span class=\"p\">);</span>\n<span class=\"w\">        </span><span class=\"n\">Debug</span><span class=\"p\">.</span><span class=\"n\">Assert</span><span class=\"p\">(</span><span class=\"n\">err</span><span class=\"w\"> </span><span class=\"o\">==</span><span class=\"w\"> </span><span class=\"n\">Error</span><span class=\"p\">.</span><span class=\"n\">Ok</span><span class=\"p\">);</span>\n<span class=\"w\">        </span><span class=\"n\">err</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"n\">_ctx</span><span class=\"p\">.</span><span class=\"n\">Update</span><span class=\"p\">(</span><span class=\"n\">msg2</span><span class=\"p\">);</span>\n<span class=\"w\">        </span><span class=\"n\">Debug</span><span class=\"p\">.</span><span class=\"n\">Assert</span><span class=\"p\">(</span><span class=\"n\">err</span><span class=\"w\"> </span><span class=\"o\">==</span><span class=\"w\"> </span><span class=\"n\">Error</span><span class=\"p\">.</span><span class=\"n\">Ok</span><span class=\"p\">);</span>\n<span class=\"w\">        </span><span class=\"kt\">byte</span><span class=\"p\">[]</span><span class=\"w\"> </span><span class=\"n\">hmac</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"n\">_ctx</span><span class=\"p\">.</span><span class=\"n\">Finish</span><span class=\"p\">();</span>\n<span class=\"w\">        </span><span class=\"n\">GD</span><span class=\"p\">.</span><span class=\"n\">Print</span><span class=\"p\">(</span><span class=\"n\">hmac</span><span class=\"p\">.</span><span class=\"n\">HexEncode</span><span class=\"p\">());</span>\n<span class=\"w\">    </span><span class=\"p\">}</span>\n<span class=\"p\">}</span>\n</pre></div>\n</div>\n</div></div>\n"
            },
            "class_httpclient": {
                "url": "https://docs.godotengine.org/en/4.1/classes/class_httpclient.html",
                "title": "HTTPClient",
                "blurb": "<p><strong>Inherits:</strong> <a class=\"reference internal\" href=\"class_refcounted.html#class-refcounted\"><span class=\"std std-ref\">RefCounted</span></a> <strong>&lt;</strong> <a class=\"reference internal\" href=\"class_object.html#class-object\"><span class=\"std std-ref\">Object</span></a></p><p>Low-level hyper-text transfer protocol client.</p>",
                "description": "\n\n<p>Hyper-text transfer protocol client (sometimes called \"User Agent\"). Used to make HTTP requests to download web content, upload files and other data or to communicate with various services, among other use cases.</p>\n<p>See the <a class=\"reference internal\" href=\"class_httprequest.html#class-httprequest\"><span class=\"std std-ref\">HTTPRequest</span></a> node for a higher-level alternative.</p>\n<p><strong>Note:</strong> This client only needs to connect to a host once (see <a class=\"reference internal\" href=\"#class-httpclient-method-connect-to-host\"><span class=\"std std-ref\">connect_to_host</span></a>) to send multiple requests. Because of this, methods that take URLs usually take just the part after the host instead of the full URL, as the client is already connected to a host. See <a class=\"reference internal\" href=\"#class-httpclient-method-request\"><span class=\"std std-ref\">request</span></a> for a full example and to get started.</p>\n<p>A <strong>HTTPClient</strong> should be reused between multiple requests or to connect to different hosts instead of creating one client per request. Supports Transport Layer Security (TLS), including server certificate verification. HTTP status codes in the 2xx range indicate success, 3xx redirection (i.e. \"try again, but over here\"), 4xx something was wrong with the request, and 5xx something went wrong on the server's side.</p>\n<p>For more information on HTTP, see <a class=\"reference external\" href=\"https://developer.mozilla.org/en-US/docs/Web/HTTP\">MDN's documentation on HTTP</a> (or read <a class=\"reference external\" href=\"https://tools.ietf.org/html/rfc2616\">RFC 2616</a> to get it straight from the source).</p>\n<p><strong>Note:</strong> When exporting to Android, make sure to enable the <code class=\"docutils literal notranslate\"><span class=\"pre\">INTERNET</span></code> permission in the Android export preset before exporting the project or using one-click deploy. Otherwise, network communication of any kind will be blocked by Android.</p>\n<p><strong>Note:</strong> It's recommended to use transport encryption (TLS) and to avoid sending sensitive information (such as login credentials) in HTTP GET URL parameters. Consider using HTTP POST requests or HTTP headers for such information instead.</p>\n<p><strong>Note:</strong> When performing HTTP requests from a project exported to Web, keep in mind the remote server may not allow requests from foreign origins due to <a class=\"reference external\" href=\"https://developer.mozilla.org/en-US/docs/Web/HTTP/CORS\">CORS</a>. If you host the server in question, you should modify its backend to allow requests from foreign origins by adding the <code class=\"docutils literal notranslate\"><span class=\"pre\">Access-Control-Allow-Origin:</span> <span class=\"pre\">*</span></code> HTTP header.</p>\n<p><strong>Note:</strong> TLS support is currently limited to TLS 1.0, TLS 1.1, and TLS 1.2. Attempting to connect to a TLS 1.3-only server will return an error.</p>\n<p><strong>Warning:</strong> TLS certificate revocation and certificate pinning are currently not supported. Revoked certificates are accepted as long as they are otherwise valid. If this is a concern, you may want to use automatically managed certificates with a short validity period.</p>\n"
            },
            "class_imageformatloader": {
                "url": "https://docs.godotengine.org/en/4.1/classes/class_imageformatloader.html",
                "title": "ImageFormatLoader",
                "blurb": "<p><strong>Inherits:</strong> <a class=\"reference internal\" href=\"class_refcounted.html#class-refcounted\"><span class=\"std std-ref\">RefCounted</span></a> <strong>&lt;</strong> <a class=\"reference internal\" href=\"class_object.html#class-object\"><span class=\"std std-ref\">Object</span></a></p><p><strong>Inherited By:</strong> <a class=\"reference internal\" href=\"class_imageformatloaderextension.html#class-imageformatloaderextension\"><span class=\"std std-ref\">ImageFormatLoaderExtension</span></a></p><p>Base class to add support for specific image formats.</p>",
                "description": "\n\n<p>The engine supports multiple image formats out of the box (PNG, SVG, JPEG, WebP to name a few), but you can choose to implement support for additional image formats by extending <a class=\"reference internal\" href=\"class_imageformatloaderextension.html#class-imageformatloaderextension\"><span class=\"std std-ref\">ImageFormatLoaderExtension</span></a>.</p>\n"
            },
            "class_imageformatloaderextension": {
                "url": "https://docs.godotengine.org/en/4.1/classes/class_imageformatloaderextension.html",
                "title": "ImageFormatLoaderExtension",
                "blurb": "<p><strong>Inherits:</strong> <a class=\"reference internal\" href=\"class_imageformatloader.html#class-imageformatloader\"><span class=\"std std-ref\">ImageFormatLoader</span></a> <strong>&lt;</strong> <a class=\"reference internal\" href=\"class_refcounted.html#class-refcounted\"><span class=\"std std-ref\">RefCounted</span></a> <strong>&lt;</strong> <a class=\"reference internal\" href=\"class_object.html#class-object\"><span class=\"std std-ref\">Object</span></a></p><p>Base class for creating <a class=\"reference internal\" href=\"class_imageformatloader.html#class-imageformatloader\"><span class=\"std std-ref\">ImageFormatLoader</span></a> extensions (adding support for extra image formats).</p>",
                "description": "\n\n<p>The engine supports multiple image formats out of the box (PNG, SVG, JPEG, WebP to name a few), but you can choose to implement support for additional image formats by extending this class.</p>\n<p>Be sure to respect the documented return types and values. You should create an instance of it, and call <a class=\"reference internal\" href=\"#class-imageformatloaderextension-method-add-format-loader\"><span class=\"std std-ref\">add_format_loader</span></a> to register that loader during the initialization phase.</p>\n"
            },
            "class_input": {
                "url": "https://docs.godotengine.org/en/4.1/classes/class_input.html",
                "title": "Input",
                "blurb": "<p><strong>Inherits:</strong> <a class=\"reference internal\" href=\"class_object.html#class-object\"><span class=\"std std-ref\">Object</span></a></p><p>A singleton for handling inputs.</p>",
                "description": "\n\n<p>The <strong>Input</strong> singleton handles key presses, mouse buttons and movement, gamepads, and input actions. Actions and their events can be set in the <strong>Input Map</strong> tab in <strong>Project &gt; Project Settings</strong>, or with the <a class=\"reference internal\" href=\"class_inputmap.html#class-inputmap\"><span class=\"std std-ref\">InputMap</span></a> class.</p>\n<p><strong>Note:</strong> <strong>Input</strong>'s methods reflect the global input state and are not affected by <a class=\"reference internal\" href=\"class_control.html#class-control-method-accept-event\"><span class=\"std std-ref\">Control.accept_event</span></a> or <a class=\"reference internal\" href=\"class_viewport.html#class-viewport-method-set-input-as-handled\"><span class=\"std std-ref\">Viewport.set_input_as_handled</span></a>, as those methods only deal with the way input is propagated in the <a class=\"reference internal\" href=\"class_scenetree.html#class-scenetree\"><span class=\"std std-ref\">SceneTree</span></a>.</p>\n"
            },
            "class_inputmap": {
                "url": "https://docs.godotengine.org/en/4.1/classes/class_inputmap.html",
                "title": "InputMap",
                "blurb": "<p><strong>Inherits:</strong> <a class=\"reference internal\" href=\"class_object.html#class-object\"><span class=\"std std-ref\">Object</span></a></p><p>A singleton that manages all <a class=\"reference internal\" href=\"class_inputeventaction.html#class-inputeventaction\"><span class=\"std std-ref\">InputEventAction</span></a>s.</p>",
                "description": "\n\n<p>Manages all <a class=\"reference internal\" href=\"class_inputeventaction.html#class-inputeventaction\"><span class=\"std std-ref\">InputEventAction</span></a> which can be created/modified from the project settings menu <strong>Project &gt; Project Settings &gt; Input Map</strong> or in code with <a class=\"reference internal\" href=\"#class-inputmap-method-add-action\"><span class=\"std std-ref\">add_action</span></a> and <a class=\"reference internal\" href=\"#class-inputmap-method-action-add-event\"><span class=\"std std-ref\">action_add_event</span></a>. See <a class=\"reference internal\" href=\"class_node.html#class-node-method-input\"><span class=\"std std-ref\">Node._input</span></a>.</p>\n"
            },
            "class_intervaltweener": {
                "url": "https://docs.godotengine.org/en/4.1/classes/class_intervaltweener.html",
                "title": "IntervalTweener",
                "blurb": "<p><strong>Inherits:</strong> <a class=\"reference internal\" href=\"class_tweener.html#class-tweener\"><span class=\"std std-ref\">Tweener</span></a> <strong>&lt;</strong> <a class=\"reference internal\" href=\"class_refcounted.html#class-refcounted\"><span class=\"std std-ref\">RefCounted</span></a> <strong>&lt;</strong> <a class=\"reference internal\" href=\"class_object.html#class-object\"><span class=\"std std-ref\">Object</span></a></p><p>Creates an idle interval in a <a class=\"reference internal\" href=\"class_tween.html#class-tween\"><span class=\"std std-ref\">Tween</span></a> animation.</p>",
                "description": "\n\n<p><strong>IntervalTweener</strong> is used to make delays in a tweening sequence. See <a class=\"reference internal\" href=\"class_tween.html#class-tween-method-tween-interval\"><span class=\"std std-ref\">Tween.tween_interval</span></a> for more usage information.</p>\n<p><strong>Note:</strong> <a class=\"reference internal\" href=\"class_tween.html#class-tween-method-tween-interval\"><span class=\"std std-ref\">Tween.tween_interval</span></a> is the only correct way to create <strong>IntervalTweener</strong>. Any <strong>IntervalTweener</strong> created manually will not function correctly.</p>\n"
            },
            "class_ip": {
                "url": "https://docs.godotengine.org/en/4.1/classes/class_ip.html",
                "title": "IP",
                "blurb": "<p><strong>Inherits:</strong> <a class=\"reference internal\" href=\"class_object.html#class-object\"><span class=\"std std-ref\">Object</span></a></p><p>Internet protocol (IP) support functions such as DNS resolution.</p>",
                "description": "\n\n<p>IP contains support functions for the Internet Protocol (IP). TCP/IP support is in different classes (see <a class=\"reference internal\" href=\"class_streampeertcp.html#class-streampeertcp\"><span class=\"std std-ref\">StreamPeerTCP</span></a> and <a class=\"reference internal\" href=\"class_tcpserver.html#class-tcpserver\"><span class=\"std std-ref\">TCPServer</span></a>). IP provides DNS hostname resolution support, both blocking and threaded.</p>\n"
            },
            "class_javaclass": {
                "url": "https://docs.godotengine.org/en/4.1/classes/class_javaclass.html",
                "title": "JavaClass",
                "blurb": "<p><strong>Inherits:</strong> <a class=\"reference internal\" href=\"class_refcounted.html#class-refcounted\"><span class=\"std std-ref\">RefCounted</span></a> <strong>&lt;</strong> <a class=\"reference internal\" href=\"class_object.html#class-object\"><span class=\"std std-ref\">Object</span></a></p>",
                "description": null
            },
            "class_javaclasswrapper": {
                "url": "https://docs.godotengine.org/en/4.1/classes/class_javaclasswrapper.html",
                "title": "JavaClassWrapper",
                "blurb": "<p><strong>Inherits:</strong> <a class=\"reference internal\" href=\"class_object.html#class-object\"><span class=\"std std-ref\">Object</span></a></p>",
                "description": null
            },
            "class_javascriptbridge": {
                "url": "https://docs.godotengine.org/en/4.1/classes/class_javascriptbridge.html",
                "title": "JavaScriptBridge",
                "blurb": "<p><strong>Inherits:</strong> <a class=\"reference internal\" href=\"class_object.html#class-object\"><span class=\"std std-ref\">Object</span></a></p><p>Singleton that connects the engine with the browser's JavaScript context in Web export.</p>",
                "description": "\n\n<p>The JavaScriptBridge singleton is implemented only in the Web export. It's used to access the browser's JavaScript context. This allows interaction with embedding pages or calling third-party JavaScript APIs.</p>\n<p><strong>Note:</strong> This singleton can be disabled at build-time to improve security. By default, the JavaScriptBridge singleton is enabled. Official export templates also have the JavaScriptBridge singleton enabled. See <a class=\"reference internal\" href=\"../contributing/development/compiling/compiling_for_web.html\"><span class=\"doc\">Compiling for the Web</span></a> in the documentation for more information.</p>\n"
            },
            "class_javascriptobject": {
                "url": "https://docs.godotengine.org/en/4.1/classes/class_javascriptobject.html",
                "title": "JavaScriptObject",
                "blurb": "<p><strong>Inherits:</strong> <a class=\"reference internal\" href=\"class_refcounted.html#class-refcounted\"><span class=\"std std-ref\">RefCounted</span></a> <strong>&lt;</strong> <a class=\"reference internal\" href=\"class_object.html#class-object\"><span class=\"std std-ref\">Object</span></a></p><p>A wrapper class for web native JavaScript objects.</p>",
                "description": "\n\n<p>JavaScriptObject is used to interact with JavaScript objects retrieved or created via <a class=\"reference internal\" href=\"class_javascriptbridge.html#class-javascriptbridge-method-get-interface\"><span class=\"std std-ref\">JavaScriptBridge.get_interface</span></a>, <a class=\"reference internal\" href=\"class_javascriptbridge.html#class-javascriptbridge-method-create-object\"><span class=\"std std-ref\">JavaScriptBridge.create_object</span></a>, or <a class=\"reference internal\" href=\"class_javascriptbridge.html#class-javascriptbridge-method-create-callback\"><span class=\"std std-ref\">JavaScriptBridge.create_callback</span></a>.</p>\n<p><strong>Example:</strong></p>\n<div class=\"highlight-gdscript notranslate\"><div class=\"highlight\"><pre><span></span><span class=\"k\">extends</span> <span class=\"n\">Node</span>\n\n<span class=\"k\">var</span> <span class=\"n\">_my_js_callback</span> <span class=\"o\">=</span> <span class=\"n\">JavaScriptBridge</span><span class=\"o\">.</span><span class=\"n\">create_callback</span><span class=\"p\">(</span><span class=\"n\">myCallback</span><span class=\"p\">)</span> <span class=\"c1\"># This reference must be kept</span>\n<span class=\"k\">var</span> <span class=\"n\">console</span> <span class=\"o\">=</span> <span class=\"n\">JavaScriptBridge</span><span class=\"o\">.</span><span class=\"n\">get_interface</span><span class=\"p\">(</span><span class=\"s2\">\"console\"</span><span class=\"p\">)</span>\n\n<span class=\"k\">func</span> <span class=\"n\">_init</span><span class=\"p\">():</span>\n    <span class=\"k\">var</span> <span class=\"n\">buf</span> <span class=\"o\">=</span> <span class=\"n\">JavaScriptBridge</span><span class=\"o\">.</span><span class=\"n\">create_object</span><span class=\"p\">(</span><span class=\"s2\">\"ArrayBuffer\"</span><span class=\"p\">,</span> <span class=\"mi\">10</span><span class=\"p\">)</span> <span class=\"c1\"># new ArrayBuffer(10)</span>\n    <span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"n\">buf</span><span class=\"p\">)</span> <span class=\"c1\"># prints [JavaScriptObject:OBJECT_ID]</span>\n    <span class=\"k\">var</span> <span class=\"n\">uint8arr</span> <span class=\"o\">=</span> <span class=\"n\">JavaScriptBridge</span><span class=\"o\">.</span><span class=\"n\">create_object</span><span class=\"p\">(</span><span class=\"s2\">\"Uint8Array\"</span><span class=\"p\">,</span> <span class=\"n\">buf</span><span class=\"p\">)</span> <span class=\"c1\"># new Uint8Array(buf)</span>\n    <span class=\"n\">uint8arr</span><span class=\"p\">[</span><span class=\"mi\">1</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"mi\">255</span>\n    <span class=\"nb\">prints</span><span class=\"p\">(</span><span class=\"n\">uint8arr</span><span class=\"p\">[</span><span class=\"mi\">1</span><span class=\"p\">],</span> <span class=\"n\">uint8arr</span><span class=\"o\">.</span><span class=\"n\">byteLength</span><span class=\"p\">)</span> <span class=\"c1\"># prints 255 10</span>\n    <span class=\"n\">console</span><span class=\"o\">.</span><span class=\"n\">log</span><span class=\"p\">(</span><span class=\"n\">uint8arr</span><span class=\"p\">)</span> <span class=\"c1\"># prints in browser console \"Uint8Array(10) [ 0, 255, 0, 0, 0, 0, 0, 0, 0, 0 ]\"</span>\n\n    <span class=\"c1\"># Equivalent of JavaScriptBridge: Array.from(uint8arr).forEach(myCallback)</span>\n    <span class=\"n\">JavaScriptBridge</span><span class=\"o\">.</span><span class=\"n\">get_interface</span><span class=\"p\">(</span><span class=\"s2\">\"Array\"</span><span class=\"p\">)</span><span class=\"o\">.</span><span class=\"n\">from</span><span class=\"p\">(</span><span class=\"n\">uint8arr</span><span class=\"p\">)</span><span class=\"o\">.</span><span class=\"n\">forEach</span><span class=\"p\">(</span><span class=\"n\">_my_js_callback</span><span class=\"p\">)</span>\n\n<span class=\"k\">func</span> <span class=\"n\">myCallback</span><span class=\"p\">(</span><span class=\"n\">args</span><span class=\"p\">):</span>\n    <span class=\"c1\"># Will be called with the parameters passed to the \"forEach\" callback</span>\n    <span class=\"c1\"># [0, 0, [JavaScriptObject:1173]]</span>\n    <span class=\"c1\"># [255, 1, [JavaScriptObject:1173]]</span>\n    <span class=\"c1\"># ...</span>\n    <span class=\"c1\"># [0, 9, [JavaScriptObject:1180]]</span>\n    <span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"n\">args</span><span class=\"p\">)</span>\n</pre></div>\n</div>\n<p><strong>Note:</strong> Only available in the Web platform.</p>\n"
            },
            "class_jnisingleton": {
                "url": "https://docs.godotengine.org/en/4.1/classes/class_jnisingleton.html",
                "title": "JNISingleton",
                "blurb": "<p><strong>Inherits:</strong> <a class=\"reference internal\" href=\"class_object.html#class-object\"><span class=\"std std-ref\">Object</span></a></p><p>Singleton that connects the engine with Android plugins to interface with native Android code.</p>",
                "description": "\n\n<p>The JNISingleton is implemented only in the Android export. It's used to call methods and connect signals from an Android plugin written in Java or Kotlin. Methods and signals can be called and connected to the JNISingleton as if it is a Node. See <a class=\"reference external\" href=\"https://en.wikipedia.org/wiki/Java_Native_Interface\">Java Native Interface - Wikipedia</a> for more information.</p>\n"
            },
            "class_jsonrpc": {
                "url": "https://docs.godotengine.org/en/4.1/classes/class_jsonrpc.html",
                "title": "JSONRPC",
                "blurb": "<p><strong>Inherits:</strong> <a class=\"reference internal\" href=\"class_object.html#class-object\"><span class=\"std std-ref\">Object</span></a></p><p>A helper to handle dictionaries which look like JSONRPC documents.</p>",
                "description": "\n\n<p><a class=\"reference external\" href=\"https://www.jsonrpc.org/\">JSON-RPC</a> is a standard which wraps a method call in a <a class=\"reference internal\" href=\"class_json.html#class-json\"><span class=\"std std-ref\">JSON</span></a> object. The object has a particular structure and identifies which method is called, the parameters to that function, and carries an ID to keep track of responses. This class implements that standard on top of <a class=\"reference internal\" href=\"class_dictionary.html#class-dictionary\"><span class=\"std std-ref\">Dictionary</span></a>; you will have to convert between a <a class=\"reference internal\" href=\"class_dictionary.html#class-dictionary\"><span class=\"std std-ref\">Dictionary</span></a> and <a class=\"reference internal\" href=\"class_json.html#class-json\"><span class=\"std std-ref\">JSON</span></a> with other functions.</p>\n"
            },
            "class_kinematiccollision2d": {
                "url": "https://docs.godotengine.org/en/4.1/classes/class_kinematiccollision2d.html",
                "title": "KinematicCollision2D",
                "blurb": "<p><strong>Inherits:</strong> <a class=\"reference internal\" href=\"class_refcounted.html#class-refcounted\"><span class=\"std std-ref\">RefCounted</span></a> <strong>&lt;</strong> <a class=\"reference internal\" href=\"class_object.html#class-object\"><span class=\"std std-ref\">Object</span></a></p><p>Holds collision data from the movement of a <a class=\"reference internal\" href=\"class_physicsbody2d.html#class-physicsbody2d\"><span class=\"std std-ref\">PhysicsBody2D</span></a>.</p>",
                "description": "\n\n<p>Holds collision data from the movement of a <a class=\"reference internal\" href=\"class_physicsbody2d.html#class-physicsbody2d\"><span class=\"std std-ref\">PhysicsBody2D</span></a>, usually from <a class=\"reference internal\" href=\"class_physicsbody2d.html#class-physicsbody2d-method-move-and-collide\"><span class=\"std std-ref\">PhysicsBody2D.move_and_collide</span></a>. When a <a class=\"reference internal\" href=\"class_physicsbody2d.html#class-physicsbody2d\"><span class=\"std std-ref\">PhysicsBody2D</span></a> is moved, it stops if it detects a collision with another body. If a collision is detected, a <strong>KinematicCollision2D</strong> object is returned.</p>\n<p>The collision data includes the colliding object, the remaining motion, and the collision position. This data can be used to determine a custom response to the collision.</p>\n"
            },
            "class_kinematiccollision3d": {
                "url": "https://docs.godotengine.org/en/4.1/classes/class_kinematiccollision3d.html",
                "title": "KinematicCollision3D",
                "blurb": "<p><strong>Inherits:</strong> <a class=\"reference internal\" href=\"class_refcounted.html#class-refcounted\"><span class=\"std std-ref\">RefCounted</span></a> <strong>&lt;</strong> <a class=\"reference internal\" href=\"class_object.html#class-object\"><span class=\"std std-ref\">Object</span></a></p><p>Holds collision data from the movement of a <a class=\"reference internal\" href=\"class_physicsbody3d.html#class-physicsbody3d\"><span class=\"std std-ref\">PhysicsBody3D</span></a>.</p>",
                "description": "\n\n<p>Holds collision data from the movement of a <a class=\"reference internal\" href=\"class_physicsbody3d.html#class-physicsbody3d\"><span class=\"std std-ref\">PhysicsBody3D</span></a>, usually from <a class=\"reference internal\" href=\"class_physicsbody3d.html#class-physicsbody3d-method-move-and-collide\"><span class=\"std std-ref\">PhysicsBody3D.move_and_collide</span></a>. When a <a class=\"reference internal\" href=\"class_physicsbody3d.html#class-physicsbody3d\"><span class=\"std std-ref\">PhysicsBody3D</span></a> is moved, it stops if it detects a collision with another body. If a collision is detected, a <strong>KinematicCollision3D</strong> object is returned.</p>\n<p>The collision data includes the colliding object, the remaining motion, and the collision position. This data can be used to determine a custom response to the collision.</p>\n"
            },
            "class_lightmapper": {
                "url": "https://docs.godotengine.org/en/4.1/classes/class_lightmapper.html",
                "title": "Lightmapper",
                "blurb": "<p><strong>Inherits:</strong> <a class=\"reference internal\" href=\"class_refcounted.html#class-refcounted\"><span class=\"std std-ref\">RefCounted</span></a> <strong>&lt;</strong> <a class=\"reference internal\" href=\"class_object.html#class-object\"><span class=\"std std-ref\">Object</span></a></p><p><strong>Inherited By:</strong> <a class=\"reference internal\" href=\"class_lightmapperrd.html#class-lightmapperrd\"><span class=\"std std-ref\">LightmapperRD</span></a></p><p>Abstract class extended by lightmappers, for use in <a class=\"reference internal\" href=\"class_lightmapgi.html#class-lightmapgi\"><span class=\"std std-ref\">LightmapGI</span></a>.</p>",
                "description": "\n\n<p>This class should be extended by custom lightmapper classes. Lightmappers can then be used with <a class=\"reference internal\" href=\"class_lightmapgi.html#class-lightmapgi\"><span class=\"std std-ref\">LightmapGI</span></a> to provide fast baked global illumination in 3D.</p>\n<p>Godot contains a built-in GPU-based lightmapper <a class=\"reference internal\" href=\"class_lightmapperrd.html#class-lightmapperrd\"><span class=\"std std-ref\">LightmapperRD</span></a> that uses compute shaders, but custom lightmappers can be implemented by C++ modules.</p>\n"
            },
            "class_lightmapperrd": {
                "url": "https://docs.godotengine.org/en/4.1/classes/class_lightmapperrd.html",
                "title": "LightmapperRD",
                "blurb": "<p><strong>Inherits:</strong> <a class=\"reference internal\" href=\"class_lightmapper.html#class-lightmapper\"><span class=\"std std-ref\">Lightmapper</span></a> <strong>&lt;</strong> <a class=\"reference internal\" href=\"class_refcounted.html#class-refcounted\"><span class=\"std std-ref\">RefCounted</span></a> <strong>&lt;</strong> <a class=\"reference internal\" href=\"class_object.html#class-object\"><span class=\"std std-ref\">Object</span></a></p><p>The built-in GPU-based lightmapper for use with <a class=\"reference internal\" href=\"class_lightmapgi.html#class-lightmapgi\"><span class=\"std std-ref\">LightmapGI</span></a>.</p>",
                "description": "\n\n<p>LightmapperRD (\"RD\" stands for <a class=\"reference internal\" href=\"class_renderingdevice.html#class-renderingdevice\"><span class=\"std std-ref\">RenderingDevice</span></a>) is the built-in GPU-based lightmapper for use with <a class=\"reference internal\" href=\"class_lightmapgi.html#class-lightmapgi\"><span class=\"std std-ref\">LightmapGI</span></a>. On most dedicated GPUs, it can bake lightmaps much faster than most CPU-based lightmappers. LightmapperRD uses compute shaders to bake lightmaps, so it does not require CUDA or OpenCL libraries to be installed to be usable.</p>\n<p><strong>Note:</strong> Only usable when using the Vulkan backend (Forward+ or Mobile), not OpenGL.</p>\n"
            },
            "class_mainloop": {
                "url": "https://docs.godotengine.org/en/4.1/classes/class_mainloop.html",
                "title": "MainLoop",
                "blurb": "<p><strong>Inherits:</strong> <a class=\"reference internal\" href=\"class_object.html#class-object\"><span class=\"std std-ref\">Object</span></a></p><p><strong>Inherited By:</strong> <a class=\"reference internal\" href=\"class_scenetree.html#class-scenetree\"><span class=\"std std-ref\">SceneTree</span></a></p><p>Abstract base class for the game's main loop.</p>",
                "description": "\n\n<p><strong>MainLoop</strong> is the abstract base class for a Godot project's game loop. It is inherited by <a class=\"reference internal\" href=\"class_scenetree.html#class-scenetree\"><span class=\"std std-ref\">SceneTree</span></a>, which is the default game loop implementation used in Godot projects, though it is also possible to write and use one's own <strong>MainLoop</strong> subclass instead of the scene tree.</p>\n<p>Upon the application start, a <strong>MainLoop</strong> implementation must be provided to the OS; otherwise, the application will exit. This happens automatically (and a <a class=\"reference internal\" href=\"class_scenetree.html#class-scenetree\"><span class=\"std std-ref\">SceneTree</span></a> is created) unless a <strong>MainLoop</strong> <a class=\"reference internal\" href=\"class_script.html#class-script\"><span class=\"std std-ref\">Script</span></a> is provided from the command line (with e.g. <code class=\"docutils literal notranslate\"><span class=\"pre\">godot</span> <span class=\"pre\">-s</span> <span class=\"pre\">my_loop.gd</span></code> or the \"Main Loop Type\" project setting is overwritten.</p>\n<p>Here is an example script implementing a simple <strong>MainLoop</strong>:</p>\n<div class=\"sphinx-tabs docutils container\">\n<div aria-label=\"Tabbed content\" class=\"closeable\" role=\"tablist\"><button aria-controls=\"panel-0-R0RTY3JpcHQ=\" aria-selected=\"true\" class=\"sphinx-tabs-tab code-tab group-tab\" id=\"tab-0-R0RTY3JpcHQ=\" name=\"R0RTY3JpcHQ=\" role=\"tab\" tabindex=\"0\">GDScript</button><button aria-controls=\"panel-0-QyM=\" aria-selected=\"false\" class=\"sphinx-tabs-tab code-tab group-tab\" id=\"tab-0-QyM=\" name=\"QyM=\" role=\"tab\" tabindex=\"-1\">C#</button></div><div aria-labelledby=\"tab-0-R0RTY3JpcHQ=\" class=\"sphinx-tabs-panel code-tab group-tab\" id=\"panel-0-R0RTY3JpcHQ=\" name=\"R0RTY3JpcHQ=\" role=\"tabpanel\" tabindex=\"0\"><div class=\"highlight-gdscript notranslate\"><div class=\"highlight\"><pre><span></span><span class=\"k\">class_name</span> <span class=\"n\">CustomMainLoop</span>\n<span class=\"k\">extends</span> <span class=\"n\">MainLoop</span>\n\n<span class=\"k\">var</span> <span class=\"n\">time_elapsed</span> <span class=\"o\">=</span> <span class=\"mi\">0</span>\n\n<span class=\"k\">func</span> <span class=\"n\">_initialize</span><span class=\"p\">():</span>\n    <span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"s2\">\"Initialized:\"</span><span class=\"p\">)</span>\n    <span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"s2\">\"  Starting time: </span><span class=\"si\">%s</span><span class=\"s2\">\"</span> <span class=\"o\">%</span> <span class=\"nb\">str</span><span class=\"p\">(</span><span class=\"n\">time_elapsed</span><span class=\"p\">))</span>\n\n<span class=\"k\">func</span> <span class=\"n\">_process</span><span class=\"p\">(</span><span class=\"n\">delta</span><span class=\"p\">):</span>\n    <span class=\"n\">time_elapsed</span> <span class=\"o\">+=</span> <span class=\"n\">delta</span>\n    <span class=\"c1\"># Return true to end the main loop.</span>\n    <span class=\"k k-ControlFlow\">return</span> <span class=\"n\">Input</span><span class=\"o\">.</span><span class=\"n\">get_mouse_button_mask</span><span class=\"p\">()</span> <span class=\"o\">!=</span> <span class=\"mi\">0</span> <span class=\"o\">||</span> <span class=\"n\">Input</span><span class=\"o\">.</span><span class=\"n\">is_key_pressed</span><span class=\"p\">(</span><span class=\"n\">KEY_ESCAPE</span><span class=\"p\">)</span>\n\n<span class=\"k\">func</span> <span class=\"n\">_finalize</span><span class=\"p\">():</span>\n    <span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"s2\">\"Finalized:\"</span><span class=\"p\">)</span>\n    <span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"s2\">\"  End time: </span><span class=\"si\">%s</span><span class=\"s2\">\"</span> <span class=\"o\">%</span> <span class=\"nb\">str</span><span class=\"p\">(</span><span class=\"n\">time_elapsed</span><span class=\"p\">))</span>\n</pre></div>\n</div>\n</div><div aria-labelledby=\"tab-0-QyM=\" class=\"sphinx-tabs-panel code-tab group-tab\" hidden=\"true\" id=\"panel-0-QyM=\" name=\"QyM=\" role=\"tabpanel\" tabindex=\"0\"><div class=\"highlight-csharp notranslate\"><div class=\"highlight\"><pre><span></span><span class=\"k\">using</span><span class=\"w\"> </span><span class=\"nn\">Godot</span><span class=\"p\">;</span>\n\n<span class=\"k\">public</span><span class=\"w\"> </span><span class=\"k\">partial</span><span class=\"w\"> </span><span class=\"k\">class</span><span class=\"w\"> </span><span class=\"nc\">CustomMainLoop</span><span class=\"w\"> </span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"n\">MainLoop</span>\n<span class=\"p\">{</span>\n<span class=\"w\">    </span><span class=\"k\">private</span><span class=\"w\"> </span><span class=\"kt\">double</span><span class=\"w\"> </span><span class=\"n\">_timeElapsed</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"m\">0</span><span class=\"p\">;</span>\n\n<span class=\"w\">    </span><span class=\"k\">public</span><span class=\"w\"> </span><span class=\"k\">override</span><span class=\"w\"> </span><span class=\"k\">void</span><span class=\"w\"> </span><span class=\"nf\">_Initialize</span><span class=\"p\">()</span>\n<span class=\"w\">    </span><span class=\"p\">{</span>\n<span class=\"w\">        </span><span class=\"n\">GD</span><span class=\"p\">.</span><span class=\"n\">Print</span><span class=\"p\">(</span><span class=\"s\">\"Initialized:\"</span><span class=\"p\">);</span>\n<span class=\"w\">        </span><span class=\"n\">GD</span><span class=\"p\">.</span><span class=\"n\">Print</span><span class=\"p\">(</span><span class=\"s\">$\"  Starting Time: {_timeElapsed}\"</span><span class=\"p\">);</span>\n<span class=\"w\">    </span><span class=\"p\">}</span>\n\n<span class=\"w\">    </span><span class=\"k\">public</span><span class=\"w\"> </span><span class=\"k\">override</span><span class=\"w\"> </span><span class=\"kt\">bool</span><span class=\"w\"> </span><span class=\"nf\">_Process</span><span class=\"p\">(</span><span class=\"kt\">double</span><span class=\"w\"> </span><span class=\"n\">delta</span><span class=\"p\">)</span>\n<span class=\"w\">    </span><span class=\"p\">{</span>\n<span class=\"w\">        </span><span class=\"n\">_timeElapsed</span><span class=\"w\"> </span><span class=\"o\">+=</span><span class=\"w\"> </span><span class=\"n\">delta</span><span class=\"p\">;</span>\n<span class=\"w\">        </span><span class=\"c1\">// Return true to end the main loop.</span>\n<span class=\"w\">        </span><span class=\"k\">return</span><span class=\"w\"> </span><span class=\"n\">Input</span><span class=\"p\">.</span><span class=\"n\">GetMouseButtonMask</span><span class=\"p\">()</span><span class=\"w\"> </span><span class=\"o\">!=</span><span class=\"w\"> </span><span class=\"m\">0</span><span class=\"w\"> </span><span class=\"o\">||</span><span class=\"w\"> </span><span class=\"n\">Input</span><span class=\"p\">.</span><span class=\"n\">IsKeyPressed</span><span class=\"p\">(</span><span class=\"n\">Key</span><span class=\"p\">.</span><span class=\"n\">Escape</span><span class=\"p\">);</span>\n<span class=\"w\">    </span><span class=\"p\">}</span>\n\n<span class=\"w\">    </span><span class=\"k\">private</span><span class=\"w\"> </span><span class=\"k\">void</span><span class=\"w\"> </span><span class=\"nf\">_Finalize</span><span class=\"p\">()</span>\n<span class=\"w\">    </span><span class=\"p\">{</span>\n<span class=\"w\">        </span><span class=\"n\">GD</span><span class=\"p\">.</span><span class=\"n\">Print</span><span class=\"p\">(</span><span class=\"s\">\"Finalized:\"</span><span class=\"p\">);</span>\n<span class=\"w\">        </span><span class=\"n\">GD</span><span class=\"p\">.</span><span class=\"n\">Print</span><span class=\"p\">(</span><span class=\"s\">$\"  End Time: {_timeElapsed}\"</span><span class=\"p\">);</span>\n<span class=\"w\">    </span><span class=\"p\">}</span>\n<span class=\"p\">}</span>\n</pre></div>\n</div>\n</div></div>\n"
            },
            "class_marshalls": {
                "url": "https://docs.godotengine.org/en/4.1/classes/class_marshalls.html",
                "title": "Marshalls",
                "blurb": "<p><strong>Inherits:</strong> <a class=\"reference internal\" href=\"class_object.html#class-object\"><span class=\"std std-ref\">Object</span></a></p><p>Data transformation (marshaling) and encoding helpers.</p>",
                "description": "\n\n<p>Provides data transformation and encoding utility functions.</p>\n"
            },
            "class_meshconvexdecompositionsettings": {
                "url": "https://docs.godotengine.org/en/4.1/classes/class_meshconvexdecompositionsettings.html",
                "title": "MeshConvexDecompositionSettings",
                "blurb": "<p><strong>Inherits:</strong> <a class=\"reference internal\" href=\"class_refcounted.html#class-refcounted\"><span class=\"std std-ref\">RefCounted</span></a> <strong>&lt;</strong> <a class=\"reference internal\" href=\"class_object.html#class-object\"><span class=\"std std-ref\">Object</span></a></p><p>Parameters to be used with a <a class=\"reference internal\" href=\"class_mesh.html#class-mesh\"><span class=\"std std-ref\">Mesh</span></a> convex decomposition operation.</p>",
                "description": "\n\n<p>Parameters to be used with a <a class=\"reference internal\" href=\"class_mesh.html#class-mesh\"><span class=\"std std-ref\">Mesh</span></a> convex decomposition operation.</p>\n"
            },
            "class_meshdatatool": {
                "url": "https://docs.godotengine.org/en/4.1/classes/class_meshdatatool.html",
                "title": "MeshDataTool",
                "blurb": "<p><strong>Inherits:</strong> <a class=\"reference internal\" href=\"class_refcounted.html#class-refcounted\"><span class=\"std std-ref\">RefCounted</span></a> <strong>&lt;</strong> <a class=\"reference internal\" href=\"class_object.html#class-object\"><span class=\"std std-ref\">Object</span></a></p><p>Helper tool to access and edit <a class=\"reference internal\" href=\"class_mesh.html#class-mesh\"><span class=\"std std-ref\">Mesh</span></a> data.</p>",
                "description": "\n\n<p>MeshDataTool provides access to individual vertices in a <a class=\"reference internal\" href=\"class_mesh.html#class-mesh\"><span class=\"std std-ref\">Mesh</span></a>. It allows users to read and edit vertex data of meshes. It also creates an array of faces and edges.</p>\n<p>To use MeshDataTool, load a mesh with <a class=\"reference internal\" href=\"#class-meshdatatool-method-create-from-surface\"><span class=\"std std-ref\">create_from_surface</span></a>. When you are finished editing the data commit the data to a mesh with <a class=\"reference internal\" href=\"#class-meshdatatool-method-commit-to-surface\"><span class=\"std std-ref\">commit_to_surface</span></a>.</p>\n<p>Below is an example of how MeshDataTool may be used.</p>\n<div class=\"sphinx-tabs docutils container\">\n<div aria-label=\"Tabbed content\" class=\"closeable\" role=\"tablist\"><button aria-controls=\"panel-0-R0RTY3JpcHQ=\" aria-selected=\"true\" class=\"sphinx-tabs-tab code-tab group-tab\" id=\"tab-0-R0RTY3JpcHQ=\" name=\"R0RTY3JpcHQ=\" role=\"tab\" tabindex=\"0\">GDScript</button><button aria-controls=\"panel-0-QyM=\" aria-selected=\"false\" class=\"sphinx-tabs-tab code-tab group-tab\" id=\"tab-0-QyM=\" name=\"QyM=\" role=\"tab\" tabindex=\"-1\">C#</button></div><div aria-labelledby=\"tab-0-R0RTY3JpcHQ=\" class=\"sphinx-tabs-panel code-tab group-tab\" id=\"panel-0-R0RTY3JpcHQ=\" name=\"R0RTY3JpcHQ=\" role=\"tabpanel\" tabindex=\"0\"><div class=\"highlight-gdscript notranslate\"><div class=\"highlight\"><pre><span></span><span class=\"k\">var</span> <span class=\"n\">mesh</span> <span class=\"o\">=</span> <span class=\"n\">ArrayMesh</span><span class=\"o\">.</span><span class=\"n\">new</span><span class=\"p\">()</span>\n<span class=\"n\">mesh</span><span class=\"o\">.</span><span class=\"n\">add_surface_from_arrays</span><span class=\"p\">(</span><span class=\"n\">Mesh</span><span class=\"o\">.</span><span class=\"n\">PRIMITIVE_TRIANGLES</span><span class=\"p\">,</span> <span class=\"n\">BoxMesh</span><span class=\"o\">.</span><span class=\"n\">new</span><span class=\"p\">()</span><span class=\"o\">.</span><span class=\"n\">get_mesh_arrays</span><span class=\"p\">())</span>\n<span class=\"k\">var</span> <span class=\"n\">mdt</span> <span class=\"o\">=</span> <span class=\"n\">MeshDataTool</span><span class=\"o\">.</span><span class=\"n\">new</span><span class=\"p\">()</span>\n<span class=\"n\">mdt</span><span class=\"o\">.</span><span class=\"n\">create_from_surface</span><span class=\"p\">(</span><span class=\"n\">mesh</span><span class=\"p\">,</span> <span class=\"mi\">0</span><span class=\"p\">)</span>\n<span class=\"k k-ControlFlow\">for</span> <span class=\"n\">i</span> <span class=\"ow\">in</span> <span class=\"nb\">range</span><span class=\"p\">(</span><span class=\"n\">mdt</span><span class=\"o\">.</span><span class=\"n\">get_vertex_count</span><span class=\"p\">()):</span>\n    <span class=\"k\">var</span> <span class=\"n\">vertex</span> <span class=\"o\">=</span> <span class=\"n\">mdt</span><span class=\"o\">.</span><span class=\"n\">get_vertex</span><span class=\"p\">(</span><span class=\"n\">i</span><span class=\"p\">)</span>\n    <span class=\"c1\"># In this example we extend the mesh by one unit, which results in separated faces as it is flat shaded.</span>\n    <span class=\"n\">vertex</span> <span class=\"o\">+=</span> <span class=\"n\">mdt</span><span class=\"o\">.</span><span class=\"n\">get_vertex_normal</span><span class=\"p\">(</span><span class=\"n\">i</span><span class=\"p\">)</span>\n    <span class=\"c1\"># Save your change.</span>\n    <span class=\"n\">mdt</span><span class=\"o\">.</span><span class=\"n\">set_vertex</span><span class=\"p\">(</span><span class=\"n\">i</span><span class=\"p\">,</span> <span class=\"n\">vertex</span><span class=\"p\">)</span>\n<span class=\"n\">mesh</span><span class=\"o\">.</span><span class=\"n\">clear_surfaces</span><span class=\"p\">()</span>\n<span class=\"n\">mdt</span><span class=\"o\">.</span><span class=\"n\">commit_to_surface</span><span class=\"p\">(</span><span class=\"n\">mesh</span><span class=\"p\">)</span>\n<span class=\"k\">var</span> <span class=\"n\">mi</span> <span class=\"o\">=</span> <span class=\"n\">MeshInstance</span><span class=\"o\">.</span><span class=\"n\">new</span><span class=\"p\">()</span>\n<span class=\"n\">mi</span><span class=\"o\">.</span><span class=\"n\">mesh</span> <span class=\"o\">=</span> <span class=\"n\">mesh</span>\n<span class=\"n\">add_child</span><span class=\"p\">(</span><span class=\"n\">mi</span><span class=\"p\">)</span>\n</pre></div>\n</div>\n</div><div aria-labelledby=\"tab-0-QyM=\" class=\"sphinx-tabs-panel code-tab group-tab\" hidden=\"true\" id=\"panel-0-QyM=\" name=\"QyM=\" role=\"tabpanel\" tabindex=\"0\"><div class=\"highlight-csharp notranslate\"><div class=\"highlight\"><pre><span></span><span class=\"kt\">var</span><span class=\"w\"> </span><span class=\"n\">mesh</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"k\">new</span><span class=\"w\"> </span><span class=\"n\">ArrayMesh</span><span class=\"p\">();</span>\n<span class=\"n\">mesh</span><span class=\"p\">.</span><span class=\"n\">AddSurfaceFromArrays</span><span class=\"p\">(</span><span class=\"n\">Mesh</span><span class=\"p\">.</span><span class=\"n\">PrimitiveType</span><span class=\"p\">.</span><span class=\"n\">Triangles</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"k\">new</span><span class=\"w\"> </span><span class=\"n\">BoxMesh</span><span class=\"p\">().</span><span class=\"n\">GetMeshArrays</span><span class=\"p\">());</span>\n<span class=\"kt\">var</span><span class=\"w\"> </span><span class=\"n\">mdt</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"k\">new</span><span class=\"w\"> </span><span class=\"n\">MeshDataTool</span><span class=\"p\">();</span>\n<span class=\"n\">mdt</span><span class=\"p\">.</span><span class=\"n\">CreateFromSurface</span><span class=\"p\">(</span><span class=\"n\">mesh</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"m\">0</span><span class=\"p\">);</span>\n<span class=\"k\">for</span><span class=\"w\"> </span><span class=\"p\">(</span><span class=\"kt\">var</span><span class=\"w\"> </span><span class=\"n\">i</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"m\">0</span><span class=\"p\">;</span><span class=\"w\"> </span><span class=\"n\">i</span><span class=\"w\"> </span><span class=\"o\">&lt;</span><span class=\"w\"> </span><span class=\"n\">mdt</span><span class=\"p\">.</span><span class=\"n\">GetVertexCount</span><span class=\"p\">();</span><span class=\"w\"> </span><span class=\"n\">i</span><span class=\"o\">++</span><span class=\"p\">)</span>\n<span class=\"p\">{</span>\n<span class=\"w\">    </span><span class=\"n\">Vector3</span><span class=\"w\"> </span><span class=\"n\">vertex</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"n\">mdt</span><span class=\"p\">.</span><span class=\"n\">GetVertex</span><span class=\"p\">(</span><span class=\"n\">i</span><span class=\"p\">);</span>\n<span class=\"w\">    </span><span class=\"c1\">// In this example we extend the mesh by one unit, which results in separated faces as it is flat shaded.</span>\n<span class=\"w\">    </span><span class=\"n\">vertex</span><span class=\"w\"> </span><span class=\"o\">+=</span><span class=\"w\"> </span><span class=\"n\">mdt</span><span class=\"p\">.</span><span class=\"n\">GetVertexNormal</span><span class=\"p\">(</span><span class=\"n\">i</span><span class=\"p\">);</span>\n<span class=\"w\">    </span><span class=\"c1\">// Save your change.</span>\n<span class=\"w\">    </span><span class=\"n\">mdt</span><span class=\"p\">.</span><span class=\"n\">SetVertex</span><span class=\"p\">(</span><span class=\"n\">i</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">vertex</span><span class=\"p\">);</span>\n<span class=\"p\">}</span>\n<span class=\"n\">mesh</span><span class=\"p\">.</span><span class=\"n\">ClearSurfaces</span><span class=\"p\">();</span>\n<span class=\"n\">mdt</span><span class=\"p\">.</span><span class=\"n\">CommitToSurface</span><span class=\"p\">(</span><span class=\"n\">mesh</span><span class=\"p\">);</span>\n<span class=\"kt\">var</span><span class=\"w\"> </span><span class=\"n\">mi</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"k\">new</span><span class=\"w\"> </span><span class=\"n\">MeshInstance</span><span class=\"p\">();</span>\n<span class=\"n\">mi</span><span class=\"p\">.</span><span class=\"n\">Mesh</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"n\">mesh</span><span class=\"p\">;</span>\n<span class=\"n\">AddChild</span><span class=\"p\">(</span><span class=\"n\">mi</span><span class=\"p\">);</span>\n</pre></div>\n</div>\n</div></div>\n<p>See also <a class=\"reference internal\" href=\"class_arraymesh.html#class-arraymesh\"><span class=\"std std-ref\">ArrayMesh</span></a>, <a class=\"reference internal\" href=\"class_immediatemesh.html#class-immediatemesh\"><span class=\"std std-ref\">ImmediateMesh</span></a> and <a class=\"reference internal\" href=\"class_surfacetool.html#class-surfacetool\"><span class=\"std std-ref\">SurfaceTool</span></a> for procedural geometry generation.</p>\n<p><strong>Note:</strong> Godot uses clockwise <a class=\"reference external\" href=\"https://learnopengl.com/Advanced-OpenGL/Face-culling\">winding order</a> for front faces of triangle primitive modes.</p>\n"
            },
            "class_methodtweener": {
                "url": "https://docs.godotengine.org/en/4.1/classes/class_methodtweener.html",
                "title": "MethodTweener",
                "blurb": "<p><strong>Inherits:</strong> <a class=\"reference internal\" href=\"class_tweener.html#class-tweener\"><span class=\"std std-ref\">Tweener</span></a> <strong>&lt;</strong> <a class=\"reference internal\" href=\"class_refcounted.html#class-refcounted\"><span class=\"std std-ref\">RefCounted</span></a> <strong>&lt;</strong> <a class=\"reference internal\" href=\"class_object.html#class-object\"><span class=\"std std-ref\">Object</span></a></p><p>Interpolates an abstract value and supplies it to a method called over time.</p>",
                "description": "\n\n<p><strong>MethodTweener</strong> is similar to a combination of <a class=\"reference internal\" href=\"class_callbacktweener.html#class-callbacktweener\"><span class=\"std std-ref\">CallbackTweener</span></a> and <a class=\"reference internal\" href=\"class_propertytweener.html#class-propertytweener\"><span class=\"std std-ref\">PropertyTweener</span></a>. It calls a method providing an interpolated value as a parameter. See <a class=\"reference internal\" href=\"class_tween.html#class-tween-method-tween-method\"><span class=\"std std-ref\">Tween.tween_method</span></a> for more usage information.</p>\n<p><strong>Note:</strong> <a class=\"reference internal\" href=\"class_tween.html#class-tween-method-tween-method\"><span class=\"std std-ref\">Tween.tween_method</span></a> is the only correct way to create <strong>MethodTweener</strong>. Any <strong>MethodTweener</strong> created manually will not function correctly.</p>\n"
            },
            "class_mobilevrinterface": {
                "url": "https://docs.godotengine.org/en/4.1/classes/class_mobilevrinterface.html",
                "title": "MobileVRInterface",
                "blurb": "<p><strong>Inherits:</strong> <a class=\"reference internal\" href=\"class_xrinterface.html#class-xrinterface\"><span class=\"std std-ref\">XRInterface</span></a> <strong>&lt;</strong> <a class=\"reference internal\" href=\"class_refcounted.html#class-refcounted\"><span class=\"std std-ref\">RefCounted</span></a> <strong>&lt;</strong> <a class=\"reference internal\" href=\"class_object.html#class-object\"><span class=\"std std-ref\">Object</span></a></p><p>Generic mobile VR implementation.</p>",
                "description": "\n\n<p>This is a generic mobile VR implementation where you need to provide details about the phone and HMD used. It does not rely on any existing framework. This is the most basic interface we have. For the best effect, you need a mobile phone with a gyroscope and accelerometer.</p>\n<p>Note that even though there is no positional tracking, the camera will assume the headset is at a height of 1.85 meters. You can change this by setting <a class=\"reference internal\" href=\"#class-mobilevrinterface-property-eye-height\"><span class=\"std std-ref\">eye_height</span></a>.</p>\n<p>You can initialize this interface as follows:</p>\n<div class=\"highlight-gdscript notranslate\"><div class=\"highlight\"><pre><span></span><span class=\"k\">var</span> <span class=\"n\">interface</span> <span class=\"o\">=</span> <span class=\"n\">XRServer</span><span class=\"o\">.</span><span class=\"n\">find_interface</span><span class=\"p\">(</span><span class=\"s2\">\"Native mobile\"</span><span class=\"p\">)</span>\n<span class=\"k k-ControlFlow\">if</span> <span class=\"n\">interface</span> <span class=\"ow\">and</span> <span class=\"n\">interface</span><span class=\"o\">.</span><span class=\"n\">initialize</span><span class=\"p\">():</span>\n    <span class=\"n\">get_viewport</span><span class=\"p\">()</span><span class=\"o\">.</span><span class=\"n\">xr</span> <span class=\"o\">=</span> <span class=\"bp\">true</span>\n</pre></div>\n</div>\n"
            },
            "class_moviewriter": {
                "url": "https://docs.godotengine.org/en/4.1/classes/class_moviewriter.html",
                "title": "MovieWriter",
                "blurb": "<p><strong>Inherits:</strong> <a class=\"reference internal\" href=\"class_object.html#class-object\"><span class=\"std std-ref\">Object</span></a></p><p>Abstract class for non-real-time video recording encoders.</p>",
                "description": "\n\n<p>Godot can record videos with non-real-time simulation. Like the <code class=\"docutils literal notranslate\"><span class=\"pre\">--fixed-fps</span></code> <a class=\"reference internal\" href=\"../tutorials/editor/command_line_tutorial.html\"><span class=\"doc\">command line argument</span></a>, this forces the reported <code class=\"docutils literal notranslate\"><span class=\"pre\">delta</span></code> in <a class=\"reference internal\" href=\"class_node.html#class-node-method-process\"><span class=\"std std-ref\">Node._process</span></a> functions to be identical across frames, regardless of how long it actually took to render the frame. This can be used to record high-quality videos with perfect frame pacing regardless of your hardware's capabilities.</p>\n<p>Godot has 2 built-in <strong>MovieWriter</strong>s:</p>\n<ul class=\"simple\">\n<li><p>AVI container with MJPEG for video and uncompressed audio (<code class=\"docutils literal notranslate\"><span class=\"pre\">.avi</span></code> file extension). Lossy compression, medium file sizes, fast encoding. The lossy compression quality can be adjusted by changing <a class=\"reference internal\" href=\"class_projectsettings.html#class-projectsettings-property-editor-movie-writer-mjpeg-quality\"><span class=\"std std-ref\">ProjectSettings.editor/movie_writer/mjpeg_quality</span></a>. The resulting file can be viewed in most video players, but it must be converted to another format for viewing on the web or by Godot with <a class=\"reference internal\" href=\"class_videostreamplayer.html#class-videostreamplayer\"><span class=\"std std-ref\">VideoStreamPlayer</span></a>. MJPEG does not support transparency. AVI output is currently limited to a file of 4 GB in size at most.</p></li>\n<li><p>PNG image sequence for video and WAV for audio (<code class=\"docutils literal notranslate\"><span class=\"pre\">.png</span></code> file extension). Lossless compression, large file sizes, slow encoding. Designed to be encoded to a video file with another tool such as <a class=\"reference external\" href=\"https://ffmpeg.org/\">FFmpeg</a> after recording. Transparency is currently not supported, even if the root viewport is set to be transparent.</p></li>\n</ul>\n<p>If you need to encode to a different format or pipe a stream through third-party software, you can extend the <strong>MovieWriter</strong> class to create your own movie writers. This should typically be done using GDExtension for performance reasons.</p>\n<p><strong>Editor usage:</strong> A default movie file path can be specified in <a class=\"reference internal\" href=\"class_projectsettings.html#class-projectsettings-property-editor-movie-writer-movie-file\"><span class=\"std std-ref\">ProjectSettings.editor/movie_writer/movie_file</span></a>. Alternatively, for running single scenes, a <code class=\"docutils literal notranslate\"><span class=\"pre\">movie_path</span></code> metadata can be added to the root node, specifying the path to a movie file that will be used when recording that scene. Once a path is set, click the video reel icon in the top-right corner of the editor to enable Movie Maker mode, then run any scene as usual. The engine will start recording as soon as the splash screen is finished, and it will only stop recording when the engine quits. Click the video reel icon again to disable Movie Maker mode. Note that toggling Movie Maker mode does not affect project instances that are already running.</p>\n<p><strong>Note:</strong> MovieWriter is available for use in both the editor and exported projects, but it is <em>not</em> designed for use by end users to record videos while playing. Players wishing to record gameplay videos should install tools such as <a class=\"reference external\" href=\"https://obsproject.com/\">OBS Studio</a> or <a class=\"reference external\" href=\"https://www.maartenbaert.be/simplescreenrecorder/\">SimpleScreenRecorder</a> instead.</p>\n"
            },
            "class_multiplayerapi": {
                "url": "https://docs.godotengine.org/en/4.1/classes/class_multiplayerapi.html",
                "title": "MultiplayerAPI",
                "blurb": "<p><strong>Inherits:</strong> <a class=\"reference internal\" href=\"class_refcounted.html#class-refcounted\"><span class=\"std std-ref\">RefCounted</span></a> <strong>&lt;</strong> <a class=\"reference internal\" href=\"class_object.html#class-object\"><span class=\"std std-ref\">Object</span></a></p><p><strong>Inherited By:</strong> <a class=\"reference internal\" href=\"class_multiplayerapiextension.html#class-multiplayerapiextension\"><span class=\"std std-ref\">MultiplayerAPIExtension</span></a>, <a class=\"reference internal\" href=\"class_scenemultiplayer.html#class-scenemultiplayer\"><span class=\"std std-ref\">SceneMultiplayer</span></a></p><p>High-level multiplayer API interface.</p>",
                "description": "\n\n<p>Base class for high-level multiplayer API implementations. See also <a class=\"reference internal\" href=\"class_multiplayerpeer.html#class-multiplayerpeer\"><span class=\"std std-ref\">MultiplayerPeer</span></a>.</p>\n<p>By default, <a class=\"reference internal\" href=\"class_scenetree.html#class-scenetree\"><span class=\"std std-ref\">SceneTree</span></a> has a reference to an implementation of this class and uses it to provide multiplayer capabilities (i.e. RPCs) across the whole scene.</p>\n<p>It is possible to override the MultiplayerAPI instance used by specific tree branches by calling the <a class=\"reference internal\" href=\"class_scenetree.html#class-scenetree-method-set-multiplayer\"><span class=\"std std-ref\">SceneTree.set_multiplayer</span></a> method, effectively allowing to run both client and server in the same scene.</p>\n<p>It is also possible to extend or replace the default implementation via scripting or native extensions. See <a class=\"reference internal\" href=\"class_multiplayerapiextension.html#class-multiplayerapiextension\"><span class=\"std std-ref\">MultiplayerAPIExtension</span></a> for details about extensions, <a class=\"reference internal\" href=\"class_scenemultiplayer.html#class-scenemultiplayer\"><span class=\"std std-ref\">SceneMultiplayer</span></a> for the details about the default implementation.</p>\n"
            },
            "class_multiplayerapiextension": {
                "url": "https://docs.godotengine.org/en/4.1/classes/class_multiplayerapiextension.html",
                "title": "MultiplayerAPIExtension",
                "blurb": "<p><strong>Inherits:</strong> <a class=\"reference internal\" href=\"class_multiplayerapi.html#class-multiplayerapi\"><span class=\"std std-ref\">MultiplayerAPI</span></a> <strong>&lt;</strong> <a class=\"reference internal\" href=\"class_refcounted.html#class-refcounted\"><span class=\"std std-ref\">RefCounted</span></a> <strong>&lt;</strong> <a class=\"reference internal\" href=\"class_object.html#class-object\"><span class=\"std std-ref\">Object</span></a></p><p>Base class used for extending the <a class=\"reference internal\" href=\"class_multiplayerapi.html#class-multiplayerapi\"><span class=\"std std-ref\">MultiplayerAPI</span></a>.</p>",
                "description": "\n\n<p>This class can be used to augment or replace the default <a class=\"reference internal\" href=\"class_multiplayerapi.html#class-multiplayerapi\"><span class=\"std std-ref\">MultiplayerAPI</span></a> implementation via script or extensions.</p>\n<p>The following example augment the default implementation (<a class=\"reference internal\" href=\"class_scenemultiplayer.html#class-scenemultiplayer\"><span class=\"std std-ref\">SceneMultiplayer</span></a>) by logging every RPC being made, and every object being configured for replication.</p>\n<div class=\"sphinx-tabs docutils container\">\n<div aria-label=\"Tabbed content\" class=\"closeable\" role=\"tablist\"><button aria-controls=\"panel-0-R0RTY3JpcHQ=\" aria-selected=\"true\" class=\"sphinx-tabs-tab code-tab group-tab\" id=\"tab-0-R0RTY3JpcHQ=\" name=\"R0RTY3JpcHQ=\" role=\"tab\" tabindex=\"0\">GDScript</button></div><div aria-labelledby=\"tab-0-R0RTY3JpcHQ=\" class=\"sphinx-tabs-panel code-tab group-tab\" id=\"panel-0-R0RTY3JpcHQ=\" name=\"R0RTY3JpcHQ=\" role=\"tabpanel\" tabindex=\"0\"><div class=\"highlight-gdscript notranslate\"><div class=\"highlight\"><pre><span></span><span class=\"k\">extends</span> <span class=\"n\">MultiplayerAPIExtension</span>\n<span class=\"k\">class_name</span> <span class=\"n\">LogMultiplayer</span>\n\n<span class=\"c1\"># We want to augment the default SceneMultiplayer.</span>\n<span class=\"k\">var</span> <span class=\"n\">base_multiplayer</span> <span class=\"o\">=</span> <span class=\"n\">SceneMultiplayer</span><span class=\"o\">.</span><span class=\"n\">new</span><span class=\"p\">()</span>\n\n<span class=\"k\">func</span> <span class=\"n\">_init</span><span class=\"p\">():</span>\n    <span class=\"c1\"># Just passthourgh base signals (copied to var to avoid cyclic reference)</span>\n    <span class=\"k\">var</span> <span class=\"n\">cts</span> <span class=\"o\">=</span> <span class=\"n\">connected_to_server</span>\n    <span class=\"k\">var</span> <span class=\"n\">cf</span> <span class=\"o\">=</span> <span class=\"n\">connection_failed</span>\n    <span class=\"k\">var</span> <span class=\"n\">pc</span> <span class=\"o\">=</span> <span class=\"n\">peer_connected</span>\n    <span class=\"k\">var</span> <span class=\"n\">pd</span> <span class=\"o\">=</span> <span class=\"n\">peer_disconnected</span>\n    <span class=\"n\">base_multiplayer</span><span class=\"o\">.</span><span class=\"n\">connected_to_server</span><span class=\"o\">.</span><span class=\"n\">connect</span><span class=\"p\">(</span><span class=\"k\">func</span><span class=\"p\">():</span> <span class=\"n\">cts</span><span class=\"o\">.</span><span class=\"n\">emit</span><span class=\"p\">())</span>\n    <span class=\"n\">base_multiplayer</span><span class=\"o\">.</span><span class=\"n\">connection_failed</span><span class=\"o\">.</span><span class=\"n\">connect</span><span class=\"p\">(</span><span class=\"k\">func</span><span class=\"p\">():</span> <span class=\"n\">cf</span><span class=\"o\">.</span><span class=\"n\">emit</span><span class=\"p\">())</span>\n    <span class=\"n\">base_multiplayer</span><span class=\"o\">.</span><span class=\"n\">peer_connected</span><span class=\"o\">.</span><span class=\"n\">connect</span><span class=\"p\">(</span><span class=\"k\">func</span><span class=\"p\">(</span><span class=\"n\">id</span><span class=\"p\">):</span> <span class=\"n\">pc</span><span class=\"o\">.</span><span class=\"n\">emit</span><span class=\"p\">(</span><span class=\"n\">id</span><span class=\"p\">))</span>\n    <span class=\"n\">base_multiplayer</span><span class=\"o\">.</span><span class=\"n\">peer_disconnected</span><span class=\"o\">.</span><span class=\"n\">connect</span><span class=\"p\">(</span><span class=\"k\">func</span><span class=\"p\">(</span><span class=\"n\">id</span><span class=\"p\">):</span> <span class=\"n\">pd</span><span class=\"o\">.</span><span class=\"n\">emit</span><span class=\"p\">(</span><span class=\"n\">id</span><span class=\"p\">))</span>\n\n<span class=\"c1\"># Log RPC being made and forward it to the default multiplayer.</span>\n<span class=\"k\">func</span> <span class=\"n\">_rpc</span><span class=\"p\">(</span><span class=\"n\">peer</span><span class=\"p\">:</span> <span class=\"nb nb-Type\">int</span><span class=\"p\">,</span> <span class=\"n\">object</span><span class=\"p\">:</span> <span class=\"nb nb-Type\">Object</span><span class=\"p\">,</span> <span class=\"n\">method</span><span class=\"p\">:</span> <span class=\"nb nb-Type\">StringName</span><span class=\"p\">,</span> <span class=\"n\">args</span><span class=\"p\">:</span> <span class=\"nb nb-Type\">Array</span><span class=\"p\">)</span> <span class=\"o\">-&gt;</span> <span class=\"nb nb-Type\">int</span><span class=\"p\">:</span> <span class=\"c1\"># Error</span>\n    <span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"s2\">\"Got RPC for </span><span class=\"si\">%d</span><span class=\"s2\">: </span><span class=\"si\">%s</span><span class=\"s2\">::</span><span class=\"si\">%s</span><span class=\"s2\">(</span><span class=\"si\">%s</span><span class=\"s2\">)\"</span> <span class=\"o\">%</span> <span class=\"p\">[</span><span class=\"n\">peer</span><span class=\"p\">,</span> <span class=\"n\">object</span><span class=\"p\">,</span> <span class=\"n\">method</span><span class=\"p\">,</span> <span class=\"n\">args</span><span class=\"p\">])</span>\n    <span class=\"k k-ControlFlow\">return</span> <span class=\"n\">base_multiplayer</span><span class=\"o\">.</span><span class=\"n\">rpc</span><span class=\"p\">(</span><span class=\"n\">peer</span><span class=\"p\">,</span> <span class=\"n\">object</span><span class=\"p\">,</span> <span class=\"n\">method</span><span class=\"p\">,</span> <span class=\"n\">args</span><span class=\"p\">)</span>\n\n<span class=\"c1\"># Log configuration add. E.g. root path (nullptr, NodePath), replication (Node, Spawner|Synchronizer), custom.</span>\n<span class=\"k\">func</span> <span class=\"n\">_object_configuration_add</span><span class=\"p\">(</span><span class=\"n\">object</span><span class=\"p\">,</span> <span class=\"n\">config</span><span class=\"p\">:</span> <span class=\"n\">Variant</span><span class=\"p\">)</span> <span class=\"o\">-&gt;</span> <span class=\"nb nb-Type\">int</span><span class=\"p\">:</span> <span class=\"c1\"># Error</span>\n    <span class=\"k k-ControlFlow\">if</span> <span class=\"n\">config</span> <span class=\"k\">is</span> <span class=\"n\">MultiplayerSynchronizer</span><span class=\"p\">:</span>\n        <span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"s2\">\"Adding synchronization configuration for </span><span class=\"si\">%s</span><span class=\"s2\">. Synchronizer: </span><span class=\"si\">%s</span><span class=\"s2\">\"</span> <span class=\"o\">%</span> <span class=\"p\">[</span><span class=\"n\">object</span><span class=\"p\">,</span> <span class=\"n\">config</span><span class=\"p\">])</span>\n    <span class=\"k k-ControlFlow\">elif</span> <span class=\"n\">config</span> <span class=\"k\">is</span> <span class=\"n\">MultiplayerSpawner</span><span class=\"p\">:</span>\n        <span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"s2\">\"Adding node </span><span class=\"si\">%s</span><span class=\"s2\"> to the spawn list. Spawner: </span><span class=\"si\">%s</span><span class=\"s2\">\"</span> <span class=\"o\">%</span> <span class=\"p\">[</span><span class=\"n\">object</span><span class=\"p\">,</span> <span class=\"n\">config</span><span class=\"p\">])</span>\n    <span class=\"k k-ControlFlow\">return</span> <span class=\"n\">base_multiplayer</span><span class=\"o\">.</span><span class=\"n\">object_configuration_add</span><span class=\"p\">(</span><span class=\"n\">object</span><span class=\"p\">,</span> <span class=\"n\">config</span><span class=\"p\">)</span>\n\n<span class=\"c1\"># Log configuration remove. E.g. root path (nullptr, NodePath), replication (Node, Spawner|Synchronizer), custom.</span>\n<span class=\"k\">func</span> <span class=\"n\">_object_configuration_remove</span><span class=\"p\">(</span><span class=\"n\">object</span><span class=\"p\">,</span> <span class=\"n\">config</span><span class=\"p\">:</span> <span class=\"n\">Variant</span><span class=\"p\">)</span> <span class=\"o\">-&gt;</span> <span class=\"nb nb-Type\">int</span><span class=\"p\">:</span> <span class=\"c1\"># Error</span>\n    <span class=\"k k-ControlFlow\">if</span> <span class=\"n\">config</span> <span class=\"k\">is</span> <span class=\"n\">MultiplayerSynchronizer</span><span class=\"p\">:</span>\n        <span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"s2\">\"Removing synchronization configuration for </span><span class=\"si\">%s</span><span class=\"s2\">. Synchronizer: </span><span class=\"si\">%s</span><span class=\"s2\">\"</span> <span class=\"o\">%</span> <span class=\"p\">[</span><span class=\"n\">object</span><span class=\"p\">,</span> <span class=\"n\">config</span><span class=\"p\">])</span>\n    <span class=\"k k-ControlFlow\">elif</span> <span class=\"n\">config</span> <span class=\"k\">is</span> <span class=\"n\">MultiplayerSpawner</span><span class=\"p\">:</span>\n        <span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"s2\">\"Removing node </span><span class=\"si\">%s</span><span class=\"s2\"> from the spawn list. Spawner: </span><span class=\"si\">%s</span><span class=\"s2\">\"</span> <span class=\"o\">%</span> <span class=\"p\">[</span><span class=\"n\">object</span><span class=\"p\">,</span> <span class=\"n\">config</span><span class=\"p\">])</span>\n    <span class=\"k k-ControlFlow\">return</span> <span class=\"n\">base_multiplayer</span><span class=\"o\">.</span><span class=\"n\">object_configuration_remove</span><span class=\"p\">(</span><span class=\"n\">object</span><span class=\"p\">,</span> <span class=\"n\">config</span><span class=\"p\">)</span>\n\n<span class=\"c1\"># These can be optional, but in our case we want to augment SceneMultiplayer, so forward everything.</span>\n<span class=\"k\">func</span> <span class=\"n\">_set_multiplayer_peer</span><span class=\"p\">(</span><span class=\"n\">p_peer</span><span class=\"p\">:</span> <span class=\"n\">MultiplayerPeer</span><span class=\"p\">):</span>\n    <span class=\"n\">base_multiplayer</span><span class=\"o\">.</span><span class=\"n\">multiplayer_peer</span> <span class=\"o\">=</span> <span class=\"n\">p_peer</span>\n\n<span class=\"k\">func</span> <span class=\"n\">_get_multiplayer_peer</span><span class=\"p\">()</span> <span class=\"o\">-&gt;</span> <span class=\"n\">MultiplayerPeer</span><span class=\"p\">:</span>\n    <span class=\"k k-ControlFlow\">return</span> <span class=\"n\">base_multiplayer</span><span class=\"o\">.</span><span class=\"n\">multiplayer_peer</span>\n\n<span class=\"k\">func</span> <span class=\"n\">_get_unique_id</span><span class=\"p\">()</span> <span class=\"o\">-&gt;</span> <span class=\"nb nb-Type\">int</span><span class=\"p\">:</span>\n    <span class=\"k k-ControlFlow\">return</span> <span class=\"n\">base_multiplayer</span><span class=\"o\">.</span><span class=\"n\">get_unique_id</span><span class=\"p\">()</span>\n\n<span class=\"k\">func</span> <span class=\"n\">_get_peer_ids</span><span class=\"p\">()</span> <span class=\"o\">-&gt;</span> <span class=\"nb nb-Type\">PackedInt32Array</span><span class=\"p\">:</span>\n    <span class=\"k k-ControlFlow\">return</span> <span class=\"n\">base_multiplayer</span><span class=\"o\">.</span><span class=\"n\">get_peers</span><span class=\"p\">()</span>\n</pre></div>\n</div>\n</div></div>\n<p>Then in your main scene or in an autoload call <a class=\"reference internal\" href=\"class_scenetree.html#class-scenetree-method-set-multiplayer\"><span class=\"std std-ref\">SceneTree.set_multiplayer</span></a> to start using your custom <a class=\"reference internal\" href=\"class_multiplayerapi.html#class-multiplayerapi\"><span class=\"std std-ref\">MultiplayerAPI</span></a>:</p>\n<div class=\"sphinx-tabs docutils container\">\n<div aria-label=\"Tabbed content\" class=\"closeable\" role=\"tablist\"><button aria-controls=\"panel-1-R0RTY3JpcHQ=\" aria-selected=\"true\" class=\"sphinx-tabs-tab code-tab group-tab\" id=\"tab-1-R0RTY3JpcHQ=\" name=\"R0RTY3JpcHQ=\" role=\"tab\" tabindex=\"0\">GDScript</button></div><div aria-labelledby=\"tab-1-R0RTY3JpcHQ=\" class=\"sphinx-tabs-panel code-tab group-tab\" id=\"panel-1-R0RTY3JpcHQ=\" name=\"R0RTY3JpcHQ=\" role=\"tabpanel\" tabindex=\"0\"><div class=\"highlight-gdscript notranslate\"><div class=\"highlight\"><pre><span></span><span class=\"c1\"># autoload.gd</span>\n<span class=\"k\">func</span> <span class=\"n\">_enter_tree</span><span class=\"p\">():</span>\n    <span class=\"c1\"># Sets our custom multiplayer as the main one in SceneTree.</span>\n<span class=\"n\">get_tree</span><span class=\"p\">()</span><span class=\"o\">.</span><span class=\"n\">set_multiplayer</span><span class=\"p\">(</span><span class=\"n\">LogMultiplayer</span><span class=\"o\">.</span><span class=\"n\">new</span><span class=\"p\">())</span>\n</pre></div>\n</div>\n</div></div>\n<p>Native extensions can alternatively use the <a class=\"reference internal\" href=\"class_multiplayerapi.html#class-multiplayerapi-method-set-default-interface\"><span class=\"std std-ref\">MultiplayerAPI.set_default_interface</span></a> method during initialization to configure themselves as the default implementation.</p>\n"
            },
            "class_multiplayerpeer": {
                "url": "https://docs.godotengine.org/en/4.1/classes/class_multiplayerpeer.html",
                "title": "MultiplayerPeer",
                "blurb": "<p><strong>Inherits:</strong> <a class=\"reference internal\" href=\"class_packetpeer.html#class-packetpeer\"><span class=\"std std-ref\">PacketPeer</span></a> <strong>&lt;</strong> <a class=\"reference internal\" href=\"class_refcounted.html#class-refcounted\"><span class=\"std std-ref\">RefCounted</span></a> <strong>&lt;</strong> <a class=\"reference internal\" href=\"class_object.html#class-object\"><span class=\"std std-ref\">Object</span></a></p><p><strong>Inherited By:</strong> <a class=\"reference internal\" href=\"class_enetmultiplayerpeer.html#class-enetmultiplayerpeer\"><span class=\"std std-ref\">ENetMultiplayerPeer</span></a>, <a class=\"reference internal\" href=\"class_multiplayerpeerextension.html#class-multiplayerpeerextension\"><span class=\"std std-ref\">MultiplayerPeerExtension</span></a>, <a class=\"reference internal\" href=\"class_offlinemultiplayerpeer.html#class-offlinemultiplayerpeer\"><span class=\"std std-ref\">OfflineMultiplayerPeer</span></a>, <a class=\"reference internal\" href=\"class_webrtcmultiplayerpeer.html#class-webrtcmultiplayerpeer\"><span class=\"std std-ref\">WebRTCMultiplayerPeer</span></a>, <a class=\"reference internal\" href=\"class_websocketmultiplayerpeer.html#class-websocketmultiplayerpeer\"><span class=\"std std-ref\">WebSocketMultiplayerPeer</span></a></p><p>Abstract class for specialized <a class=\"reference internal\" href=\"class_packetpeer.html#class-packetpeer\"><span class=\"std std-ref\">PacketPeer</span></a>s used by the <a class=\"reference internal\" href=\"class_multiplayerapi.html#class-multiplayerapi\"><span class=\"std std-ref\">MultiplayerAPI</span></a>.</p>",
                "description": "\n\n<p>Manages the connection with one or more remote peers acting as server or client and assigning unique IDs to each of them. See also <a class=\"reference internal\" href=\"class_multiplayerapi.html#class-multiplayerapi\"><span class=\"std std-ref\">MultiplayerAPI</span></a>.</p>\n<p><strong>Note:</strong> The <a class=\"reference internal\" href=\"class_multiplayerapi.html#class-multiplayerapi\"><span class=\"std std-ref\">MultiplayerAPI</span></a> protocol is an implementation detail and isn't meant to be used by non-Godot servers. It may change without notice.</p>\n<p><strong>Note:</strong> When exporting to Android, make sure to enable the <code class=\"docutils literal notranslate\"><span class=\"pre\">INTERNET</span></code> permission in the Android export preset before exporting the project or using one-click deploy. Otherwise, network communication of any kind will be blocked by Android.</p>\n"
            },
            "class_multiplayerpeerextension": {
                "url": "https://docs.godotengine.org/en/4.1/classes/class_multiplayerpeerextension.html",
                "title": "MultiplayerPeerExtension",
                "blurb": "<p><strong>Inherits:</strong> <a class=\"reference internal\" href=\"class_multiplayerpeer.html#class-multiplayerpeer\"><span class=\"std std-ref\">MultiplayerPeer</span></a> <strong>&lt;</strong> <a class=\"reference internal\" href=\"class_packetpeer.html#class-packetpeer\"><span class=\"std std-ref\">PacketPeer</span></a> <strong>&lt;</strong> <a class=\"reference internal\" href=\"class_refcounted.html#class-refcounted\"><span class=\"std std-ref\">RefCounted</span></a> <strong>&lt;</strong> <a class=\"reference internal\" href=\"class_object.html#class-object\"><span class=\"std std-ref\">Object</span></a></p><p>Class that can be inherited to implement custom multiplayer API networking layers via GDExtension.</p>",
                "description": "\n\n<p>This class is designed to be inherited from a GDExtension plugin to implement custom networking layers for the multiplayer API (such as WebRTC). All the methods below <strong>must</strong> be implemented to have a working custom multiplayer implementation. See also <a class=\"reference internal\" href=\"class_multiplayerapi.html#class-multiplayerapi\"><span class=\"std std-ref\">MultiplayerAPI</span></a>.</p>\n"
            },
            "class_mutex": {
                "url": "https://docs.godotengine.org/en/4.1/classes/class_mutex.html",
                "title": "Mutex",
                "blurb": "<p><strong>Inherits:</strong> <a class=\"reference internal\" href=\"class_refcounted.html#class-refcounted\"><span class=\"std std-ref\">RefCounted</span></a> <strong>&lt;</strong> <a class=\"reference internal\" href=\"class_object.html#class-object\"><span class=\"std std-ref\">Object</span></a></p><p>A binary <a class=\"reference internal\" href=\"class_semaphore.html#class-semaphore\"><span class=\"std std-ref\">Semaphore</span></a> for synchronization of multiple <a class=\"reference internal\" href=\"class_thread.html#class-thread\"><span class=\"std std-ref\">Thread</span></a>s.</p>",
                "description": "\n\n<p>A synchronization mutex (mutual exclusion). This is used to synchronize multiple <a class=\"reference internal\" href=\"class_thread.html#class-thread\"><span class=\"std std-ref\">Thread</span></a>s, and is equivalent to a binary <a class=\"reference internal\" href=\"class_semaphore.html#class-semaphore\"><span class=\"std std-ref\">Semaphore</span></a>. It guarantees that only one thread can access a critical section at a time.</p>\n<p>This is a reentrant mutex, meaning that it can be locked multiple times by one thread, provided it also unlocks it as many times.</p>\n<p><strong>Warning:</strong> Mutexes must be used carefully to avoid deadlocks.</p>\n<p><strong>Warning:</strong> To ensure proper cleanup without crashes or deadlocks, the following conditions must be met:</p>\n<ul class=\"simple\">\n<li><p>When a <strong>Mutex</strong>'s reference count reaches zero and it is therefore destroyed, no threads (including the one on which the destruction will happen) must have it locked.</p></li>\n<li><p>When a <a class=\"reference internal\" href=\"class_thread.html#class-thread\"><span class=\"std std-ref\">Thread</span></a>'s reference count reaches zero and it is therefore destroyed, it must not have any mutex locked.</p></li>\n</ul>\n"
            },
            "class_navigationmeshgenerator": {
                "url": "https://docs.godotengine.org/en/4.1/classes/class_navigationmeshgenerator.html",
                "title": "NavigationMeshGenerator",
                "blurb": "<p><strong>Inherits:</strong> <a class=\"reference internal\" href=\"class_object.html#class-object\"><span class=\"std std-ref\">Object</span></a></p><p>Helper class for creating and clearing navigation meshes.</p>",
                "description": "\n\n<p>This class is responsible for creating and clearing 3D navigation meshes used as <a class=\"reference internal\" href=\"class_navigationmesh.html#class-navigationmesh\"><span class=\"std std-ref\">NavigationMesh</span></a> resources inside <a class=\"reference internal\" href=\"class_navigationregion3d.html#class-navigationregion3d\"><span class=\"std std-ref\">NavigationRegion3D</span></a>. The <strong>NavigationMeshGenerator</strong> has very limited to no use for 2D as the navigation mesh baking process expects 3D node types and 3D source geometry to parse.</p>\n<p>The entire navigation mesh baking is best done in a separate thread as the voxelization, collision tests and mesh optimization steps involved are very performance and time hungry operations.</p>\n<p>Navigation mesh baking happens in multiple steps and the result depends on 3D source geometry and properties of the <a class=\"reference internal\" href=\"class_navigationmesh.html#class-navigationmesh\"><span class=\"std std-ref\">NavigationMesh</span></a> resource. In the first step, starting from a root node and depending on <a class=\"reference internal\" href=\"class_navigationmesh.html#class-navigationmesh\"><span class=\"std std-ref\">NavigationMesh</span></a> properties all valid 3D source geometry nodes are collected from the <a class=\"reference internal\" href=\"class_scenetree.html#class-scenetree\"><span class=\"std std-ref\">SceneTree</span></a>. Second, all collected nodes are parsed for their relevant 3D geometry data and a combined 3D mesh is build. Due to the many different types of parsable objects, from normal <a class=\"reference internal\" href=\"class_meshinstance3d.html#class-meshinstance3d\"><span class=\"std std-ref\">MeshInstance3D</span></a>s to <a class=\"reference internal\" href=\"class_csgshape3d.html#class-csgshape3d\"><span class=\"std std-ref\">CSGShape3D</span></a>s or various <a class=\"reference internal\" href=\"class_collisionobject3d.html#class-collisionobject3d\"><span class=\"std std-ref\">CollisionObject3D</span></a>s, some operations to collect geometry data can trigger <a class=\"reference internal\" href=\"class_renderingserver.html#class-renderingserver\"><span class=\"std std-ref\">RenderingServer</span></a> and <a class=\"reference internal\" href=\"class_physicsserver3d.html#class-physicsserver3d\"><span class=\"std std-ref\">PhysicsServer3D</span></a> synchronizations. Server synchronization can have a negative effect on baking time or framerate as it often involves <a class=\"reference internal\" href=\"class_mutex.html#class-mutex\"><span class=\"std std-ref\">Mutex</span></a> locking for thread security. Many parsable objects and the continuous synchronization with other threaded Servers can increase the baking time significantly. On the other hand only a few but very large and complex objects will take some time to prepare for the Servers which can noticeably stall the next frame render. As a general rule the total number of parsable objects and their individual size and complexity should be balanced to avoid framerate issues or very long baking times. The combined mesh is then passed to the Recast Navigation Object to test the source geometry for walkable terrain suitable to <a class=\"reference internal\" href=\"class_navigationmesh.html#class-navigationmesh\"><span class=\"std std-ref\">NavigationMesh</span></a> agent properties by creating a voxel world around the meshes bounding area.</p>\n<p>The finalized navigation mesh is then returned and stored inside the <a class=\"reference internal\" href=\"class_navigationmesh.html#class-navigationmesh\"><span class=\"std std-ref\">NavigationMesh</span></a> for use as a resource inside <a class=\"reference internal\" href=\"class_navigationregion3d.html#class-navigationregion3d\"><span class=\"std std-ref\">NavigationRegion3D</span></a> nodes.</p>\n<p><strong>Note:</strong> Using meshes to not only define walkable surfaces but also obstruct navigation baking does not always work. The navigation baking has no concept of what is a geometry \"inside\" when dealing with mesh source geometry and this is intentional. Depending on current baking parameters, as soon as the obstructing mesh is large enough to fit a navigation mesh area inside, the baking will generate navigation mesh areas that are inside the obstructing source geometry mesh.</p>\n"
            },
            "class_navigationpathqueryparameters2d": {
                "url": "https://docs.godotengine.org/en/4.1/classes/class_navigationpathqueryparameters2d.html",
                "title": "NavigationPathQueryParameters2D",
                "blurb": "<p><strong>Inherits:</strong> <a class=\"reference internal\" href=\"class_refcounted.html#class-refcounted\"><span class=\"std std-ref\">RefCounted</span></a> <strong>&lt;</strong> <a class=\"reference internal\" href=\"class_object.html#class-object\"><span class=\"std std-ref\">Object</span></a></p><p>Provides parameters for 2D navigation path queries.</p>",
                "description": "\n\n<p>By changing various properties of this object, such as the start and target position, you can configure path queries to the <a class=\"reference internal\" href=\"class_navigationserver2d.html#class-navigationserver2d\"><span class=\"std std-ref\">NavigationServer2D</span></a>.</p>\n"
            },
            "class_navigationpathqueryparameters3d": {
                "url": "https://docs.godotengine.org/en/4.1/classes/class_navigationpathqueryparameters3d.html",
                "title": "NavigationPathQueryParameters3D",
                "blurb": "<p><strong>Inherits:</strong> <a class=\"reference internal\" href=\"class_refcounted.html#class-refcounted\"><span class=\"std std-ref\">RefCounted</span></a> <strong>&lt;</strong> <a class=\"reference internal\" href=\"class_object.html#class-object\"><span class=\"std std-ref\">Object</span></a></p><p>Provides parameters for 3D navigation path queries.</p>",
                "description": "\n\n<p>By changing various properties of this object, such as the start and target position, you can configure path queries to the <a class=\"reference internal\" href=\"class_navigationserver3d.html#class-navigationserver3d\"><span class=\"std std-ref\">NavigationServer3D</span></a>.</p>\n"
            },
            "class_navigationpathqueryresult2d": {
                "url": "https://docs.godotengine.org/en/4.1/classes/class_navigationpathqueryresult2d.html",
                "title": "NavigationPathQueryResult2D",
                "blurb": "<p><strong>Inherits:</strong> <a class=\"reference internal\" href=\"class_refcounted.html#class-refcounted\"><span class=\"std std-ref\">RefCounted</span></a> <strong>&lt;</strong> <a class=\"reference internal\" href=\"class_object.html#class-object\"><span class=\"std std-ref\">Object</span></a></p><p>Represents the result of a 2D pathfinding query.</p>",
                "description": "\n\n<p>This class stores the result of a 2D navigation path query from the <a class=\"reference internal\" href=\"class_navigationserver2d.html#class-navigationserver2d\"><span class=\"std std-ref\">NavigationServer2D</span></a>.</p>\n"
            },
            "class_navigationpathqueryresult3d": {
                "url": "https://docs.godotengine.org/en/4.1/classes/class_navigationpathqueryresult3d.html",
                "title": "NavigationPathQueryResult3D",
                "blurb": "<p><strong>Inherits:</strong> <a class=\"reference internal\" href=\"class_refcounted.html#class-refcounted\"><span class=\"std std-ref\">RefCounted</span></a> <strong>&lt;</strong> <a class=\"reference internal\" href=\"class_object.html#class-object\"><span class=\"std std-ref\">Object</span></a></p><p>Represents the result of a 3D pathfinding query.</p>",
                "description": "\n\n<p>This class stores the result of a 3D navigation path query from the <a class=\"reference internal\" href=\"class_navigationserver3d.html#class-navigationserver3d\"><span class=\"std std-ref\">NavigationServer3D</span></a>.</p>\n"
            },
            "class_navigationserver2d": {
                "url": "https://docs.godotengine.org/en/4.1/classes/class_navigationserver2d.html",
                "title": "NavigationServer2D",
                "blurb": "<p><strong>Inherits:</strong> <a class=\"reference internal\" href=\"class_object.html#class-object\"><span class=\"std std-ref\">Object</span></a></p><p>A server interface for low-level 2D navigation access.</p>",
                "description": "\n\n<p>NavigationServer2D is the server that handles navigation maps, regions and agents. It does not handle A* navigation from <a class=\"reference internal\" href=\"class_astar2d.html#class-astar2d\"><span class=\"std std-ref\">AStar2D</span></a> or <a class=\"reference internal\" href=\"class_astargrid2d.html#class-astargrid2d\"><span class=\"std std-ref\">AStarGrid2D</span></a>.</p>\n<p>Maps are made up of regions, which are made of navigation polygons. Together, they define the traversable areas in the 2D world.</p>\n<p><strong>Note:</strong> Most <strong>NavigationServer2D</strong> changes take effect after the next physics frame and not immediately. This includes all changes made to maps, regions or agents by navigation-related nodes in the scene tree or made through scripts.</p>\n<p>For two regions to be connected to each other, they must share a similar edge. An edge is considered connected to another if both of its two vertices are at a distance less than <code class=\"docutils literal notranslate\"><span class=\"pre\">edge_connection_margin</span></code> to the respective other edge's vertex.</p>\n<p>You may assign navigation layers to regions with <a class=\"reference internal\" href=\"#class-navigationserver2d-method-region-set-navigation-layers\"><span class=\"std std-ref\">region_set_navigation_layers</span></a>, which then can be checked upon when requesting a path with <a class=\"reference internal\" href=\"#class-navigationserver2d-method-map-get-path\"><span class=\"std std-ref\">map_get_path</span></a>. This can be used to allow or deny certain areas for some objects.</p>\n<p>To use the collision avoidance system, you may use agents. You can set an agent's target velocity, then the servers will emit a callback with a modified velocity.</p>\n<p><strong>Note:</strong> The collision avoidance system ignores regions. Using the modified velocity directly may move an agent outside of the traversable area. This is a limitation of the collision avoidance system, any more complex situation may require the use of the physics engine.</p>\n<p>This server keeps tracks of any call and executes them during the sync phase. This means that you can request any change to the map, using any thread, without worrying.</p>\n"
            },
            "class_navigationserver3d": {
                "url": "https://docs.godotengine.org/en/4.1/classes/class_navigationserver3d.html",
                "title": "NavigationServer3D",
                "blurb": "<p><strong>Inherits:</strong> <a class=\"reference internal\" href=\"class_object.html#class-object\"><span class=\"std std-ref\">Object</span></a></p><p>A server interface for low-level 3D navigation access.</p>",
                "description": "\n\n<p>NavigationServer2D is the server that handles navigation maps, regions and agents. It does not handle A* navigation from <a class=\"reference internal\" href=\"class_astar3d.html#class-astar3d\"><span class=\"std std-ref\">AStar3D</span></a>.</p>\n<p>Maps are made up of regions, which are made of navigation meshes. Together, they define the navigable areas in the 3D world.</p>\n<p><strong>Note:</strong> Most <strong>NavigationServer3D</strong> changes take effect after the next physics frame and not immediately. This includes all changes made to maps, regions or agents by navigation-related nodes in the scene tree or made through scripts.</p>\n<p>For two regions to be connected to each other, they must share a similar edge. An edge is considered connected to another if both of its two vertices are at a distance less than <code class=\"docutils literal notranslate\"><span class=\"pre\">edge_connection_margin</span></code> to the respective other edge's vertex.</p>\n<p>You may assign navigation layers to regions with <a class=\"reference internal\" href=\"#class-navigationserver3d-method-region-set-navigation-layers\"><span class=\"std std-ref\">region_set_navigation_layers</span></a>, which then can be checked upon when requesting a path with <a class=\"reference internal\" href=\"#class-navigationserver3d-method-map-get-path\"><span class=\"std std-ref\">map_get_path</span></a>. This can be used to allow or deny certain areas for some objects.</p>\n<p>To use the collision avoidance system, you may use agents. You can set an agent's target velocity, then the servers will emit a callback with a modified velocity.</p>\n<p><strong>Note:</strong> The collision avoidance system ignores regions. Using the modified velocity directly may move an agent outside of the traversable area. This is a limitation of the collision avoidance system, any more complex situation may require the use of the physics engine.</p>\n<p>This server keeps tracks of any call and executes them during the sync phase. This means that you can request any change to the map, using any thread, without worrying.</p>\n"
            },
            "class_node3dgizmo": {
                "url": "https://docs.godotengine.org/en/4.1/classes/class_node3dgizmo.html",
                "title": "Node3DGizmo",
                "blurb": "<p><strong>Inherits:</strong> <a class=\"reference internal\" href=\"class_refcounted.html#class-refcounted\"><span class=\"std std-ref\">RefCounted</span></a> <strong>&lt;</strong> <a class=\"reference internal\" href=\"class_object.html#class-object\"><span class=\"std std-ref\">Object</span></a></p><p><strong>Inherited By:</strong> <a class=\"reference internal\" href=\"class_editornode3dgizmo.html#class-editornode3dgizmo\"><span class=\"std std-ref\">EditorNode3DGizmo</span></a></p>",
                "description": null
            },
            "class_offlinemultiplayerpeer": {
                "url": "https://docs.godotengine.org/en/4.1/classes/class_offlinemultiplayerpeer.html",
                "title": "OfflineMultiplayerPeer",
                "blurb": "<p><strong>Inherits:</strong> <a class=\"reference internal\" href=\"class_multiplayerpeer.html#class-multiplayerpeer\"><span class=\"std std-ref\">MultiplayerPeer</span></a> <strong>&lt;</strong> <a class=\"reference internal\" href=\"class_packetpeer.html#class-packetpeer\"><span class=\"std std-ref\">PacketPeer</span></a> <strong>&lt;</strong> <a class=\"reference internal\" href=\"class_refcounted.html#class-refcounted\"><span class=\"std std-ref\">RefCounted</span></a> <strong>&lt;</strong> <a class=\"reference internal\" href=\"class_object.html#class-object\"><span class=\"std std-ref\">Object</span></a></p><p>A <a class=\"reference internal\" href=\"class_multiplayerpeer.html#class-multiplayerpeer\"><span class=\"std std-ref\">MultiplayerPeer</span></a> which is always connected and acts as a server.</p>",
                "description": "\n\n<p>This is the default <a class=\"reference internal\" href=\"class_multiplayerapi.html#class-multiplayerapi-property-multiplayer-peer\"><span class=\"std std-ref\">MultiplayerAPI.multiplayer_peer</span></a> for the <a class=\"reference internal\" href=\"class_node.html#class-node-property-multiplayer\"><span class=\"std std-ref\">Node.multiplayer</span></a>. It mimics the behavior of a server with no peers connected.</p>\n<p>This means that the <a class=\"reference internal\" href=\"class_scenetree.html#class-scenetree\"><span class=\"std std-ref\">SceneTree</span></a> will act as the multiplayer authority by default. Calls to <a class=\"reference internal\" href=\"class_multiplayerapi.html#class-multiplayerapi-method-is-server\"><span class=\"std std-ref\">MultiplayerAPI.is_server</span></a> will return <code class=\"docutils literal notranslate\"><span class=\"pre\">true</span></code>, and calls to <a class=\"reference internal\" href=\"class_multiplayerapi.html#class-multiplayerapi-method-get-unique-id\"><span class=\"std std-ref\">MultiplayerAPI.get_unique_id</span></a> will return <a class=\"reference internal\" href=\"class_multiplayerpeer.html#class-multiplayerpeer-constant-target-peer-server\"><span class=\"std std-ref\">MultiplayerPeer.TARGET_PEER_SERVER</span></a>.</p>\n"
            },
            "class_oggpacketsequenceplayback": {
                "url": "https://docs.godotengine.org/en/4.1/classes/class_oggpacketsequenceplayback.html",
                "title": "OggPacketSequencePlayback",
                "blurb": "<p><strong>Inherits:</strong> <a class=\"reference internal\" href=\"class_refcounted.html#class-refcounted\"><span class=\"std std-ref\">RefCounted</span></a> <strong>&lt;</strong> <a class=\"reference internal\" href=\"class_object.html#class-object\"><span class=\"std std-ref\">Object</span></a></p>",
                "description": null
            },
            "class_openxrinterface": {
                "url": "https://docs.godotengine.org/en/4.1/classes/class_openxrinterface.html",
                "title": "OpenXRInterface",
                "blurb": "<p><strong>Inherits:</strong> <a class=\"reference internal\" href=\"class_xrinterface.html#class-xrinterface\"><span class=\"std std-ref\">XRInterface</span></a> <strong>&lt;</strong> <a class=\"reference internal\" href=\"class_refcounted.html#class-refcounted\"><span class=\"std std-ref\">RefCounted</span></a> <strong>&lt;</strong> <a class=\"reference internal\" href=\"class_object.html#class-object\"><span class=\"std std-ref\">Object</span></a></p><p>Our OpenXR interface.</p>",
                "description": "\n\n<p>The OpenXR interface allows Godot to interact with OpenXR runtimes and make it possible to create XR experiences and games.</p>\n<p>Due to the needs of OpenXR this interface works slightly different than other plugin based XR interfaces. It needs to be initialized when Godot starts. You need to enable OpenXR, settings for this can be found in your games project settings under the XR heading. You do need to mark a viewport for use with XR in order for Godot to know which render result should be output to the headset.</p>\n"
            },
            "class_os": {
                "url": "https://docs.godotengine.org/en/4.1/classes/class_os.html",
                "title": "OS",
                "blurb": "<p><strong>Inherits:</strong> <a class=\"reference internal\" href=\"class_object.html#class-object\"><span class=\"std std-ref\">Object</span></a></p><p>Provides access to common operating system functionalities.</p>",
                "description": "\n\n<p>This class wraps the most common functionalities for communicating with the host operating system, such as the video driver, delays, environment variables, execution of binaries, command line, etc.</p>\n<p><strong>Note:</strong> In Godot 4, <strong>OS</strong> functions related to window management were moved to the <a class=\"reference internal\" href=\"class_displayserver.html#class-displayserver\"><span class=\"std std-ref\">DisplayServer</span></a> singleton.</p>\n"
            },
            "class_packeddatacontainerref": {
                "url": "https://docs.godotengine.org/en/4.1/classes/class_packeddatacontainerref.html",
                "title": "PackedDataContainerRef",
                "blurb": "<p><strong>Inherits:</strong> <a class=\"reference internal\" href=\"class_refcounted.html#class-refcounted\"><span class=\"std std-ref\">RefCounted</span></a> <strong>&lt;</strong> <a class=\"reference internal\" href=\"class_object.html#class-object\"><span class=\"std std-ref\">Object</span></a></p><p>An internal class used by <a class=\"reference internal\" href=\"class_packeddatacontainer.html#class-packeddatacontainer\"><span class=\"std std-ref\">PackedDataContainer</span></a> to pack nested arrays and dictionaries.</p>",
                "description": "\n\n<p>When packing nested containers using <a class=\"reference internal\" href=\"class_packeddatacontainer.html#class-packeddatacontainer\"><span class=\"std std-ref\">PackedDataContainer</span></a>, they are recursively packed into <strong>PackedDataContainerRef</strong> (only applies to <a class=\"reference internal\" href=\"class_array.html#class-array\"><span class=\"std std-ref\">Array</span></a> and <a class=\"reference internal\" href=\"class_dictionary.html#class-dictionary\"><span class=\"std std-ref\">Dictionary</span></a>). Their data can be retrieved the same way as from <a class=\"reference internal\" href=\"class_packeddatacontainer.html#class-packeddatacontainer\"><span class=\"std std-ref\">PackedDataContainer</span></a>.</p>\n<div class=\"highlight-gdscript notranslate\"><div class=\"highlight\"><pre><span></span><span class=\"k\">var</span> <span class=\"n\">packed</span> <span class=\"o\">=</span> <span class=\"n\">PackedDataContainer</span><span class=\"o\">.</span><span class=\"n\">new</span><span class=\"p\">()</span>\n<span class=\"n\">packed</span><span class=\"o\">.</span><span class=\"n\">pack</span><span class=\"p\">([</span><span class=\"mi\">1</span><span class=\"p\">,</span> <span class=\"mi\">2</span><span class=\"p\">,</span> <span class=\"mi\">3</span><span class=\"p\">,</span> <span class=\"p\">[</span><span class=\"s2\">\"abc\"</span><span class=\"p\">,</span> <span class=\"s2\">\"def\"</span><span class=\"p\">],</span> <span class=\"mi\">4</span><span class=\"p\">,</span> <span class=\"mi\">5</span><span class=\"p\">,</span> <span class=\"mi\">6</span><span class=\"p\">])</span>\n\n<span class=\"k k-ControlFlow\">for</span> <span class=\"n\">element</span> <span class=\"ow\">in</span> <span class=\"n\">packed</span><span class=\"p\">:</span>\n    <span class=\"k k-ControlFlow\">if</span> <span class=\"n\">element</span> <span class=\"k\">is</span> <span class=\"n\">PackedDataContainerRef</span><span class=\"p\">:</span>\n        <span class=\"k k-ControlFlow\">for</span> <span class=\"n\">subelement</span> <span class=\"ow\">in</span> <span class=\"n\">element</span><span class=\"p\">:</span>\n            <span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"s2\">\"::\"</span><span class=\"p\">,</span> <span class=\"n\">subelement</span><span class=\"p\">)</span>\n    <span class=\"k k-ControlFlow\">else</span><span class=\"p\">:</span>\n        <span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"n\">element</span><span class=\"p\">)</span>\n\n<span class=\"c1\"># Prints:</span>\n<span class=\"c1\"># 1</span>\n<span class=\"c1\"># 2</span>\n<span class=\"c1\"># 3</span>\n<span class=\"c1\"># ::abc</span>\n<span class=\"c1\"># ::def</span>\n<span class=\"c1\"># 4</span>\n<span class=\"c1\"># 5</span>\n<span class=\"c1\"># 6</span>\n</pre></div>\n</div>\n"
            },
            "class_packetpeer": {
                "url": "https://docs.godotengine.org/en/4.1/classes/class_packetpeer.html",
                "title": "PacketPeer",
                "blurb": "<p><strong>Inherits:</strong> <a class=\"reference internal\" href=\"class_refcounted.html#class-refcounted\"><span class=\"std std-ref\">RefCounted</span></a> <strong>&lt;</strong> <a class=\"reference internal\" href=\"class_object.html#class-object\"><span class=\"std std-ref\">Object</span></a></p><p><strong>Inherited By:</strong> <a class=\"reference internal\" href=\"class_enetpacketpeer.html#class-enetpacketpeer\"><span class=\"std std-ref\">ENetPacketPeer</span></a>, <a class=\"reference internal\" href=\"class_multiplayerpeer.html#class-multiplayerpeer\"><span class=\"std std-ref\">MultiplayerPeer</span></a>, <a class=\"reference internal\" href=\"class_packetpeerdtls.html#class-packetpeerdtls\"><span class=\"std std-ref\">PacketPeerDTLS</span></a>, <a class=\"reference internal\" href=\"class_packetpeerextension.html#class-packetpeerextension\"><span class=\"std std-ref\">PacketPeerExtension</span></a>, <a class=\"reference internal\" href=\"class_packetpeerstream.html#class-packetpeerstream\"><span class=\"std std-ref\">PacketPeerStream</span></a>, <a class=\"reference internal\" href=\"class_packetpeerudp.html#class-packetpeerudp\"><span class=\"std std-ref\">PacketPeerUDP</span></a>, <a class=\"reference internal\" href=\"class_webrtcdatachannel.html#class-webrtcdatachannel\"><span class=\"std std-ref\">WebRTCDataChannel</span></a>, <a class=\"reference internal\" href=\"class_websocketpeer.html#class-websocketpeer\"><span class=\"std std-ref\">WebSocketPeer</span></a></p><p>Abstraction and base class for packet-based protocols.</p>",
                "description": "\n\n<p>PacketPeer is an abstraction and base class for packet-based protocols (such as UDP). It provides an API for sending and receiving packets both as raw data or variables. This makes it easy to transfer data over a protocol, without having to encode data as low-level bytes or having to worry about network ordering.</p>\n<p><strong>Note:</strong> When exporting to Android, make sure to enable the <code class=\"docutils literal notranslate\"><span class=\"pre\">INTERNET</span></code> permission in the Android export preset before exporting the project or using one-click deploy. Otherwise, network communication of any kind will be blocked by Android.</p>\n"
            },
            "class_packetpeerdtls": {
                "url": "https://docs.godotengine.org/en/4.1/classes/class_packetpeerdtls.html",
                "title": "PacketPeerDTLS",
                "blurb": "<p><strong>Inherits:</strong> <a class=\"reference internal\" href=\"class_packetpeer.html#class-packetpeer\"><span class=\"std std-ref\">PacketPeer</span></a> <strong>&lt;</strong> <a class=\"reference internal\" href=\"class_refcounted.html#class-refcounted\"><span class=\"std std-ref\">RefCounted</span></a> <strong>&lt;</strong> <a class=\"reference internal\" href=\"class_object.html#class-object\"><span class=\"std std-ref\">Object</span></a></p><p>DTLS packet peer.</p>",
                "description": "\n\n<p>This class represents a DTLS peer connection. It can be used to connect to a DTLS server, and is returned by <a class=\"reference internal\" href=\"class_dtlsserver.html#class-dtlsserver-method-take-connection\"><span class=\"std std-ref\">DTLSServer.take_connection</span></a>.</p>\n<p><strong>Note:</strong> When exporting to Android, make sure to enable the <code class=\"docutils literal notranslate\"><span class=\"pre\">INTERNET</span></code> permission in the Android export preset before exporting the project or using one-click deploy. Otherwise, network communication of any kind will be blocked by Android.</p>\n<p><strong>Warning:</strong> TLS certificate revocation and certificate pinning are currently not supported. Revoked certificates are accepted as long as they are otherwise valid. If this is a concern, you may want to use automatically managed certificates with a short validity period.</p>\n"
            },
            "class_packetpeerextension": {
                "url": "https://docs.godotengine.org/en/4.1/classes/class_packetpeerextension.html",
                "title": "PacketPeerExtension",
                "blurb": "<p><strong>Inherits:</strong> <a class=\"reference internal\" href=\"class_packetpeer.html#class-packetpeer\"><span class=\"std std-ref\">PacketPeer</span></a> <strong>&lt;</strong> <a class=\"reference internal\" href=\"class_refcounted.html#class-refcounted\"><span class=\"std std-ref\">RefCounted</span></a> <strong>&lt;</strong> <a class=\"reference internal\" href=\"class_object.html#class-object\"><span class=\"std std-ref\">Object</span></a></p>",
                "description": null
            },
            "class_packetpeerstream": {
                "url": "https://docs.godotengine.org/en/4.1/classes/class_packetpeerstream.html",
                "title": "PacketPeerStream",
                "blurb": "<p><strong>Inherits:</strong> <a class=\"reference internal\" href=\"class_packetpeer.html#class-packetpeer\"><span class=\"std std-ref\">PacketPeer</span></a> <strong>&lt;</strong> <a class=\"reference internal\" href=\"class_refcounted.html#class-refcounted\"><span class=\"std std-ref\">RefCounted</span></a> <strong>&lt;</strong> <a class=\"reference internal\" href=\"class_object.html#class-object\"><span class=\"std std-ref\">Object</span></a></p><p>Wrapper to use a PacketPeer over a StreamPeer.</p>",
                "description": "\n\n<p>PacketStreamPeer provides a wrapper for working using packets over a stream. This allows for using packet based code with StreamPeers. PacketPeerStream implements a custom protocol over the StreamPeer, so the user should not read or write to the wrapped StreamPeer directly.</p>\n<p><strong>Note:</strong> When exporting to Android, make sure to enable the <code class=\"docutils literal notranslate\"><span class=\"pre\">INTERNET</span></code> permission in the Android export preset before exporting the project or using one-click deploy. Otherwise, network communication of any kind will be blocked by Android.</p>\n"
            },
            "class_packetpeerudp": {
                "url": "https://docs.godotengine.org/en/4.1/classes/class_packetpeerudp.html",
                "title": "PacketPeerUDP",
                "blurb": "<p><strong>Inherits:</strong> <a class=\"reference internal\" href=\"class_packetpeer.html#class-packetpeer\"><span class=\"std std-ref\">PacketPeer</span></a> <strong>&lt;</strong> <a class=\"reference internal\" href=\"class_refcounted.html#class-refcounted\"><span class=\"std std-ref\">RefCounted</span></a> <strong>&lt;</strong> <a class=\"reference internal\" href=\"class_object.html#class-object\"><span class=\"std std-ref\">Object</span></a></p><p>UDP packet peer.</p>",
                "description": "\n\n<p>UDP packet peer. Can be used to send raw UDP packets as well as <a class=\"reference internal\" href=\"class_variant.html#class-variant\"><span class=\"std std-ref\">Variant</span></a>s.</p>\n<p><strong>Note:</strong> When exporting to Android, make sure to enable the <code class=\"docutils literal notranslate\"><span class=\"pre\">INTERNET</span></code> permission in the Android export preset before exporting the project or using one-click deploy. Otherwise, network communication of any kind will be blocked by Android.</p>\n"
            },
            "class_pckpacker": {
                "url": "https://docs.godotengine.org/en/4.1/classes/class_pckpacker.html",
                "title": "PCKPacker",
                "blurb": "<p><strong>Inherits:</strong> <a class=\"reference internal\" href=\"class_refcounted.html#class-refcounted\"><span class=\"std std-ref\">RefCounted</span></a> <strong>&lt;</strong> <a class=\"reference internal\" href=\"class_object.html#class-object\"><span class=\"std std-ref\">Object</span></a></p><p>Creates packages that can be loaded into a running project.</p>",
                "description": "\n\n<p>The <strong>PCKPacker</strong> is used to create packages that can be loaded into a running project using <a class=\"reference internal\" href=\"class_projectsettings.html#class-projectsettings-method-load-resource-pack\"><span class=\"std std-ref\">ProjectSettings.load_resource_pack</span></a>.</p>\n<div class=\"sphinx-tabs docutils container\">\n<div aria-label=\"Tabbed content\" class=\"closeable\" role=\"tablist\"><button aria-controls=\"panel-0-R0RTY3JpcHQ=\" aria-selected=\"true\" class=\"sphinx-tabs-tab code-tab group-tab\" id=\"tab-0-R0RTY3JpcHQ=\" name=\"R0RTY3JpcHQ=\" role=\"tab\" tabindex=\"0\">GDScript</button><button aria-controls=\"panel-0-QyM=\" aria-selected=\"false\" class=\"sphinx-tabs-tab code-tab group-tab\" id=\"tab-0-QyM=\" name=\"QyM=\" role=\"tab\" tabindex=\"-1\">C#</button></div><div aria-labelledby=\"tab-0-R0RTY3JpcHQ=\" class=\"sphinx-tabs-panel code-tab group-tab\" id=\"panel-0-R0RTY3JpcHQ=\" name=\"R0RTY3JpcHQ=\" role=\"tabpanel\" tabindex=\"0\"><div class=\"highlight-gdscript notranslate\"><div class=\"highlight\"><pre><span></span><span class=\"k\">var</span> <span class=\"n\">packer</span> <span class=\"o\">=</span> <span class=\"n\">PCKPacker</span><span class=\"o\">.</span><span class=\"n\">new</span><span class=\"p\">()</span>\n<span class=\"n\">packer</span><span class=\"o\">.</span><span class=\"n\">pck_start</span><span class=\"p\">(</span><span class=\"s2\">\"test.pck\"</span><span class=\"p\">)</span>\n<span class=\"n\">packer</span><span class=\"o\">.</span><span class=\"n\">add_file</span><span class=\"p\">(</span><span class=\"s2\">\"res://text.txt\"</span><span class=\"p\">,</span> <span class=\"s2\">\"text.txt\"</span><span class=\"p\">)</span>\n<span class=\"n\">packer</span><span class=\"o\">.</span><span class=\"n\">flush</span><span class=\"p\">()</span>\n</pre></div>\n</div>\n</div><div aria-labelledby=\"tab-0-QyM=\" class=\"sphinx-tabs-panel code-tab group-tab\" hidden=\"true\" id=\"panel-0-QyM=\" name=\"QyM=\" role=\"tabpanel\" tabindex=\"0\"><div class=\"highlight-csharp notranslate\"><div class=\"highlight\"><pre><span></span><span class=\"kt\">var</span><span class=\"w\"> </span><span class=\"n\">packer</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"k\">new</span><span class=\"w\"> </span><span class=\"n\">PCKPacker</span><span class=\"p\">();</span>\n<span class=\"n\">packer</span><span class=\"p\">.</span><span class=\"n\">PckStart</span><span class=\"p\">(</span><span class=\"s\">\"test.pck\"</span><span class=\"p\">);</span>\n<span class=\"n\">packer</span><span class=\"p\">.</span><span class=\"n\">AddFile</span><span class=\"p\">(</span><span class=\"s\">\"res://text.txt\"</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"s\">\"text.txt\"</span><span class=\"p\">);</span>\n<span class=\"n\">packer</span><span class=\"p\">.</span><span class=\"n\">Flush</span><span class=\"p\">();</span>\n</pre></div>\n</div>\n</div></div>\n<p>The above <strong>PCKPacker</strong> creates package <code class=\"docutils literal notranslate\"><span class=\"pre\">test.pck</span></code>, then adds a file named <code class=\"docutils literal notranslate\"><span class=\"pre\">text.txt</span></code> at the root of the package.</p>\n"
            },
            "class_performance": {
                "url": "https://docs.godotengine.org/en/4.1/classes/class_performance.html",
                "title": "Performance",
                "blurb": "<p><strong>Inherits:</strong> <a class=\"reference internal\" href=\"class_object.html#class-object\"><span class=\"std std-ref\">Object</span></a></p><p>Exposes performance-related data.</p>",
                "description": "\n\n<p>This class provides access to a number of different monitors related to performance, such as memory usage, draw calls, and FPS. These are the same as the values displayed in the <strong>Monitor</strong> tab in the editor's <strong>Debugger</strong> panel. By using the <a class=\"reference internal\" href=\"#class-performance-method-get-monitor\"><span class=\"std std-ref\">get_monitor</span></a> method of this class, you can access this data from your code.</p>\n<p>You can add custom monitors using the <a class=\"reference internal\" href=\"#class-performance-method-add-custom-monitor\"><span class=\"std std-ref\">add_custom_monitor</span></a> method. Custom monitors are available in <strong>Monitor</strong> tab in the editor's <strong>Debugger</strong> panel together with built-in monitors.</p>\n<p><strong>Note:</strong> Some of the built-in monitors are only available in debug mode and will always return <code class=\"docutils literal notranslate\"><span class=\"pre\">0</span></code> when used in a project exported in release mode.</p>\n<p><strong>Note:</strong> Some of the built-in monitors are not updated in real-time for performance reasons, so there may be a delay of up to 1 second between changes.</p>\n<p><strong>Note:</strong> Custom monitors do not support negative values. Negative values are clamped to 0.</p>\n"
            },
            "class_physicsdirectbodystate2d": {
                "url": "https://docs.godotengine.org/en/4.1/classes/class_physicsdirectbodystate2d.html",
                "title": "PhysicsDirectBodyState2D",
                "blurb": "<p><strong>Inherits:</strong> <a class=\"reference internal\" href=\"class_object.html#class-object\"><span class=\"std std-ref\">Object</span></a></p><p><strong>Inherited By:</strong> <a class=\"reference internal\" href=\"class_physicsdirectbodystate2dextension.html#class-physicsdirectbodystate2dextension\"><span class=\"std std-ref\">PhysicsDirectBodyState2DExtension</span></a></p><p>Provides direct access to a physics body in the <a class=\"reference internal\" href=\"class_physicsserver2d.html#class-physicsserver2d\"><span class=\"std std-ref\">PhysicsServer2D</span></a>.</p>",
                "description": "\n\n<p>Provides direct access to a physics body in the <a class=\"reference internal\" href=\"class_physicsserver2d.html#class-physicsserver2d\"><span class=\"std std-ref\">PhysicsServer2D</span></a>, allowing safe changes to physics properties. This object is passed via the direct state callback of <a class=\"reference internal\" href=\"class_rigidbody2d.html#class-rigidbody2d\"><span class=\"std std-ref\">RigidBody2D</span></a>, and is intended for changing the direct state of that body. See <a class=\"reference internal\" href=\"class_rigidbody2d.html#class-rigidbody2d-method-integrate-forces\"><span class=\"std std-ref\">RigidBody2D._integrate_forces</span></a>.</p>\n"
            },
            "class_physicsdirectbodystate2dextension": {
                "url": "https://docs.godotengine.org/en/4.1/classes/class_physicsdirectbodystate2dextension.html",
                "title": "PhysicsDirectBodyState2DExtension",
                "blurb": "<p><strong>Inherits:</strong> <a class=\"reference internal\" href=\"class_physicsdirectbodystate2d.html#class-physicsdirectbodystate2d\"><span class=\"std std-ref\">PhysicsDirectBodyState2D</span></a> <strong>&lt;</strong> <a class=\"reference internal\" href=\"class_object.html#class-object\"><span class=\"std std-ref\">Object</span></a></p><p>Provides virtual methods that can be overridden to create custom <a class=\"reference internal\" href=\"class_physicsdirectbodystate2d.html#class-physicsdirectbodystate2d\"><span class=\"std std-ref\">PhysicsDirectBodyState2D</span></a> implementations.</p>",
                "description": "\n\n<p>This class extends <a class=\"reference internal\" href=\"class_physicsdirectbodystate2d.html#class-physicsdirectbodystate2d\"><span class=\"std std-ref\">PhysicsDirectBodyState2D</span></a> by providing additional virtual methods that can be overridden. When these methods are overridden, they will be called instead of the internal methods of the physics server.</p>\n<p>Intended for use with GDExtension to create custom implementations of <a class=\"reference internal\" href=\"class_physicsdirectbodystate2d.html#class-physicsdirectbodystate2d\"><span class=\"std std-ref\">PhysicsDirectBodyState2D</span></a>.</p>\n"
            },
            "class_physicsdirectbodystate3d": {
                "url": "https://docs.godotengine.org/en/4.1/classes/class_physicsdirectbodystate3d.html",
                "title": "PhysicsDirectBodyState3D",
                "blurb": "<p><strong>Inherits:</strong> <a class=\"reference internal\" href=\"class_object.html#class-object\"><span class=\"std std-ref\">Object</span></a></p><p><strong>Inherited By:</strong> <a class=\"reference internal\" href=\"class_physicsdirectbodystate3dextension.html#class-physicsdirectbodystate3dextension\"><span class=\"std std-ref\">PhysicsDirectBodyState3DExtension</span></a></p><p>Provides direct access to a physics body in the <a class=\"reference internal\" href=\"class_physicsserver3d.html#class-physicsserver3d\"><span class=\"std std-ref\">PhysicsServer3D</span></a>.</p>",
                "description": "\n\n<p>Provides direct access to a physics body in the <a class=\"reference internal\" href=\"class_physicsserver3d.html#class-physicsserver3d\"><span class=\"std std-ref\">PhysicsServer3D</span></a>, allowing safe changes to physics properties. This object is passed via the direct state callback of <a class=\"reference internal\" href=\"class_rigidbody3d.html#class-rigidbody3d\"><span class=\"std std-ref\">RigidBody3D</span></a>, and is intended for changing the direct state of that body. See <a class=\"reference internal\" href=\"class_rigidbody3d.html#class-rigidbody3d-method-integrate-forces\"><span class=\"std std-ref\">RigidBody3D._integrate_forces</span></a>.</p>\n"
            },
            "class_physicsdirectbodystate3dextension": {
                "url": "https://docs.godotengine.org/en/4.1/classes/class_physicsdirectbodystate3dextension.html",
                "title": "PhysicsDirectBodyState3DExtension",
                "blurb": "<p><strong>Inherits:</strong> <a class=\"reference internal\" href=\"class_physicsdirectbodystate3d.html#class-physicsdirectbodystate3d\"><span class=\"std std-ref\">PhysicsDirectBodyState3D</span></a> <strong>&lt;</strong> <a class=\"reference internal\" href=\"class_object.html#class-object\"><span class=\"std std-ref\">Object</span></a></p><p>Provides virtual methods that can be overridden to create custom <a class=\"reference internal\" href=\"class_physicsdirectbodystate3d.html#class-physicsdirectbodystate3d\"><span class=\"std std-ref\">PhysicsDirectBodyState3D</span></a> implementations.</p>",
                "description": "\n\n<p>This class extends <a class=\"reference internal\" href=\"class_physicsdirectbodystate3d.html#class-physicsdirectbodystate3d\"><span class=\"std std-ref\">PhysicsDirectBodyState3D</span></a> by providing additional virtual methods that can be overridden. When these methods are overridden, they will be called instead of the internal methods of the physics server.</p>\n<p>Intended for use with GDExtension to create custom implementations of <a class=\"reference internal\" href=\"class_physicsdirectbodystate3d.html#class-physicsdirectbodystate3d\"><span class=\"std std-ref\">PhysicsDirectBodyState3D</span></a>.</p>\n"
            },
            "class_physicsdirectspacestate2d": {
                "url": "https://docs.godotengine.org/en/4.1/classes/class_physicsdirectspacestate2d.html",
                "title": "PhysicsDirectSpaceState2D",
                "blurb": "<p><strong>Inherits:</strong> <a class=\"reference internal\" href=\"class_object.html#class-object\"><span class=\"std std-ref\">Object</span></a></p><p><strong>Inherited By:</strong> <a class=\"reference internal\" href=\"class_physicsdirectspacestate2dextension.html#class-physicsdirectspacestate2dextension\"><span class=\"std std-ref\">PhysicsDirectSpaceState2DExtension</span></a></p><p>Provides direct access to a physics space in the <a class=\"reference internal\" href=\"class_physicsserver2d.html#class-physicsserver2d\"><span class=\"std std-ref\">PhysicsServer2D</span></a>.</p>",
                "description": "\n\n<p>Provides direct access to a physics space in the <a class=\"reference internal\" href=\"class_physicsserver2d.html#class-physicsserver2d\"><span class=\"std std-ref\">PhysicsServer2D</span></a>. It's used mainly to do queries against objects and areas residing in a given space.</p>\n"
            },
            "class_physicsdirectspacestate2dextension": {
                "url": "https://docs.godotengine.org/en/4.1/classes/class_physicsdirectspacestate2dextension.html",
                "title": "PhysicsDirectSpaceState2DExtension",
                "blurb": "<p><strong>Inherits:</strong> <a class=\"reference internal\" href=\"class_physicsdirectspacestate2d.html#class-physicsdirectspacestate2d\"><span class=\"std std-ref\">PhysicsDirectSpaceState2D</span></a> <strong>&lt;</strong> <a class=\"reference internal\" href=\"class_object.html#class-object\"><span class=\"std std-ref\">Object</span></a></p><p>Provides virtual methods that can be overridden to create custom <a class=\"reference internal\" href=\"class_physicsdirectspacestate2d.html#class-physicsdirectspacestate2d\"><span class=\"std std-ref\">PhysicsDirectSpaceState2D</span></a> implementations.</p>",
                "description": "\n\n<p>This class extends <a class=\"reference internal\" href=\"class_physicsdirectspacestate2d.html#class-physicsdirectspacestate2d\"><span class=\"std std-ref\">PhysicsDirectSpaceState2D</span></a> by providing additional virtual methods that can be overridden. When these methods are overridden, they will be called instead of the internal methods of the physics server.</p>\n<p>Intended for use with GDExtension to create custom implementations of <a class=\"reference internal\" href=\"class_physicsdirectspacestate2d.html#class-physicsdirectspacestate2d\"><span class=\"std std-ref\">PhysicsDirectSpaceState2D</span></a>.</p>\n"
            },
            "class_physicsdirectspacestate3d": {
                "url": "https://docs.godotengine.org/en/4.1/classes/class_physicsdirectspacestate3d.html",
                "title": "PhysicsDirectSpaceState3D",
                "blurb": "<p><strong>Inherits:</strong> <a class=\"reference internal\" href=\"class_object.html#class-object\"><span class=\"std std-ref\">Object</span></a></p><p><strong>Inherited By:</strong> <a class=\"reference internal\" href=\"class_physicsdirectspacestate3dextension.html#class-physicsdirectspacestate3dextension\"><span class=\"std std-ref\">PhysicsDirectSpaceState3DExtension</span></a></p><p>Provides direct access to a physics space in the <a class=\"reference internal\" href=\"class_physicsserver3d.html#class-physicsserver3d\"><span class=\"std std-ref\">PhysicsServer3D</span></a>.</p>",
                "description": "\n\n<p>Provides direct access to a physics space in the <a class=\"reference internal\" href=\"class_physicsserver3d.html#class-physicsserver3d\"><span class=\"std std-ref\">PhysicsServer3D</span></a>. It's used mainly to do queries against objects and areas residing in a given space.</p>\n"
            },
            "class_physicsdirectspacestate3dextension": {
                "url": "https://docs.godotengine.org/en/4.1/classes/class_physicsdirectspacestate3dextension.html",
                "title": "PhysicsDirectSpaceState3DExtension",
                "blurb": "<p><strong>Inherits:</strong> <a class=\"reference internal\" href=\"class_physicsdirectspacestate3d.html#class-physicsdirectspacestate3d\"><span class=\"std std-ref\">PhysicsDirectSpaceState3D</span></a> <strong>&lt;</strong> <a class=\"reference internal\" href=\"class_object.html#class-object\"><span class=\"std std-ref\">Object</span></a></p><p>Provides virtual methods that can be overridden to create custom <a class=\"reference internal\" href=\"class_physicsdirectspacestate3d.html#class-physicsdirectspacestate3d\"><span class=\"std std-ref\">PhysicsDirectSpaceState3D</span></a> implementations.</p>",
                "description": "\n\n<p>This class extends <a class=\"reference internal\" href=\"class_physicsdirectspacestate3d.html#class-physicsdirectspacestate3d\"><span class=\"std std-ref\">PhysicsDirectSpaceState3D</span></a> by providing additional virtual methods that can be overridden. When these methods are overridden, they will be called instead of the internal methods of the physics server.</p>\n<p>Intended for use with GDExtension to create custom implementations of <a class=\"reference internal\" href=\"class_physicsdirectspacestate3d.html#class-physicsdirectspacestate3d\"><span class=\"std std-ref\">PhysicsDirectSpaceState3D</span></a>.</p>\n"
            },
            "class_physicspointqueryparameters2d": {
                "url": "https://docs.godotengine.org/en/4.1/classes/class_physicspointqueryparameters2d.html",
                "title": "PhysicsPointQueryParameters2D",
                "blurb": "<p><strong>Inherits:</strong> <a class=\"reference internal\" href=\"class_refcounted.html#class-refcounted\"><span class=\"std std-ref\">RefCounted</span></a> <strong>&lt;</strong> <a class=\"reference internal\" href=\"class_object.html#class-object\"><span class=\"std std-ref\">Object</span></a></p><p>Provides parameters for <a class=\"reference internal\" href=\"class_physicsdirectspacestate2d.html#class-physicsdirectspacestate2d-method-intersect-point\"><span class=\"std std-ref\">PhysicsDirectSpaceState2D.intersect_point</span></a>.</p>",
                "description": "\n\n<p>By changing various properties of this object, such as the point position, you can configure the parameters for <a class=\"reference internal\" href=\"class_physicsdirectspacestate2d.html#class-physicsdirectspacestate2d-method-intersect-point\"><span class=\"std std-ref\">PhysicsDirectSpaceState2D.intersect_point</span></a>.</p>\n"
            },
            "class_physicspointqueryparameters3d": {
                "url": "https://docs.godotengine.org/en/4.1/classes/class_physicspointqueryparameters3d.html",
                "title": "PhysicsPointQueryParameters3D",
                "blurb": "<p><strong>Inherits:</strong> <a class=\"reference internal\" href=\"class_refcounted.html#class-refcounted\"><span class=\"std std-ref\">RefCounted</span></a> <strong>&lt;</strong> <a class=\"reference internal\" href=\"class_object.html#class-object\"><span class=\"std std-ref\">Object</span></a></p><p>Provides parameters for <a class=\"reference internal\" href=\"class_physicsdirectspacestate3d.html#class-physicsdirectspacestate3d-method-intersect-point\"><span class=\"std std-ref\">PhysicsDirectSpaceState3D.intersect_point</span></a>.</p>",
                "description": "\n\n<p>By changing various properties of this object, such as the point position, you can configure the parameters for <a class=\"reference internal\" href=\"class_physicsdirectspacestate3d.html#class-physicsdirectspacestate3d-method-intersect-point\"><span class=\"std std-ref\">PhysicsDirectSpaceState3D.intersect_point</span></a>.</p>\n"
            },
            "class_physicsrayqueryparameters2d": {
                "url": "https://docs.godotengine.org/en/4.1/classes/class_physicsrayqueryparameters2d.html",
                "title": "PhysicsRayQueryParameters2D",
                "blurb": "<p><strong>Inherits:</strong> <a class=\"reference internal\" href=\"class_refcounted.html#class-refcounted\"><span class=\"std std-ref\">RefCounted</span></a> <strong>&lt;</strong> <a class=\"reference internal\" href=\"class_object.html#class-object\"><span class=\"std std-ref\">Object</span></a></p><p>Provides parameters for <a class=\"reference internal\" href=\"class_physicsdirectspacestate2d.html#class-physicsdirectspacestate2d-method-intersect-ray\"><span class=\"std std-ref\">PhysicsDirectSpaceState2D.intersect_ray</span></a>.</p>",
                "description": "\n\n<p>By changing various properties of this object, such as the ray position, you can configure the parameters for <a class=\"reference internal\" href=\"class_physicsdirectspacestate2d.html#class-physicsdirectspacestate2d-method-intersect-ray\"><span class=\"std std-ref\">PhysicsDirectSpaceState2D.intersect_ray</span></a>.</p>\n"
            },
            "class_physicsrayqueryparameters3d": {
                "url": "https://docs.godotengine.org/en/4.1/classes/class_physicsrayqueryparameters3d.html",
                "title": "PhysicsRayQueryParameters3D",
                "blurb": "<p><strong>Inherits:</strong> <a class=\"reference internal\" href=\"class_refcounted.html#class-refcounted\"><span class=\"std std-ref\">RefCounted</span></a> <strong>&lt;</strong> <a class=\"reference internal\" href=\"class_object.html#class-object\"><span class=\"std std-ref\">Object</span></a></p><p>Provides parameters for <a class=\"reference internal\" href=\"class_physicsdirectspacestate3d.html#class-physicsdirectspacestate3d-method-intersect-ray\"><span class=\"std std-ref\">PhysicsDirectSpaceState3D.intersect_ray</span></a>.</p>",
                "description": "\n\n<p>By changing various properties of this object, such as the ray position, you can configure the parameters for <a class=\"reference internal\" href=\"class_physicsdirectspacestate3d.html#class-physicsdirectspacestate3d-method-intersect-ray\"><span class=\"std std-ref\">PhysicsDirectSpaceState3D.intersect_ray</span></a>.</p>\n"
            },
            "class_physicsserver2d": {
                "url": "https://docs.godotengine.org/en/4.1/classes/class_physicsserver2d.html",
                "title": "PhysicsServer2D",
                "blurb": "<p><strong>Inherits:</strong> <a class=\"reference internal\" href=\"class_object.html#class-object\"><span class=\"std std-ref\">Object</span></a></p><p><strong>Inherited By:</strong> <a class=\"reference internal\" href=\"class_physicsserver2dextension.html#class-physicsserver2dextension\"><span class=\"std std-ref\">PhysicsServer2DExtension</span></a></p><p>A server interface for low-level 2D physics access.</p>",
                "description": "\n\n<p>PhysicsServer2D is the server responsible for all 2D physics. It can directly create and manipulate all physics objects:</p>\n<ul class=\"simple\">\n<li><p>A <em>space</em> is a self-contained world for a physics simulation. It contains bodies, areas, and joints. Its state can be queried for collision and intersection information, and several parameters of the simulation can be modified.</p></li>\n<li><p>A <em>shape</em> is a geometric shape such as a circle, a rectangle, a capsule, or a polygon. It can be used for collision detection by adding it to a body/area, possibly with an extra transformation relative to the body/area's origin. Bodies/areas can have multiple (transformed) shapes added to them, and a single shape can be added to bodies/areas multiple times with different local transformations.</p></li>\n<li><p>A <em>body</em> is a physical object which can be in static, kinematic, or rigid mode. Its state (such as position and velocity) can be queried and updated. A force integration callback can be set to customize the body's physics.</p></li>\n<li><p>An <em>area</em> is a region in space which can be used to detect bodies and areas entering and exiting it. A body monitoring callback can be set to report entering/exiting body shapes, and similarly an area monitoring callback can be set. Gravity and damping can be overridden within the area by setting area parameters.</p></li>\n<li><p>A <em>joint</em> is a constraint, either between two bodies or on one body relative to a point. Parameters such as the joint bias and the rest length of a spring joint can be adjusted.</p></li>\n</ul>\n<p>Physics objects in <strong>PhysicsServer2D</strong> may be created and manipulated independently; they do not have to be tied to nodes in the scene tree.</p>\n<p><strong>Note:</strong> All the 2D physics nodes use the physics server internally. Adding a physics node to the scene tree will cause a corresponding physics object to be created in the physics server. A rigid body node registers a callback that updates the node's transform with the transform of the respective body object in the physics server (every physics update). An area node registers a callback to inform the area node about overlaps with the respective area object in the physics server. The raycast node queries the direct state of the relevant space in the physics server.</p>\n"
            },
            "class_physicsserver2dextension": {
                "url": "https://docs.godotengine.org/en/4.1/classes/class_physicsserver2dextension.html",
                "title": "PhysicsServer2DExtension",
                "blurb": "<p><strong>Inherits:</strong> <a class=\"reference internal\" href=\"class_physicsserver2d.html#class-physicsserver2d\"><span class=\"std std-ref\">PhysicsServer2D</span></a> <strong>&lt;</strong> <a class=\"reference internal\" href=\"class_object.html#class-object\"><span class=\"std std-ref\">Object</span></a></p><p>Provides virtual methods that can be overridden to create custom <a class=\"reference internal\" href=\"class_physicsserver2d.html#class-physicsserver2d\"><span class=\"std std-ref\">PhysicsServer2D</span></a> implementations.</p>",
                "description": "\n\n<p>This class extends <a class=\"reference internal\" href=\"class_physicsserver2d.html#class-physicsserver2d\"><span class=\"std std-ref\">PhysicsServer2D</span></a> by providing additional virtual methods that can be overridden. When these methods are overridden, they will be called instead of the internal methods of the physics server.</p>\n<p>Intended for use with GDExtension to create custom implementations of <a class=\"reference internal\" href=\"class_physicsserver2d.html#class-physicsserver2d\"><span class=\"std std-ref\">PhysicsServer2D</span></a>.</p>\n"
            },
            "class_physicsserver2dmanager": {
                "url": "https://docs.godotengine.org/en/4.1/classes/class_physicsserver2dmanager.html",
                "title": "PhysicsServer2DManager",
                "blurb": "<p><strong>Inherits:</strong> <a class=\"reference internal\" href=\"class_object.html#class-object\"><span class=\"std std-ref\">Object</span></a></p><p>A singleton for managing <a class=\"reference internal\" href=\"class_physicsserver2d.html#class-physicsserver2d\"><span class=\"std std-ref\">PhysicsServer2D</span></a> implementations.</p>",
                "description": "\n\n<p><strong>PhysicsServer2DManager</strong> is the API for registering <a class=\"reference internal\" href=\"class_physicsserver2d.html#class-physicsserver2d\"><span class=\"std std-ref\">PhysicsServer2D</span></a> implementations and for setting the default implementation.</p>\n<p><strong>Note:</strong> It is not possible to switch physics servers at runtime. This class is only used on startup at the server initialization level, by Godot itself and possibly by GDExtensions.</p>\n"
            },
            "class_physicsserver3d": {
                "url": "https://docs.godotengine.org/en/4.1/classes/class_physicsserver3d.html",
                "title": "PhysicsServer3D",
                "blurb": "<p><strong>Inherits:</strong> <a class=\"reference internal\" href=\"class_object.html#class-object\"><span class=\"std std-ref\">Object</span></a></p><p><strong>Inherited By:</strong> <a class=\"reference internal\" href=\"class_physicsserver3dextension.html#class-physicsserver3dextension\"><span class=\"std std-ref\">PhysicsServer3DExtension</span></a></p><p>A server interface for low-level 3D physics access.</p>",
                "description": "\n\n<p>PhysicsServer2D is the server responsible for all 2D physics. It can directly create and manipulate all physics objects:</p>\n<ul class=\"simple\">\n<li><p>A <em>space</em> is a self-contained world for a physics simulation. It contains bodies, areas, and joints. Its state can be queried for collision and intersection information, and several parameters of the simulation can be modified.</p></li>\n<li><p>A <em>shape</em> is a geometric shape such as a sphere, a box, a cylinder, or a polygon. It can be used for collision detection by adding it to a body/area, possibly with an extra transformation relative to the body/area's origin. Bodies/areas can have multiple (transformed) shapes added to them, and a single shape can be added to bodies/areas multiple times with different local transformations.</p></li>\n<li><p>A <em>body</em> is a physical object which can be in static, kinematic, or rigid mode. Its state (such as position and velocity) can be queried and updated. A force integration callback can be set to customize the body's physics.</p></li>\n<li><p>An <em>area</em> is a region in space which can be used to detect bodies and areas entering and exiting it. A body monitoring callback can be set to report entering/exiting body shapes, and similarly an area monitoring callback can be set. Gravity and damping can be overridden within the area by setting area parameters.</p></li>\n<li><p>A <em>joint</em> is a constraint, either between two bodies or on one body relative to a point. Parameters such as the joint bias and the rest length of a spring joint can be adjusted.</p></li>\n</ul>\n<p>Physics objects in <strong>PhysicsServer3D</strong> may be created and manipulated independently; they do not have to be tied to nodes in the scene tree.</p>\n<p><strong>Note:</strong> All the 3D physics nodes use the physics server internally. Adding a physics node to the scene tree will cause a corresponding physics object to be created in the physics server. A rigid body node registers a callback that updates the node's transform with the transform of the respective body object in the physics server (every physics update). An area node registers a callback to inform the area node about overlaps with the respective area object in the physics server. The raycast node queries the direct state of the relevant space in the physics server.</p>\n"
            },
            "class_physicsserver3dextension": {
                "url": "https://docs.godotengine.org/en/4.1/classes/class_physicsserver3dextension.html",
                "title": "PhysicsServer3DExtension",
                "blurb": "<p><strong>Inherits:</strong> <a class=\"reference internal\" href=\"class_physicsserver3d.html#class-physicsserver3d\"><span class=\"std std-ref\">PhysicsServer3D</span></a> <strong>&lt;</strong> <a class=\"reference internal\" href=\"class_object.html#class-object\"><span class=\"std std-ref\">Object</span></a></p><p>Provides virtual methods that can be overridden to create custom <a class=\"reference internal\" href=\"class_physicsserver3d.html#class-physicsserver3d\"><span class=\"std std-ref\">PhysicsServer3D</span></a> implementations.</p>",
                "description": "\n\n<p>This class extends <a class=\"reference internal\" href=\"class_physicsserver3d.html#class-physicsserver3d\"><span class=\"std std-ref\">PhysicsServer3D</span></a> by providing additional virtual methods that can be overridden. When these methods are overridden, they will be called instead of the internal methods of the physics server.</p>\n<p>Intended for use with GDExtension to create custom implementations of <a class=\"reference internal\" href=\"class_physicsserver3d.html#class-physicsserver3d\"><span class=\"std std-ref\">PhysicsServer3D</span></a>.</p>\n"
            },
            "class_physicsserver3dmanager": {
                "url": "https://docs.godotengine.org/en/4.1/classes/class_physicsserver3dmanager.html",
                "title": "PhysicsServer3DManager",
                "blurb": "<p><strong>Inherits:</strong> <a class=\"reference internal\" href=\"class_object.html#class-object\"><span class=\"std std-ref\">Object</span></a></p><p>A singleton for managing <a class=\"reference internal\" href=\"class_physicsserver3d.html#class-physicsserver3d\"><span class=\"std std-ref\">PhysicsServer3D</span></a> implementations.</p>",
                "description": "\n\n<p><strong>PhysicsServer3DManager</strong> is the API for registering <a class=\"reference internal\" href=\"class_physicsserver3d.html#class-physicsserver3d\"><span class=\"std std-ref\">PhysicsServer3D</span></a> implementations and for setting the default implementation.</p>\n<p><strong>Note:</strong> It is not possible to switch physics servers at runtime. This class is only used on startup at the server initialization level, by Godot itself and possibly by GDExtensions.</p>\n"
            },
            "class_physicsserver3drenderingserverhandler": {
                "url": "https://docs.godotengine.org/en/4.1/classes/class_physicsserver3drenderingserverhandler.html",
                "title": "PhysicsServer3DRenderingServerHandler",
                "blurb": "<p><strong>Inherits:</strong> <a class=\"reference internal\" href=\"class_object.html#class-object\"><span class=\"std std-ref\">Object</span></a></p><p>A class used to provide <a class=\"reference internal\" href=\"class_physicsserver3dextension.html#class-physicsserver3dextension-method-soft-body-update-rendering-server\"><span class=\"std std-ref\">PhysicsServer3DExtension._soft_body_update_rendering_server</span></a> with a rendering handler for soft bodies.</p>",
                "description": null
            },
            "class_physicsshapequeryparameters2d": {
                "url": "https://docs.godotengine.org/en/4.1/classes/class_physicsshapequeryparameters2d.html",
                "title": "PhysicsShapeQueryParameters2D",
                "blurb": "<p><strong>Inherits:</strong> <a class=\"reference internal\" href=\"class_refcounted.html#class-refcounted\"><span class=\"std std-ref\">RefCounted</span></a> <strong>&lt;</strong> <a class=\"reference internal\" href=\"class_object.html#class-object\"><span class=\"std std-ref\">Object</span></a></p><p>Provides parameters for <a class=\"reference internal\" href=\"class_physicsdirectspacestate2d.html#class-physicsdirectspacestate2d-method-intersect-shape\"><span class=\"std std-ref\">PhysicsDirectSpaceState2D.intersect_shape</span></a>.</p>",
                "description": "\n\n<p>By changing various properties of this object, such as the shape, you can configure the parameters for <a class=\"reference internal\" href=\"class_physicsdirectspacestate2d.html#class-physicsdirectspacestate2d-method-intersect-shape\"><span class=\"std std-ref\">PhysicsDirectSpaceState2D.intersect_shape</span></a>.</p>\n"
            },
            "class_physicsshapequeryparameters3d": {
                "url": "https://docs.godotengine.org/en/4.1/classes/class_physicsshapequeryparameters3d.html",
                "title": "PhysicsShapeQueryParameters3D",
                "blurb": "<p><strong>Inherits:</strong> <a class=\"reference internal\" href=\"class_refcounted.html#class-refcounted\"><span class=\"std std-ref\">RefCounted</span></a> <strong>&lt;</strong> <a class=\"reference internal\" href=\"class_object.html#class-object\"><span class=\"std std-ref\">Object</span></a></p><p>Provides parameters for <a class=\"reference internal\" href=\"class_physicsdirectspacestate3d.html#class-physicsdirectspacestate3d-method-intersect-shape\"><span class=\"std std-ref\">PhysicsDirectSpaceState3D.intersect_shape</span></a>.</p>",
                "description": "\n\n<p>By changing various properties of this object, such as the shape, you can configure the parameters for <a class=\"reference internal\" href=\"class_physicsdirectspacestate3d.html#class-physicsdirectspacestate3d-method-intersect-shape\"><span class=\"std std-ref\">PhysicsDirectSpaceState3D.intersect_shape</span></a>.</p>\n"
            },
            "class_physicstestmotionparameters2d": {
                "url": "https://docs.godotengine.org/en/4.1/classes/class_physicstestmotionparameters2d.html",
                "title": "PhysicsTestMotionParameters2D",
                "blurb": "<p><strong>Inherits:</strong> <a class=\"reference internal\" href=\"class_refcounted.html#class-refcounted\"><span class=\"std std-ref\">RefCounted</span></a> <strong>&lt;</strong> <a class=\"reference internal\" href=\"class_object.html#class-object\"><span class=\"std std-ref\">Object</span></a></p><p>Provides parameters for <a class=\"reference internal\" href=\"class_physicsserver2d.html#class-physicsserver2d-method-body-test-motion\"><span class=\"std std-ref\">PhysicsServer2D.body_test_motion</span></a>.</p>",
                "description": "\n\n<p>By changing various properties of this object, such as the motion, you can configure the parameters for <a class=\"reference internal\" href=\"class_physicsserver2d.html#class-physicsserver2d-method-body-test-motion\"><span class=\"std std-ref\">PhysicsServer2D.body_test_motion</span></a>.</p>\n"
            },
            "class_physicstestmotionparameters3d": {
                "url": "https://docs.godotengine.org/en/4.1/classes/class_physicstestmotionparameters3d.html",
                "title": "PhysicsTestMotionParameters3D",
                "blurb": "<p><strong>Inherits:</strong> <a class=\"reference internal\" href=\"class_refcounted.html#class-refcounted\"><span class=\"std std-ref\">RefCounted</span></a> <strong>&lt;</strong> <a class=\"reference internal\" href=\"class_object.html#class-object\"><span class=\"std std-ref\">Object</span></a></p><p>Provides parameters for <a class=\"reference internal\" href=\"class_physicsserver3d.html#class-physicsserver3d-method-body-test-motion\"><span class=\"std std-ref\">PhysicsServer3D.body_test_motion</span></a>.</p>",
                "description": "\n\n<p>By changing various properties of this object, such as the motion, you can configure the parameters for <a class=\"reference internal\" href=\"class_physicsserver3d.html#class-physicsserver3d-method-body-test-motion\"><span class=\"std std-ref\">PhysicsServer3D.body_test_motion</span></a>.</p>\n"
            },
            "class_physicstestmotionresult2d": {
                "url": "https://docs.godotengine.org/en/4.1/classes/class_physicstestmotionresult2d.html",
                "title": "PhysicsTestMotionResult2D",
                "blurb": "<p><strong>Inherits:</strong> <a class=\"reference internal\" href=\"class_refcounted.html#class-refcounted\"><span class=\"std std-ref\">RefCounted</span></a> <strong>&lt;</strong> <a class=\"reference internal\" href=\"class_object.html#class-object\"><span class=\"std std-ref\">Object</span></a></p><p>Describes the motion and collision result from <a class=\"reference internal\" href=\"class_physicsserver2d.html#class-physicsserver2d-method-body-test-motion\"><span class=\"std std-ref\">PhysicsServer2D.body_test_motion</span></a>.</p>",
                "description": "\n\n<p>Describes the motion and collision result from <a class=\"reference internal\" href=\"class_physicsserver2d.html#class-physicsserver2d-method-body-test-motion\"><span class=\"std std-ref\">PhysicsServer2D.body_test_motion</span></a>.</p>\n"
            },
            "class_physicstestmotionresult3d": {
                "url": "https://docs.godotengine.org/en/4.1/classes/class_physicstestmotionresult3d.html",
                "title": "PhysicsTestMotionResult3D",
                "blurb": "<p><strong>Inherits:</strong> <a class=\"reference internal\" href=\"class_refcounted.html#class-refcounted\"><span class=\"std std-ref\">RefCounted</span></a> <strong>&lt;</strong> <a class=\"reference internal\" href=\"class_object.html#class-object\"><span class=\"std std-ref\">Object</span></a></p><p>Describes the motion and collision result from <a class=\"reference internal\" href=\"class_physicsserver3d.html#class-physicsserver3d-method-body-test-motion\"><span class=\"std std-ref\">PhysicsServer3D.body_test_motion</span></a>.</p>",
                "description": "\n\n<p>Describes the motion and collision result from <a class=\"reference internal\" href=\"class_physicsserver3d.html#class-physicsserver3d-method-body-test-motion\"><span class=\"std std-ref\">PhysicsServer3D.body_test_motion</span></a>.</p>\n"
            },
            "class_projectsettings": {
                "url": "https://docs.godotengine.org/en/4.1/classes/class_projectsettings.html",
                "title": "ProjectSettings",
                "blurb": "<p><strong>Inherits:</strong> <a class=\"reference internal\" href=\"class_object.html#class-object\"><span class=\"std std-ref\">Object</span></a></p><p>Stores globally-accessible variables.</p>",
                "description": "\n\n<p>Stores variables that can be accessed from everywhere. Use <a class=\"reference internal\" href=\"#class-projectsettings-method-get-setting\"><span class=\"std std-ref\">get_setting</span></a>, <a class=\"reference internal\" href=\"#class-projectsettings-method-set-setting\"><span class=\"std std-ref\">set_setting</span></a> or <a class=\"reference internal\" href=\"#class-projectsettings-method-has-setting\"><span class=\"std std-ref\">has_setting</span></a> to access them. Variables stored in <code class=\"docutils literal notranslate\"><span class=\"pre\">project.godot</span></code> are also loaded into <strong>ProjectSettings</strong>, making this object very useful for reading custom game configuration options.</p>\n<p>When naming a Project Settings property, use the full path to the setting including the category. For example, <code class=\"docutils literal notranslate\"><span class=\"pre\">\"application/config/name\"</span></code> for the project name. Category and property names can be viewed in the Project Settings dialog.</p>\n<p><strong>Feature tags:</strong> Project settings can be overridden for specific platforms and configurations (debug, release, ...) using <a class=\"reference internal\" href=\"../tutorials/export/feature_tags.html\"><span class=\"doc\">feature tags</span></a>.</p>\n<p><strong>Overriding:</strong> Any project setting can be overridden by creating a file named <code class=\"docutils literal notranslate\"><span class=\"pre\">override.cfg</span></code> in the project's root directory. This can also be used in exported projects by placing this file in the same directory as the project binary. Overriding will still take the base project settings' <a class=\"reference internal\" href=\"../tutorials/export/feature_tags.html\"><span class=\"doc\">feature tags</span></a> in account. Therefore, make sure to <em>also</em> override the setting with the desired feature tags if you want them to override base project settings on all platforms and configurations.</p>\n"
            },
            "class_propertytweener": {
                "url": "https://docs.godotengine.org/en/4.1/classes/class_propertytweener.html",
                "title": "PropertyTweener",
                "blurb": "<p><strong>Inherits:</strong> <a class=\"reference internal\" href=\"class_tweener.html#class-tweener\"><span class=\"std std-ref\">Tweener</span></a> <strong>&lt;</strong> <a class=\"reference internal\" href=\"class_refcounted.html#class-refcounted\"><span class=\"std std-ref\">RefCounted</span></a> <strong>&lt;</strong> <a class=\"reference internal\" href=\"class_object.html#class-object\"><span class=\"std std-ref\">Object</span></a></p><p>Interpolates an <a class=\"reference internal\" href=\"class_object.html#class-object\"><span class=\"std std-ref\">Object</span></a>'s property over time.</p>",
                "description": "\n\n<p><strong>PropertyTweener</strong> is used to interpolate a property in an object. See <a class=\"reference internal\" href=\"class_tween.html#class-tween-method-tween-property\"><span class=\"std std-ref\">Tween.tween_property</span></a> for more usage information.</p>\n<p><strong>Note:</strong> <a class=\"reference internal\" href=\"class_tween.html#class-tween-method-tween-property\"><span class=\"std std-ref\">Tween.tween_property</span></a> is the only correct way to create <strong>PropertyTweener</strong>. Any <strong>PropertyTweener</strong> created manually will not function correctly.</p>\n"
            },
            "class_randomnumbergenerator": {
                "url": "https://docs.godotengine.org/en/4.1/classes/class_randomnumbergenerator.html",
                "title": "RandomNumberGenerator",
                "blurb": "<p><strong>Inherits:</strong> <a class=\"reference internal\" href=\"class_refcounted.html#class-refcounted\"><span class=\"std std-ref\">RefCounted</span></a> <strong>&lt;</strong> <a class=\"reference internal\" href=\"class_object.html#class-object\"><span class=\"std std-ref\">Object</span></a></p><p>Provides methods for generating pseudo-random numbers.</p>",
                "description": "\n\n<p>RandomNumberGenerator is a class for generating pseudo-random numbers. It currently uses <a class=\"reference external\" href=\"https://www.pcg-random.org/\">PCG32</a>.</p>\n<p><strong>Note:</strong> The underlying algorithm is an implementation detail and should not be depended upon.</p>\n<p>To generate a random float number (within a given range) based on a time-dependant seed:</p>\n<div class=\"highlight-gdscript notranslate\"><div class=\"highlight\"><pre><span></span><span class=\"k\">var</span> <span class=\"n\">rng</span> <span class=\"o\">=</span> <span class=\"n\">RandomNumberGenerator</span><span class=\"o\">.</span><span class=\"n\">new</span><span class=\"p\">()</span>\n<span class=\"k\">func</span> <span class=\"n\">_ready</span><span class=\"p\">():</span>\n    <span class=\"k\">var</span> <span class=\"n\">my_random_number</span> <span class=\"o\">=</span> <span class=\"n\">rng</span><span class=\"o\">.</span><span class=\"n\">randf_range</span><span class=\"p\">(</span><span class=\"o\">-</span><span class=\"mf\">10.0</span><span class=\"p\">,</span> <span class=\"mf\">10.0</span><span class=\"p\">)</span>\n</pre></div>\n</div>\n"
            },
            "class_rdattachmentformat": {
                "url": "https://docs.godotengine.org/en/4.1/classes/class_rdattachmentformat.html",
                "title": "RDAttachmentFormat",
                "blurb": "<p><strong>Inherits:</strong> <a class=\"reference internal\" href=\"class_refcounted.html#class-refcounted\"><span class=\"std std-ref\">RefCounted</span></a> <strong>&lt;</strong> <a class=\"reference internal\" href=\"class_object.html#class-object\"><span class=\"std std-ref\">Object</span></a></p><p>Attachment format (used by <a class=\"reference internal\" href=\"class_renderingdevice.html#class-renderingdevice\"><span class=\"std std-ref\">RenderingDevice</span></a>).</p>",
                "description": "\n\n<p>This object is used by <a class=\"reference internal\" href=\"class_renderingdevice.html#class-renderingdevice\"><span class=\"std std-ref\">RenderingDevice</span></a>.</p>\n"
            },
            "class_rdframebufferpass": {
                "url": "https://docs.godotengine.org/en/4.1/classes/class_rdframebufferpass.html",
                "title": "RDFramebufferPass",
                "blurb": "<p><strong>Inherits:</strong> <a class=\"reference internal\" href=\"class_refcounted.html#class-refcounted\"><span class=\"std std-ref\">RefCounted</span></a> <strong>&lt;</strong> <a class=\"reference internal\" href=\"class_object.html#class-object\"><span class=\"std std-ref\">Object</span></a></p><p>Framebuffer pass attachment description (used by <a class=\"reference internal\" href=\"class_renderingdevice.html#class-renderingdevice\"><span class=\"std std-ref\">RenderingDevice</span></a>).</p>",
                "description": "\n\n<p>This class contains the list of attachment descriptions for a framebuffer pass. Each points with an index to a previously supplied list of texture attachments.</p>\n<p>Multipass framebuffers can optimize some configurations in mobile. On desktop, they provide little to no advantage.</p>\n<p>This object is used by <a class=\"reference internal\" href=\"class_renderingdevice.html#class-renderingdevice\"><span class=\"std std-ref\">RenderingDevice</span></a>.</p>\n"
            },
            "class_rdpipelinecolorblendstate": {
                "url": "https://docs.godotengine.org/en/4.1/classes/class_rdpipelinecolorblendstate.html",
                "title": "RDPipelineColorBlendState",
                "blurb": "<p><strong>Inherits:</strong> <a class=\"reference internal\" href=\"class_refcounted.html#class-refcounted\"><span class=\"std std-ref\">RefCounted</span></a> <strong>&lt;</strong> <a class=\"reference internal\" href=\"class_object.html#class-object\"><span class=\"std std-ref\">Object</span></a></p><p>Pipeline color blend state (used by <a class=\"reference internal\" href=\"class_renderingdevice.html#class-renderingdevice\"><span class=\"std std-ref\">RenderingDevice</span></a>).</p>",
                "description": "\n\n<p>This object is used by <a class=\"reference internal\" href=\"class_renderingdevice.html#class-renderingdevice\"><span class=\"std std-ref\">RenderingDevice</span></a>.</p>\n"
            },
            "class_rdpipelinecolorblendstateattachment": {
                "url": "https://docs.godotengine.org/en/4.1/classes/class_rdpipelinecolorblendstateattachment.html",
                "title": "RDPipelineColorBlendStateAttachment",
                "blurb": "<p><strong>Inherits:</strong> <a class=\"reference internal\" href=\"class_refcounted.html#class-refcounted\"><span class=\"std std-ref\">RefCounted</span></a> <strong>&lt;</strong> <a class=\"reference internal\" href=\"class_object.html#class-object\"><span class=\"std std-ref\">Object</span></a></p><p>Pipeline color blend state attachment (used by <a class=\"reference internal\" href=\"class_renderingdevice.html#class-renderingdevice\"><span class=\"std std-ref\">RenderingDevice</span></a>).</p>",
                "description": "\n\n<p>Controls how blending between source and destination fragments is performed when using <a class=\"reference internal\" href=\"class_renderingdevice.html#class-renderingdevice\"><span class=\"std std-ref\">RenderingDevice</span></a>.</p>\n<p>For reference, this is how common user-facing blend modes are implemented in Godot's 2D renderer:</p>\n<p><strong>Mix:</strong></p>\n<div class=\"highlight-gdscript notranslate\"><div class=\"highlight\"><pre><span></span><span class=\"k\">var</span> <span class=\"n\">attachment</span> <span class=\"o\">=</span> <span class=\"n\">RDPipelineColorBlendStateAttachment</span><span class=\"o\">.</span><span class=\"n\">new</span><span class=\"p\">()</span>\n<span class=\"n\">attachment</span><span class=\"o\">.</span><span class=\"n\">enable_blend</span> <span class=\"o\">=</span> <span class=\"bp\">true</span>\n<span class=\"n\">attachment</span><span class=\"o\">.</span><span class=\"n\">color_blend_op</span> <span class=\"o\">=</span> <span class=\"n\">RenderingDevice</span><span class=\"o\">.</span><span class=\"n\">BLEND_OP_ADD</span>\n<span class=\"n\">attachment</span><span class=\"o\">.</span><span class=\"n\">src_color_blend_factor</span> <span class=\"o\">=</span> <span class=\"n\">RenderingDevice</span><span class=\"o\">.</span><span class=\"n\">BLEND_FACTOR_SRC_ALPHA</span>\n<span class=\"n\">attachment</span><span class=\"o\">.</span><span class=\"n\">dst_color_blend_factor</span> <span class=\"o\">=</span> <span class=\"n\">RenderingDevice</span><span class=\"o\">.</span><span class=\"n\">BLEND_FACTOR_ONE_MINUS_SRC_ALPHA</span>\n<span class=\"n\">attachment</span><span class=\"o\">.</span><span class=\"n\">alpha_blend_op</span> <span class=\"o\">=</span> <span class=\"n\">RenderingDevice</span><span class=\"o\">.</span><span class=\"n\">BLEND_OP_ADD</span>\n<span class=\"n\">attachment</span><span class=\"o\">.</span><span class=\"n\">src_alpha_blend_factor</span> <span class=\"o\">=</span> <span class=\"n\">RenderingDevice</span><span class=\"o\">.</span><span class=\"n\">BLEND_FACTOR_ONE</span>\n<span class=\"n\">attachment</span><span class=\"o\">.</span><span class=\"n\">dst_alpha_blend_factor</span> <span class=\"o\">=</span> <span class=\"n\">RenderingDevice</span><span class=\"o\">.</span><span class=\"n\">BLEND_FACTOR_ONE_MINUS_SRC_ALPHA</span>\n</pre></div>\n</div>\n<p><strong>Add:</strong></p>\n<div class=\"highlight-gdscript notranslate\"><div class=\"highlight\"><pre><span></span><span class=\"k\">var</span> <span class=\"n\">attachment</span> <span class=\"o\">=</span> <span class=\"n\">RDPipelineColorBlendStateAttachment</span><span class=\"o\">.</span><span class=\"n\">new</span><span class=\"p\">()</span>\n<span class=\"n\">attachment</span><span class=\"o\">.</span><span class=\"n\">enable_blend</span> <span class=\"o\">=</span> <span class=\"bp\">true</span>\n<span class=\"n\">attachment</span><span class=\"o\">.</span><span class=\"n\">alpha_blend_op</span> <span class=\"o\">=</span> <span class=\"n\">RenderingDevice</span><span class=\"o\">.</span><span class=\"n\">BLEND_OP_ADD</span>\n<span class=\"n\">attachment</span><span class=\"o\">.</span><span class=\"n\">color_blend_op</span> <span class=\"o\">=</span> <span class=\"n\">RenderingDevice</span><span class=\"o\">.</span><span class=\"n\">BLEND_OP_ADD</span>\n<span class=\"n\">attachment</span><span class=\"o\">.</span><span class=\"n\">src_color_blend_factor</span> <span class=\"o\">=</span> <span class=\"n\">RenderingDevice</span><span class=\"o\">.</span><span class=\"n\">BLEND_FACTOR_SRC_ALPHA</span>\n<span class=\"n\">attachment</span><span class=\"o\">.</span><span class=\"n\">dst_color_blend_factor</span> <span class=\"o\">=</span> <span class=\"n\">RenderingDevice</span><span class=\"o\">.</span><span class=\"n\">BLEND_FACTOR_ONE</span>\n<span class=\"n\">attachment</span><span class=\"o\">.</span><span class=\"n\">src_alpha_blend_factor</span> <span class=\"o\">=</span> <span class=\"n\">RenderingDevice</span><span class=\"o\">.</span><span class=\"n\">BLEND_FACTOR_SRC_ALPHA</span>\n<span class=\"n\">attachment</span><span class=\"o\">.</span><span class=\"n\">dst_alpha_blend_factor</span> <span class=\"o\">=</span> <span class=\"n\">RenderingDevice</span><span class=\"o\">.</span><span class=\"n\">BLEND_FACTOR_ONE</span>\n</pre></div>\n</div>\n<p><strong>Subtract:</strong></p>\n<div class=\"highlight-gdscript notranslate\"><div class=\"highlight\"><pre><span></span><span class=\"k\">var</span> <span class=\"n\">attachment</span> <span class=\"o\">=</span> <span class=\"n\">RDPipelineColorBlendStateAttachment</span><span class=\"o\">.</span><span class=\"n\">new</span><span class=\"p\">()</span>\n<span class=\"n\">attachment</span><span class=\"o\">.</span><span class=\"n\">enable_blend</span> <span class=\"o\">=</span> <span class=\"bp\">true</span>\n<span class=\"n\">attachment</span><span class=\"o\">.</span><span class=\"n\">alpha_blend_op</span> <span class=\"o\">=</span> <span class=\"n\">RenderingDevice</span><span class=\"o\">.</span><span class=\"n\">BLEND_OP_REVERSE_SUBTRACT</span>\n<span class=\"n\">attachment</span><span class=\"o\">.</span><span class=\"n\">color_blend_op</span> <span class=\"o\">=</span> <span class=\"n\">RenderingDevice</span><span class=\"o\">.</span><span class=\"n\">BLEND_OP_REVERSE_SUBTRACT</span>\n<span class=\"n\">attachment</span><span class=\"o\">.</span><span class=\"n\">src_color_blend_factor</span> <span class=\"o\">=</span> <span class=\"n\">RenderingDevice</span><span class=\"o\">.</span><span class=\"n\">BLEND_FACTOR_SRC_ALPHA</span>\n<span class=\"n\">attachment</span><span class=\"o\">.</span><span class=\"n\">dst_color_blend_factor</span> <span class=\"o\">=</span> <span class=\"n\">RenderingDevice</span><span class=\"o\">.</span><span class=\"n\">BLEND_FACTOR_ONE</span>\n<span class=\"n\">attachment</span><span class=\"o\">.</span><span class=\"n\">src_alpha_blend_factor</span> <span class=\"o\">=</span> <span class=\"n\">RenderingDevice</span><span class=\"o\">.</span><span class=\"n\">BLEND_FACTOR_SRC_ALPHA</span>\n<span class=\"n\">attachment</span><span class=\"o\">.</span><span class=\"n\">dst_alpha_blend_factor</span> <span class=\"o\">=</span> <span class=\"n\">RenderingDevice</span><span class=\"o\">.</span><span class=\"n\">BLEND_FACTOR_ONE</span>\n</pre></div>\n</div>\n<p><strong>Multiply:</strong></p>\n<div class=\"highlight-gdscript notranslate\"><div class=\"highlight\"><pre><span></span><span class=\"k\">var</span> <span class=\"n\">attachment</span> <span class=\"o\">=</span> <span class=\"n\">RDPipelineColorBlendStateAttachment</span><span class=\"o\">.</span><span class=\"n\">new</span><span class=\"p\">()</span>\n<span class=\"n\">attachment</span><span class=\"o\">.</span><span class=\"n\">enable_blend</span> <span class=\"o\">=</span> <span class=\"bp\">true</span>\n<span class=\"n\">attachment</span><span class=\"o\">.</span><span class=\"n\">alpha_blend_op</span> <span class=\"o\">=</span> <span class=\"n\">RenderingDevice</span><span class=\"o\">.</span><span class=\"n\">BLEND_OP_ADD</span>\n<span class=\"n\">attachment</span><span class=\"o\">.</span><span class=\"n\">color_blend_op</span> <span class=\"o\">=</span> <span class=\"n\">RenderingDevice</span><span class=\"o\">.</span><span class=\"n\">BLEND_OP_ADD</span>\n<span class=\"n\">attachment</span><span class=\"o\">.</span><span class=\"n\">src_color_blend_factor</span> <span class=\"o\">=</span> <span class=\"n\">RenderingDevice</span><span class=\"o\">.</span><span class=\"n\">BLEND_FACTOR_DST_COLOR</span>\n<span class=\"n\">attachment</span><span class=\"o\">.</span><span class=\"n\">dst_color_blend_factor</span> <span class=\"o\">=</span> <span class=\"n\">RenderingDevice</span><span class=\"o\">.</span><span class=\"n\">BLEND_FACTOR_ZERO</span>\n<span class=\"n\">attachment</span><span class=\"o\">.</span><span class=\"n\">src_alpha_blend_factor</span> <span class=\"o\">=</span> <span class=\"n\">RenderingDevice</span><span class=\"o\">.</span><span class=\"n\">BLEND_FACTOR_DST_ALPHA</span>\n<span class=\"n\">attachment</span><span class=\"o\">.</span><span class=\"n\">dst_alpha_blend_factor</span> <span class=\"o\">=</span> <span class=\"n\">RenderingDevice</span><span class=\"o\">.</span><span class=\"n\">BLEND_FACTOR_ZERO</span>\n</pre></div>\n</div>\n<p><strong>Pre-multiplied alpha:</strong></p>\n<div class=\"highlight-gdscript notranslate\"><div class=\"highlight\"><pre><span></span><span class=\"k\">var</span> <span class=\"n\">attachment</span> <span class=\"o\">=</span> <span class=\"n\">RDPipelineColorBlendStateAttachment</span><span class=\"o\">.</span><span class=\"n\">new</span><span class=\"p\">()</span>\n<span class=\"n\">attachment</span><span class=\"o\">.</span><span class=\"n\">enable_blend</span> <span class=\"o\">=</span> <span class=\"bp\">true</span>\n<span class=\"n\">attachment</span><span class=\"o\">.</span><span class=\"n\">alpha_blend_op</span> <span class=\"o\">=</span> <span class=\"n\">RenderingDevice</span><span class=\"o\">.</span><span class=\"n\">BLEND_OP_ADD</span>\n<span class=\"n\">attachment</span><span class=\"o\">.</span><span class=\"n\">color_blend_op</span> <span class=\"o\">=</span> <span class=\"n\">RenderingDevice</span><span class=\"o\">.</span><span class=\"n\">BLEND_OP_ADD</span>\n<span class=\"n\">attachment</span><span class=\"o\">.</span><span class=\"n\">src_color_blend_factor</span> <span class=\"o\">=</span> <span class=\"n\">RenderingDevice</span><span class=\"o\">.</span><span class=\"n\">BLEND_FACTOR_ONE</span>\n<span class=\"n\">attachment</span><span class=\"o\">.</span><span class=\"n\">dst_color_blend_factor</span> <span class=\"o\">=</span> <span class=\"n\">RenderingDevice</span><span class=\"o\">.</span><span class=\"n\">BLEND_FACTOR_ONE_MINUS_SRC_ALPHA</span>\n<span class=\"n\">attachment</span><span class=\"o\">.</span><span class=\"n\">src_alpha_blend_factor</span> <span class=\"o\">=</span> <span class=\"n\">RenderingDevice</span><span class=\"o\">.</span><span class=\"n\">BLEND_FACTOR_ONE</span>\n<span class=\"n\">attachment</span><span class=\"o\">.</span><span class=\"n\">dst_alpha_blend_factor</span> <span class=\"o\">=</span> <span class=\"n\">RenderingDevice</span><span class=\"o\">.</span><span class=\"n\">BLEND_FACTOR_ONE_MINUS_SRC_ALPHA</span>\n</pre></div>\n</div>\n"
            },
            "class_rdpipelinedepthstencilstate": {
                "url": "https://docs.godotengine.org/en/4.1/classes/class_rdpipelinedepthstencilstate.html",
                "title": "RDPipelineDepthStencilState",
                "blurb": "<p><strong>Inherits:</strong> <a class=\"reference internal\" href=\"class_refcounted.html#class-refcounted\"><span class=\"std std-ref\">RefCounted</span></a> <strong>&lt;</strong> <a class=\"reference internal\" href=\"class_object.html#class-object\"><span class=\"std std-ref\">Object</span></a></p><p>Pipeline depth/stencil state (used by <a class=\"reference internal\" href=\"class_renderingdevice.html#class-renderingdevice\"><span class=\"std std-ref\">RenderingDevice</span></a>).</p>",
                "description": "\n\n<p><strong>RDPipelineDepthStencilState</strong> controls the way depth and stencil comparisons are performed when sampling those values using <a class=\"reference internal\" href=\"class_renderingdevice.html#class-renderingdevice\"><span class=\"std std-ref\">RenderingDevice</span></a>.</p>\n"
            },
            "class_rdpipelinemultisamplestate": {
                "url": "https://docs.godotengine.org/en/4.1/classes/class_rdpipelinemultisamplestate.html",
                "title": "RDPipelineMultisampleState",
                "blurb": "<p><strong>Inherits:</strong> <a class=\"reference internal\" href=\"class_refcounted.html#class-refcounted\"><span class=\"std std-ref\">RefCounted</span></a> <strong>&lt;</strong> <a class=\"reference internal\" href=\"class_object.html#class-object\"><span class=\"std std-ref\">Object</span></a></p><p>Pipeline multisample state (used by <a class=\"reference internal\" href=\"class_renderingdevice.html#class-renderingdevice\"><span class=\"std std-ref\">RenderingDevice</span></a>).</p>",
                "description": "\n\n<p><strong>RDPipelineMultisampleState</strong> is used to control how multisample or supersample antialiasing is being performed when rendering using <a class=\"reference internal\" href=\"class_renderingdevice.html#class-renderingdevice\"><span class=\"std std-ref\">RenderingDevice</span></a>.</p>\n"
            },
            "class_rdpipelinerasterizationstate": {
                "url": "https://docs.godotengine.org/en/4.1/classes/class_rdpipelinerasterizationstate.html",
                "title": "RDPipelineRasterizationState",
                "blurb": "<p><strong>Inherits:</strong> <a class=\"reference internal\" href=\"class_refcounted.html#class-refcounted\"><span class=\"std std-ref\">RefCounted</span></a> <strong>&lt;</strong> <a class=\"reference internal\" href=\"class_object.html#class-object\"><span class=\"std std-ref\">Object</span></a></p><p>Pipeline rasterization state (used by <a class=\"reference internal\" href=\"class_renderingdevice.html#class-renderingdevice\"><span class=\"std std-ref\">RenderingDevice</span></a>).</p>",
                "description": "\n\n<p>This object is used by <a class=\"reference internal\" href=\"class_renderingdevice.html#class-renderingdevice\"><span class=\"std std-ref\">RenderingDevice</span></a>.</p>\n"
            },
            "class_rdpipelinespecializationconstant": {
                "url": "https://docs.godotengine.org/en/4.1/classes/class_rdpipelinespecializationconstant.html",
                "title": "RDPipelineSpecializationConstant",
                "blurb": "<p><strong>Inherits:</strong> <a class=\"reference internal\" href=\"class_refcounted.html#class-refcounted\"><span class=\"std std-ref\">RefCounted</span></a> <strong>&lt;</strong> <a class=\"reference internal\" href=\"class_object.html#class-object\"><span class=\"std std-ref\">Object</span></a></p><p>Pipeline specialization constant (used by <a class=\"reference internal\" href=\"class_renderingdevice.html#class-renderingdevice\"><span class=\"std std-ref\">RenderingDevice</span></a>).</p>",
                "description": "\n\n<p>A <em>specialization constant</em> is a way to create additional variants of shaders without actually increasing the number of shader versions that are compiled. This allows improving performance by reducing the number of shader versions and reducing <code class=\"docutils literal notranslate\"><span class=\"pre\">if</span></code> branching, while still allowing shaders to be flexible for different use cases.</p>\n<p>This object is used by <a class=\"reference internal\" href=\"class_renderingdevice.html#class-renderingdevice\"><span class=\"std std-ref\">RenderingDevice</span></a>.</p>\n"
            },
            "class_rdsamplerstate": {
                "url": "https://docs.godotengine.org/en/4.1/classes/class_rdsamplerstate.html",
                "title": "RDSamplerState",
                "blurb": "<p><strong>Inherits:</strong> <a class=\"reference internal\" href=\"class_refcounted.html#class-refcounted\"><span class=\"std std-ref\">RefCounted</span></a> <strong>&lt;</strong> <a class=\"reference internal\" href=\"class_object.html#class-object\"><span class=\"std std-ref\">Object</span></a></p><p>Sampler state (used by <a class=\"reference internal\" href=\"class_renderingdevice.html#class-renderingdevice\"><span class=\"std std-ref\">RenderingDevice</span></a>).</p>",
                "description": "\n\n<p>This object is used by <a class=\"reference internal\" href=\"class_renderingdevice.html#class-renderingdevice\"><span class=\"std std-ref\">RenderingDevice</span></a>.</p>\n"
            },
            "class_rdshadersource": {
                "url": "https://docs.godotengine.org/en/4.1/classes/class_rdshadersource.html",
                "title": "RDShaderSource",
                "blurb": "<p><strong>Inherits:</strong> <a class=\"reference internal\" href=\"class_refcounted.html#class-refcounted\"><span class=\"std std-ref\">RefCounted</span></a> <strong>&lt;</strong> <a class=\"reference internal\" href=\"class_object.html#class-object\"><span class=\"std std-ref\">Object</span></a></p><p>Shader source code (used by <a class=\"reference internal\" href=\"class_renderingdevice.html#class-renderingdevice\"><span class=\"std std-ref\">RenderingDevice</span></a>).</p>",
                "description": "\n\n<p>Shader source code in text form.</p>\n<p>See also <a class=\"reference internal\" href=\"class_rdshaderfile.html#class-rdshaderfile\"><span class=\"std std-ref\">RDShaderFile</span></a>. <strong>RDShaderSource</strong> is only meant to be used with the <a class=\"reference internal\" href=\"class_renderingdevice.html#class-renderingdevice\"><span class=\"std std-ref\">RenderingDevice</span></a> API. It should not be confused with Godot's own <a class=\"reference internal\" href=\"class_shader.html#class-shader\"><span class=\"std std-ref\">Shader</span></a> resource, which is what Godot's various nodes use for high-level shader programming.</p>\n"
            },
            "class_rdtextureformat": {
                "url": "https://docs.godotengine.org/en/4.1/classes/class_rdtextureformat.html",
                "title": "RDTextureFormat",
                "blurb": "<p><strong>Inherits:</strong> <a class=\"reference internal\" href=\"class_refcounted.html#class-refcounted\"><span class=\"std std-ref\">RefCounted</span></a> <strong>&lt;</strong> <a class=\"reference internal\" href=\"class_object.html#class-object\"><span class=\"std std-ref\">Object</span></a></p><p>Texture format (used by <a class=\"reference internal\" href=\"class_renderingdevice.html#class-renderingdevice\"><span class=\"std std-ref\">RenderingDevice</span></a>).</p>",
                "description": "\n\n<p>This object is used by <a class=\"reference internal\" href=\"class_renderingdevice.html#class-renderingdevice\"><span class=\"std std-ref\">RenderingDevice</span></a>.</p>\n"
            },
            "class_rdtextureview": {
                "url": "https://docs.godotengine.org/en/4.1/classes/class_rdtextureview.html",
                "title": "RDTextureView",
                "blurb": "<p><strong>Inherits:</strong> <a class=\"reference internal\" href=\"class_refcounted.html#class-refcounted\"><span class=\"std std-ref\">RefCounted</span></a> <strong>&lt;</strong> <a class=\"reference internal\" href=\"class_object.html#class-object\"><span class=\"std std-ref\">Object</span></a></p><p>Texture view (used by <a class=\"reference internal\" href=\"class_renderingdevice.html#class-renderingdevice\"><span class=\"std std-ref\">RenderingDevice</span></a>).</p>",
                "description": "\n\n<p>This object is used by <a class=\"reference internal\" href=\"class_renderingdevice.html#class-renderingdevice\"><span class=\"std std-ref\">RenderingDevice</span></a>.</p>\n"
            },
            "class_rduniform": {
                "url": "https://docs.godotengine.org/en/4.1/classes/class_rduniform.html",
                "title": "RDUniform",
                "blurb": "<p><strong>Inherits:</strong> <a class=\"reference internal\" href=\"class_refcounted.html#class-refcounted\"><span class=\"std std-ref\">RefCounted</span></a> <strong>&lt;</strong> <a class=\"reference internal\" href=\"class_object.html#class-object\"><span class=\"std std-ref\">Object</span></a></p><p>Shader uniform (used by <a class=\"reference internal\" href=\"class_renderingdevice.html#class-renderingdevice\"><span class=\"std std-ref\">RenderingDevice</span></a>).</p>",
                "description": "\n\n<p>This object is used by <a class=\"reference internal\" href=\"class_renderingdevice.html#class-renderingdevice\"><span class=\"std std-ref\">RenderingDevice</span></a>.</p>\n"
            },
            "class_rdvertexattribute": {
                "url": "https://docs.godotengine.org/en/4.1/classes/class_rdvertexattribute.html",
                "title": "RDVertexAttribute",
                "blurb": "<p><strong>Inherits:</strong> <a class=\"reference internal\" href=\"class_refcounted.html#class-refcounted\"><span class=\"std std-ref\">RefCounted</span></a> <strong>&lt;</strong> <a class=\"reference internal\" href=\"class_object.html#class-object\"><span class=\"std std-ref\">Object</span></a></p><p>Vertex attribute (used by <a class=\"reference internal\" href=\"class_renderingdevice.html#class-renderingdevice\"><span class=\"std std-ref\">RenderingDevice</span></a>).</p>",
                "description": "\n\n<p>This object is used by <a class=\"reference internal\" href=\"class_renderingdevice.html#class-renderingdevice\"><span class=\"std std-ref\">RenderingDevice</span></a>.</p>\n"
            },
            "class_refcounted": {
                "url": "https://docs.godotengine.org/en/4.1/classes/class_refcounted.html",
                "title": "RefCounted",
                "blurb": "<p><strong>Inherits:</strong> <a class=\"reference internal\" href=\"class_object.html#class-object\"><span class=\"std std-ref\">Object</span></a></p><p><strong>Inherited By:</strong> <a class=\"reference internal\" href=\"class_aescontext.html#class-aescontext\"><span class=\"std std-ref\">AESContext</span></a>, <a class=\"reference internal\" href=\"class_astar2d.html#class-astar2d\"><span class=\"std std-ref\">AStar2D</span></a>, <a class=\"reference internal\" href=\"class_astar3d.html#class-astar3d\"><span class=\"std std-ref\">AStar3D</span></a>, <a class=\"reference internal\" href=\"class_astargrid2d.html#class-astargrid2d\"><span class=\"std std-ref\">AStarGrid2D</span></a>, <a class=\"reference internal\" href=\"class_audioeffectinstance.html#class-audioeffectinstance\"><span class=\"std std-ref\">AudioEffectInstance</span></a>, <a class=\"reference internal\" href=\"class_audiostreamplayback.html#class-audiostreamplayback\"><span class=\"std std-ref\">AudioStreamPlayback</span></a>, <a class=\"reference internal\" href=\"class_camerafeed.html#class-camerafeed\"><span class=\"std std-ref\">CameraFeed</span></a>, <a class=\"reference internal\" href=\"class_charfxtransform.html#class-charfxtransform\"><span class=\"std std-ref\">CharFXTransform</span></a>, <a class=\"reference internal\" href=\"class_configfile.html#class-configfile\"><span class=\"std std-ref\">ConfigFile</span></a>, <a class=\"reference internal\" href=\"class_crypto.html#class-crypto\"><span class=\"std std-ref\">Crypto</span></a>, <a class=\"reference internal\" href=\"class_diraccess.html#class-diraccess\"><span class=\"std std-ref\">DirAccess</span></a>, <a class=\"reference internal\" href=\"class_dtlsserver.html#class-dtlsserver\"><span class=\"std std-ref\">DTLSServer</span></a>, <a class=\"reference internal\" href=\"class_editordebuggerplugin.html#class-editordebuggerplugin\"><span class=\"std std-ref\">EditorDebuggerPlugin</span></a>, <a class=\"reference internal\" href=\"class_editordebuggersession.html#class-editordebuggersession\"><span class=\"std std-ref\">EditorDebuggerSession</span></a>, <a class=\"reference internal\" href=\"class_editorexportplatform.html#class-editorexportplatform\"><span class=\"std std-ref\">EditorExportPlatform</span></a>, <a class=\"reference internal\" href=\"class_editorexportplugin.html#class-editorexportplugin\"><span class=\"std std-ref\">EditorExportPlugin</span></a>, <a class=\"reference internal\" href=\"class_editorfeatureprofile.html#class-editorfeatureprofile\"><span class=\"std std-ref\">EditorFeatureProfile</span></a>, <a class=\"reference internal\" href=\"class_editorfilesystemimportformatsupportquery.html#class-editorfilesystemimportformatsupportquery\"><span class=\"std std-ref\">EditorFileSystemImportFormatSupportQuery</span></a>, <a class=\"reference internal\" href=\"class_editorinspectorplugin.html#class-editorinspectorplugin\"><span class=\"std std-ref\">EditorInspectorPlugin</span></a>, <a class=\"reference internal\" href=\"class_editorresourceconversionplugin.html#class-editorresourceconversionplugin\"><span class=\"std std-ref\">EditorResourceConversionPlugin</span></a>, <a class=\"reference internal\" href=\"class_editorresourcepreviewgenerator.html#class-editorresourcepreviewgenerator\"><span class=\"std std-ref\">EditorResourcePreviewGenerator</span></a>, <a class=\"reference internal\" href=\"class_editorresourcetooltipplugin.html#class-editorresourcetooltipplugin\"><span class=\"std std-ref\">EditorResourceTooltipPlugin</span></a>, <a class=\"reference internal\" href=\"class_editorsceneformatimporter.html#class-editorsceneformatimporter\"><span class=\"std std-ref\">EditorSceneFormatImporter</span></a>, <a class=\"reference internal\" href=\"class_editorscenepostimport.html#class-editorscenepostimport\"><span class=\"std std-ref\">EditorScenePostImport</span></a>, <a class=\"reference internal\" href=\"class_editorscenepostimportplugin.html#class-editorscenepostimportplugin\"><span class=\"std std-ref\">EditorScenePostImportPlugin</span></a>, <a class=\"reference internal\" href=\"class_editorscript.html#class-editorscript\"><span class=\"std std-ref\">EditorScript</span></a>, <a class=\"reference internal\" href=\"class_editortranslationparserplugin.html#class-editortranslationparserplugin\"><span class=\"std std-ref\">EditorTranslationParserPlugin</span></a>, <a class=\"reference internal\" href=\"class_encodedobjectasid.html#class-encodedobjectasid\"><span class=\"std std-ref\">EncodedObjectAsID</span></a>, <a class=\"reference internal\" href=\"class_enetconnection.html#class-enetconnection\"><span class=\"std std-ref\">ENetConnection</span></a>, <a class=\"reference internal\" href=\"class_engineprofiler.html#class-engineprofiler\"><span class=\"std std-ref\">EngineProfiler</span></a>, <a class=\"reference internal\" href=\"class_expression.html#class-expression\"><span class=\"std std-ref\">Expression</span></a>, <a class=\"reference internal\" href=\"class_fileaccess.html#class-fileaccess\"><span class=\"std std-ref\">FileAccess</span></a>, <a class=\"reference internal\" href=\"class_hashingcontext.html#class-hashingcontext\"><span class=\"std std-ref\">HashingContext</span></a>, <a class=\"reference internal\" href=\"class_hmaccontext.html#class-hmaccontext\"><span class=\"std std-ref\">HMACContext</span></a>, <a class=\"reference internal\" href=\"class_httpclient.html#class-httpclient\"><span class=\"std std-ref\">HTTPClient</span></a>, <a class=\"reference internal\" href=\"class_imageformatloader.html#class-imageformatloader\"><span class=\"std std-ref\">ImageFormatLoader</span></a>, <a class=\"reference internal\" href=\"class_javaclass.html#class-javaclass\"><span class=\"std std-ref\">JavaClass</span></a>, <a class=\"reference internal\" href=\"class_javascriptobject.html#class-javascriptobject\"><span class=\"std std-ref\">JavaScriptObject</span></a>, <a class=\"reference internal\" href=\"class_kinematiccollision2d.html#class-kinematiccollision2d\"><span class=\"std std-ref\">KinematicCollision2D</span></a>, <a class=\"reference internal\" href=\"class_kinematiccollision3d.html#class-kinematiccollision3d\"><span class=\"std std-ref\">KinematicCollision3D</span></a>, <a class=\"reference internal\" href=\"class_lightmapper.html#class-lightmapper\"><span class=\"std std-ref\">Lightmapper</span></a>, <a class=\"reference internal\" href=\"class_meshconvexdecompositionsettings.html#class-meshconvexdecompositionsettings\"><span class=\"std std-ref\">MeshConvexDecompositionSettings</span></a>, <a class=\"reference internal\" href=\"class_meshdatatool.html#class-meshdatatool\"><span class=\"std std-ref\">MeshDataTool</span></a>, <a class=\"reference internal\" href=\"class_multiplayerapi.html#class-multiplayerapi\"><span class=\"std std-ref\">MultiplayerAPI</span></a>, <a class=\"reference internal\" href=\"class_mutex.html#class-mutex\"><span class=\"std std-ref\">Mutex</span></a>, <a class=\"reference internal\" href=\"class_navigationpathqueryparameters2d.html#class-navigationpathqueryparameters2d\"><span class=\"std std-ref\">NavigationPathQueryParameters2D</span></a>, <a class=\"reference internal\" href=\"class_navigationpathqueryparameters3d.html#class-navigationpathqueryparameters3d\"><span class=\"std std-ref\">NavigationPathQueryParameters3D</span></a>, <a class=\"reference internal\" href=\"class_navigationpathqueryresult2d.html#class-navigationpathqueryresult2d\"><span class=\"std std-ref\">NavigationPathQueryResult2D</span></a>, <a class=\"reference internal\" href=\"class_navigationpathqueryresult3d.html#class-navigationpathqueryresult3d\"><span class=\"std std-ref\">NavigationPathQueryResult3D</span></a>, <a class=\"reference internal\" href=\"class_node3dgizmo.html#class-node3dgizmo\"><span class=\"std std-ref\">Node3DGizmo</span></a>, <a class=\"reference internal\" href=\"class_oggpacketsequenceplayback.html#class-oggpacketsequenceplayback\"><span class=\"std std-ref\">OggPacketSequencePlayback</span></a>, <a class=\"reference internal\" href=\"class_packeddatacontainerref.html#class-packeddatacontainerref\"><span class=\"std std-ref\">PackedDataContainerRef</span></a>, <a class=\"reference internal\" href=\"class_packetpeer.html#class-packetpeer\"><span class=\"std std-ref\">PacketPeer</span></a>, <a class=\"reference internal\" href=\"class_pckpacker.html#class-pckpacker\"><span class=\"std std-ref\">PCKPacker</span></a>, <a class=\"reference internal\" href=\"class_physicspointqueryparameters2d.html#class-physicspointqueryparameters2d\"><span class=\"std std-ref\">PhysicsPointQueryParameters2D</span></a>, <a class=\"reference internal\" href=\"class_physicspointqueryparameters3d.html#class-physicspointqueryparameters3d\"><span class=\"std std-ref\">PhysicsPointQueryParameters3D</span></a>, <a class=\"reference internal\" href=\"class_physicsrayqueryparameters2d.html#class-physicsrayqueryparameters2d\"><span class=\"std std-ref\">PhysicsRayQueryParameters2D</span></a>, <a class=\"reference internal\" href=\"class_physicsrayqueryparameters3d.html#class-physicsrayqueryparameters3d\"><span class=\"std std-ref\">PhysicsRayQueryParameters3D</span></a>, <a class=\"reference internal\" href=\"class_physicsshapequeryparameters2d.html#class-physicsshapequeryparameters2d\"><span class=\"std std-ref\">PhysicsShapeQueryParameters2D</span></a>, <a class=\"reference internal\" href=\"class_physicsshapequeryparameters3d.html#class-physicsshapequeryparameters3d\"><span class=\"std std-ref\">PhysicsShapeQueryParameters3D</span></a>, <a class=\"reference internal\" href=\"class_physicstestmotionparameters2d.html#class-physicstestmotionparameters2d\"><span class=\"std std-ref\">PhysicsTestMotionParameters2D</span></a>, <a class=\"reference internal\" href=\"class_physicstestmotionparameters3d.html#class-physicstestmotionparameters3d\"><span class=\"std std-ref\">PhysicsTestMotionParameters3D</span></a>, <a class=\"reference internal\" href=\"class_physicstestmotionresult2d.html#class-physicstestmotionresult2d\"><span class=\"std std-ref\">PhysicsTestMotionResult2D</span></a>, <a class=\"reference internal\" href=\"class_physicstestmotionresult3d.html#class-physicstestmotionresult3d\"><span class=\"std std-ref\">PhysicsTestMotionResult3D</span></a>, <a class=\"reference internal\" href=\"class_randomnumbergenerator.html#class-randomnumbergenerator\"><span class=\"std std-ref\">RandomNumberGenerator</span></a>, <a class=\"reference internal\" href=\"class_rdattachmentformat.html#class-rdattachmentformat\"><span class=\"std std-ref\">RDAttachmentFormat</span></a>, <a class=\"reference internal\" href=\"class_rdframebufferpass.html#class-rdframebufferpass\"><span class=\"std std-ref\">RDFramebufferPass</span></a>, <a class=\"reference internal\" href=\"class_rdpipelinecolorblendstate.html#class-rdpipelinecolorblendstate\"><span class=\"std std-ref\">RDPipelineColorBlendState</span></a>, <a class=\"reference internal\" href=\"class_rdpipelinecolorblendstateattachment.html#class-rdpipelinecolorblendstateattachment\"><span class=\"std std-ref\">RDPipelineColorBlendStateAttachment</span></a>, <a class=\"reference internal\" href=\"class_rdpipelinedepthstencilstate.html#class-rdpipelinedepthstencilstate\"><span class=\"std std-ref\">RDPipelineDepthStencilState</span></a>, <a class=\"reference internal\" href=\"class_rdpipelinemultisamplestate.html#class-rdpipelinemultisamplestate\"><span class=\"std std-ref\">RDPipelineMultisampleState</span></a>, <a class=\"reference internal\" href=\"class_rdpipelinerasterizationstate.html#class-rdpipelinerasterizationstate\"><span class=\"std std-ref\">RDPipelineRasterizationState</span></a>, <a class=\"reference internal\" href=\"class_rdpipelinespecializationconstant.html#class-rdpipelinespecializationconstant\"><span class=\"std std-ref\">RDPipelineSpecializationConstant</span></a>, <a class=\"reference internal\" href=\"class_rdsamplerstate.html#class-rdsamplerstate\"><span class=\"std std-ref\">RDSamplerState</span></a>, <a class=\"reference internal\" href=\"class_rdshadersource.html#class-rdshadersource\"><span class=\"std std-ref\">RDShaderSource</span></a>, <a class=\"reference internal\" href=\"class_rdtextureformat.html#class-rdtextureformat\"><span class=\"std std-ref\">RDTextureFormat</span></a>, <a class=\"reference internal\" href=\"class_rdtextureview.html#class-rdtextureview\"><span class=\"std std-ref\">RDTextureView</span></a>, <a class=\"reference internal\" href=\"class_rduniform.html#class-rduniform\"><span class=\"std std-ref\">RDUniform</span></a>, <a class=\"reference internal\" href=\"class_rdvertexattribute.html#class-rdvertexattribute\"><span class=\"std std-ref\">RDVertexAttribute</span></a>, <a class=\"reference internal\" href=\"class_regex.html#class-regex\"><span class=\"std std-ref\">RegEx</span></a>, <a class=\"reference internal\" href=\"class_regexmatch.html#class-regexmatch\"><span class=\"std std-ref\">RegExMatch</span></a>, <a class=\"reference internal\" href=\"class_resource.html#class-resource\"><span class=\"std std-ref\">Resource</span></a>, <a class=\"reference internal\" href=\"class_resourceformatloader.html#class-resourceformatloader\"><span class=\"std std-ref\">ResourceFormatLoader</span></a>, <a class=\"reference internal\" href=\"class_resourceformatsaver.html#class-resourceformatsaver\"><span class=\"std std-ref\">ResourceFormatSaver</span></a>, <a class=\"reference internal\" href=\"class_resourceimporter.html#class-resourceimporter\"><span class=\"std std-ref\">ResourceImporter</span></a>, <a class=\"reference internal\" href=\"class_scenestate.html#class-scenestate\"><span class=\"std std-ref\">SceneState</span></a>, <a class=\"reference internal\" href=\"class_scenetreetimer.html#class-scenetreetimer\"><span class=\"std std-ref\">SceneTreeTimer</span></a>, <a class=\"reference internal\" href=\"class_semaphore.html#class-semaphore\"><span class=\"std std-ref\">Semaphore</span></a>, <a class=\"reference internal\" href=\"class_skinreference.html#class-skinreference\"><span class=\"std std-ref\">SkinReference</span></a>, <a class=\"reference internal\" href=\"class_streampeer.html#class-streampeer\"><span class=\"std std-ref\">StreamPeer</span></a>, <a class=\"reference internal\" href=\"class_surfacetool.html#class-surfacetool\"><span class=\"std std-ref\">SurfaceTool</span></a>, <a class=\"reference internal\" href=\"class_tcpserver.html#class-tcpserver\"><span class=\"std std-ref\">TCPServer</span></a>, <a class=\"reference internal\" href=\"class_textline.html#class-textline\"><span class=\"std std-ref\">TextLine</span></a>, <a class=\"reference internal\" href=\"class_textparagraph.html#class-textparagraph\"><span class=\"std std-ref\">TextParagraph</span></a>, <a class=\"reference internal\" href=\"class_textserver.html#class-textserver\"><span class=\"std std-ref\">TextServer</span></a>, <a class=\"reference internal\" href=\"class_thread.html#class-thread\"><span class=\"std std-ref\">Thread</span></a>, <a class=\"reference internal\" href=\"class_tlsoptions.html#class-tlsoptions\"><span class=\"std std-ref\">TLSOptions</span></a>, <a class=\"reference internal\" href=\"class_trianglemesh.html#class-trianglemesh\"><span class=\"std std-ref\">TriangleMesh</span></a>, <a class=\"reference internal\" href=\"class_tween.html#class-tween\"><span class=\"std std-ref\">Tween</span></a>, <a class=\"reference internal\" href=\"class_tweener.html#class-tweener\"><span class=\"std std-ref\">Tweener</span></a>, <a class=\"reference internal\" href=\"class_udpserver.html#class-udpserver\"><span class=\"std std-ref\">UDPServer</span></a>, <a class=\"reference internal\" href=\"class_upnp.html#class-upnp\"><span class=\"std std-ref\">UPNP</span></a>, <a class=\"reference internal\" href=\"class_upnpdevice.html#class-upnpdevice\"><span class=\"std std-ref\">UPNPDevice</span></a>, <a class=\"reference internal\" href=\"class_weakref.html#class-weakref\"><span class=\"std std-ref\">WeakRef</span></a>, <a class=\"reference internal\" href=\"class_webrtcpeerconnection.html#class-webrtcpeerconnection\"><span class=\"std std-ref\">WebRTCPeerConnection</span></a>, <a class=\"reference internal\" href=\"class_xmlparser.html#class-xmlparser\"><span class=\"std std-ref\">XMLParser</span></a>, <a class=\"reference internal\" href=\"class_xrinterface.html#class-xrinterface\"><span class=\"std std-ref\">XRInterface</span></a>, <a class=\"reference internal\" href=\"class_xrpose.html#class-xrpose\"><span class=\"std std-ref\">XRPose</span></a>, <a class=\"reference internal\" href=\"class_xrpositionaltracker.html#class-xrpositionaltracker\"><span class=\"std std-ref\">XRPositionalTracker</span></a>, <a class=\"reference internal\" href=\"class_zippacker.html#class-zippacker\"><span class=\"std std-ref\">ZIPPacker</span></a>, <a class=\"reference internal\" href=\"class_zipreader.html#class-zipreader\"><span class=\"std std-ref\">ZIPReader</span></a></p><p>Base class for reference-counted objects.</p>",
                "description": "\n\n<p>Base class for any object that keeps a reference count. <a class=\"reference internal\" href=\"class_resource.html#class-resource\"><span class=\"std std-ref\">Resource</span></a> and many other helper objects inherit this class.</p>\n<p>Unlike other <a class=\"reference internal\" href=\"class_object.html#class-object\"><span class=\"std std-ref\">Object</span></a> types, <strong>RefCounted</strong>s keep an internal reference counter so that they are automatically released when no longer in use, and only then. <strong>RefCounted</strong>s therefore do not need to be freed manually with <a class=\"reference internal\" href=\"class_object.html#class-object-method-free\"><span class=\"std std-ref\">Object.free</span></a>.</p>\n<p>In the vast majority of use cases, instantiating and using <strong>RefCounted</strong>-derived types is all you need to do. The methods provided in this class are only for advanced users, and can cause issues if misused.</p>\n<p><strong>Note:</strong> In C#, reference-counted objects will not be freed instantly after they are no longer in use. Instead, garbage collection will run periodically and will free reference-counted objects that are no longer in use. This means that unused ones will linger on for a while before being removed.</p>\n"
            },
            "class_regex": {
                "url": "https://docs.godotengine.org/en/4.1/classes/class_regex.html",
                "title": "RegEx",
                "blurb": "<p><strong>Inherits:</strong> <a class=\"reference internal\" href=\"class_refcounted.html#class-refcounted\"><span class=\"std std-ref\">RefCounted</span></a> <strong>&lt;</strong> <a class=\"reference internal\" href=\"class_object.html#class-object\"><span class=\"std std-ref\">Object</span></a></p><p>Class for searching text for patterns using regular expressions.</p>",
                "description": "\n\n<p>A regular expression (or regex) is a compact language that can be used to recognize strings that follow a specific pattern, such as URLs, email addresses, complete sentences, etc. For example, a regex of <code class=\"docutils literal notranslate\"><span class=\"pre\">ab[0-9]</span></code> would find any string that is <code class=\"docutils literal notranslate\"><span class=\"pre\">ab</span></code> followed by any number from <code class=\"docutils literal notranslate\"><span class=\"pre\">0</span></code> to <code class=\"docutils literal notranslate\"><span class=\"pre\">9</span></code>. For a more in-depth look, you can easily find various tutorials and detailed explanations on the Internet.</p>\n<p>To begin, the RegEx object needs to be compiled with the search pattern using <a class=\"reference internal\" href=\"#class-regex-method-compile\"><span class=\"std std-ref\">compile</span></a> before it can be used.</p>\n<div class=\"highlight-gdscript notranslate\"><div class=\"highlight\"><pre><span></span><span class=\"k\">var</span> <span class=\"n\">regex</span> <span class=\"o\">=</span> <span class=\"n\">RegEx</span><span class=\"o\">.</span><span class=\"n\">new</span><span class=\"p\">()</span>\n<span class=\"n\">regex</span><span class=\"o\">.</span><span class=\"n\">compile</span><span class=\"p\">(</span><span class=\"s2\">\"</span><span class=\"se\">\\\\</span><span class=\"s2\">w-(</span><span class=\"se\">\\\\</span><span class=\"s2\">d+)\"</span><span class=\"p\">)</span>\n</pre></div>\n</div>\n<p>The search pattern must be escaped first for GDScript before it is escaped for the expression. For example, <code class=\"docutils literal notranslate\"><span class=\"pre\">compile(\"\\\\d+\")</span></code> would be read by RegEx as <code class=\"docutils literal notranslate\"><span class=\"pre\">\\d+</span></code>. Similarly, <code class=\"docutils literal notranslate\"><span class=\"pre\">compile(\"\\\"(?:\\\\\\\\.|[^\\\"])*\\\"\")</span></code> would be read as <code class=\"docutils literal notranslate\"><span class=\"pre\">\"(?:\\\\.|[^\"])*\"</span></code>.</p>\n<p>Using <a class=\"reference internal\" href=\"#class-regex-method-search\"><span class=\"std std-ref\">search</span></a>, you can find the pattern within the given text. If a pattern is found, <a class=\"reference internal\" href=\"class_regexmatch.html#class-regexmatch\"><span class=\"std std-ref\">RegExMatch</span></a> is returned and you can retrieve details of the results using methods such as <a class=\"reference internal\" href=\"class_regexmatch.html#class-regexmatch-method-get-string\"><span class=\"std std-ref\">RegExMatch.get_string</span></a> and <a class=\"reference internal\" href=\"class_regexmatch.html#class-regexmatch-method-get-start\"><span class=\"std std-ref\">RegExMatch.get_start</span></a>.</p>\n<div class=\"highlight-gdscript notranslate\"><div class=\"highlight\"><pre><span></span><span class=\"k\">var</span> <span class=\"n\">regex</span> <span class=\"o\">=</span> <span class=\"n\">RegEx</span><span class=\"o\">.</span><span class=\"n\">new</span><span class=\"p\">()</span>\n<span class=\"n\">regex</span><span class=\"o\">.</span><span class=\"n\">compile</span><span class=\"p\">(</span><span class=\"s2\">\"</span><span class=\"se\">\\\\</span><span class=\"s2\">w-(</span><span class=\"se\">\\\\</span><span class=\"s2\">d+)\"</span><span class=\"p\">)</span>\n<span class=\"k\">var</span> <span class=\"n\">result</span> <span class=\"o\">=</span> <span class=\"n\">regex</span><span class=\"o\">.</span><span class=\"n\">search</span><span class=\"p\">(</span><span class=\"s2\">\"abc n-0123\"</span><span class=\"p\">)</span>\n<span class=\"k k-ControlFlow\">if</span> <span class=\"n\">result</span><span class=\"p\">:</span>\n    <span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"n\">result</span><span class=\"o\">.</span><span class=\"n\">get_string</span><span class=\"p\">())</span> <span class=\"c1\"># Would print n-0123</span>\n</pre></div>\n</div>\n<p>The results of capturing groups <code class=\"docutils literal notranslate\"><span class=\"pre\">()</span></code> can be retrieved by passing the group number to the various methods in <a class=\"reference internal\" href=\"class_regexmatch.html#class-regexmatch\"><span class=\"std std-ref\">RegExMatch</span></a>. Group 0 is the default and will always refer to the entire pattern. In the above example, calling <code class=\"docutils literal notranslate\"><span class=\"pre\">result.get_string(1)</span></code> would give you <code class=\"docutils literal notranslate\"><span class=\"pre\">0123</span></code>.</p>\n<p>This version of RegEx also supports named capturing groups, and the names can be used to retrieve the results. If two or more groups have the same name, the name would only refer to the first one with a match.</p>\n<div class=\"highlight-gdscript notranslate\"><div class=\"highlight\"><pre><span></span><span class=\"k\">var</span> <span class=\"n\">regex</span> <span class=\"o\">=</span> <span class=\"n\">RegEx</span><span class=\"o\">.</span><span class=\"n\">new</span><span class=\"p\">()</span>\n<span class=\"n\">regex</span><span class=\"o\">.</span><span class=\"n\">compile</span><span class=\"p\">(</span><span class=\"s2\">\"d(?&lt;digit&gt;[0-9]+)|x(?&lt;digit&gt;[0-9a-f]+)\"</span><span class=\"p\">)</span>\n<span class=\"k\">var</span> <span class=\"n\">result</span> <span class=\"o\">=</span> <span class=\"n\">regex</span><span class=\"o\">.</span><span class=\"n\">search</span><span class=\"p\">(</span><span class=\"s2\">\"the number is x2f\"</span><span class=\"p\">)</span>\n<span class=\"k k-ControlFlow\">if</span> <span class=\"n\">result</span><span class=\"p\">:</span>\n    <span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"n\">result</span><span class=\"o\">.</span><span class=\"n\">get_string</span><span class=\"p\">(</span><span class=\"s2\">\"digit\"</span><span class=\"p\">))</span> <span class=\"c1\"># Would print 2f</span>\n</pre></div>\n</div>\n<p>If you need to process multiple results, <a class=\"reference internal\" href=\"#class-regex-method-search-all\"><span class=\"std std-ref\">search_all</span></a> generates a list of all non-overlapping results. This can be combined with a <code class=\"docutils literal notranslate\"><span class=\"pre\">for</span></code> loop for convenience.</p>\n<div class=\"highlight-gdscript notranslate\"><div class=\"highlight\"><pre><span></span><span class=\"k k-ControlFlow\">for</span> <span class=\"n\">result</span> <span class=\"ow\">in</span> <span class=\"n\">regex</span><span class=\"o\">.</span><span class=\"n\">search_all</span><span class=\"p\">(</span><span class=\"s2\">\"d01, d03, d0c, x3f and x42\"</span><span class=\"p\">):</span>\n    <span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"n\">result</span><span class=\"o\">.</span><span class=\"n\">get_string</span><span class=\"p\">(</span><span class=\"s2\">\"digit\"</span><span class=\"p\">))</span>\n<span class=\"c1\"># Would print 01 03 0 3f 42</span>\n</pre></div>\n</div>\n<p><strong>Example of splitting a string using a RegEx:</strong></p>\n<div class=\"highlight-gdscript notranslate\"><div class=\"highlight\"><pre><span></span><span class=\"k\">var</span> <span class=\"n\">regex</span> <span class=\"o\">=</span> <span class=\"n\">RegEx</span><span class=\"o\">.</span><span class=\"n\">new</span><span class=\"p\">()</span>\n<span class=\"n\">regex</span><span class=\"o\">.</span><span class=\"n\">compile</span><span class=\"p\">(</span><span class=\"s2\">\"</span><span class=\"se\">\\\\</span><span class=\"s2\">S+\"</span><span class=\"p\">)</span> <span class=\"c1\"># Negated whitespace character class.</span>\n<span class=\"k\">var</span> <span class=\"n\">results</span> <span class=\"o\">=</span> <span class=\"p\">[]</span>\n<span class=\"k k-ControlFlow\">for</span> <span class=\"n\">result</span> <span class=\"ow\">in</span> <span class=\"n\">regex</span><span class=\"o\">.</span><span class=\"n\">search_all</span><span class=\"p\">(</span><span class=\"s2\">\"One  Two </span><span class=\"se\">\\n\\t</span><span class=\"s2\">Three\"</span><span class=\"p\">):</span>\n    <span class=\"n\">results</span><span class=\"o\">.</span><span class=\"n\">push_back</span><span class=\"p\">(</span><span class=\"n\">result</span><span class=\"o\">.</span><span class=\"n\">get_string</span><span class=\"p\">())</span>\n<span class=\"c1\"># The `results` array now contains \"One\", \"Two\", \"Three\".</span>\n</pre></div>\n</div>\n<p><strong>Note:</strong> Godot's regex implementation is based on the <a class=\"reference external\" href=\"https://www.pcre.org/\">PCRE2</a> library. You can view the full pattern reference <a class=\"reference external\" href=\"https://www.pcre.org/current/doc/html/pcre2pattern.html\">here</a>.</p>\n<p><strong>Tip:</strong> You can use <a class=\"reference external\" href=\"https://regexr.com/\">Regexr</a> to test regular expressions online.</p>\n"
            },
            "class_regexmatch": {
                "url": "https://docs.godotengine.org/en/4.1/classes/class_regexmatch.html",
                "title": "RegExMatch",
                "blurb": "<p><strong>Inherits:</strong> <a class=\"reference internal\" href=\"class_refcounted.html#class-refcounted\"><span class=\"std std-ref\">RefCounted</span></a> <strong>&lt;</strong> <a class=\"reference internal\" href=\"class_object.html#class-object\"><span class=\"std std-ref\">Object</span></a></p><p>Contains the results of a <a class=\"reference internal\" href=\"class_regex.html#class-regex\"><span class=\"std std-ref\">RegEx</span></a> search.</p>",
                "description": "\n\n<p>Contains the results of a single <a class=\"reference internal\" href=\"class_regex.html#class-regex\"><span class=\"std std-ref\">RegEx</span></a> match returned by <a class=\"reference internal\" href=\"class_regex.html#class-regex-method-search\"><span class=\"std std-ref\">RegEx.search</span></a> and <a class=\"reference internal\" href=\"class_regex.html#class-regex-method-search-all\"><span class=\"std std-ref\">RegEx.search_all</span></a>. It can be used to find the position and range of the match and its capturing groups, and it can extract its substring for you.</p>\n"
            },
            "class_renderingdevice": {
                "url": "https://docs.godotengine.org/en/4.1/classes/class_renderingdevice.html",
                "title": "RenderingDevice",
                "blurb": "<p><strong>Inherits:</strong> <a class=\"reference internal\" href=\"class_object.html#class-object\"><span class=\"std std-ref\">Object</span></a></p><p>Abstraction for working with modern low-level graphics APIs.</p>",
                "description": "\n\n<p><strong>RenderingDevice</strong> is an abstraction for working with modern low-level graphics APIs such as Vulkan. Compared to <a class=\"reference internal\" href=\"class_renderingserver.html#class-renderingserver\"><span class=\"std std-ref\">RenderingServer</span></a> (which works with Godot's own rendering subsystems), <strong>RenderingDevice</strong> is much lower-level and allows working more directly with the underlying graphics APIs. <strong>RenderingDevice</strong> is used in Godot to provide support for several modern low-level graphics APIs while reducing the amount of code duplication required. <strong>RenderingDevice</strong> can also be used in your own projects to perform things that are not exposed by <a class=\"reference internal\" href=\"class_renderingserver.html#class-renderingserver\"><span class=\"std std-ref\">RenderingServer</span></a> or high-level nodes, such as using compute shaders.</p>\n<p>On startup, Godot creates a global <strong>RenderingDevice</strong> which can be retrieved using <a class=\"reference internal\" href=\"class_renderingserver.html#class-renderingserver-method-get-rendering-device\"><span class=\"std std-ref\">RenderingServer.get_rendering_device</span></a>. This global <strong>RenderingDevice</strong> performs drawing to the screen.</p>\n<p><strong>Local RenderingDevices:</strong> Using <a class=\"reference internal\" href=\"class_renderingserver.html#class-renderingserver-method-create-local-rendering-device\"><span class=\"std std-ref\">RenderingServer.create_local_rendering_device</span></a>, you can create \"secondary\" rendering devices to perform drawing and GPU compute operations on separate threads.</p>\n<p><strong>Note:</strong> <strong>RenderingDevice</strong> assumes intermediate knowledge of modern graphics APIs such as Vulkan, Direct3D 12, Metal or WebGPU. These graphics APIs are lower-level than OpenGL or Direct3D 11, requiring you to perform what was previously done by the graphics driver itself. If you have difficulty understanding the concepts used in this class, follow the <a class=\"reference external\" href=\"https://vulkan-tutorial.com/\">Vulkan Tutorial</a> or <a class=\"reference external\" href=\"https://vkguide.dev/\">Vulkan Guide</a>. It's recommended to have existing modern OpenGL or Direct3D 11 knowledge before attempting to learn a low-level graphics API.</p>\n<p><strong>Note:</strong> <strong>RenderingDevice</strong> is not available when running in headless mode or when using the Compatibility rendering method.</p>\n"
            },
            "class_renderingserver": {
                "url": "https://docs.godotengine.org/en/4.1/classes/class_renderingserver.html",
                "title": "RenderingServer",
                "blurb": "<p><strong>Inherits:</strong> <a class=\"reference internal\" href=\"class_object.html#class-object\"><span class=\"std std-ref\">Object</span></a></p><p>Server for anything visible.</p>",
                "description": "\n\n<p>The rendering server is the API backend for everything visible. The whole scene system mounts on it to display. The rendering server is completely opaque: the internals are entirely implementation-specific and cannot be accessed.</p>\n<p>The rendering server can be used to bypass the scene/<a class=\"reference internal\" href=\"class_node.html#class-node\"><span class=\"std std-ref\">Node</span></a> system entirely. This can improve performance in cases where the scene system is the bottleneck, but won't improve performance otherwise (for instance, if the GPU is already fully utilized).</p>\n<p>Resources are created using the <code class=\"docutils literal notranslate\"><span class=\"pre\">*_create</span></code> functions. These functions return <a class=\"reference internal\" href=\"class_rid.html#class-rid\"><span class=\"std std-ref\">RID</span></a>s which are not references to the objects themselves, but opaque <em>pointers</em> towards these objects.</p>\n<p>All objects are drawn to a viewport. You can use the <a class=\"reference internal\" href=\"class_viewport.html#class-viewport\"><span class=\"std std-ref\">Viewport</span></a> attached to the <a class=\"reference internal\" href=\"class_scenetree.html#class-scenetree\"><span class=\"std std-ref\">SceneTree</span></a> or you can create one yourself with <a class=\"reference internal\" href=\"#class-renderingserver-method-viewport-create\"><span class=\"std std-ref\">viewport_create</span></a>. When using a custom scenario or canvas, the scenario or canvas needs to be attached to the viewport using <a class=\"reference internal\" href=\"#class-renderingserver-method-viewport-set-scenario\"><span class=\"std std-ref\">viewport_set_scenario</span></a> or <a class=\"reference internal\" href=\"#class-renderingserver-method-viewport-attach-canvas\"><span class=\"std std-ref\">viewport_attach_canvas</span></a>.</p>\n<p><strong>Scenarios:</strong> In 3D, all visual objects must be associated with a scenario. The scenario is a visual representation of the world. If accessing the rendering server from a running game, the scenario can be accessed from the scene tree from any <a class=\"reference internal\" href=\"class_node3d.html#class-node3d\"><span class=\"std std-ref\">Node3D</span></a> node with <a class=\"reference internal\" href=\"class_node3d.html#class-node3d-method-get-world-3d\"><span class=\"std std-ref\">Node3D.get_world_3d</span></a>. Otherwise, a scenario can be created with <a class=\"reference internal\" href=\"#class-renderingserver-method-scenario-create\"><span class=\"std std-ref\">scenario_create</span></a>.</p>\n<p>Similarly, in 2D, a canvas is needed to draw all canvas items.</p>\n<p><strong>3D:</strong> In 3D, all visible objects are comprised of a resource and an instance. A resource can be a mesh, a particle system, a light, or any other 3D object. In order to be visible resources must be attached to an instance using <a class=\"reference internal\" href=\"#class-renderingserver-method-instance-set-base\"><span class=\"std std-ref\">instance_set_base</span></a>. The instance must also be attached to the scenario using <a class=\"reference internal\" href=\"#class-renderingserver-method-instance-set-scenario\"><span class=\"std std-ref\">instance_set_scenario</span></a> in order to be visible. RenderingServer methods that don't have a prefix are usually 3D-specific (but not always).</p>\n<p><strong>2D:</strong> In 2D, all visible objects are some form of canvas item. In order to be visible, a canvas item needs to be the child of a canvas attached to a viewport, or it needs to be the child of another canvas item that is eventually attached to the canvas. 2D-specific RenderingServer methods generally start with <code class=\"docutils literal notranslate\"><span class=\"pre\">canvas_*</span></code>.</p>\n<p><strong>Headless mode:</strong> Starting the engine with the <code class=\"docutils literal notranslate\"><span class=\"pre\">--headless</span></code> <a class=\"reference internal\" href=\"../tutorials/editor/command_line_tutorial.html\"><span class=\"doc\">command line argument</span></a> disables all rendering and window management functions. Most functions from <strong>RenderingServer</strong> will return dummy values in this case.</p>\n"
            },
            "class_resourceformatloader": {
                "url": "https://docs.godotengine.org/en/4.1/classes/class_resourceformatloader.html",
                "title": "ResourceFormatLoader",
                "blurb": "<p><strong>Inherits:</strong> <a class=\"reference internal\" href=\"class_refcounted.html#class-refcounted\"><span class=\"std std-ref\">RefCounted</span></a> <strong>&lt;</strong> <a class=\"reference internal\" href=\"class_object.html#class-object\"><span class=\"std std-ref\">Object</span></a></p><p>Loads a specific resource type from a file.</p>",
                "description": "\n\n<p>Godot loads resources in the editor or in exported games using ResourceFormatLoaders. They are queried automatically via the <a class=\"reference internal\" href=\"class_resourceloader.html#class-resourceloader\"><span class=\"std std-ref\">ResourceLoader</span></a> singleton, or when a resource with internal dependencies is loaded. Each file type may load as a different resource type, so multiple ResourceFormatLoaders are registered in the engine.</p>\n<p>Extending this class allows you to define your own loader. Be sure to respect the documented return types and values. You should give it a global class name with <code class=\"docutils literal notranslate\"><span class=\"pre\">class_name</span></code> for it to be registered. Like built-in ResourceFormatLoaders, it will be called automatically when loading resources of its handled type(s). You may also implement a <a class=\"reference internal\" href=\"class_resourceformatsaver.html#class-resourceformatsaver\"><span class=\"std std-ref\">ResourceFormatSaver</span></a>.</p>\n<p><strong>Note:</strong> You can also extend <a class=\"reference internal\" href=\"class_editorimportplugin.html#class-editorimportplugin\"><span class=\"std std-ref\">EditorImportPlugin</span></a> if the resource type you need exists but Godot is unable to load its format. Choosing one way over another depends on if the format is suitable or not for the final exported game. For example, it's better to import <code class=\"docutils literal notranslate\"><span class=\"pre\">.png</span></code> textures as <code class=\"docutils literal notranslate\"><span class=\"pre\">.ctex</span></code> (<a class=\"reference internal\" href=\"class_compressedtexture2d.html#class-compressedtexture2d\"><span class=\"std std-ref\">CompressedTexture2D</span></a>) first, so they can be loaded with better efficiency on the graphics card.</p>\n"
            },
            "class_resourceformatsaver": {
                "url": "https://docs.godotengine.org/en/4.1/classes/class_resourceformatsaver.html",
                "title": "ResourceFormatSaver",
                "blurb": "<p><strong>Inherits:</strong> <a class=\"reference internal\" href=\"class_refcounted.html#class-refcounted\"><span class=\"std std-ref\">RefCounted</span></a> <strong>&lt;</strong> <a class=\"reference internal\" href=\"class_object.html#class-object\"><span class=\"std std-ref\">Object</span></a></p><p>Saves a specific resource type to a file.</p>",
                "description": "\n\n<p>The engine can save resources when you do it from the editor, or when you use the <a class=\"reference internal\" href=\"class_resourcesaver.html#class-resourcesaver\"><span class=\"std std-ref\">ResourceSaver</span></a> singleton. This is accomplished thanks to multiple <strong>ResourceFormatSaver</strong>s, each handling its own format and called automatically by the engine.</p>\n<p>By default, Godot saves resources as <code class=\"docutils literal notranslate\"><span class=\"pre\">.tres</span></code> (text-based), <code class=\"docutils literal notranslate\"><span class=\"pre\">.res</span></code> (binary) or another built-in format, but you can choose to create your own format by extending this class. Be sure to respect the documented return types and values. You should give it a global class name with <code class=\"docutils literal notranslate\"><span class=\"pre\">class_name</span></code> for it to be registered. Like built-in ResourceFormatSavers, it will be called automatically when saving resources of its recognized type(s). You may also implement a <a class=\"reference internal\" href=\"class_resourceformatloader.html#class-resourceformatloader\"><span class=\"std std-ref\">ResourceFormatLoader</span></a>.</p>\n"
            },
            "class_resourceimporter": {
                "url": "https://docs.godotengine.org/en/4.1/classes/class_resourceimporter.html",
                "title": "ResourceImporter",
                "blurb": "<p><strong>Inherits:</strong> <a class=\"reference internal\" href=\"class_refcounted.html#class-refcounted\"><span class=\"std std-ref\">RefCounted</span></a> <strong>&lt;</strong> <a class=\"reference internal\" href=\"class_object.html#class-object\"><span class=\"std std-ref\">Object</span></a></p><p><strong>Inherited By:</strong> <a class=\"reference internal\" href=\"class_editorimportplugin.html#class-editorimportplugin\"><span class=\"std std-ref\">EditorImportPlugin</span></a></p><p>Base class for resource importers.</p>",
                "description": "\n\n<p>This is the base class for Godot's resource importers. To implement your own resource importers using editor plugins, see <a class=\"reference internal\" href=\"class_editorimportplugin.html#class-editorimportplugin\"><span class=\"std std-ref\">EditorImportPlugin</span></a>.</p>\n"
            },
            "class_resourceloader": {
                "url": "https://docs.godotengine.org/en/4.1/classes/class_resourceloader.html",
                "title": "ResourceLoader",
                "blurb": "<p><strong>Inherits:</strong> <a class=\"reference internal\" href=\"class_object.html#class-object\"><span class=\"std std-ref\">Object</span></a></p><p>A singleton for loading resource files.</p>",
                "description": "\n\n<p>A singleton used to load resource files from the filesystem.</p>\n<p>It uses the many <a class=\"reference internal\" href=\"class_resourceformatloader.html#class-resourceformatloader\"><span class=\"std std-ref\">ResourceFormatLoader</span></a> classes registered in the engine (either built-in or from a plugin) to load files into memory and convert them to a format that can be used by the engine.</p>\n<p><strong>Note:</strong> You have to import the files into the engine first to load them using <a class=\"reference internal\" href=\"#class-resourceloader-method-load\"><span class=\"std std-ref\">load</span></a>. If you want to load <a class=\"reference internal\" href=\"class_image.html#class-image\"><span class=\"std std-ref\">Image</span></a>s at run-time, you may use <a class=\"reference internal\" href=\"class_image.html#class-image-method-load\"><span class=\"std std-ref\">Image.load</span></a>. If you want to import audio files, you can use the snippet described in <a class=\"reference internal\" href=\"class_audiostreammp3.html#class-audiostreammp3-property-data\"><span class=\"std std-ref\">AudioStreamMP3.data</span></a>.</p>\n"
            },
            "class_resourcesaver": {
                "url": "https://docs.godotengine.org/en/4.1/classes/class_resourcesaver.html",
                "title": "ResourceSaver",
                "blurb": "<p><strong>Inherits:</strong> <a class=\"reference internal\" href=\"class_object.html#class-object\"><span class=\"std std-ref\">Object</span></a></p><p>A singleton for saving <a class=\"reference internal\" href=\"class_resource.html#class-resource\"><span class=\"std std-ref\">Resource</span></a>s to the filesystem.</p>",
                "description": "\n\n<p>A singleton for saving resource types to the filesystem.</p>\n<p>It uses the many <a class=\"reference internal\" href=\"class_resourceformatsaver.html#class-resourceformatsaver\"><span class=\"std std-ref\">ResourceFormatSaver</span></a> classes registered in the engine (either built-in or from a plugin) to save resource data to text-based (e.g. <code class=\"docutils literal notranslate\"><span class=\"pre\">.tres</span></code> or <code class=\"docutils literal notranslate\"><span class=\"pre\">.tscn</span></code>) or binary files (e.g. <code class=\"docutils literal notranslate\"><span class=\"pre\">.res</span></code> or <code class=\"docutils literal notranslate\"><span class=\"pre\">.scn</span></code>).</p>\n"
            },
            "class_resourceuid": {
                "url": "https://docs.godotengine.org/en/4.1/classes/class_resourceuid.html",
                "title": "ResourceUID",
                "blurb": "<p><strong>Inherits:</strong> <a class=\"reference internal\" href=\"class_object.html#class-object\"><span class=\"std std-ref\">Object</span></a></p><p>A singleton that manages the unique identifiers of all resources within a project.</p>",
                "description": "\n\n<p>Resource UIDs (Unique IDentifiers) allow the engine to keep references between resources intact, even if files can renamed or moved. They can be accessed with <code class=\"docutils literal notranslate\"><span class=\"pre\">uid://</span></code>.</p>\n<p><strong>ResourceUID</strong> keeps track of all registered resource UIDs in a project, generates new UIDs, and converts between their string and integer representations.</p>\n"
            },
            "class_scenemultiplayer": {
                "url": "https://docs.godotengine.org/en/4.1/classes/class_scenemultiplayer.html",
                "title": "SceneMultiplayer",
                "blurb": "<p><strong>Inherits:</strong> <a class=\"reference internal\" href=\"class_multiplayerapi.html#class-multiplayerapi\"><span class=\"std std-ref\">MultiplayerAPI</span></a> <strong>&lt;</strong> <a class=\"reference internal\" href=\"class_refcounted.html#class-refcounted\"><span class=\"std std-ref\">RefCounted</span></a> <strong>&lt;</strong> <a class=\"reference internal\" href=\"class_object.html#class-object\"><span class=\"std std-ref\">Object</span></a></p><p>High-level multiplayer API implementation.</p>",
                "description": "\n\n<p>This class is the default implementation of <a class=\"reference internal\" href=\"class_multiplayerapi.html#class-multiplayerapi\"><span class=\"std std-ref\">MultiplayerAPI</span></a>, used to provide multiplayer functionalities in Godot Engine.</p>\n<p>This implementation supports RPCs via <a class=\"reference internal\" href=\"class_node.html#class-node-method-rpc\"><span class=\"std std-ref\">Node.rpc</span></a> and <a class=\"reference internal\" href=\"class_node.html#class-node-method-rpc-id\"><span class=\"std std-ref\">Node.rpc_id</span></a> and requires <a class=\"reference internal\" href=\"class_multiplayerapi.html#class-multiplayerapi-method-rpc\"><span class=\"std std-ref\">MultiplayerAPI.rpc</span></a> to be passed a <a class=\"reference internal\" href=\"class_node.html#class-node\"><span class=\"std std-ref\">Node</span></a> (it will fail for other object types).</p>\n<p>This implementation additionally provide <a class=\"reference internal\" href=\"class_scenetree.html#class-scenetree\"><span class=\"std std-ref\">SceneTree</span></a> replication via the <a class=\"reference internal\" href=\"class_multiplayerspawner.html#class-multiplayerspawner\"><span class=\"std std-ref\">MultiplayerSpawner</span></a> and <a class=\"reference internal\" href=\"class_multiplayersynchronizer.html#class-multiplayersynchronizer\"><span class=\"std std-ref\">MultiplayerSynchronizer</span></a> nodes, and the <a class=\"reference internal\" href=\"class_scenereplicationconfig.html#class-scenereplicationconfig\"><span class=\"std std-ref\">SceneReplicationConfig</span></a> resource.</p>\n<p><strong>Note:</strong> The high-level multiplayer API protocol is an implementation detail and isn't meant to be used by non-Godot servers. It may change without notice.</p>\n<p><strong>Note:</strong> When exporting to Android, make sure to enable the <code class=\"docutils literal notranslate\"><span class=\"pre\">INTERNET</span></code> permission in the Android export preset before exporting the project or using one-click deploy. Otherwise, network communication of any kind will be blocked by Android.</p>\n"
            },
            "class_scenestate": {
                "url": "https://docs.godotengine.org/en/4.1/classes/class_scenestate.html",
                "title": "SceneState",
                "blurb": "<p><strong>Inherits:</strong> <a class=\"reference internal\" href=\"class_refcounted.html#class-refcounted\"><span class=\"std std-ref\">RefCounted</span></a> <strong>&lt;</strong> <a class=\"reference internal\" href=\"class_object.html#class-object\"><span class=\"std std-ref\">Object</span></a></p><p>Provides access to a scene file's information.</p>",
                "description": "\n\n<p>Maintains a list of resources, nodes, exported and overridden properties, and built-in scripts associated with a scene. They cannot be modified from a <strong>SceneState</strong>, only accessed. Useful for peeking into what a <a class=\"reference internal\" href=\"class_packedscene.html#class-packedscene\"><span class=\"std std-ref\">PackedScene</span></a> contains without instantiating it.</p>\n<p>This class cannot be instantiated directly, it is retrieved for a given scene as the result of <a class=\"reference internal\" href=\"class_packedscene.html#class-packedscene-method-get-state\"><span class=\"std std-ref\">PackedScene.get_state</span></a>.</p>\n"
            },
            "class_scenetree": {
                "url": "https://docs.godotengine.org/en/4.1/classes/class_scenetree.html",
                "title": "SceneTree",
                "blurb": "<p><strong>Inherits:</strong> <a class=\"reference internal\" href=\"class_mainloop.html#class-mainloop\"><span class=\"std std-ref\">MainLoop</span></a> <strong>&lt;</strong> <a class=\"reference internal\" href=\"class_object.html#class-object\"><span class=\"std std-ref\">Object</span></a></p><p>Manages the game loop via a hierarchy of nodes.</p>",
                "description": "\n\n<p>As one of the most important classes, the <strong>SceneTree</strong> manages the hierarchy of nodes in a scene as well as scenes themselves. Nodes can be added, retrieved and removed. The whole scene tree (and thus the current scene) can be paused. Scenes can be loaded, switched and reloaded.</p>\n<p>You can also use the <strong>SceneTree</strong> to organize your nodes into groups: every node can be assigned as many groups as you want to create, e.g. an \"enemy\" group. You can then iterate these groups or even call methods and set properties on all the group's members at once.</p>\n<p><strong>SceneTree</strong> is the default <a class=\"reference internal\" href=\"class_mainloop.html#class-mainloop\"><span class=\"std std-ref\">MainLoop</span></a> implementation used by scenes, and is thus in charge of the game loop.</p>\n"
            },
            "class_scenetreetimer": {
                "url": "https://docs.godotengine.org/en/4.1/classes/class_scenetreetimer.html",
                "title": "SceneTreeTimer",
                "blurb": "<p><strong>Inherits:</strong> <a class=\"reference internal\" href=\"class_refcounted.html#class-refcounted\"><span class=\"std std-ref\">RefCounted</span></a> <strong>&lt;</strong> <a class=\"reference internal\" href=\"class_object.html#class-object\"><span class=\"std std-ref\">Object</span></a></p><p>One-shot timer.</p>",
                "description": "\n\n<p>A one-shot timer managed by the scene tree, which emits <a class=\"reference internal\" href=\"#class-scenetreetimer-signal-timeout\"><span class=\"std std-ref\">timeout</span></a> on completion. See also <a class=\"reference internal\" href=\"class_scenetree.html#class-scenetree-method-create-timer\"><span class=\"std std-ref\">SceneTree.create_timer</span></a>.</p>\n<p>As opposed to <a class=\"reference internal\" href=\"class_timer.html#class-timer\"><span class=\"std std-ref\">Timer</span></a>, it does not require the instantiation of a node. Commonly used to create a one-shot delay timer as in the following example:</p>\n<div class=\"sphinx-tabs docutils container\">\n<div aria-label=\"Tabbed content\" class=\"closeable\" role=\"tablist\"><button aria-controls=\"panel-0-R0RTY3JpcHQ=\" aria-selected=\"true\" class=\"sphinx-tabs-tab code-tab group-tab\" id=\"tab-0-R0RTY3JpcHQ=\" name=\"R0RTY3JpcHQ=\" role=\"tab\" tabindex=\"0\">GDScript</button><button aria-controls=\"panel-0-QyM=\" aria-selected=\"false\" class=\"sphinx-tabs-tab code-tab group-tab\" id=\"tab-0-QyM=\" name=\"QyM=\" role=\"tab\" tabindex=\"-1\">C#</button></div><div aria-labelledby=\"tab-0-R0RTY3JpcHQ=\" class=\"sphinx-tabs-panel code-tab group-tab\" id=\"panel-0-R0RTY3JpcHQ=\" name=\"R0RTY3JpcHQ=\" role=\"tabpanel\" tabindex=\"0\"><div class=\"highlight-gdscript notranslate\"><div class=\"highlight\"><pre><span></span><span class=\"k\">func</span> <span class=\"n\">some_function</span><span class=\"p\">():</span>\n    <span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"s2\">\"Timer started.\"</span><span class=\"p\">)</span>\n    <span class=\"k\">await</span> <span class=\"n\">get_tree</span><span class=\"p\">()</span><span class=\"o\">.</span><span class=\"n\">create_timer</span><span class=\"p\">(</span><span class=\"mf\">1.0</span><span class=\"p\">)</span><span class=\"o\">.</span><span class=\"n\">timeout</span>\n    <span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"s2\">\"Timer ended.\"</span><span class=\"p\">)</span>\n</pre></div>\n</div>\n</div><div aria-labelledby=\"tab-0-QyM=\" class=\"sphinx-tabs-panel code-tab group-tab\" hidden=\"true\" id=\"panel-0-QyM=\" name=\"QyM=\" role=\"tabpanel\" tabindex=\"0\"><div class=\"highlight-csharp notranslate\"><div class=\"highlight\"><pre><span></span><span class=\"k\">public</span><span class=\"w\"> </span><span class=\"k\">async</span><span class=\"w\"> </span><span class=\"n\">Task</span><span class=\"w\"> </span><span class=\"nf\">SomeFunction</span><span class=\"p\">()</span>\n<span class=\"p\">{</span>\n<span class=\"w\">    </span><span class=\"n\">GD</span><span class=\"p\">.</span><span class=\"n\">Print</span><span class=\"p\">(</span><span class=\"s\">\"Timer started.\"</span><span class=\"p\">);</span>\n<span class=\"w\">    </span><span class=\"k\">await</span><span class=\"w\"> </span><span class=\"nf\">ToSignal</span><span class=\"p\">(</span><span class=\"n\">GetTree</span><span class=\"p\">().</span><span class=\"n\">CreateTimer</span><span class=\"p\">(</span><span class=\"m\">1.0f</span><span class=\"p\">),</span><span class=\"w\"> </span><span class=\"n\">SceneTreeTimer</span><span class=\"p\">.</span><span class=\"n\">SignalName</span><span class=\"p\">.</span><span class=\"n\">Timeout</span><span class=\"p\">);</span>\n<span class=\"w\">    </span><span class=\"n\">GD</span><span class=\"p\">.</span><span class=\"n\">Print</span><span class=\"p\">(</span><span class=\"s\">\"Timer ended.\"</span><span class=\"p\">);</span>\n<span class=\"p\">}</span>\n</pre></div>\n</div>\n</div></div>\n<p>The timer will be dereferenced after its time elapses. To preserve the timer, you can keep a reference to it. See <a class=\"reference internal\" href=\"class_refcounted.html#class-refcounted\"><span class=\"std std-ref\">RefCounted</span></a>.</p>\n<p><strong>Note:</strong> The timer is processed after all of the nodes in the current frame, i.e. node's <a class=\"reference internal\" href=\"class_node.html#class-node-method-process\"><span class=\"std std-ref\">Node._process</span></a> method would be called before the timer (or <a class=\"reference internal\" href=\"class_node.html#class-node-method-physics-process\"><span class=\"std std-ref\">Node._physics_process</span></a> if <code class=\"docutils literal notranslate\"><span class=\"pre\">process_in_physics</span></code> in <a class=\"reference internal\" href=\"class_scenetree.html#class-scenetree-method-create-timer\"><span class=\"std std-ref\">SceneTree.create_timer</span></a> has been set to <code class=\"docutils literal notranslate\"><span class=\"pre\">true</span></code>).</p>\n"
            },
            "class_scriptlanguage": {
                "url": "https://docs.godotengine.org/en/4.1/classes/class_scriptlanguage.html",
                "title": "ScriptLanguage",
                "blurb": "<p><strong>Inherits:</strong> <a class=\"reference internal\" href=\"class_object.html#class-object\"><span class=\"std std-ref\">Object</span></a></p><p><strong>Inherited By:</strong> <a class=\"reference internal\" href=\"class_scriptlanguageextension.html#class-scriptlanguageextension\"><span class=\"std std-ref\">ScriptLanguageExtension</span></a></p>",
                "description": null
            },
            "class_scriptlanguageextension": {
                "url": "https://docs.godotengine.org/en/4.1/classes/class_scriptlanguageextension.html",
                "title": "ScriptLanguageExtension",
                "blurb": "<p><strong>Inherits:</strong> <a class=\"reference internal\" href=\"class_scriptlanguage.html#class-scriptlanguage\"><span class=\"std std-ref\">ScriptLanguage</span></a> <strong>&lt;</strong> <a class=\"reference internal\" href=\"class_object.html#class-object\"><span class=\"std std-ref\">Object</span></a></p>",
                "description": null
            },
            "class_semaphore": {
                "url": "https://docs.godotengine.org/en/4.1/classes/class_semaphore.html",
                "title": "Semaphore",
                "blurb": "<p><strong>Inherits:</strong> <a class=\"reference internal\" href=\"class_refcounted.html#class-refcounted\"><span class=\"std std-ref\">RefCounted</span></a> <strong>&lt;</strong> <a class=\"reference internal\" href=\"class_object.html#class-object\"><span class=\"std std-ref\">Object</span></a></p><p>A synchronization mechanism used to control access to a shared resource by <a class=\"reference internal\" href=\"class_thread.html#class-thread\"><span class=\"std std-ref\">Thread</span></a>s.</p>",
                "description": "\n\n<p>A synchronization semaphore that can be used to synchronize multiple <a class=\"reference internal\" href=\"class_thread.html#class-thread\"><span class=\"std std-ref\">Thread</span></a>s. Initialized to zero on creation. For a binary version, see <a class=\"reference internal\" href=\"class_mutex.html#class-mutex\"><span class=\"std std-ref\">Mutex</span></a>.</p>\n<p><strong>Warning:</strong> Semaphores must be used carefully to avoid deadlocks.</p>\n<p><strong>Warning:</strong> To guarantee that the operating system is able to perform proper cleanup (no crashes, no deadlocks), these conditions must be met:</p>\n<ul class=\"simple\">\n<li><p>When a <strong>Semaphore</strong>'s reference count reaches zero and it is therefore destroyed, no threads must be waiting on it.</p></li>\n<li><p>When a <a class=\"reference internal\" href=\"class_thread.html#class-thread\"><span class=\"std std-ref\">Thread</span></a>'s reference count reaches zero and it is therefore destroyed, it must not be waiting on any semaphore.</p></li>\n</ul>\n"
            },
            "class_skinreference": {
                "url": "https://docs.godotengine.org/en/4.1/classes/class_skinreference.html",
                "title": "SkinReference",
                "blurb": "<p><strong>Inherits:</strong> <a class=\"reference internal\" href=\"class_refcounted.html#class-refcounted\"><span class=\"std std-ref\">RefCounted</span></a> <strong>&lt;</strong> <a class=\"reference internal\" href=\"class_object.html#class-object\"><span class=\"std std-ref\">Object</span></a></p>",
                "description": null
            },
            "class_streampeer": {
                "url": "https://docs.godotengine.org/en/4.1/classes/class_streampeer.html",
                "title": "StreamPeer",
                "blurb": "<p><strong>Inherits:</strong> <a class=\"reference internal\" href=\"class_refcounted.html#class-refcounted\"><span class=\"std std-ref\">RefCounted</span></a> <strong>&lt;</strong> <a class=\"reference internal\" href=\"class_object.html#class-object\"><span class=\"std std-ref\">Object</span></a></p><p><strong>Inherited By:</strong> <a class=\"reference internal\" href=\"class_streampeerbuffer.html#class-streampeerbuffer\"><span class=\"std std-ref\">StreamPeerBuffer</span></a>, <a class=\"reference internal\" href=\"class_streampeerextension.html#class-streampeerextension\"><span class=\"std std-ref\">StreamPeerExtension</span></a>, <a class=\"reference internal\" href=\"class_streampeergzip.html#class-streampeergzip\"><span class=\"std std-ref\">StreamPeerGZIP</span></a>, <a class=\"reference internal\" href=\"class_streampeertcp.html#class-streampeertcp\"><span class=\"std std-ref\">StreamPeerTCP</span></a>, <a class=\"reference internal\" href=\"class_streampeertls.html#class-streampeertls\"><span class=\"std std-ref\">StreamPeerTLS</span></a></p><p>Abstract base class for interacting with streams.</p>",
                "description": "\n\n<p>StreamPeer is an abstract base class mostly used for stream-based protocols (such as TCP). It provides an API for sending and receiving data through streams as raw data or strings.</p>\n<p><strong>Note:</strong> When exporting to Android, make sure to enable the <code class=\"docutils literal notranslate\"><span class=\"pre\">INTERNET</span></code> permission in the Android export preset before exporting the project or using one-click deploy. Otherwise, network communication of any kind will be blocked by Android.</p>\n"
            },
            "class_streampeerbuffer": {
                "url": "https://docs.godotengine.org/en/4.1/classes/class_streampeerbuffer.html",
                "title": "StreamPeerBuffer",
                "blurb": "<p><strong>Inherits:</strong> <a class=\"reference internal\" href=\"class_streampeer.html#class-streampeer\"><span class=\"std std-ref\">StreamPeer</span></a> <strong>&lt;</strong> <a class=\"reference internal\" href=\"class_refcounted.html#class-refcounted\"><span class=\"std std-ref\">RefCounted</span></a> <strong>&lt;</strong> <a class=\"reference internal\" href=\"class_object.html#class-object\"><span class=\"std std-ref\">Object</span></a></p><p>A stream peer used to handle binary data streams.</p>",
                "description": "\n\n<p>A data buffer stream peer that uses a byte array as the stream. This object can be used to handle binary data from network sessions. To handle binary data stored in files, <a class=\"reference internal\" href=\"class_fileaccess.html#class-fileaccess\"><span class=\"std std-ref\">FileAccess</span></a> can be used directly.</p>\n<p>A <strong>StreamPeerBuffer</strong> object keeps an internal cursor which is the offset in bytes to the start of the buffer. Get and put operations are performed at the cursor position and will move the cursor accordingly.</p>\n"
            },
            "class_streampeerextension": {
                "url": "https://docs.godotengine.org/en/4.1/classes/class_streampeerextension.html",
                "title": "StreamPeerExtension",
                "blurb": "<p><strong>Inherits:</strong> <a class=\"reference internal\" href=\"class_streampeer.html#class-streampeer\"><span class=\"std std-ref\">StreamPeer</span></a> <strong>&lt;</strong> <a class=\"reference internal\" href=\"class_refcounted.html#class-refcounted\"><span class=\"std std-ref\">RefCounted</span></a> <strong>&lt;</strong> <a class=\"reference internal\" href=\"class_object.html#class-object\"><span class=\"std std-ref\">Object</span></a></p>",
                "description": null
            },
            "class_streampeergzip": {
                "url": "https://docs.godotengine.org/en/4.1/classes/class_streampeergzip.html",
                "title": "StreamPeerGZIP",
                "blurb": "<p><strong>Inherits:</strong> <a class=\"reference internal\" href=\"class_streampeer.html#class-streampeer\"><span class=\"std std-ref\">StreamPeer</span></a> <strong>&lt;</strong> <a class=\"reference internal\" href=\"class_refcounted.html#class-refcounted\"><span class=\"std std-ref\">RefCounted</span></a> <strong>&lt;</strong> <a class=\"reference internal\" href=\"class_object.html#class-object\"><span class=\"std std-ref\">Object</span></a></p><p>A stream peer that handles GZIP and deflate compression/decompression.</p>",
                "description": "\n\n<p>This class allows to compress or decompress data using GZIP/deflate in a streaming fashion. This is particularly useful when compressing or decompressing files that have to be sent through the network without needing to allocate them all in memory.</p>\n<p>After starting the stream via <a class=\"reference internal\" href=\"#class-streampeergzip-method-start-compression\"><span class=\"std std-ref\">start_compression</span></a> (or <a class=\"reference internal\" href=\"#class-streampeergzip-method-start-decompression\"><span class=\"std std-ref\">start_decompression</span></a>), calling <a class=\"reference internal\" href=\"class_streampeer.html#class-streampeer-method-put-partial-data\"><span class=\"std std-ref\">StreamPeer.put_partial_data</span></a> on this stream will compress (or decompress) the data, writing it to the internal buffer. Calling <a class=\"reference internal\" href=\"class_streampeer.html#class-streampeer-method-get-available-bytes\"><span class=\"std std-ref\">StreamPeer.get_available_bytes</span></a> will return the pending bytes in the internal buffer, and <a class=\"reference internal\" href=\"class_streampeer.html#class-streampeer-method-get-partial-data\"><span class=\"std std-ref\">StreamPeer.get_partial_data</span></a> will retrieve the compressed (or decompressed) bytes from it. When the stream is over, you must call <a class=\"reference internal\" href=\"#class-streampeergzip-method-finish\"><span class=\"std std-ref\">finish</span></a> to ensure the internal buffer is properly flushed (make sure to call <a class=\"reference internal\" href=\"class_streampeer.html#class-streampeer-method-get-available-bytes\"><span class=\"std std-ref\">StreamPeer.get_available_bytes</span></a> on last time to check if more data needs to be read after that).</p>\n"
            },
            "class_streampeertcp": {
                "url": "https://docs.godotengine.org/en/4.1/classes/class_streampeertcp.html",
                "title": "StreamPeerTCP",
                "blurb": "<p><strong>Inherits:</strong> <a class=\"reference internal\" href=\"class_streampeer.html#class-streampeer\"><span class=\"std std-ref\">StreamPeer</span></a> <strong>&lt;</strong> <a class=\"reference internal\" href=\"class_refcounted.html#class-refcounted\"><span class=\"std std-ref\">RefCounted</span></a> <strong>&lt;</strong> <a class=\"reference internal\" href=\"class_object.html#class-object\"><span class=\"std std-ref\">Object</span></a></p><p>A stream peer that handles TCP connections.</p>",
                "description": "\n\n<p>A stream peer that handles TCP connections. This object can be used to connect to TCP servers, or also is returned by a TCP server.</p>\n<p><strong>Note:</strong> When exporting to Android, make sure to enable the <code class=\"docutils literal notranslate\"><span class=\"pre\">INTERNET</span></code> permission in the Android export preset before exporting the project or using one-click deploy. Otherwise, network communication of any kind will be blocked by Android.</p>\n"
            },
            "class_streampeertls": {
                "url": "https://docs.godotengine.org/en/4.1/classes/class_streampeertls.html",
                "title": "StreamPeerTLS",
                "blurb": "<p><strong>Inherits:</strong> <a class=\"reference internal\" href=\"class_streampeer.html#class-streampeer\"><span class=\"std std-ref\">StreamPeer</span></a> <strong>&lt;</strong> <a class=\"reference internal\" href=\"class_refcounted.html#class-refcounted\"><span class=\"std std-ref\">RefCounted</span></a> <strong>&lt;</strong> <a class=\"reference internal\" href=\"class_object.html#class-object\"><span class=\"std std-ref\">Object</span></a></p><p>A stream peer that handles TLS connections.</p>",
                "description": "\n\n<p>A stream peer that handles TLS connections. This object can be used to connect to a TLS server or accept a single TLS client connection.</p>\n<p><strong>Note:</strong> When exporting to Android, make sure to enable the <code class=\"docutils literal notranslate\"><span class=\"pre\">INTERNET</span></code> permission in the Android export preset before exporting the project or using one-click deploy. Otherwise, network communication of any kind will be blocked by Android.</p>\n"
            },
            "class_surfacetool": {
                "url": "https://docs.godotengine.org/en/4.1/classes/class_surfacetool.html",
                "title": "SurfaceTool",
                "blurb": "<p><strong>Inherits:</strong> <a class=\"reference internal\" href=\"class_refcounted.html#class-refcounted\"><span class=\"std std-ref\">RefCounted</span></a> <strong>&lt;</strong> <a class=\"reference internal\" href=\"class_object.html#class-object\"><span class=\"std std-ref\">Object</span></a></p><p>Helper tool to create geometry.</p>",
                "description": "\n\n<p>The <strong>SurfaceTool</strong> is used to construct a <a class=\"reference internal\" href=\"class_mesh.html#class-mesh\"><span class=\"std std-ref\">Mesh</span></a> by specifying vertex attributes individually. It can be used to construct a <a class=\"reference internal\" href=\"class_mesh.html#class-mesh\"><span class=\"std std-ref\">Mesh</span></a> from a script. All properties except indices need to be added before calling <a class=\"reference internal\" href=\"#class-surfacetool-method-add-vertex\"><span class=\"std std-ref\">add_vertex</span></a>. For example, to add vertex colors and UVs:</p>\n<div class=\"sphinx-tabs docutils container\">\n<div aria-label=\"Tabbed content\" class=\"closeable\" role=\"tablist\"><button aria-controls=\"panel-0-R0RTY3JpcHQ=\" aria-selected=\"true\" class=\"sphinx-tabs-tab code-tab group-tab\" id=\"tab-0-R0RTY3JpcHQ=\" name=\"R0RTY3JpcHQ=\" role=\"tab\" tabindex=\"0\">GDScript</button><button aria-controls=\"panel-0-QyM=\" aria-selected=\"false\" class=\"sphinx-tabs-tab code-tab group-tab\" id=\"tab-0-QyM=\" name=\"QyM=\" role=\"tab\" tabindex=\"-1\">C#</button></div><div aria-labelledby=\"tab-0-R0RTY3JpcHQ=\" class=\"sphinx-tabs-panel code-tab group-tab\" id=\"panel-0-R0RTY3JpcHQ=\" name=\"R0RTY3JpcHQ=\" role=\"tabpanel\" tabindex=\"0\"><div class=\"highlight-gdscript notranslate\"><div class=\"highlight\"><pre><span></span><span class=\"k\">var</span> <span class=\"n\">st</span> <span class=\"o\">=</span> <span class=\"n\">SurfaceTool</span><span class=\"o\">.</span><span class=\"n\">new</span><span class=\"p\">()</span>\n<span class=\"n\">st</span><span class=\"o\">.</span><span class=\"n\">begin</span><span class=\"p\">(</span><span class=\"n\">Mesh</span><span class=\"o\">.</span><span class=\"n\">PRIMITIVE_TRIANGLES</span><span class=\"p\">)</span>\n<span class=\"n\">st</span><span class=\"o\">.</span><span class=\"n\">set_color</span><span class=\"p\">(</span><span class=\"nb nb-Type\">Color</span><span class=\"p\">(</span><span class=\"mi\">1</span><span class=\"p\">,</span> <span class=\"mi\">0</span><span class=\"p\">,</span> <span class=\"mi\">0</span><span class=\"p\">))</span>\n<span class=\"n\">st</span><span class=\"o\">.</span><span class=\"n\">set_uv</span><span class=\"p\">(</span><span class=\"nb nb-Type\">Vector2</span><span class=\"p\">(</span><span class=\"mi\">0</span><span class=\"p\">,</span> <span class=\"mi\">0</span><span class=\"p\">))</span>\n<span class=\"n\">st</span><span class=\"o\">.</span><span class=\"n\">add_vertex</span><span class=\"p\">(</span><span class=\"nb nb-Type\">Vector3</span><span class=\"p\">(</span><span class=\"mi\">0</span><span class=\"p\">,</span> <span class=\"mi\">0</span><span class=\"p\">,</span> <span class=\"mi\">0</span><span class=\"p\">))</span>\n</pre></div>\n</div>\n</div><div aria-labelledby=\"tab-0-QyM=\" class=\"sphinx-tabs-panel code-tab group-tab\" hidden=\"true\" id=\"panel-0-QyM=\" name=\"QyM=\" role=\"tabpanel\" tabindex=\"0\"><div class=\"highlight-csharp notranslate\"><div class=\"highlight\"><pre><span></span><span class=\"kt\">var</span><span class=\"w\"> </span><span class=\"n\">st</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"k\">new</span><span class=\"w\"> </span><span class=\"n\">SurfaceTool</span><span class=\"p\">();</span>\n<span class=\"n\">st</span><span class=\"p\">.</span><span class=\"n\">Begin</span><span class=\"p\">(</span><span class=\"n\">Mesh</span><span class=\"p\">.</span><span class=\"n\">PrimitiveType</span><span class=\"p\">.</span><span class=\"n\">Triangles</span><span class=\"p\">);</span>\n<span class=\"n\">st</span><span class=\"p\">.</span><span class=\"n\">SetColor</span><span class=\"p\">(</span><span class=\"k\">new</span><span class=\"w\"> </span><span class=\"n\">Color</span><span class=\"p\">(</span><span class=\"m\">1</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"m\">0</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"m\">0</span><span class=\"p\">));</span>\n<span class=\"n\">st</span><span class=\"p\">.</span><span class=\"n\">SetUV</span><span class=\"p\">(</span><span class=\"k\">new</span><span class=\"w\"> </span><span class=\"n\">Vector2</span><span class=\"p\">(</span><span class=\"m\">0</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"m\">0</span><span class=\"p\">));</span>\n<span class=\"n\">st</span><span class=\"p\">.</span><span class=\"n\">AddVertex</span><span class=\"p\">(</span><span class=\"k\">new</span><span class=\"w\"> </span><span class=\"n\">Vector3</span><span class=\"p\">(</span><span class=\"m\">0</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"m\">0</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"m\">0</span><span class=\"p\">));</span>\n</pre></div>\n</div>\n</div></div>\n<p>The above <strong>SurfaceTool</strong> now contains one vertex of a triangle which has a UV coordinate and a specified <a class=\"reference internal\" href=\"class_color.html#class-color\"><span class=\"std std-ref\">Color</span></a>. If another vertex were added without calling <a class=\"reference internal\" href=\"#class-surfacetool-method-set-uv\"><span class=\"std std-ref\">set_uv</span></a> or <a class=\"reference internal\" href=\"#class-surfacetool-method-set-color\"><span class=\"std std-ref\">set_color</span></a>, then the last values would be used.</p>\n<p>Vertex attributes must be passed <strong>before</strong> calling <a class=\"reference internal\" href=\"#class-surfacetool-method-add-vertex\"><span class=\"std std-ref\">add_vertex</span></a>. Failure to do so will result in an error when committing the vertex information to a mesh.</p>\n<p>Additionally, the attributes used before the first vertex is added determine the format of the mesh. For example, if you only add UVs to the first vertex, you cannot add color to any of the subsequent vertices.</p>\n<p>See also <a class=\"reference internal\" href=\"class_arraymesh.html#class-arraymesh\"><span class=\"std std-ref\">ArrayMesh</span></a>, <a class=\"reference internal\" href=\"class_immediatemesh.html#class-immediatemesh\"><span class=\"std std-ref\">ImmediateMesh</span></a> and <a class=\"reference internal\" href=\"class_meshdatatool.html#class-meshdatatool\"><span class=\"std std-ref\">MeshDataTool</span></a> for procedural geometry generation.</p>\n<p><strong>Note:</strong> Godot uses clockwise <a class=\"reference external\" href=\"https://learnopengl.com/Advanced-OpenGL/Face-culling\">winding order</a> for front faces of triangle primitive modes.</p>\n"
            },
            "class_tcpserver": {
                "url": "https://docs.godotengine.org/en/4.1/classes/class_tcpserver.html",
                "title": "TCPServer",
                "blurb": "<p><strong>Inherits:</strong> <a class=\"reference internal\" href=\"class_refcounted.html#class-refcounted\"><span class=\"std std-ref\">RefCounted</span></a> <strong>&lt;</strong> <a class=\"reference internal\" href=\"class_object.html#class-object\"><span class=\"std std-ref\">Object</span></a></p><p>A TCP server.</p>",
                "description": "\n\n<p>A TCP server. Listens to connections on a port and returns a <a class=\"reference internal\" href=\"class_streampeertcp.html#class-streampeertcp\"><span class=\"std std-ref\">StreamPeerTCP</span></a> when it gets an incoming connection.</p>\n<p><strong>Note:</strong> When exporting to Android, make sure to enable the <code class=\"docutils literal notranslate\"><span class=\"pre\">INTERNET</span></code> permission in the Android export preset before exporting the project or using one-click deploy. Otherwise, network communication of any kind will be blocked by Android.</p>\n"
            },
            "class_textline": {
                "url": "https://docs.godotengine.org/en/4.1/classes/class_textline.html",
                "title": "TextLine",
                "blurb": "<p><strong>Inherits:</strong> <a class=\"reference internal\" href=\"class_refcounted.html#class-refcounted\"><span class=\"std std-ref\">RefCounted</span></a> <strong>&lt;</strong> <a class=\"reference internal\" href=\"class_object.html#class-object\"><span class=\"std std-ref\">Object</span></a></p><p>Holds a line of text.</p>",
                "description": "\n\n<p>Abstraction over <a class=\"reference internal\" href=\"class_textserver.html#class-textserver\"><span class=\"std std-ref\">TextServer</span></a> for handling a single line of text.</p>\n"
            },
            "class_textparagraph": {
                "url": "https://docs.godotengine.org/en/4.1/classes/class_textparagraph.html",
                "title": "TextParagraph",
                "blurb": "<p><strong>Inherits:</strong> <a class=\"reference internal\" href=\"class_refcounted.html#class-refcounted\"><span class=\"std std-ref\">RefCounted</span></a> <strong>&lt;</strong> <a class=\"reference internal\" href=\"class_object.html#class-object\"><span class=\"std std-ref\">Object</span></a></p><p>Holds a paragraph of text.</p>",
                "description": "\n\n<p>Abstraction over <a class=\"reference internal\" href=\"class_textserver.html#class-textserver\"><span class=\"std std-ref\">TextServer</span></a> for handling a single paragraph of text.</p>\n"
            },
            "class_textserver": {
                "url": "https://docs.godotengine.org/en/4.1/classes/class_textserver.html",
                "title": "TextServer",
                "blurb": "<p><strong>Inherits:</strong> <a class=\"reference internal\" href=\"class_refcounted.html#class-refcounted\"><span class=\"std std-ref\">RefCounted</span></a> <strong>&lt;</strong> <a class=\"reference internal\" href=\"class_object.html#class-object\"><span class=\"std std-ref\">Object</span></a></p><p><strong>Inherited By:</strong> <a class=\"reference internal\" href=\"class_textserverextension.html#class-textserverextension\"><span class=\"std std-ref\">TextServerExtension</span></a></p><p>A server interface for font management and text rendering.</p>",
                "description": "\n\n<p><strong>TextServer</strong> is the API backend for managing fonts and rendering text.</p>\n"
            },
            "class_textserveradvanced": {
                "url": "https://docs.godotengine.org/en/4.1/classes/class_textserveradvanced.html",
                "title": "TextServerAdvanced",
                "blurb": "<p><strong>Inherits:</strong> <a class=\"reference internal\" href=\"class_textserverextension.html#class-textserverextension\"><span class=\"std std-ref\">TextServerExtension</span></a> <strong>&lt;</strong> <a class=\"reference internal\" href=\"class_textserver.html#class-textserver\"><span class=\"std std-ref\">TextServer</span></a> <strong>&lt;</strong> <a class=\"reference internal\" href=\"class_refcounted.html#class-refcounted\"><span class=\"std std-ref\">RefCounted</span></a> <strong>&lt;</strong> <a class=\"reference internal\" href=\"class_object.html#class-object\"><span class=\"std std-ref\">Object</span></a></p><p>An advanced text server with support for BiDi, complex text layout, and contextual OpenType features. Used in Godot by default.</p>",
                "description": "\n\n<p>An implementation of <a class=\"reference internal\" href=\"class_textserver.html#class-textserver\"><span class=\"std std-ref\">TextServer</span></a> that uses HarfBuzz, ICU and SIL Graphite to support BiDi, complex text layouts and contextual OpenType features. This is Godot's default primary <a class=\"reference internal\" href=\"class_textserver.html#class-textserver\"><span class=\"std std-ref\">TextServer</span></a> interface.</p>\n"
            },
            "class_textserverdummy": {
                "url": "https://docs.godotengine.org/en/4.1/classes/class_textserverdummy.html",
                "title": "TextServerDummy",
                "blurb": "<p><strong>Inherits:</strong> <a class=\"reference internal\" href=\"class_textserverextension.html#class-textserverextension\"><span class=\"std std-ref\">TextServerExtension</span></a> <strong>&lt;</strong> <a class=\"reference internal\" href=\"class_textserver.html#class-textserver\"><span class=\"std std-ref\">TextServer</span></a> <strong>&lt;</strong> <a class=\"reference internal\" href=\"class_refcounted.html#class-refcounted\"><span class=\"std std-ref\">RefCounted</span></a> <strong>&lt;</strong> <a class=\"reference internal\" href=\"class_object.html#class-object\"><span class=\"std std-ref\">Object</span></a></p><p>A dummy text server that can't render text or manage fonts.</p>",
                "description": "\n\n<p>A dummy <a class=\"reference internal\" href=\"class_textserver.html#class-textserver\"><span class=\"std std-ref\">TextServer</span></a> interface that doesn't do anything. Useful for freeing up memory when rendering text is not needed, as text servers are resource-intensive. It can also be used for performance comparisons in complex GUIs to check the impact of text rendering.</p>\n<p>A dummy text server is always available at the start of a project. Here's how to access it:</p>\n<div class=\"highlight-gdscript notranslate\"><div class=\"highlight\"><pre><span></span><span class=\"k\">var</span> <span class=\"n\">dummy_text_server</span> <span class=\"o\">=</span> <span class=\"n\">TextServerManager</span><span class=\"o\">.</span><span class=\"n\">find_interface</span><span class=\"p\">(</span><span class=\"s2\">\"Dummy\"</span><span class=\"p\">)</span>\n<span class=\"k k-ControlFlow\">if</span> <span class=\"n\">dummy_text_server</span> <span class=\"o\">!=</span> <span class=\"nb nb-Type\">null</span><span class=\"p\">:</span>\n    <span class=\"n\">TextServerManager</span><span class=\"o\">.</span><span class=\"n\">set_primary_interface</span><span class=\"p\">(</span><span class=\"n\">dummy_text_server</span><span class=\"p\">)</span>\n    <span class=\"c1\"># If the other text servers are unneeded, they can be removed:</span>\n    <span class=\"k k-ControlFlow\">for</span> <span class=\"n\">i</span> <span class=\"ow\">in</span> <span class=\"n\">TextServerManager</span><span class=\"o\">.</span><span class=\"n\">get_interface_count</span><span class=\"p\">():</span>\n        <span class=\"k\">var</span> <span class=\"n\">text_server</span> <span class=\"o\">=</span> <span class=\"n\">TextServerManager</span><span class=\"o\">.</span><span class=\"n\">get_interface</span><span class=\"p\">(</span><span class=\"n\">i</span><span class=\"p\">)</span>\n        <span class=\"k k-ControlFlow\">if</span> <span class=\"n\">text_server</span> <span class=\"o\">!=</span> <span class=\"n\">dummy_text_server</span><span class=\"p\">:</span>\n            <span class=\"n\">TextServerManager</span><span class=\"o\">.</span><span class=\"n\">remove_interface</span><span class=\"p\">(</span><span class=\"n\">text_server</span><span class=\"p\">)</span>\n</pre></div>\n</div>\n<p>The command line argument <code class=\"docutils literal notranslate\"><span class=\"pre\">--text-driver</span> <span class=\"pre\">Dummy</span></code> (case-sensitive) can be used to force the \"Dummy\" <a class=\"reference internal\" href=\"class_textserver.html#class-textserver\"><span class=\"std std-ref\">TextServer</span></a> on any project.</p>\n"
            },
            "class_textserverextension": {
                "url": "https://docs.godotengine.org/en/4.1/classes/class_textserverextension.html",
                "title": "TextServerExtension",
                "blurb": "<p><strong>Inherits:</strong> <a class=\"reference internal\" href=\"class_textserver.html#class-textserver\"><span class=\"std std-ref\">TextServer</span></a> <strong>&lt;</strong> <a class=\"reference internal\" href=\"class_refcounted.html#class-refcounted\"><span class=\"std std-ref\">RefCounted</span></a> <strong>&lt;</strong> <a class=\"reference internal\" href=\"class_object.html#class-object\"><span class=\"std std-ref\">Object</span></a></p><p><strong>Inherited By:</strong> <a class=\"reference internal\" href=\"class_textserveradvanced.html#class-textserveradvanced\"><span class=\"std std-ref\">TextServerAdvanced</span></a>, <a class=\"reference internal\" href=\"class_textserverdummy.html#class-textserverdummy\"><span class=\"std std-ref\">TextServerDummy</span></a>, <a class=\"reference internal\" href=\"class_textserverfallback.html#class-textserverfallback\"><span class=\"std std-ref\">TextServerFallback</span></a></p><p>Base class for custom <a class=\"reference internal\" href=\"class_textserver.html#class-textserver\"><span class=\"std std-ref\">TextServer</span></a> implementations (plugins).</p>",
                "description": "\n\n<p>External <a class=\"reference internal\" href=\"class_textserver.html#class-textserver\"><span class=\"std std-ref\">TextServer</span></a> implementations should inherit from this class.</p>\n"
            },
            "class_textserverfallback": {
                "url": "https://docs.godotengine.org/en/4.1/classes/class_textserverfallback.html",
                "title": "TextServerFallback",
                "blurb": "<p><strong>Inherits:</strong> <a class=\"reference internal\" href=\"class_textserverextension.html#class-textserverextension\"><span class=\"std std-ref\">TextServerExtension</span></a> <strong>&lt;</strong> <a class=\"reference internal\" href=\"class_textserver.html#class-textserver\"><span class=\"std std-ref\">TextServer</span></a> <strong>&lt;</strong> <a class=\"reference internal\" href=\"class_refcounted.html#class-refcounted\"><span class=\"std std-ref\">RefCounted</span></a> <strong>&lt;</strong> <a class=\"reference internal\" href=\"class_object.html#class-object\"><span class=\"std std-ref\">Object</span></a></p><p>A fallback implementation of Godot's text server, without support for BiDi and complex text layout.</p>",
                "description": "\n\n<p>A fallback implementation of Godot's text server. This fallback is faster than <a class=\"reference internal\" href=\"class_textserveradvanced.html#class-textserveradvanced\"><span class=\"std std-ref\">TextServerAdvanced</span></a> for processing a lot of text, but it does not support BiDi and complex text layout.</p>\n<p><strong>Note:</strong> This text server is not part of official Godot binaries. If you want to use it, compile the engine with the option <code class=\"docutils literal notranslate\"><span class=\"pre\">module_text_server_fb_enabled=yes</span></code>.</p>\n"
            },
            "class_textservermanager": {
                "url": "https://docs.godotengine.org/en/4.1/classes/class_textservermanager.html",
                "title": "TextServerManager",
                "blurb": "<p><strong>Inherits:</strong> <a class=\"reference internal\" href=\"class_object.html#class-object\"><span class=\"std std-ref\">Object</span></a></p><p>A singleton for managing <a class=\"reference internal\" href=\"class_textserver.html#class-textserver\"><span class=\"std std-ref\">TextServer</span></a> implementations.</p>",
                "description": "\n\n<p><strong>TextServerManager</strong> is the API backend for loading, enumerating, and switching <a class=\"reference internal\" href=\"class_textserver.html#class-textserver\"><span class=\"std std-ref\">TextServer</span></a>s.</p>\n<p><strong>Note:</strong> Switching text server at runtime is possible, but will invalidate all fonts and text buffers. Make sure to unload all controls, fonts, and themes before doing so.</p>\n"
            },
            "class_themedb": {
                "url": "https://docs.godotengine.org/en/4.1/classes/class_themedb.html",
                "title": "ThemeDB",
                "blurb": "<p><strong>Inherits:</strong> <a class=\"reference internal\" href=\"class_object.html#class-object\"><span class=\"std std-ref\">Object</span></a></p><p>A singleton that provides access to static information about <a class=\"reference internal\" href=\"class_theme.html#class-theme\"><span class=\"std std-ref\">Theme</span></a> resources used by the engine and by your project.</p>",
                "description": "\n\n<p>This singleton provides access to static information about <a class=\"reference internal\" href=\"class_theme.html#class-theme\"><span class=\"std std-ref\">Theme</span></a> resources used by the engine and by your projects. You can fetch the default engine theme, as well as your project configured theme.</p>\n<p><strong>ThemeDB</strong> also contains fallback values for theme properties.</p>\n"
            },
            "class_thread": {
                "url": "https://docs.godotengine.org/en/4.1/classes/class_thread.html",
                "title": "Thread",
                "blurb": "<p><strong>Inherits:</strong> <a class=\"reference internal\" href=\"class_refcounted.html#class-refcounted\"><span class=\"std std-ref\">RefCounted</span></a> <strong>&lt;</strong> <a class=\"reference internal\" href=\"class_object.html#class-object\"><span class=\"std std-ref\">Object</span></a></p><p>A unit of execution in a process.</p>",
                "description": "\n\n<p>A unit of execution in a process. Can run methods on <a class=\"reference internal\" href=\"class_object.html#class-object\"><span class=\"std std-ref\">Object</span></a>s simultaneously. The use of synchronization via <a class=\"reference internal\" href=\"class_mutex.html#class-mutex\"><span class=\"std std-ref\">Mutex</span></a> or <a class=\"reference internal\" href=\"class_semaphore.html#class-semaphore\"><span class=\"std std-ref\">Semaphore</span></a> is advised if working with shared objects.</p>\n<p><strong>Note:</strong> Breakpoints won't break on code if it's running in a thread. This is a current limitation of the GDScript debugger.</p>\n<p><strong>Warning:</strong></p>\n<p>To ensure proper cleanup without crashes or deadlocks, when a <strong>Thread</strong>'s reference count reaches zero and it is therefore destroyed, the following conditions must be met:</p>\n<ul class=\"simple\">\n<li><p>It must not have any <a class=\"reference internal\" href=\"class_mutex.html#class-mutex\"><span class=\"std std-ref\">Mutex</span></a> objects locked.</p></li>\n<li><p>It must not be waiting on any <a class=\"reference internal\" href=\"class_semaphore.html#class-semaphore\"><span class=\"std std-ref\">Semaphore</span></a> objects.</p></li>\n<li><p><a class=\"reference internal\" href=\"#class-thread-method-wait-to-finish\"><span class=\"std std-ref\">wait_to_finish</span></a> should have been called on it.</p></li>\n</ul>\n"
            },
            "class_tiledata": {
                "url": "https://docs.godotengine.org/en/4.1/classes/class_tiledata.html",
                "title": "TileData",
                "blurb": "<p><strong>Inherits:</strong> <a class=\"reference internal\" href=\"class_object.html#class-object\"><span class=\"std std-ref\">Object</span></a></p><p>Settings for a single tile in a <a class=\"reference internal\" href=\"class_tileset.html#class-tileset\"><span class=\"std std-ref\">TileSet</span></a>.</p>",
                "description": "\n\n<p><strong>TileData</strong> object represents a single tile in a <a class=\"reference internal\" href=\"class_tileset.html#class-tileset\"><span class=\"std std-ref\">TileSet</span></a>. It is usually edited using the tileset editor, but it can be modified at runtime using <a class=\"reference internal\" href=\"class_tilemap.html#class-tilemap-method-tile-data-runtime-update\"><span class=\"std std-ref\">TileMap._tile_data_runtime_update</span></a>.</p>\n"
            },
            "class_time": {
                "url": "https://docs.godotengine.org/en/4.1/classes/class_time.html",
                "title": "Time",
                "blurb": "<p><strong>Inherits:</strong> <a class=\"reference internal\" href=\"class_object.html#class-object\"><span class=\"std std-ref\">Object</span></a></p><p>A singleton for working with time data.</p>",
                "description": "\n\n<p>The Time singleton allows converting time between various formats and also getting time information from the system.</p>\n<p>This class conforms with as many of the ISO 8601 standards as possible. All dates follow the Proleptic Gregorian calendar. As such, the day before <code class=\"docutils literal notranslate\"><span class=\"pre\">1582-10-15</span></code> is <code class=\"docutils literal notranslate\"><span class=\"pre\">1582-10-14</span></code>, not <code class=\"docutils literal notranslate\"><span class=\"pre\">1582-10-04</span></code>. The year before 1 AD (aka 1 BC) is number <code class=\"docutils literal notranslate\"><span class=\"pre\">0</span></code>, with the year before that (2 BC) being <code class=\"docutils literal notranslate\"><span class=\"pre\">-1</span></code>, etc.</p>\n<p>Conversion methods assume \"the same timezone\", and do not handle timezone conversions or DST automatically. Leap seconds are also not handled, they must be done manually if desired. Suffixes such as \"Z\" are not handled, you need to strip them away manually.</p>\n<p>When getting time information from the system, the time can either be in the local timezone or UTC depending on the <code class=\"docutils literal notranslate\"><span class=\"pre\">utc</span></code> parameter. However, the <a class=\"reference internal\" href=\"#class-time-method-get-unix-time-from-system\"><span class=\"std std-ref\">get_unix_time_from_system</span></a> method always returns the time in UTC.</p>\n<p><strong>Important:</strong> The <code class=\"docutils literal notranslate\"><span class=\"pre\">_from_system</span></code> methods use the system clock that the user can manually set. <strong>Never use</strong> this method for precise time calculation since its results are subject to automatic adjustments by the user or the operating system. <strong>Always use</strong> <a class=\"reference internal\" href=\"#class-time-method-get-ticks-usec\"><span class=\"std std-ref\">get_ticks_usec</span></a> or <a class=\"reference internal\" href=\"#class-time-method-get-ticks-msec\"><span class=\"std std-ref\">get_ticks_msec</span></a> for precise time calculation instead, since they are guaranteed to be monotonic (i.e. never decrease).</p>\n"
            },
            "class_tlsoptions": {
                "url": "https://docs.godotengine.org/en/4.1/classes/class_tlsoptions.html",
                "title": "TLSOptions",
                "blurb": "<p><strong>Inherits:</strong> <a class=\"reference internal\" href=\"class_refcounted.html#class-refcounted\"><span class=\"std std-ref\">RefCounted</span></a> <strong>&lt;</strong> <a class=\"reference internal\" href=\"class_object.html#class-object\"><span class=\"std std-ref\">Object</span></a></p><p>TLS configuration for clients and servers.</p>",
                "description": "\n\n<p>TLSOptions abstracts the configuration options for the <a class=\"reference internal\" href=\"class_streampeertls.html#class-streampeertls\"><span class=\"std std-ref\">StreamPeerTLS</span></a> and <a class=\"reference internal\" href=\"class_packetpeerdtls.html#class-packetpeerdtls\"><span class=\"std std-ref\">PacketPeerDTLS</span></a> classes.</p>\n<p>Objects of this class cannot be instantiated directly, and one of the static methods <a class=\"reference internal\" href=\"#class-tlsoptions-method-client\"><span class=\"std std-ref\">client</span></a>, <a class=\"reference internal\" href=\"#class-tlsoptions-method-client-unsafe\"><span class=\"std std-ref\">client_unsafe</span></a>, or <a class=\"reference internal\" href=\"#class-tlsoptions-method-server\"><span class=\"std std-ref\">server</span></a> should be used instead.</p>\n<div class=\"sphinx-tabs docutils container\">\n<div aria-label=\"Tabbed content\" class=\"closeable\" role=\"tablist\"><button aria-controls=\"panel-0-R0RTY3JpcHQ=\" aria-selected=\"true\" class=\"sphinx-tabs-tab code-tab group-tab\" id=\"tab-0-R0RTY3JpcHQ=\" name=\"R0RTY3JpcHQ=\" role=\"tab\" tabindex=\"0\">GDScript</button></div><div aria-labelledby=\"tab-0-R0RTY3JpcHQ=\" class=\"sphinx-tabs-panel code-tab group-tab\" id=\"panel-0-R0RTY3JpcHQ=\" name=\"R0RTY3JpcHQ=\" role=\"tabpanel\" tabindex=\"0\"><div class=\"highlight-gdscript notranslate\"><div class=\"highlight\"><pre><span></span><span class=\"c1\"># Create a TLS client configuration which uses our custom trusted CA chain.</span>\n<span class=\"k\">var</span> <span class=\"n\">client_trusted_cas</span> <span class=\"o\">=</span> <span class=\"nb\">load</span><span class=\"p\">(</span><span class=\"s2\">\"res://my_trusted_cas.crt\"</span><span class=\"p\">)</span>\n<span class=\"k\">var</span> <span class=\"n\">client_tls_options</span> <span class=\"o\">=</span> <span class=\"n\">TLSOptions</span><span class=\"o\">.</span><span class=\"n\">client</span><span class=\"p\">(</span><span class=\"n\">client_trusted_cas</span><span class=\"p\">)</span>\n\n<span class=\"c1\"># Create a TLS server configuration.</span>\n<span class=\"k\">var</span> <span class=\"n\">server_certs</span> <span class=\"o\">=</span> <span class=\"nb\">load</span><span class=\"p\">(</span><span class=\"s2\">\"res://my_server_cas.crt\"</span><span class=\"p\">)</span>\n<span class=\"k\">var</span> <span class=\"n\">server_key</span> <span class=\"o\">=</span> <span class=\"nb\">load</span><span class=\"p\">(</span><span class=\"s2\">\"res://my_server_key.key\"</span><span class=\"p\">)</span>\n<span class=\"k\">var</span> <span class=\"n\">server_tls_options</span> <span class=\"o\">=</span> <span class=\"n\">TLSOptions</span><span class=\"o\">.</span><span class=\"n\">server</span><span class=\"p\">(</span><span class=\"n\">server_key</span><span class=\"p\">,</span> <span class=\"n\">server_certs</span><span class=\"p\">)</span>\n</pre></div>\n</div>\n</div></div>\n"
            },
            "class_translationserver": {
                "url": "https://docs.godotengine.org/en/4.1/classes/class_translationserver.html",
                "title": "TranslationServer",
                "blurb": "<p><strong>Inherits:</strong> <a class=\"reference internal\" href=\"class_object.html#class-object\"><span class=\"std std-ref\">Object</span></a></p><p>The server responsible for language translations.</p>",
                "description": "\n\n<p>The server that manages all language translations. Translations can be added to or removed from it.</p>\n"
            },
            "class_treeitem": {
                "url": "https://docs.godotengine.org/en/4.1/classes/class_treeitem.html",
                "title": "TreeItem",
                "blurb": "<p><strong>Inherits:</strong> <a class=\"reference internal\" href=\"class_object.html#class-object\"><span class=\"std std-ref\">Object</span></a></p><p>An internal control for a single item inside <a class=\"reference internal\" href=\"class_tree.html#class-tree\"><span class=\"std std-ref\">Tree</span></a>.</p>",
                "description": "\n\n<p>A single item of a <a class=\"reference internal\" href=\"class_tree.html#class-tree\"><span class=\"std std-ref\">Tree</span></a> control. It can contain other <strong>TreeItem</strong>s as children, which allows it to create a hierarchy. It can also contain text and buttons. <strong>TreeItem</strong> is not a <a class=\"reference internal\" href=\"class_node.html#class-node\"><span class=\"std std-ref\">Node</span></a>, it is internal to the <a class=\"reference internal\" href=\"class_tree.html#class-tree\"><span class=\"std std-ref\">Tree</span></a>.</p>\n<p>To create a <strong>TreeItem</strong>, use <a class=\"reference internal\" href=\"class_tree.html#class-tree-method-create-item\"><span class=\"std std-ref\">Tree.create_item</span></a> or <a class=\"reference internal\" href=\"#class-treeitem-method-create-child\"><span class=\"std std-ref\">create_child</span></a>. To remove a <strong>TreeItem</strong>, use <a class=\"reference internal\" href=\"class_object.html#class-object-method-free\"><span class=\"std std-ref\">Object.free</span></a>.</p>\n<p><strong>Note:</strong> The ID values used for buttons are 32-bit, unlike <a class=\"reference internal\" href=\"class_int.html#class-int\"><span class=\"std std-ref\">int</span></a> which is always 64-bit. They go from <code class=\"docutils literal notranslate\"><span class=\"pre\">-2147483648</span></code> to <code class=\"docutils literal notranslate\"><span class=\"pre\">2147483647</span></code>.</p>\n"
            },
            "class_trianglemesh": {
                "url": "https://docs.godotengine.org/en/4.1/classes/class_trianglemesh.html",
                "title": "TriangleMesh",
                "blurb": "<p><strong>Inherits:</strong> <a class=\"reference internal\" href=\"class_refcounted.html#class-refcounted\"><span class=\"std std-ref\">RefCounted</span></a> <strong>&lt;</strong> <a class=\"reference internal\" href=\"class_object.html#class-object\"><span class=\"std std-ref\">Object</span></a></p><p>Internal mesh type.</p>",
                "description": "\n\n<p>Mesh type used internally for collision calculations.</p>\n"
            },
            "class_tween": {
                "url": "https://docs.godotengine.org/en/4.1/classes/class_tween.html",
                "title": "Tween",
                "blurb": "<p><strong>Inherits:</strong> <a class=\"reference internal\" href=\"class_refcounted.html#class-refcounted\"><span class=\"std std-ref\">RefCounted</span></a> <strong>&lt;</strong> <a class=\"reference internal\" href=\"class_object.html#class-object\"><span class=\"std std-ref\">Object</span></a></p><p>Lightweight object used for general-purpose animation via script, using <a class=\"reference internal\" href=\"class_tweener.html#class-tweener\"><span class=\"std std-ref\">Tweener</span></a>s.</p>",
                "description": "\n\n<p>Tweens are mostly useful for animations requiring a numerical property to be interpolated over a range of values. The name <em>tween</em> comes from <em>in-betweening</em>, an animation technique where you specify <em>keyframes</em> and the computer interpolates the frames that appear between them. Animating something with a <strong>Tween</strong> is called tweening.</p>\n<p><strong>Tween</strong> is more suited than <a class=\"reference internal\" href=\"class_animationplayer.html#class-animationplayer\"><span class=\"std std-ref\">AnimationPlayer</span></a> for animations where you don't know the final values in advance. For example, interpolating a dynamically-chosen camera zoom value is best done with a <strong>Tween</strong>; it would be difficult to do the same thing with an <a class=\"reference internal\" href=\"class_animationplayer.html#class-animationplayer\"><span class=\"std std-ref\">AnimationPlayer</span></a> node. Tweens are also more light-weight than <a class=\"reference internal\" href=\"class_animationplayer.html#class-animationplayer\"><span class=\"std std-ref\">AnimationPlayer</span></a>, so they are very much suited for simple animations or general tasks that don't require visual tweaking provided by the editor. They can be used in a fire-and-forget manner for some logic that normally would be done by code. You can e.g. make something shoot periodically by using a looped <a class=\"reference internal\" href=\"class_callbacktweener.html#class-callbacktweener\"><span class=\"std std-ref\">CallbackTweener</span></a> with a delay.</p>\n<p>A <strong>Tween</strong> can be created by using either <a class=\"reference internal\" href=\"class_scenetree.html#class-scenetree-method-create-tween\"><span class=\"std std-ref\">SceneTree.create_tween</span></a> or <a class=\"reference internal\" href=\"class_node.html#class-node-method-create-tween\"><span class=\"std std-ref\">Node.create_tween</span></a>. <strong>Tween</strong>s created manually (i.e. by using <code class=\"docutils literal notranslate\"><span class=\"pre\">Tween.new()</span></code>) are invalid and can't be used for tweening values.</p>\n<p>A tween animation is created by adding <a class=\"reference internal\" href=\"class_tweener.html#class-tweener\"><span class=\"std std-ref\">Tweener</span></a>s to the <strong>Tween</strong> object, using <a class=\"reference internal\" href=\"#class-tween-method-tween-property\"><span class=\"std std-ref\">tween_property</span></a>, <a class=\"reference internal\" href=\"#class-tween-method-tween-interval\"><span class=\"std std-ref\">tween_interval</span></a>, <a class=\"reference internal\" href=\"#class-tween-method-tween-callback\"><span class=\"std std-ref\">tween_callback</span></a> or <a class=\"reference internal\" href=\"#class-tween-method-tween-method\"><span class=\"std std-ref\">tween_method</span></a>:</p>\n<div class=\"sphinx-tabs docutils container\">\n<div aria-label=\"Tabbed content\" class=\"closeable\" role=\"tablist\"><button aria-controls=\"panel-0-R0RTY3JpcHQ=\" aria-selected=\"true\" class=\"sphinx-tabs-tab code-tab group-tab\" id=\"tab-0-R0RTY3JpcHQ=\" name=\"R0RTY3JpcHQ=\" role=\"tab\" tabindex=\"0\">GDScript</button><button aria-controls=\"panel-0-QyM=\" aria-selected=\"false\" class=\"sphinx-tabs-tab code-tab group-tab\" id=\"tab-0-QyM=\" name=\"QyM=\" role=\"tab\" tabindex=\"-1\">C#</button></div><div aria-labelledby=\"tab-0-R0RTY3JpcHQ=\" class=\"sphinx-tabs-panel code-tab group-tab\" id=\"panel-0-R0RTY3JpcHQ=\" name=\"R0RTY3JpcHQ=\" role=\"tabpanel\" tabindex=\"0\"><div class=\"highlight-gdscript notranslate\"><div class=\"highlight\"><pre><span></span><span class=\"k\">var</span> <span class=\"n\">tween</span> <span class=\"o\">=</span> <span class=\"n\">get_tree</span><span class=\"p\">()</span><span class=\"o\">.</span><span class=\"n\">create_tween</span><span class=\"p\">()</span>\n<span class=\"n\">tween</span><span class=\"o\">.</span><span class=\"n\">tween_property</span><span class=\"p\">(</span><span class=\"o\">$</span><span class=\"n\">Sprite</span><span class=\"p\">,</span> <span class=\"s2\">\"modulate\"</span><span class=\"p\">,</span> <span class=\"nb nb-Type\">Color</span><span class=\"o\">.</span><span class=\"n\">RED</span><span class=\"p\">,</span> <span class=\"mi\">1</span><span class=\"p\">)</span>\n<span class=\"n\">tween</span><span class=\"o\">.</span><span class=\"n\">tween_property</span><span class=\"p\">(</span><span class=\"o\">$</span><span class=\"n\">Sprite</span><span class=\"p\">,</span> <span class=\"s2\">\"scale\"</span><span class=\"p\">,</span> <span class=\"nb nb-Type\">Vector2</span><span class=\"p\">(),</span> <span class=\"mi\">1</span><span class=\"p\">)</span>\n<span class=\"n\">tween</span><span class=\"o\">.</span><span class=\"n\">tween_callback</span><span class=\"p\">(</span><span class=\"o\">$</span><span class=\"n\">Sprite</span><span class=\"o\">.</span><span class=\"n\">queue_free</span><span class=\"p\">)</span>\n</pre></div>\n</div>\n</div><div aria-labelledby=\"tab-0-QyM=\" class=\"sphinx-tabs-panel code-tab group-tab\" hidden=\"true\" id=\"panel-0-QyM=\" name=\"QyM=\" role=\"tabpanel\" tabindex=\"0\"><div class=\"highlight-csharp notranslate\"><div class=\"highlight\"><pre><span></span><span class=\"n\">Tween</span><span class=\"w\"> </span><span class=\"n\">tween</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"n\">GetTree</span><span class=\"p\">().</span><span class=\"n\">CreateTween</span><span class=\"p\">();</span>\n<span class=\"n\">tween</span><span class=\"p\">.</span><span class=\"n\">TweenProperty</span><span class=\"p\">(</span><span class=\"n\">GetNode</span><span class=\"p\">(</span><span class=\"s\">\"Sprite\"</span><span class=\"p\">),</span><span class=\"w\"> </span><span class=\"s\">\"modulate\"</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">Colors</span><span class=\"p\">.</span><span class=\"n\">Red</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"m\">1.0f</span><span class=\"p\">);</span>\n<span class=\"n\">tween</span><span class=\"p\">.</span><span class=\"n\">TweenProperty</span><span class=\"p\">(</span><span class=\"n\">GetNode</span><span class=\"p\">(</span><span class=\"s\">\"Sprite\"</span><span class=\"p\">),</span><span class=\"w\"> </span><span class=\"s\">\"scale\"</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">Vector2</span><span class=\"p\">.</span><span class=\"n\">Zero</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"m\">1.0f</span><span class=\"p\">);</span>\n<span class=\"n\">tween</span><span class=\"p\">.</span><span class=\"n\">TweenCallback</span><span class=\"p\">(</span><span class=\"n\">Callable</span><span class=\"p\">.</span><span class=\"n\">From</span><span class=\"p\">(</span><span class=\"n\">GetNode</span><span class=\"p\">(</span><span class=\"s\">\"Sprite\"</span><span class=\"p\">).</span><span class=\"n\">QueueFree</span><span class=\"p\">));</span>\n</pre></div>\n</div>\n</div></div>\n<p>This sequence will make the <code class=\"docutils literal notranslate\"><span class=\"pre\">$Sprite</span></code> node turn red, then shrink, before finally calling <a class=\"reference internal\" href=\"class_node.html#class-node-method-queue-free\"><span class=\"std std-ref\">Node.queue_free</span></a> to free the sprite. <a class=\"reference internal\" href=\"class_tweener.html#class-tweener\"><span class=\"std std-ref\">Tweener</span></a>s are executed one after another by default. This behavior can be changed using <a class=\"reference internal\" href=\"#class-tween-method-parallel\"><span class=\"std std-ref\">parallel</span></a> and <a class=\"reference internal\" href=\"#class-tween-method-set-parallel\"><span class=\"std std-ref\">set_parallel</span></a>.</p>\n<p>When a <a class=\"reference internal\" href=\"class_tweener.html#class-tweener\"><span class=\"std std-ref\">Tweener</span></a> is created with one of the <code class=\"docutils literal notranslate\"><span class=\"pre\">tween_*</span></code> methods, a chained method call can be used to tweak the properties of this <a class=\"reference internal\" href=\"class_tweener.html#class-tweener\"><span class=\"std std-ref\">Tweener</span></a>. For example, if you want to set a different transition type in the above example, you can use <a class=\"reference internal\" href=\"#class-tween-method-set-trans\"><span class=\"std std-ref\">set_trans</span></a>:</p>\n<div class=\"sphinx-tabs docutils container\">\n<div aria-label=\"Tabbed content\" class=\"closeable\" role=\"tablist\"><button aria-controls=\"panel-1-R0RTY3JpcHQ=\" aria-selected=\"true\" class=\"sphinx-tabs-tab code-tab group-tab\" id=\"tab-1-R0RTY3JpcHQ=\" name=\"R0RTY3JpcHQ=\" role=\"tab\" tabindex=\"0\">GDScript</button><button aria-controls=\"panel-1-QyM=\" aria-selected=\"false\" class=\"sphinx-tabs-tab code-tab group-tab\" id=\"tab-1-QyM=\" name=\"QyM=\" role=\"tab\" tabindex=\"-1\">C#</button></div><div aria-labelledby=\"tab-1-R0RTY3JpcHQ=\" class=\"sphinx-tabs-panel code-tab group-tab\" id=\"panel-1-R0RTY3JpcHQ=\" name=\"R0RTY3JpcHQ=\" role=\"tabpanel\" tabindex=\"0\"><div class=\"highlight-gdscript notranslate\"><div class=\"highlight\"><pre><span></span><span class=\"k\">var</span> <span class=\"n\">tween</span> <span class=\"o\">=</span> <span class=\"n\">get_tree</span><span class=\"p\">()</span><span class=\"o\">.</span><span class=\"n\">create_tween</span><span class=\"p\">()</span>\n<span class=\"n\">tween</span><span class=\"o\">.</span><span class=\"n\">tween_property</span><span class=\"p\">(</span><span class=\"o\">$</span><span class=\"n\">Sprite</span><span class=\"p\">,</span> <span class=\"s2\">\"modulate\"</span><span class=\"p\">,</span> <span class=\"nb nb-Type\">Color</span><span class=\"o\">.</span><span class=\"n\">RED</span><span class=\"p\">,</span> <span class=\"mi\">1</span><span class=\"p\">)</span><span class=\"o\">.</span><span class=\"n\">set_trans</span><span class=\"p\">(</span><span class=\"n\">Tween</span><span class=\"o\">.</span><span class=\"n\">TRANS_SINE</span><span class=\"p\">)</span>\n<span class=\"n\">tween</span><span class=\"o\">.</span><span class=\"n\">tween_property</span><span class=\"p\">(</span><span class=\"o\">$</span><span class=\"n\">Sprite</span><span class=\"p\">,</span> <span class=\"s2\">\"scale\"</span><span class=\"p\">,</span> <span class=\"nb nb-Type\">Vector2</span><span class=\"p\">(),</span> <span class=\"mi\">1</span><span class=\"p\">)</span><span class=\"o\">.</span><span class=\"n\">set_trans</span><span class=\"p\">(</span><span class=\"n\">Tween</span><span class=\"o\">.</span><span class=\"n\">TRANS_BOUNCE</span><span class=\"p\">)</span>\n<span class=\"n\">tween</span><span class=\"o\">.</span><span class=\"n\">tween_callback</span><span class=\"p\">(</span><span class=\"o\">$</span><span class=\"n\">Sprite</span><span class=\"o\">.</span><span class=\"n\">queue_free</span><span class=\"p\">)</span>\n</pre></div>\n</div>\n</div><div aria-labelledby=\"tab-1-QyM=\" class=\"sphinx-tabs-panel code-tab group-tab\" hidden=\"true\" id=\"panel-1-QyM=\" name=\"QyM=\" role=\"tabpanel\" tabindex=\"0\"><div class=\"highlight-csharp notranslate\"><div class=\"highlight\"><pre><span></span><span class=\"n\">Tween</span><span class=\"w\"> </span><span class=\"n\">tween</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"n\">GetTree</span><span class=\"p\">().</span><span class=\"n\">CreateTween</span><span class=\"p\">();</span>\n<span class=\"n\">tween</span><span class=\"p\">.</span><span class=\"n\">TweenProperty</span><span class=\"p\">(</span><span class=\"n\">GetNode</span><span class=\"p\">(</span><span class=\"s\">\"Sprite\"</span><span class=\"p\">),</span><span class=\"w\"> </span><span class=\"s\">\"modulate\"</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">Colors</span><span class=\"p\">.</span><span class=\"n\">Red</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"m\">1.0f</span><span class=\"p\">).</span><span class=\"n\">SetTrans</span><span class=\"p\">(</span><span class=\"n\">Tween</span><span class=\"p\">.</span><span class=\"n\">TransitionType</span><span class=\"p\">.</span><span class=\"n\">Sine</span><span class=\"p\">);</span>\n<span class=\"n\">tween</span><span class=\"p\">.</span><span class=\"n\">TweenProperty</span><span class=\"p\">(</span><span class=\"n\">GetNode</span><span class=\"p\">(</span><span class=\"s\">\"Sprite\"</span><span class=\"p\">),</span><span class=\"w\"> </span><span class=\"s\">\"scale\"</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">Vector2</span><span class=\"p\">.</span><span class=\"n\">Zero</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"m\">1.0f</span><span class=\"p\">).</span><span class=\"n\">SetTrans</span><span class=\"p\">(</span><span class=\"n\">Tween</span><span class=\"p\">.</span><span class=\"n\">TransitionType</span><span class=\"p\">.</span><span class=\"n\">Bounce</span><span class=\"p\">);</span>\n<span class=\"n\">tween</span><span class=\"p\">.</span><span class=\"n\">TweenCallback</span><span class=\"p\">(</span><span class=\"n\">Callable</span><span class=\"p\">.</span><span class=\"n\">From</span><span class=\"p\">(</span><span class=\"n\">GetNode</span><span class=\"p\">(</span><span class=\"s\">\"Sprite\"</span><span class=\"p\">).</span><span class=\"n\">QueueFree</span><span class=\"p\">));</span>\n</pre></div>\n</div>\n</div></div>\n<p>Most of the <strong>Tween</strong> methods can be chained this way too. In the following example the <strong>Tween</strong> is bound to the running script's node and a default transition is set for its <a class=\"reference internal\" href=\"class_tweener.html#class-tweener\"><span class=\"std std-ref\">Tweener</span></a>s:</p>\n<div class=\"sphinx-tabs docutils container\">\n<div aria-label=\"Tabbed content\" class=\"closeable\" role=\"tablist\"><button aria-controls=\"panel-2-R0RTY3JpcHQ=\" aria-selected=\"true\" class=\"sphinx-tabs-tab code-tab group-tab\" id=\"tab-2-R0RTY3JpcHQ=\" name=\"R0RTY3JpcHQ=\" role=\"tab\" tabindex=\"0\">GDScript</button><button aria-controls=\"panel-2-QyM=\" aria-selected=\"false\" class=\"sphinx-tabs-tab code-tab group-tab\" id=\"tab-2-QyM=\" name=\"QyM=\" role=\"tab\" tabindex=\"-1\">C#</button></div><div aria-labelledby=\"tab-2-R0RTY3JpcHQ=\" class=\"sphinx-tabs-panel code-tab group-tab\" id=\"panel-2-R0RTY3JpcHQ=\" name=\"R0RTY3JpcHQ=\" role=\"tabpanel\" tabindex=\"0\"><div class=\"highlight-gdscript notranslate\"><div class=\"highlight\"><pre><span></span><span class=\"k\">var</span> <span class=\"n\">tween</span> <span class=\"o\">=</span> <span class=\"n\">get_tree</span><span class=\"p\">()</span><span class=\"o\">.</span><span class=\"n\">create_tween</span><span class=\"p\">()</span><span class=\"o\">.</span><span class=\"n\">bind_node</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">)</span><span class=\"o\">.</span><span class=\"n\">set_trans</span><span class=\"p\">(</span><span class=\"n\">Tween</span><span class=\"o\">.</span><span class=\"n\">TRANS_ELASTIC</span><span class=\"p\">)</span>\n<span class=\"n\">tween</span><span class=\"o\">.</span><span class=\"n\">tween_property</span><span class=\"p\">(</span><span class=\"o\">$</span><span class=\"n\">Sprite</span><span class=\"p\">,</span> <span class=\"s2\">\"modulate\"</span><span class=\"p\">,</span> <span class=\"nb nb-Type\">Color</span><span class=\"o\">.</span><span class=\"n\">RED</span><span class=\"p\">,</span> <span class=\"mi\">1</span><span class=\"p\">)</span>\n<span class=\"n\">tween</span><span class=\"o\">.</span><span class=\"n\">tween_property</span><span class=\"p\">(</span><span class=\"o\">$</span><span class=\"n\">Sprite</span><span class=\"p\">,</span> <span class=\"s2\">\"scale\"</span><span class=\"p\">,</span> <span class=\"nb nb-Type\">Vector2</span><span class=\"p\">(),</span> <span class=\"mi\">1</span><span class=\"p\">)</span>\n<span class=\"n\">tween</span><span class=\"o\">.</span><span class=\"n\">tween_callback</span><span class=\"p\">(</span><span class=\"o\">$</span><span class=\"n\">Sprite</span><span class=\"o\">.</span><span class=\"n\">queue_free</span><span class=\"p\">)</span>\n</pre></div>\n</div>\n</div><div aria-labelledby=\"tab-2-QyM=\" class=\"sphinx-tabs-panel code-tab group-tab\" hidden=\"true\" id=\"panel-2-QyM=\" name=\"QyM=\" role=\"tabpanel\" tabindex=\"0\"><div class=\"highlight-csharp notranslate\"><div class=\"highlight\"><pre><span></span><span class=\"kt\">var</span><span class=\"w\"> </span><span class=\"n\">tween</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"n\">GetTree</span><span class=\"p\">().</span><span class=\"n\">CreateTween</span><span class=\"p\">().</span><span class=\"n\">BindNode</span><span class=\"p\">(</span><span class=\"k\">this</span><span class=\"p\">).</span><span class=\"n\">SetTrans</span><span class=\"p\">(</span><span class=\"n\">Tween</span><span class=\"p\">.</span><span class=\"n\">TransitionType</span><span class=\"p\">.</span><span class=\"n\">Elastic</span><span class=\"p\">);</span>\n<span class=\"n\">tween</span><span class=\"p\">.</span><span class=\"n\">TweenProperty</span><span class=\"p\">(</span><span class=\"n\">GetNode</span><span class=\"p\">(</span><span class=\"s\">\"Sprite\"</span><span class=\"p\">),</span><span class=\"w\"> </span><span class=\"s\">\"modulate\"</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">Colors</span><span class=\"p\">.</span><span class=\"n\">Red</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"m\">1.0f</span><span class=\"p\">);</span>\n<span class=\"n\">tween</span><span class=\"p\">.</span><span class=\"n\">TweenProperty</span><span class=\"p\">(</span><span class=\"n\">GetNode</span><span class=\"p\">(</span><span class=\"s\">\"Sprite\"</span><span class=\"p\">),</span><span class=\"w\"> </span><span class=\"s\">\"scale\"</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">Vector2</span><span class=\"p\">.</span><span class=\"n\">Zero</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"m\">1.0f</span><span class=\"p\">);</span>\n<span class=\"n\">tween</span><span class=\"p\">.</span><span class=\"n\">TweenCallback</span><span class=\"p\">(</span><span class=\"n\">Callable</span><span class=\"p\">.</span><span class=\"n\">From</span><span class=\"p\">(</span><span class=\"n\">GetNode</span><span class=\"p\">(</span><span class=\"s\">\"Sprite\"</span><span class=\"p\">).</span><span class=\"n\">QueueFree</span><span class=\"p\">));</span>\n</pre></div>\n</div>\n</div></div>\n<p>Another interesting use for <strong>Tween</strong>s is animating arbitrary sets of objects:</p>\n<div class=\"sphinx-tabs docutils container\">\n<div aria-label=\"Tabbed content\" class=\"closeable\" role=\"tablist\"><button aria-controls=\"panel-3-R0RTY3JpcHQ=\" aria-selected=\"true\" class=\"sphinx-tabs-tab code-tab group-tab\" id=\"tab-3-R0RTY3JpcHQ=\" name=\"R0RTY3JpcHQ=\" role=\"tab\" tabindex=\"0\">GDScript</button><button aria-controls=\"panel-3-QyM=\" aria-selected=\"false\" class=\"sphinx-tabs-tab code-tab group-tab\" id=\"tab-3-QyM=\" name=\"QyM=\" role=\"tab\" tabindex=\"-1\">C#</button></div><div aria-labelledby=\"tab-3-R0RTY3JpcHQ=\" class=\"sphinx-tabs-panel code-tab group-tab\" id=\"panel-3-R0RTY3JpcHQ=\" name=\"R0RTY3JpcHQ=\" role=\"tabpanel\" tabindex=\"0\"><div class=\"highlight-gdscript notranslate\"><div class=\"highlight\"><pre><span></span><span class=\"k\">var</span> <span class=\"n\">tween</span> <span class=\"o\">=</span> <span class=\"n\">create_tween</span><span class=\"p\">()</span>\n<span class=\"k k-ControlFlow\">for</span> <span class=\"n\">sprite</span> <span class=\"ow\">in</span> <span class=\"n\">get_children</span><span class=\"p\">():</span>\n    <span class=\"n\">tween</span><span class=\"o\">.</span><span class=\"n\">tween_property</span><span class=\"p\">(</span><span class=\"n\">sprite</span><span class=\"p\">,</span> <span class=\"s2\">\"position\"</span><span class=\"p\">,</span> <span class=\"nb nb-Type\">Vector2</span><span class=\"p\">(</span><span class=\"mi\">0</span><span class=\"p\">,</span> <span class=\"mi\">0</span><span class=\"p\">),</span> <span class=\"mi\">1</span><span class=\"p\">)</span>\n</pre></div>\n</div>\n</div><div aria-labelledby=\"tab-3-QyM=\" class=\"sphinx-tabs-panel code-tab group-tab\" hidden=\"true\" id=\"panel-3-QyM=\" name=\"QyM=\" role=\"tabpanel\" tabindex=\"0\"><div class=\"highlight-csharp notranslate\"><div class=\"highlight\"><pre><span></span><span class=\"n\">Tween</span><span class=\"w\"> </span><span class=\"n\">tween</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"n\">CreateTween</span><span class=\"p\">();</span>\n<span class=\"k\">foreach</span><span class=\"w\"> </span><span class=\"p\">(</span><span class=\"n\">Node</span><span class=\"w\"> </span><span class=\"n\">sprite</span><span class=\"w\"> </span><span class=\"k\">in</span><span class=\"w\"> </span><span class=\"n\">GetChildren</span><span class=\"p\">())</span>\n<span class=\"w\">    </span><span class=\"n\">tween</span><span class=\"p\">.</span><span class=\"n\">TweenProperty</span><span class=\"p\">(</span><span class=\"n\">sprite</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"s\">\"position\"</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">Vector2</span><span class=\"p\">.</span><span class=\"n\">Zero</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"m\">1.0f</span><span class=\"p\">);</span>\n</pre></div>\n</div>\n</div></div>\n<p>In the example above, all children of a node are moved one after another to position (0, 0).</p>\n<p>You should avoid using more than one <strong>Tween</strong> per object's property. If two or more tweens animate one property at the same time, the last one created will take priority and assign the final value. If you want to interrupt and restart an animation, consider assigning the <strong>Tween</strong> to a variable:</p>\n<div class=\"sphinx-tabs docutils container\">\n<div aria-label=\"Tabbed content\" class=\"closeable\" role=\"tablist\"><button aria-controls=\"panel-4-R0RTY3JpcHQ=\" aria-selected=\"true\" class=\"sphinx-tabs-tab code-tab group-tab\" id=\"tab-4-R0RTY3JpcHQ=\" name=\"R0RTY3JpcHQ=\" role=\"tab\" tabindex=\"0\">GDScript</button><button aria-controls=\"panel-4-QyM=\" aria-selected=\"false\" class=\"sphinx-tabs-tab code-tab group-tab\" id=\"tab-4-QyM=\" name=\"QyM=\" role=\"tab\" tabindex=\"-1\">C#</button></div><div aria-labelledby=\"tab-4-R0RTY3JpcHQ=\" class=\"sphinx-tabs-panel code-tab group-tab\" id=\"panel-4-R0RTY3JpcHQ=\" name=\"R0RTY3JpcHQ=\" role=\"tabpanel\" tabindex=\"0\"><div class=\"highlight-gdscript notranslate\"><div class=\"highlight\"><pre><span></span><span class=\"k\">var</span> <span class=\"n\">tween</span>\n<span class=\"k\">func</span> <span class=\"n\">animate</span><span class=\"p\">():</span>\n    <span class=\"k k-ControlFlow\">if</span> <span class=\"n\">tween</span><span class=\"p\">:</span>\n        <span class=\"n\">tween</span><span class=\"o\">.</span><span class=\"n\">kill</span><span class=\"p\">()</span> <span class=\"c1\"># Abort the previous animation.</span>\n    <span class=\"n\">tween</span> <span class=\"o\">=</span> <span class=\"n\">create_tween</span><span class=\"p\">()</span>\n</pre></div>\n</div>\n</div><div aria-labelledby=\"tab-4-QyM=\" class=\"sphinx-tabs-panel code-tab group-tab\" hidden=\"true\" id=\"panel-4-QyM=\" name=\"QyM=\" role=\"tabpanel\" tabindex=\"0\"><div class=\"highlight-csharp notranslate\"><div class=\"highlight\"><pre><span></span><span class=\"k\">private</span><span class=\"w\"> </span><span class=\"n\">Tween</span><span class=\"w\"> </span><span class=\"n\">_tween</span><span class=\"p\">;</span>\n\n<span class=\"k\">public</span><span class=\"w\"> </span><span class=\"k\">void</span><span class=\"w\"> </span><span class=\"nf\">Animate</span><span class=\"p\">()</span>\n<span class=\"p\">{</span>\n<span class=\"w\">    </span><span class=\"k\">if</span><span class=\"w\"> </span><span class=\"p\">(</span><span class=\"n\">_tween</span><span class=\"w\"> </span><span class=\"o\">!=</span><span class=\"w\"> </span><span class=\"k\">null</span><span class=\"p\">)</span>\n<span class=\"w\">        </span><span class=\"n\">_tween</span><span class=\"p\">.</span><span class=\"n\">Kill</span><span class=\"p\">();</span><span class=\"w\"> </span><span class=\"c1\">// Abort the previous animation</span>\n<span class=\"w\">    </span><span class=\"n\">_tween</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"n\">CreateTween</span><span class=\"p\">();</span>\n<span class=\"p\">}</span>\n</pre></div>\n</div>\n</div></div>\n<p>Some <a class=\"reference internal\" href=\"class_tweener.html#class-tweener\"><span class=\"std std-ref\">Tweener</span></a>s use transitions and eases. The first accepts a <a class=\"reference internal\" href=\"#enum-tween-transitiontype\"><span class=\"std std-ref\">TransitionType</span></a> constant, and refers to the way the timing of the animation is handled (see <a class=\"reference external\" href=\"https://easings.net/\">easings.net</a> for some examples). The second accepts an <a class=\"reference internal\" href=\"#enum-tween-easetype\"><span class=\"std std-ref\">EaseType</span></a> constant, and controls where the <code class=\"docutils literal notranslate\"><span class=\"pre\">trans_type</span></code> is applied to the interpolation (in the beginning, the end, or both). If you don't know which transition and easing to pick, you can try different <a class=\"reference internal\" href=\"#enum-tween-transitiontype\"><span class=\"std std-ref\">TransitionType</span></a> constants with <a class=\"reference internal\" href=\"#class-tween-constant-ease-in-out\"><span class=\"std std-ref\">EASE_IN_OUT</span></a>, and use the one that looks best.</p>\n<p><a class=\"reference external\" href=\"https://raw.githubusercontent.com/godotengine/godot-docs/master/img/tween_cheatsheet.webp\">Tween easing and transition types cheatsheet</a></p>\n<p><strong>Note:</strong> Tweens are not designed to be re-used and trying to do so results in an undefined behavior. Create a new Tween for each animation and every time you replay an animation from start. Keep in mind that Tweens start immediately, so only create a Tween when you want to start animating.</p>\n<p><strong>Note:</strong> The tween is processed after all of the nodes in the current frame, i.e. node's <a class=\"reference internal\" href=\"class_node.html#class-node-method-process\"><span class=\"std std-ref\">Node._process</span></a> method would be called before the timer (or <a class=\"reference internal\" href=\"class_node.html#class-node-method-physics-process\"><span class=\"std std-ref\">Node._physics_process</span></a> depending on the value passed to <a class=\"reference internal\" href=\"#class-tween-method-set-process-mode\"><span class=\"std std-ref\">set_process_mode</span></a>).</p>\n"
            },
            "class_tweener": {
                "url": "https://docs.godotengine.org/en/4.1/classes/class_tweener.html",
                "title": "Tweener",
                "blurb": "<p><strong>Inherits:</strong> <a class=\"reference internal\" href=\"class_refcounted.html#class-refcounted\"><span class=\"std std-ref\">RefCounted</span></a> <strong>&lt;</strong> <a class=\"reference internal\" href=\"class_object.html#class-object\"><span class=\"std std-ref\">Object</span></a></p><p><strong>Inherited By:</strong> <a class=\"reference internal\" href=\"class_callbacktweener.html#class-callbacktweener\"><span class=\"std std-ref\">CallbackTweener</span></a>, <a class=\"reference internal\" href=\"class_intervaltweener.html#class-intervaltweener\"><span class=\"std std-ref\">IntervalTweener</span></a>, <a class=\"reference internal\" href=\"class_methodtweener.html#class-methodtweener\"><span class=\"std std-ref\">MethodTweener</span></a>, <a class=\"reference internal\" href=\"class_propertytweener.html#class-propertytweener\"><span class=\"std std-ref\">PropertyTweener</span></a></p><p>Abstract class for all Tweeners used by <a class=\"reference internal\" href=\"class_tween.html#class-tween\"><span class=\"std std-ref\">Tween</span></a>.</p>",
                "description": "\n\n<p>Tweeners are objects that perform a specific animating task, e.g. interpolating a property or calling a method at a given time. A <strong>Tweener</strong> can't be created manually, you need to use a dedicated method from <a class=\"reference internal\" href=\"class_tween.html#class-tween\"><span class=\"std std-ref\">Tween</span></a>.</p>\n"
            },
            "class_udpserver": {
                "url": "https://docs.godotengine.org/en/4.1/classes/class_udpserver.html",
                "title": "UDPServer",
                "blurb": "<p><strong>Inherits:</strong> <a class=\"reference internal\" href=\"class_refcounted.html#class-refcounted\"><span class=\"std std-ref\">RefCounted</span></a> <strong>&lt;</strong> <a class=\"reference internal\" href=\"class_object.html#class-object\"><span class=\"std std-ref\">Object</span></a></p><p>Helper class to implement a UDP server.</p>",
                "description": "\n\n<p>A simple server that opens a UDP socket and returns connected <a class=\"reference internal\" href=\"class_packetpeerudp.html#class-packetpeerudp\"><span class=\"std std-ref\">PacketPeerUDP</span></a> upon receiving new packets. See also <a class=\"reference internal\" href=\"class_packetpeerudp.html#class-packetpeerudp-method-connect-to-host\"><span class=\"std std-ref\">PacketPeerUDP.connect_to_host</span></a>.</p>\n<p>After starting the server (<a class=\"reference internal\" href=\"#class-udpserver-method-listen\"><span class=\"std std-ref\">listen</span></a>), you will need to <a class=\"reference internal\" href=\"#class-udpserver-method-poll\"><span class=\"std std-ref\">poll</span></a> it at regular intervals (e.g. inside <a class=\"reference internal\" href=\"class_node.html#class-node-method-process\"><span class=\"std std-ref\">Node._process</span></a>) for it to process new packets, delivering them to the appropriate <a class=\"reference internal\" href=\"class_packetpeerudp.html#class-packetpeerudp\"><span class=\"std std-ref\">PacketPeerUDP</span></a>, and taking new connections.</p>\n<p>Below a small example of how it can be used:</p>\n<div class=\"sphinx-tabs docutils container\">\n<div aria-label=\"Tabbed content\" class=\"closeable\" role=\"tablist\"><button aria-controls=\"panel-0-R0RTY3JpcHQ=\" aria-selected=\"true\" class=\"sphinx-tabs-tab code-tab group-tab\" id=\"tab-0-R0RTY3JpcHQ=\" name=\"R0RTY3JpcHQ=\" role=\"tab\" tabindex=\"0\">GDScript</button><button aria-controls=\"panel-0-QyM=\" aria-selected=\"false\" class=\"sphinx-tabs-tab code-tab group-tab\" id=\"tab-0-QyM=\" name=\"QyM=\" role=\"tab\" tabindex=\"-1\">C#</button></div><div aria-labelledby=\"tab-0-R0RTY3JpcHQ=\" class=\"sphinx-tabs-panel code-tab group-tab\" id=\"panel-0-R0RTY3JpcHQ=\" name=\"R0RTY3JpcHQ=\" role=\"tabpanel\" tabindex=\"0\"><div class=\"highlight-gdscript notranslate\"><div class=\"highlight\"><pre><span></span><span class=\"c1\"># server_node.gd</span>\n<span class=\"k\">class_name</span> <span class=\"n\">ServerNode</span>\n<span class=\"k\">extends</span> <span class=\"n\">Node</span>\n\n<span class=\"k\">var</span> <span class=\"n\">server</span> <span class=\"p\">:</span><span class=\"o\">=</span> <span class=\"n\">UDPServer</span><span class=\"o\">.</span><span class=\"n\">new</span><span class=\"p\">()</span>\n<span class=\"k\">var</span> <span class=\"n\">peers</span> <span class=\"o\">=</span> <span class=\"p\">[]</span>\n\n<span class=\"k\">func</span> <span class=\"n\">_ready</span><span class=\"p\">():</span>\n    <span class=\"n\">server</span><span class=\"o\">.</span><span class=\"n\">listen</span><span class=\"p\">(</span><span class=\"mi\">4242</span><span class=\"p\">)</span>\n\n<span class=\"k\">func</span> <span class=\"n\">_process</span><span class=\"p\">(</span><span class=\"n\">delta</span><span class=\"p\">):</span>\n    <span class=\"n\">server</span><span class=\"o\">.</span><span class=\"n\">poll</span><span class=\"p\">()</span> <span class=\"c1\"># Important!</span>\n    <span class=\"k k-ControlFlow\">if</span> <span class=\"n\">server</span><span class=\"o\">.</span><span class=\"n\">is_connection_available</span><span class=\"p\">():</span>\n        <span class=\"k\">var</span> <span class=\"n\">peer</span><span class=\"p\">:</span> <span class=\"n\">PacketPeerUDP</span> <span class=\"o\">=</span> <span class=\"n\">server</span><span class=\"o\">.</span><span class=\"n\">take_connection</span><span class=\"p\">()</span>\n        <span class=\"k\">var</span> <span class=\"n\">packet</span> <span class=\"o\">=</span> <span class=\"n\">peer</span><span class=\"o\">.</span><span class=\"n\">get_packet</span><span class=\"p\">()</span>\n        <span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"s2\">\"Accepted peer: </span><span class=\"si\">%s</span><span class=\"s2\">:</span><span class=\"si\">%s</span><span class=\"s2\">\"</span> <span class=\"o\">%</span> <span class=\"p\">[</span><span class=\"n\">peer</span><span class=\"o\">.</span><span class=\"n\">get_packet_ip</span><span class=\"p\">(),</span> <span class=\"n\">peer</span><span class=\"o\">.</span><span class=\"n\">get_packet_port</span><span class=\"p\">()])</span>\n        <span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"s2\">\"Received data: </span><span class=\"si\">%s</span><span class=\"s2\">\"</span> <span class=\"o\">%</span> <span class=\"p\">[</span><span class=\"n\">packet</span><span class=\"o\">.</span><span class=\"n\">get_string_from_utf8</span><span class=\"p\">()])</span>\n        <span class=\"c1\"># Reply so it knows we received the message.</span>\n        <span class=\"n\">peer</span><span class=\"o\">.</span><span class=\"n\">put_packet</span><span class=\"p\">(</span><span class=\"n\">packet</span><span class=\"p\">)</span>\n        <span class=\"c1\"># Keep a reference so we can keep contacting the remote peer.</span>\n        <span class=\"n\">peers</span><span class=\"o\">.</span><span class=\"n\">append</span><span class=\"p\">(</span><span class=\"n\">peer</span><span class=\"p\">)</span>\n\n    <span class=\"k k-ControlFlow\">for</span> <span class=\"n\">i</span> <span class=\"ow\">in</span> <span class=\"nb\">range</span><span class=\"p\">(</span><span class=\"mi\">0</span><span class=\"p\">,</span> <span class=\"n\">peers</span><span class=\"o\">.</span><span class=\"n\">size</span><span class=\"p\">()):</span>\n        <span class=\"k k-ControlFlow\">pass</span> <span class=\"c1\"># Do something with the connected peers.</span>\n</pre></div>\n</div>\n</div><div aria-labelledby=\"tab-0-QyM=\" class=\"sphinx-tabs-panel code-tab group-tab\" hidden=\"true\" id=\"panel-0-QyM=\" name=\"QyM=\" role=\"tabpanel\" tabindex=\"0\"><div class=\"highlight-csharp notranslate\"><div class=\"highlight\"><pre><span></span><span class=\"c1\">// ServerNode.cs</span>\n<span class=\"k\">using</span><span class=\"w\"> </span><span class=\"nn\">Godot</span><span class=\"p\">;</span>\n<span class=\"k\">using</span><span class=\"w\"> </span><span class=\"nn\">System.Collections.Generic</span><span class=\"p\">;</span>\n\n<span class=\"k\">public</span><span class=\"w\"> </span><span class=\"k\">partial</span><span class=\"w\"> </span><span class=\"k\">class</span><span class=\"w\"> </span><span class=\"nc\">ServerNode</span><span class=\"w\"> </span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"n\">Node</span>\n<span class=\"p\">{</span>\n<span class=\"w\">    </span><span class=\"k\">private</span><span class=\"w\"> </span><span class=\"n\">UdpServer</span><span class=\"w\"> </span><span class=\"n\">_server</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"k\">new</span><span class=\"w\"> </span><span class=\"n\">UdpServer</span><span class=\"p\">();</span>\n<span class=\"w\">    </span><span class=\"k\">private</span><span class=\"w\"> </span><span class=\"n\">List</span><span class=\"o\">&lt;</span><span class=\"n\">PacketPeerUdp</span><span class=\"o\">&gt;</span><span class=\"w\"> </span><span class=\"n\">_peers</span><span class=\"w\">  </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"k\">new</span><span class=\"w\"> </span><span class=\"n\">List</span><span class=\"o\">&lt;</span><span class=\"n\">PacketPeerUdp</span><span class=\"o\">&gt;</span><span class=\"p\">();</span>\n\n<span class=\"w\">    </span><span class=\"k\">public</span><span class=\"w\"> </span><span class=\"k\">override</span><span class=\"w\"> </span><span class=\"k\">void</span><span class=\"w\"> </span><span class=\"nf\">_Ready</span><span class=\"p\">()</span>\n<span class=\"w\">    </span><span class=\"p\">{</span>\n<span class=\"w\">        </span><span class=\"n\">_server</span><span class=\"p\">.</span><span class=\"n\">Listen</span><span class=\"p\">(</span><span class=\"m\">4242</span><span class=\"p\">);</span>\n<span class=\"w\">    </span><span class=\"p\">}</span>\n\n<span class=\"w\">    </span><span class=\"k\">public</span><span class=\"w\"> </span><span class=\"k\">override</span><span class=\"w\"> </span><span class=\"k\">void</span><span class=\"w\"> </span><span class=\"nf\">_Process</span><span class=\"p\">(</span><span class=\"kt\">double</span><span class=\"w\"> </span><span class=\"n\">delta</span><span class=\"p\">)</span>\n<span class=\"w\">    </span><span class=\"p\">{</span>\n<span class=\"w\">        </span><span class=\"n\">_server</span><span class=\"p\">.</span><span class=\"n\">Poll</span><span class=\"p\">();</span><span class=\"w\"> </span><span class=\"c1\">// Important!</span>\n<span class=\"w\">        </span><span class=\"k\">if</span><span class=\"w\"> </span><span class=\"p\">(</span><span class=\"n\">_server</span><span class=\"p\">.</span><span class=\"n\">IsConnectionAvailable</span><span class=\"p\">())</span>\n<span class=\"w\">        </span><span class=\"p\">{</span>\n<span class=\"w\">            </span><span class=\"n\">PacketPeerUdp</span><span class=\"w\"> </span><span class=\"n\">peer</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"n\">_server</span><span class=\"p\">.</span><span class=\"n\">TakeConnection</span><span class=\"p\">();</span>\n<span class=\"w\">            </span><span class=\"kt\">byte</span><span class=\"p\">[]</span><span class=\"w\"> </span><span class=\"n\">packet</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"n\">peer</span><span class=\"p\">.</span><span class=\"n\">GetPacket</span><span class=\"p\">();</span>\n<span class=\"w\">            </span><span class=\"n\">GD</span><span class=\"p\">.</span><span class=\"n\">Print</span><span class=\"p\">(</span><span class=\"s\">$\"Accepted Peer: {peer.GetPacketIP()}:{peer.GetPacketPort()}\"</span><span class=\"p\">);</span>\n<span class=\"w\">            </span><span class=\"n\">GD</span><span class=\"p\">.</span><span class=\"n\">Print</span><span class=\"p\">(</span><span class=\"s\">$\"Received Data: {packet.GetStringFromUtf8()}\"</span><span class=\"p\">);</span>\n<span class=\"w\">            </span><span class=\"c1\">// Reply so it knows we received the message.</span>\n<span class=\"w\">            </span><span class=\"n\">peer</span><span class=\"p\">.</span><span class=\"n\">PutPacket</span><span class=\"p\">(</span><span class=\"n\">packet</span><span class=\"p\">);</span>\n<span class=\"w\">            </span><span class=\"c1\">// Keep a reference so we can keep contacting the remote peer.</span>\n<span class=\"w\">            </span><span class=\"n\">_peers</span><span class=\"p\">.</span><span class=\"n\">Add</span><span class=\"p\">(</span><span class=\"n\">peer</span><span class=\"p\">);</span>\n<span class=\"w\">        </span><span class=\"p\">}</span>\n<span class=\"w\">        </span><span class=\"k\">foreach</span><span class=\"w\"> </span><span class=\"p\">(</span><span class=\"kt\">var</span><span class=\"w\"> </span><span class=\"n\">peer</span><span class=\"w\"> </span><span class=\"k\">in</span><span class=\"w\"> </span><span class=\"n\">_peers</span><span class=\"p\">)</span>\n<span class=\"w\">        </span><span class=\"p\">{</span>\n<span class=\"w\">            </span><span class=\"c1\">// Do something with the peers.</span>\n<span class=\"w\">        </span><span class=\"p\">}</span>\n<span class=\"w\">    </span><span class=\"p\">}</span>\n<span class=\"p\">}</span>\n</pre></div>\n</div>\n</div></div>\n<div class=\"sphinx-tabs docutils container\">\n<div aria-label=\"Tabbed content\" class=\"closeable\" role=\"tablist\"><button aria-controls=\"panel-1-R0RTY3JpcHQ=\" aria-selected=\"true\" class=\"sphinx-tabs-tab code-tab group-tab\" id=\"tab-1-R0RTY3JpcHQ=\" name=\"R0RTY3JpcHQ=\" role=\"tab\" tabindex=\"0\">GDScript</button><button aria-controls=\"panel-1-QyM=\" aria-selected=\"false\" class=\"sphinx-tabs-tab code-tab group-tab\" id=\"tab-1-QyM=\" name=\"QyM=\" role=\"tab\" tabindex=\"-1\">C#</button></div><div aria-labelledby=\"tab-1-R0RTY3JpcHQ=\" class=\"sphinx-tabs-panel code-tab group-tab\" id=\"panel-1-R0RTY3JpcHQ=\" name=\"R0RTY3JpcHQ=\" role=\"tabpanel\" tabindex=\"0\"><div class=\"highlight-gdscript notranslate\"><div class=\"highlight\"><pre><span></span><span class=\"c1\"># client_node.gd</span>\n<span class=\"k\">class_name</span> <span class=\"n\">ClientNode</span>\n<span class=\"k\">extends</span> <span class=\"n\">Node</span>\n\n<span class=\"k\">var</span> <span class=\"n\">udp</span> <span class=\"p\">:</span><span class=\"o\">=</span> <span class=\"n\">PacketPeerUDP</span><span class=\"o\">.</span><span class=\"n\">new</span><span class=\"p\">()</span>\n<span class=\"k\">var</span> <span class=\"n\">connected</span> <span class=\"o\">=</span> <span class=\"bp\">false</span>\n\n<span class=\"k\">func</span> <span class=\"n\">_ready</span><span class=\"p\">():</span>\n    <span class=\"n\">udp</span><span class=\"o\">.</span><span class=\"n\">connect_to_host</span><span class=\"p\">(</span><span class=\"s2\">\"127.0.0.1\"</span><span class=\"p\">,</span> <span class=\"mi\">4242</span><span class=\"p\">)</span>\n\n<span class=\"k\">func</span> <span class=\"n\">_process</span><span class=\"p\">(</span><span class=\"n\">delta</span><span class=\"p\">):</span>\n    <span class=\"k k-ControlFlow\">if</span> <span class=\"o\">!</span><span class=\"n\">connected</span><span class=\"p\">:</span>\n        <span class=\"c1\"># Try to contact server</span>\n        <span class=\"n\">udp</span><span class=\"o\">.</span><span class=\"n\">put_packet</span><span class=\"p\">(</span><span class=\"s2\">\"The answer is... 42!\"</span><span class=\"o\">.</span><span class=\"n\">to_utf8_buffer</span><span class=\"p\">())</span>\n    <span class=\"k k-ControlFlow\">if</span> <span class=\"n\">udp</span><span class=\"o\">.</span><span class=\"n\">get_available_packet_count</span><span class=\"p\">()</span> <span class=\"o\">&gt;</span> <span class=\"mi\">0</span><span class=\"p\">:</span>\n        <span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"s2\">\"Connected: </span><span class=\"si\">%s</span><span class=\"s2\">\"</span> <span class=\"o\">%</span> <span class=\"n\">udp</span><span class=\"o\">.</span><span class=\"n\">get_packet</span><span class=\"p\">()</span><span class=\"o\">.</span><span class=\"n\">get_string_from_utf8</span><span class=\"p\">())</span>\n        <span class=\"n\">connected</span> <span class=\"o\">=</span> <span class=\"bp\">true</span>\n</pre></div>\n</div>\n</div><div aria-labelledby=\"tab-1-QyM=\" class=\"sphinx-tabs-panel code-tab group-tab\" hidden=\"true\" id=\"panel-1-QyM=\" name=\"QyM=\" role=\"tabpanel\" tabindex=\"0\"><div class=\"highlight-csharp notranslate\"><div class=\"highlight\"><pre><span></span><span class=\"c1\">// ClientNode.cs</span>\n<span class=\"k\">using</span><span class=\"w\"> </span><span class=\"nn\">Godot</span><span class=\"p\">;</span>\n\n<span class=\"k\">public</span><span class=\"w\"> </span><span class=\"k\">partial</span><span class=\"w\"> </span><span class=\"k\">class</span><span class=\"w\"> </span><span class=\"nc\">ClientNode</span><span class=\"w\"> </span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"n\">Node</span>\n<span class=\"p\">{</span>\n<span class=\"w\">    </span><span class=\"k\">private</span><span class=\"w\"> </span><span class=\"n\">PacketPeerUdp</span><span class=\"w\"> </span><span class=\"n\">_udp</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"k\">new</span><span class=\"w\"> </span><span class=\"n\">PacketPeerUdp</span><span class=\"p\">();</span>\n<span class=\"w\">    </span><span class=\"k\">private</span><span class=\"w\"> </span><span class=\"kt\">bool</span><span class=\"w\"> </span><span class=\"n\">_connected</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"k\">false</span><span class=\"p\">;</span>\n\n<span class=\"w\">    </span><span class=\"k\">public</span><span class=\"w\"> </span><span class=\"k\">override</span><span class=\"w\"> </span><span class=\"k\">void</span><span class=\"w\"> </span><span class=\"nf\">_Ready</span><span class=\"p\">()</span>\n<span class=\"w\">    </span><span class=\"p\">{</span>\n<span class=\"w\">        </span><span class=\"n\">_udp</span><span class=\"p\">.</span><span class=\"n\">ConnectToHost</span><span class=\"p\">(</span><span class=\"s\">\"127.0.0.1\"</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"m\">4242</span><span class=\"p\">);</span>\n<span class=\"w\">    </span><span class=\"p\">}</span>\n\n<span class=\"w\">    </span><span class=\"k\">public</span><span class=\"w\"> </span><span class=\"k\">override</span><span class=\"w\"> </span><span class=\"k\">void</span><span class=\"w\"> </span><span class=\"nf\">_Process</span><span class=\"p\">(</span><span class=\"kt\">double</span><span class=\"w\"> </span><span class=\"n\">delta</span><span class=\"p\">)</span>\n<span class=\"w\">    </span><span class=\"p\">{</span>\n<span class=\"w\">        </span><span class=\"k\">if</span><span class=\"w\"> </span><span class=\"p\">(</span><span class=\"o\">!</span><span class=\"n\">_connected</span><span class=\"p\">)</span>\n<span class=\"w\">        </span><span class=\"p\">{</span>\n<span class=\"w\">            </span><span class=\"c1\">// Try to contact server</span>\n<span class=\"w\">            </span><span class=\"n\">_udp</span><span class=\"p\">.</span><span class=\"n\">PutPacket</span><span class=\"p\">(</span><span class=\"s\">\"The Answer Is..42!\"</span><span class=\"p\">.</span><span class=\"n\">ToUtf8Buffer</span><span class=\"p\">());</span>\n<span class=\"w\">        </span><span class=\"p\">}</span>\n<span class=\"w\">        </span><span class=\"k\">if</span><span class=\"w\"> </span><span class=\"p\">(</span><span class=\"n\">_udp</span><span class=\"p\">.</span><span class=\"n\">GetAvailablePacketCount</span><span class=\"p\">()</span><span class=\"w\"> </span><span class=\"o\">&gt;</span><span class=\"w\"> </span><span class=\"m\">0</span><span class=\"p\">)</span>\n<span class=\"w\">        </span><span class=\"p\">{</span>\n<span class=\"w\">            </span><span class=\"n\">GD</span><span class=\"p\">.</span><span class=\"n\">Print</span><span class=\"p\">(</span><span class=\"s\">$\"Connected: {_udp.GetPacket().GetStringFromUtf8()}\"</span><span class=\"p\">);</span>\n<span class=\"w\">            </span><span class=\"n\">_connected</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"k\">true</span><span class=\"p\">;</span>\n<span class=\"w\">        </span><span class=\"p\">}</span>\n<span class=\"w\">    </span><span class=\"p\">}</span>\n<span class=\"p\">}</span>\n</pre></div>\n</div>\n</div></div>\n"
            },
            "class_undoredo": {
                "url": "https://docs.godotengine.org/en/4.1/classes/class_undoredo.html",
                "title": "UndoRedo",
                "blurb": "<p><strong>Inherits:</strong> <a class=\"reference internal\" href=\"class_object.html#class-object\"><span class=\"std std-ref\">Object</span></a></p><p>Provides a high-level interface for implementing undo and redo operations.</p>",
                "description": "\n\n<p>UndoRedo works by registering methods and property changes inside \"actions\". You can create an action, then provide ways to do and undo this action using function calls and property changes, then commit the action.</p>\n<p>When an action is committed, all of the <code class=\"docutils literal notranslate\"><span class=\"pre\">do_*</span></code> methods will run. If the <a class=\"reference internal\" href=\"#class-undoredo-method-undo\"><span class=\"std std-ref\">undo</span></a> method is used, the <code class=\"docutils literal notranslate\"><span class=\"pre\">undo_*</span></code> methods will run. If the <a class=\"reference internal\" href=\"#class-undoredo-method-redo\"><span class=\"std std-ref\">redo</span></a> method is used, once again, all of the <code class=\"docutils literal notranslate\"><span class=\"pre\">do_*</span></code> methods will run.</p>\n<p>Here's an example on how to add an action:</p>\n<div class=\"sphinx-tabs docutils container\">\n<div aria-label=\"Tabbed content\" class=\"closeable\" role=\"tablist\"><button aria-controls=\"panel-0-R0RTY3JpcHQ=\" aria-selected=\"true\" class=\"sphinx-tabs-tab code-tab group-tab\" id=\"tab-0-R0RTY3JpcHQ=\" name=\"R0RTY3JpcHQ=\" role=\"tab\" tabindex=\"0\">GDScript</button><button aria-controls=\"panel-0-QyM=\" aria-selected=\"false\" class=\"sphinx-tabs-tab code-tab group-tab\" id=\"tab-0-QyM=\" name=\"QyM=\" role=\"tab\" tabindex=\"-1\">C#</button></div><div aria-labelledby=\"tab-0-R0RTY3JpcHQ=\" class=\"sphinx-tabs-panel code-tab group-tab\" id=\"panel-0-R0RTY3JpcHQ=\" name=\"R0RTY3JpcHQ=\" role=\"tabpanel\" tabindex=\"0\"><div class=\"highlight-gdscript notranslate\"><div class=\"highlight\"><pre><span></span><span class=\"k\">var</span> <span class=\"n\">undo_redo</span> <span class=\"o\">=</span> <span class=\"n\">UndoRedo</span><span class=\"o\">.</span><span class=\"n\">new</span><span class=\"p\">()</span>\n\n<span class=\"k\">func</span> <span class=\"n\">do_something</span><span class=\"p\">():</span>\n    <span class=\"k k-ControlFlow\">pass</span> <span class=\"c1\"># Put your code here.</span>\n\n<span class=\"k\">func</span> <span class=\"n\">undo_something</span><span class=\"p\">():</span>\n    <span class=\"k k-ControlFlow\">pass</span> <span class=\"c1\"># Put here the code that reverts what's done by \"do_something()\".</span>\n\n<span class=\"k\">func</span> <span class=\"n\">_on_my_button_pressed</span><span class=\"p\">():</span>\n    <span class=\"k\">var</span> <span class=\"n\">node</span> <span class=\"o\">=</span> <span class=\"n\">get_node</span><span class=\"p\">(</span><span class=\"s2\">\"MyNode2D\"</span><span class=\"p\">)</span>\n    <span class=\"n\">undo_redo</span><span class=\"o\">.</span><span class=\"n\">create_action</span><span class=\"p\">(</span><span class=\"s2\">\"Move the node\"</span><span class=\"p\">)</span>\n    <span class=\"n\">undo_redo</span><span class=\"o\">.</span><span class=\"n\">add_do_method</span><span class=\"p\">(</span><span class=\"n\">do_something</span><span class=\"p\">)</span>\n    <span class=\"n\">undo_redo</span><span class=\"o\">.</span><span class=\"n\">add_undo_method</span><span class=\"p\">(</span><span class=\"n\">undo_something</span><span class=\"p\">)</span>\n    <span class=\"n\">undo_redo</span><span class=\"o\">.</span><span class=\"n\">add_do_property</span><span class=\"p\">(</span><span class=\"n\">node</span><span class=\"p\">,</span> <span class=\"s2\">\"position\"</span><span class=\"p\">,</span> <span class=\"nb nb-Type\">Vector2</span><span class=\"p\">(</span><span class=\"mi\">100</span><span class=\"p\">,</span><span class=\"mi\">100</span><span class=\"p\">))</span>\n    <span class=\"n\">undo_redo</span><span class=\"o\">.</span><span class=\"n\">add_undo_property</span><span class=\"p\">(</span><span class=\"n\">node</span><span class=\"p\">,</span> <span class=\"s2\">\"position\"</span><span class=\"p\">,</span> <span class=\"n\">node</span><span class=\"o\">.</span><span class=\"n\">position</span><span class=\"p\">)</span>\n    <span class=\"n\">undo_redo</span><span class=\"o\">.</span><span class=\"n\">commit_action</span><span class=\"p\">()</span>\n</pre></div>\n</div>\n</div><div aria-labelledby=\"tab-0-QyM=\" class=\"sphinx-tabs-panel code-tab group-tab\" hidden=\"true\" id=\"panel-0-QyM=\" name=\"QyM=\" role=\"tabpanel\" tabindex=\"0\"><div class=\"highlight-csharp notranslate\"><div class=\"highlight\"><pre><span></span><span class=\"k\">private</span><span class=\"w\"> </span><span class=\"n\">UndoRedo</span><span class=\"w\"> </span><span class=\"n\">_undoRedo</span><span class=\"p\">;</span>\n\n<span class=\"k\">public</span><span class=\"w\"> </span><span class=\"k\">override</span><span class=\"w\"> </span><span class=\"k\">void</span><span class=\"w\"> </span><span class=\"nf\">_Ready</span><span class=\"p\">()</span>\n<span class=\"p\">{</span>\n<span class=\"w\">    </span><span class=\"n\">_undoRedo</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"k\">new</span><span class=\"w\"> </span><span class=\"n\">UndoRedo</span><span class=\"p\">();</span>\n<span class=\"p\">}</span>\n\n<span class=\"k\">public</span><span class=\"w\"> </span><span class=\"k\">void</span><span class=\"w\"> </span><span class=\"nf\">DoSomething</span><span class=\"p\">()</span>\n<span class=\"p\">{</span>\n<span class=\"w\">    </span><span class=\"c1\">// Put your code here.</span>\n<span class=\"p\">}</span>\n\n<span class=\"k\">public</span><span class=\"w\"> </span><span class=\"k\">void</span><span class=\"w\"> </span><span class=\"nf\">UndoSomething</span><span class=\"p\">()</span>\n<span class=\"p\">{</span>\n<span class=\"w\">    </span><span class=\"c1\">// Put here the code that reverts what's done by \"DoSomething()\".</span>\n<span class=\"p\">}</span>\n\n<span class=\"k\">private</span><span class=\"w\"> </span><span class=\"k\">void</span><span class=\"w\"> </span><span class=\"nf\">OnMyButtonPressed</span><span class=\"p\">()</span>\n<span class=\"p\">{</span>\n<span class=\"w\">    </span><span class=\"kt\">var</span><span class=\"w\"> </span><span class=\"n\">node</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"n\">GetNode</span><span class=\"o\">&lt;</span><span class=\"n\">Node2D</span><span class=\"o\">&gt;</span><span class=\"p\">(</span><span class=\"s\">\"MyNode2D\"</span><span class=\"p\">);</span>\n<span class=\"w\">    </span><span class=\"n\">_undoRedo</span><span class=\"p\">.</span><span class=\"n\">CreateAction</span><span class=\"p\">(</span><span class=\"s\">\"Move the node\"</span><span class=\"p\">);</span>\n<span class=\"w\">    </span><span class=\"n\">_undoRedo</span><span class=\"p\">.</span><span class=\"n\">AddDoMethod</span><span class=\"p\">(</span><span class=\"k\">new</span><span class=\"w\"> </span><span class=\"n\">Callable</span><span class=\"p\">(</span><span class=\"k\">this</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">MethodName</span><span class=\"p\">.</span><span class=\"n\">DoSomething</span><span class=\"p\">));</span>\n<span class=\"w\">    </span><span class=\"n\">_undoRedo</span><span class=\"p\">.</span><span class=\"n\">AddUndoMethod</span><span class=\"p\">(</span><span class=\"k\">new</span><span class=\"w\"> </span><span class=\"n\">Callable</span><span class=\"p\">(</span><span class=\"k\">this</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">MethodName</span><span class=\"p\">.</span><span class=\"n\">UndoSomething</span><span class=\"p\">));</span>\n<span class=\"w\">    </span><span class=\"n\">_undoRedo</span><span class=\"p\">.</span><span class=\"n\">AddDoProperty</span><span class=\"p\">(</span><span class=\"n\">node</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"s\">\"position\"</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"k\">new</span><span class=\"w\"> </span><span class=\"n\">Vector2</span><span class=\"p\">(</span><span class=\"m\">100</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"m\">100</span><span class=\"p\">));</span>\n<span class=\"w\">    </span><span class=\"n\">_undoRedo</span><span class=\"p\">.</span><span class=\"n\">AddUndoProperty</span><span class=\"p\">(</span><span class=\"n\">node</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"s\">\"position\"</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">node</span><span class=\"p\">.</span><span class=\"n\">Position</span><span class=\"p\">);</span>\n<span class=\"w\">    </span><span class=\"n\">_undoRedo</span><span class=\"p\">.</span><span class=\"n\">CommitAction</span><span class=\"p\">();</span>\n<span class=\"p\">}</span>\n</pre></div>\n</div>\n</div></div>\n<p>Before calling any of the <code class=\"docutils literal notranslate\"><span class=\"pre\">add_(un)do_*</span></code> methods, you need to first call <a class=\"reference internal\" href=\"#class-undoredo-method-create-action\"><span class=\"std std-ref\">create_action</span></a>. Afterwards you need to call <a class=\"reference internal\" href=\"#class-undoredo-method-commit-action\"><span class=\"std std-ref\">commit_action</span></a>.</p>\n<p>If you don't need to register a method, you can leave <a class=\"reference internal\" href=\"#class-undoredo-method-add-do-method\"><span class=\"std std-ref\">add_do_method</span></a> and <a class=\"reference internal\" href=\"#class-undoredo-method-add-undo-method\"><span class=\"std std-ref\">add_undo_method</span></a> out; the same goes for properties. You can also register more than one method/property.</p>\n<p>If you are making an <a class=\"reference internal\" href=\"class_editorplugin.html#class-editorplugin\"><span class=\"std std-ref\">EditorPlugin</span></a> and want to integrate into the editor's undo history, use <a class=\"reference internal\" href=\"class_editorundoredomanager.html#class-editorundoredomanager\"><span class=\"std std-ref\">EditorUndoRedoManager</span></a> instead.</p>\n<p>If you are registering multiple properties/method which depend on one another, be aware that by default undo operation are called in the same order they have been added. Therefore instead of grouping do operation with their undo operations it is better to group do on one side and undo on the other as shown below.</p>\n<div class=\"sphinx-tabs docutils container\">\n<div aria-label=\"Tabbed content\" class=\"closeable\" role=\"tablist\"><button aria-controls=\"panel-1-R0RTY3JpcHQ=\" aria-selected=\"true\" class=\"sphinx-tabs-tab code-tab group-tab\" id=\"tab-1-R0RTY3JpcHQ=\" name=\"R0RTY3JpcHQ=\" role=\"tab\" tabindex=\"0\">GDScript</button><button aria-controls=\"panel-1-QyM=\" aria-selected=\"false\" class=\"sphinx-tabs-tab code-tab group-tab\" id=\"tab-1-QyM=\" name=\"QyM=\" role=\"tab\" tabindex=\"-1\">C#</button></div><div aria-labelledby=\"tab-1-R0RTY3JpcHQ=\" class=\"sphinx-tabs-panel code-tab group-tab\" id=\"panel-1-R0RTY3JpcHQ=\" name=\"R0RTY3JpcHQ=\" role=\"tabpanel\" tabindex=\"0\"><div class=\"highlight-gdscript notranslate\"><div class=\"highlight\"><pre><span></span><span class=\"n\">undo_redo</span><span class=\"o\">.</span><span class=\"n\">create_action</span><span class=\"p\">(</span><span class=\"s2\">\"Add object\"</span><span class=\"p\">)</span>\n\n<span class=\"c1\"># DO</span>\n<span class=\"n\">undo_redo</span><span class=\"o\">.</span><span class=\"n\">add_do_method</span><span class=\"p\">(</span><span class=\"n\">_create_object</span><span class=\"p\">)</span>\n<span class=\"n\">undo_redo</span><span class=\"o\">.</span><span class=\"n\">add_do_method</span><span class=\"p\">(</span><span class=\"n\">_add_object_to_singleton</span><span class=\"p\">)</span>\n\n<span class=\"c1\"># UNDO</span>\n<span class=\"n\">undo_redo</span><span class=\"o\">.</span><span class=\"n\">add_undo_method</span><span class=\"p\">(</span><span class=\"n\">_remove_object_from_singleton</span><span class=\"p\">)</span>\n<span class=\"n\">undo_redo</span><span class=\"o\">.</span><span class=\"n\">add_undo_method</span><span class=\"p\">(</span><span class=\"n\">_destroy_that_object</span><span class=\"p\">)</span>\n\n<span class=\"n\">undo_redo</span><span class=\"o\">.</span><span class=\"n\">commit_action</span><span class=\"p\">()</span>\n</pre></div>\n</div>\n</div><div aria-labelledby=\"tab-1-QyM=\" class=\"sphinx-tabs-panel code-tab group-tab\" hidden=\"true\" id=\"panel-1-QyM=\" name=\"QyM=\" role=\"tabpanel\" tabindex=\"0\"><div class=\"highlight-csharp notranslate\"><div class=\"highlight\"><pre><span></span><span class=\"n\">_undo_redo</span><span class=\"p\">.</span><span class=\"n\">CreateAction</span><span class=\"p\">(</span><span class=\"s\">\"Add object\"</span><span class=\"p\">);</span>\n\n<span class=\"c1\">// DO</span>\n<span class=\"n\">_undo_redo</span><span class=\"p\">.</span><span class=\"n\">AddDoMethod</span><span class=\"p\">(</span><span class=\"k\">new</span><span class=\"w\"> </span><span class=\"n\">Callable</span><span class=\"p\">(</span><span class=\"k\">this</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">MethodName</span><span class=\"p\">.</span><span class=\"n\">CreateObject</span><span class=\"p\">));</span>\n<span class=\"n\">_undo_redo</span><span class=\"p\">.</span><span class=\"n\">AddDoMethod</span><span class=\"p\">(</span><span class=\"k\">new</span><span class=\"w\"> </span><span class=\"n\">Callable</span><span class=\"p\">(</span><span class=\"k\">this</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">MethodName</span><span class=\"p\">.</span><span class=\"n\">AddObjectToSingleton</span><span class=\"p\">));</span>\n\n<span class=\"c1\">// UNDO</span>\n<span class=\"n\">_undo_redo</span><span class=\"p\">.</span><span class=\"n\">AddUndoMethod</span><span class=\"p\">(</span><span class=\"k\">new</span><span class=\"w\"> </span><span class=\"n\">Callable</span><span class=\"p\">(</span><span class=\"k\">this</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">MethodName</span><span class=\"p\">.</span><span class=\"n\">RemoveObjectFromSingleton</span><span class=\"p\">));</span>\n<span class=\"n\">_undo_redo</span><span class=\"p\">.</span><span class=\"n\">AddUndoMethod</span><span class=\"p\">(</span><span class=\"k\">new</span><span class=\"w\"> </span><span class=\"n\">Callable</span><span class=\"p\">(</span><span class=\"k\">this</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">MethodName</span><span class=\"p\">.</span><span class=\"n\">DestroyThatObject</span><span class=\"p\">));</span>\n\n<span class=\"n\">_undo_redo</span><span class=\"p\">.</span><span class=\"n\">CommitAction</span><span class=\"p\">();</span>\n</pre></div>\n</div>\n</div></div>\n"
            },
            "class_upnp": {
                "url": "https://docs.godotengine.org/en/4.1/classes/class_upnp.html",
                "title": "UPNP",
                "blurb": "<p><strong>Inherits:</strong> <a class=\"reference internal\" href=\"class_refcounted.html#class-refcounted\"><span class=\"std std-ref\">RefCounted</span></a> <strong>&lt;</strong> <a class=\"reference internal\" href=\"class_object.html#class-object\"><span class=\"std std-ref\">Object</span></a></p><p>Universal Plug and Play (UPnP) functions for network device discovery, querying and port forwarding.</p>",
                "description": "\n\n<p>This class can be used to discover compatible <a class=\"reference internal\" href=\"class_upnpdevice.html#class-upnpdevice\"><span class=\"std std-ref\">UPNPDevice</span></a>s on the local network and execute commands on them, like managing port mappings (for port forwarding/NAT traversal) and querying the local and remote network IP address. Note that methods on this class are synchronous and block the calling thread.</p>\n<p>To forward a specific port (here <code class=\"docutils literal notranslate\"><span class=\"pre\">7777</span></code>, note both <a class=\"reference internal\" href=\"#class-upnp-method-discover\"><span class=\"std std-ref\">discover</span></a> and <a class=\"reference internal\" href=\"#class-upnp-method-add-port-mapping\"><span class=\"std std-ref\">add_port_mapping</span></a> can return errors that should be checked):</p>\n<div class=\"highlight-gdscript notranslate\"><div class=\"highlight\"><pre><span></span><span class=\"k\">var</span> <span class=\"n\">upnp</span> <span class=\"o\">=</span> <span class=\"n\">UPNP</span><span class=\"o\">.</span><span class=\"n\">new</span><span class=\"p\">()</span>\n<span class=\"n\">upnp</span><span class=\"o\">.</span><span class=\"n\">discover</span><span class=\"p\">()</span>\n<span class=\"n\">upnp</span><span class=\"o\">.</span><span class=\"n\">add_port_mapping</span><span class=\"p\">(</span><span class=\"mi\">7777</span><span class=\"p\">)</span>\n</pre></div>\n</div>\n<p>To close a specific port (e.g. after you have finished using it):</p>\n<div class=\"highlight-gdscript notranslate\"><div class=\"highlight\"><pre><span></span><span class=\"n\">upnp</span><span class=\"o\">.</span><span class=\"n\">delete_port_mapping</span><span class=\"p\">(</span><span class=\"n\">port</span><span class=\"p\">)</span>\n</pre></div>\n</div>\n<p><strong>Note:</strong> UPnP discovery blocks the current thread. To perform discovery without blocking the main thread, use <a class=\"reference internal\" href=\"class_thread.html#class-thread\"><span class=\"std std-ref\">Thread</span></a>s like this:</p>\n<div class=\"highlight-gdscript notranslate\"><div class=\"highlight\"><pre><span></span><span class=\"c1\"># Emitted when UPnP port mapping setup is completed (regardless of success or failure).</span>\n<span class=\"k\">signal</span> <span class=\"n\">upnp_completed</span><span class=\"p\">(</span><span class=\"n\">error</span><span class=\"p\">)</span>\n\n<span class=\"c1\"># Replace this with your own server port number between 1024 and 65535.</span>\n<span class=\"k\">const</span> <span class=\"n\">SERVER_PORT</span> <span class=\"o\">=</span> <span class=\"mi\">3928</span>\n<span class=\"k\">var</span> <span class=\"n\">thread</span> <span class=\"o\">=</span> <span class=\"nb nb-Type\">null</span>\n\n<span class=\"k\">func</span> <span class=\"n\">_upnp_setup</span><span class=\"p\">(</span><span class=\"n\">server_port</span><span class=\"p\">):</span>\n    <span class=\"c1\"># UPNP queries take some time.</span>\n    <span class=\"k\">var</span> <span class=\"n\">upnp</span> <span class=\"o\">=</span> <span class=\"n\">UPNP</span><span class=\"o\">.</span><span class=\"n\">new</span><span class=\"p\">()</span>\n    <span class=\"k\">var</span> <span class=\"n\">err</span> <span class=\"o\">=</span> <span class=\"n\">upnp</span><span class=\"o\">.</span><span class=\"n\">discover</span><span class=\"p\">()</span>\n\n    <span class=\"k k-ControlFlow\">if</span> <span class=\"n\">err</span> <span class=\"o\">!=</span> <span class=\"n\">OK</span><span class=\"p\">:</span>\n        <span class=\"nb\">push_error</span><span class=\"p\">(</span><span class=\"nb\">str</span><span class=\"p\">(</span><span class=\"n\">err</span><span class=\"p\">))</span>\n        <span class=\"n\">emit_signal</span><span class=\"p\">(</span><span class=\"s2\">\"upnp_completed\"</span><span class=\"p\">,</span> <span class=\"n\">err</span><span class=\"p\">)</span>\n        <span class=\"k k-ControlFlow\">return</span>\n\n    <span class=\"k k-ControlFlow\">if</span> <span class=\"n\">upnp</span><span class=\"o\">.</span><span class=\"n\">get_gateway</span><span class=\"p\">()</span> <span class=\"ow\">and</span> <span class=\"n\">upnp</span><span class=\"o\">.</span><span class=\"n\">get_gateway</span><span class=\"p\">()</span><span class=\"o\">.</span><span class=\"n\">is_valid_gateway</span><span class=\"p\">():</span>\n        <span class=\"n\">upnp</span><span class=\"o\">.</span><span class=\"n\">add_port_mapping</span><span class=\"p\">(</span><span class=\"n\">server_port</span><span class=\"p\">,</span> <span class=\"n\">server_port</span><span class=\"p\">,</span> <span class=\"n\">ProjectSettings</span><span class=\"o\">.</span><span class=\"n\">get_setting</span><span class=\"p\">(</span><span class=\"s2\">\"application/config/name\"</span><span class=\"p\">),</span> <span class=\"s2\">\"UDP\"</span><span class=\"p\">)</span>\n        <span class=\"n\">upnp</span><span class=\"o\">.</span><span class=\"n\">add_port_mapping</span><span class=\"p\">(</span><span class=\"n\">server_port</span><span class=\"p\">,</span> <span class=\"n\">server_port</span><span class=\"p\">,</span> <span class=\"n\">ProjectSettings</span><span class=\"o\">.</span><span class=\"n\">get_setting</span><span class=\"p\">(</span><span class=\"s2\">\"application/config/name\"</span><span class=\"p\">),</span> <span class=\"s2\">\"TCP\"</span><span class=\"p\">)</span>\n        <span class=\"n\">emit_signal</span><span class=\"p\">(</span><span class=\"s2\">\"upnp_completed\"</span><span class=\"p\">,</span> <span class=\"n\">OK</span><span class=\"p\">)</span>\n\n<span class=\"k\">func</span> <span class=\"n\">_ready</span><span class=\"p\">():</span>\n    <span class=\"n\">thread</span> <span class=\"o\">=</span> <span class=\"n\">Thread</span><span class=\"o\">.</span><span class=\"n\">new</span><span class=\"p\">()</span>\n    <span class=\"n\">thread</span><span class=\"o\">.</span><span class=\"n\">start</span><span class=\"p\">(</span><span class=\"n\">_upnp_setup</span><span class=\"o\">.</span><span class=\"n\">bind</span><span class=\"p\">(</span><span class=\"n\">SERVER_PORT</span><span class=\"p\">))</span>\n\n<span class=\"k\">func</span> <span class=\"n\">_exit_tree</span><span class=\"p\">():</span>\n    <span class=\"c1\"># Wait for thread finish here to handle game exit while the thread is running.</span>\n    <span class=\"n\">thread</span><span class=\"o\">.</span><span class=\"n\">wait_to_finish</span><span class=\"p\">()</span>\n</pre></div>\n</div>\n<p><strong>Terminology:</strong> In the context of UPnP networking, \"gateway\" (or \"internet gateway device\", short IGD) refers to network devices that allow computers in the local network to access the internet (\"wide area network\", WAN). These gateways are often also called \"routers\".</p>\n<p><strong>Pitfalls:</strong></p>\n<ul class=\"simple\">\n<li><p>As explained above, these calls are blocking and shouldn't be run on the main thread, especially as they can block for multiple seconds at a time. Use threading!</p></li>\n<li><p>Networking is physical and messy. Packets get lost in transit or get filtered, addresses, free ports and assigned mappings change, and devices may leave or join the network at any time. Be mindful of this, be diligent when checking and handling errors, and handle these gracefully if you can: add clear error UI, timeouts and re-try handling.</p></li>\n<li><p>Port mappings may change (and be removed) at any time, and the remote/external IP address of the gateway can change likewise. You should consider re-querying the external IP and try to update/refresh the port mapping periodically (for example, every 5 minutes and on networking failures).</p></li>\n<li><p>Not all devices support UPnP, and some users disable UPnP support. You need to handle this (e.g. documenting and requiring the user to manually forward ports, or adding alternative methods of NAT traversal, like a relay/mirror server, or NAT hole punching, STUN/TURN, etc.).</p></li>\n<li><p>Consider what happens on mapping conflicts. Maybe multiple users on the same network would like to play your game at the same time, or maybe another application uses the same port. Make the port configurable, and optimally choose a port automatically (re-trying with a different port on failure).</p></li>\n</ul>\n<p><strong>Further reading:</strong> If you want to know more about UPnP (and the Internet Gateway Device (IGD) and Port Control Protocol (PCP) specifically), <a class=\"reference external\" href=\"https://en.wikipedia.org/wiki/Universal_Plug_and_Play\">Wikipedia</a> is a good first stop, the specification can be found at the <a class=\"reference external\" href=\"https://openconnectivity.org/developer/specifications/upnp-resources/upnp/\">Open Connectivity Foundation</a> and Godot's implementation is based on the <a class=\"reference external\" href=\"https://github.com/miniupnp/miniupnp\">MiniUPnP client</a>.</p>\n"
            },
            "class_upnpdevice": {
                "url": "https://docs.godotengine.org/en/4.1/classes/class_upnpdevice.html",
                "title": "UPNPDevice",
                "blurb": "<p><strong>Inherits:</strong> <a class=\"reference internal\" href=\"class_refcounted.html#class-refcounted\"><span class=\"std std-ref\">RefCounted</span></a> <strong>&lt;</strong> <a class=\"reference internal\" href=\"class_object.html#class-object\"><span class=\"std std-ref\">Object</span></a></p><p>Universal Plug and Play (UPnP) device.</p>",
                "description": "\n\n<p>Universal Plug and Play (UPnP) device. See <a class=\"reference internal\" href=\"class_upnp.html#class-upnp\"><span class=\"std std-ref\">UPNP</span></a> for UPnP discovery and utility functions. Provides low-level access to UPNP control commands. Allows to manage port mappings (port forwarding) and to query network information of the device (like local and external IP address and status). Note that methods on this class are synchronous and block the calling thread.</p>\n"
            },
            "class_weakref": {
                "url": "https://docs.godotengine.org/en/4.1/classes/class_weakref.html",
                "title": "WeakRef",
                "blurb": "<p><strong>Inherits:</strong> <a class=\"reference internal\" href=\"class_refcounted.html#class-refcounted\"><span class=\"std std-ref\">RefCounted</span></a> <strong>&lt;</strong> <a class=\"reference internal\" href=\"class_object.html#class-object\"><span class=\"std std-ref\">Object</span></a></p><p>Holds an <a class=\"reference internal\" href=\"class_object.html#class-object\"><span class=\"std std-ref\">Object</span></a>. If the object is <a class=\"reference internal\" href=\"class_refcounted.html#class-refcounted\"><span class=\"std std-ref\">RefCounted</span></a>, it doesn't update the reference count.</p>",
                "description": "\n\n<p>A weakref can hold a <a class=\"reference internal\" href=\"class_refcounted.html#class-refcounted\"><span class=\"std std-ref\">RefCounted</span></a> without contributing to the reference counter. A weakref can be created from an <a class=\"reference internal\" href=\"class_object.html#class-object\"><span class=\"std std-ref\">Object</span></a> using <a class=\"reference internal\" href=\"class_%40globalscope.html#class-globalscope-method-weakref\"><span class=\"std std-ref\">@GlobalScope.weakref</span></a>. If this object is not a reference, weakref still works, however, it does not have any effect on the object. Weakrefs are useful in cases where multiple classes have variables that refer to each other. Without weakrefs, using these classes could lead to memory leaks, since both references keep each other from being released. Making part of the variables a weakref can prevent this cyclic dependency, and allows the references to be released.</p>\n"
            },
            "class_webrtcdatachannel": {
                "url": "https://docs.godotengine.org/en/4.1/classes/class_webrtcdatachannel.html",
                "title": "WebRTCDataChannel",
                "blurb": "<p><strong>Inherits:</strong> <a class=\"reference internal\" href=\"class_packetpeer.html#class-packetpeer\"><span class=\"std std-ref\">PacketPeer</span></a> <strong>&lt;</strong> <a class=\"reference internal\" href=\"class_refcounted.html#class-refcounted\"><span class=\"std std-ref\">RefCounted</span></a> <strong>&lt;</strong> <a class=\"reference internal\" href=\"class_object.html#class-object\"><span class=\"std std-ref\">Object</span></a></p><p><strong>Inherited By:</strong> <a class=\"reference internal\" href=\"class_webrtcdatachannelextension.html#class-webrtcdatachannelextension\"><span class=\"std std-ref\">WebRTCDataChannelExtension</span></a></p>",
                "description": null
            },
            "class_webrtcdatachannelextension": {
                "url": "https://docs.godotengine.org/en/4.1/classes/class_webrtcdatachannelextension.html",
                "title": "WebRTCDataChannelExtension",
                "blurb": "<p><strong>Inherits:</strong> <a class=\"reference internal\" href=\"class_webrtcdatachannel.html#class-webrtcdatachannel\"><span class=\"std std-ref\">WebRTCDataChannel</span></a> <strong>&lt;</strong> <a class=\"reference internal\" href=\"class_packetpeer.html#class-packetpeer\"><span class=\"std std-ref\">PacketPeer</span></a> <strong>&lt;</strong> <a class=\"reference internal\" href=\"class_refcounted.html#class-refcounted\"><span class=\"std std-ref\">RefCounted</span></a> <strong>&lt;</strong> <a class=\"reference internal\" href=\"class_object.html#class-object\"><span class=\"std std-ref\">Object</span></a></p>",
                "description": null
            },
            "class_webrtcmultiplayerpeer": {
                "url": "https://docs.godotengine.org/en/4.1/classes/class_webrtcmultiplayerpeer.html",
                "title": "WebRTCMultiplayerPeer",
                "blurb": "<p><strong>Inherits:</strong> <a class=\"reference internal\" href=\"class_multiplayerpeer.html#class-multiplayerpeer\"><span class=\"std std-ref\">MultiplayerPeer</span></a> <strong>&lt;</strong> <a class=\"reference internal\" href=\"class_packetpeer.html#class-packetpeer\"><span class=\"std std-ref\">PacketPeer</span></a> <strong>&lt;</strong> <a class=\"reference internal\" href=\"class_refcounted.html#class-refcounted\"><span class=\"std std-ref\">RefCounted</span></a> <strong>&lt;</strong> <a class=\"reference internal\" href=\"class_object.html#class-object\"><span class=\"std std-ref\">Object</span></a></p><p>A simple interface to create a peer-to-peer mesh network composed of <a class=\"reference internal\" href=\"class_webrtcpeerconnection.html#class-webrtcpeerconnection\"><span class=\"std std-ref\">WebRTCPeerConnection</span></a> that is compatible with the <a class=\"reference internal\" href=\"class_multiplayerapi.html#class-multiplayerapi\"><span class=\"std std-ref\">MultiplayerAPI</span></a>.</p>",
                "description": "\n\n<p>This class constructs a full mesh of <a class=\"reference internal\" href=\"class_webrtcpeerconnection.html#class-webrtcpeerconnection\"><span class=\"std std-ref\">WebRTCPeerConnection</span></a> (one connection for each peer) that can be used as a <a class=\"reference internal\" href=\"class_multiplayerapi.html#class-multiplayerapi-property-multiplayer-peer\"><span class=\"std std-ref\">MultiplayerAPI.multiplayer_peer</span></a>.</p>\n<p>You can add each <a class=\"reference internal\" href=\"class_webrtcpeerconnection.html#class-webrtcpeerconnection\"><span class=\"std std-ref\">WebRTCPeerConnection</span></a> via <a class=\"reference internal\" href=\"#class-webrtcmultiplayerpeer-method-add-peer\"><span class=\"std std-ref\">add_peer</span></a> or remove them via <a class=\"reference internal\" href=\"#class-webrtcmultiplayerpeer-method-remove-peer\"><span class=\"std std-ref\">remove_peer</span></a>. Peers must be added in <a class=\"reference internal\" href=\"class_webrtcpeerconnection.html#class-webrtcpeerconnection-constant-state-new\"><span class=\"std std-ref\">WebRTCPeerConnection.STATE_NEW</span></a> state to allow it to create the appropriate channels. This class will not create offers nor set descriptions, it will only poll them, and notify connections and disconnections.</p>\n<p>When creating the peer via <a class=\"reference internal\" href=\"#class-webrtcmultiplayerpeer-method-create-client\"><span class=\"std std-ref\">create_client</span></a> or <a class=\"reference internal\" href=\"#class-webrtcmultiplayerpeer-method-create-server\"><span class=\"std std-ref\">create_server</span></a> the <a class=\"reference internal\" href=\"class_multiplayerpeer.html#class-multiplayerpeer-method-is-server-relay-supported\"><span class=\"std std-ref\">MultiplayerPeer.is_server_relay_supported</span></a> method will return <code class=\"docutils literal notranslate\"><span class=\"pre\">true</span></code> enabling peer exchange and packet relaying when supported by the <a class=\"reference internal\" href=\"class_multiplayerapi.html#class-multiplayerapi\"><span class=\"std std-ref\">MultiplayerAPI</span></a> implementation.</p>\n<p><strong>Note:</strong> When exporting to Android, make sure to enable the <code class=\"docutils literal notranslate\"><span class=\"pre\">INTERNET</span></code> permission in the Android export preset before exporting the project or using one-click deploy. Otherwise, network communication of any kind will be blocked by Android.</p>\n"
            },
            "class_webrtcpeerconnection": {
                "url": "https://docs.godotengine.org/en/4.1/classes/class_webrtcpeerconnection.html",
                "title": "WebRTCPeerConnection",
                "blurb": "<p><strong>Inherits:</strong> <a class=\"reference internal\" href=\"class_refcounted.html#class-refcounted\"><span class=\"std std-ref\">RefCounted</span></a> <strong>&lt;</strong> <a class=\"reference internal\" href=\"class_object.html#class-object\"><span class=\"std std-ref\">Object</span></a></p><p><strong>Inherited By:</strong> <a class=\"reference internal\" href=\"class_webrtcpeerconnectionextension.html#class-webrtcpeerconnectionextension\"><span class=\"std std-ref\">WebRTCPeerConnectionExtension</span></a></p><p>Interface to a WebRTC peer connection.</p>",
                "description": "\n\n<p>A WebRTC connection between the local computer and a remote peer. Provides an interface to connect, maintain and monitor the connection.</p>\n<p>Setting up a WebRTC connection between two peers from now on) may not seem a trivial task, but it can be broken down into 3 main steps:</p>\n<ul class=\"simple\">\n<li><p>The peer that wants to initiate the connection (<code class=\"docutils literal notranslate\"><span class=\"pre\">A</span></code> from now on) creates an offer and send it to the other peer (<code class=\"docutils literal notranslate\"><span class=\"pre\">B</span></code> from now on).</p></li>\n<li><p><code class=\"docutils literal notranslate\"><span class=\"pre\">B</span></code> receives the offer, generate and answer, and sends it to <code class=\"docutils literal notranslate\"><span class=\"pre\">A</span></code>).</p></li>\n<li><p><code class=\"docutils literal notranslate\"><span class=\"pre\">A</span></code> and <code class=\"docutils literal notranslate\"><span class=\"pre\">B</span></code> then generates and exchange ICE candidates with each other.</p></li>\n</ul>\n<p>After these steps, the connection should become connected. Keep on reading or look into the tutorial for more information.</p>\n"
            },
            "class_webrtcpeerconnectionextension": {
                "url": "https://docs.godotengine.org/en/4.1/classes/class_webrtcpeerconnectionextension.html",
                "title": "WebRTCPeerConnectionExtension",
                "blurb": "<p><strong>Inherits:</strong> <a class=\"reference internal\" href=\"class_webrtcpeerconnection.html#class-webrtcpeerconnection\"><span class=\"std std-ref\">WebRTCPeerConnection</span></a> <strong>&lt;</strong> <a class=\"reference internal\" href=\"class_refcounted.html#class-refcounted\"><span class=\"std std-ref\">RefCounted</span></a> <strong>&lt;</strong> <a class=\"reference internal\" href=\"class_object.html#class-object\"><span class=\"std std-ref\">Object</span></a></p>",
                "description": null
            },
            "class_websocketmultiplayerpeer": {
                "url": "https://docs.godotengine.org/en/4.1/classes/class_websocketmultiplayerpeer.html",
                "title": "WebSocketMultiplayerPeer",
                "blurb": "<p><strong>Inherits:</strong> <a class=\"reference internal\" href=\"class_multiplayerpeer.html#class-multiplayerpeer\"><span class=\"std std-ref\">MultiplayerPeer</span></a> <strong>&lt;</strong> <a class=\"reference internal\" href=\"class_packetpeer.html#class-packetpeer\"><span class=\"std std-ref\">PacketPeer</span></a> <strong>&lt;</strong> <a class=\"reference internal\" href=\"class_refcounted.html#class-refcounted\"><span class=\"std std-ref\">RefCounted</span></a> <strong>&lt;</strong> <a class=\"reference internal\" href=\"class_object.html#class-object\"><span class=\"std std-ref\">Object</span></a></p><p>Base class for WebSocket server and client.</p>",
                "description": "\n\n<p>Base class for WebSocket server and client, allowing them to be used as multiplayer peer for the <a class=\"reference internal\" href=\"class_multiplayerapi.html#class-multiplayerapi\"><span class=\"std std-ref\">MultiplayerAPI</span></a>.</p>\n<p><strong>Note:</strong> When exporting to Android, make sure to enable the <code class=\"docutils literal notranslate\"><span class=\"pre\">INTERNET</span></code> permission in the Android export preset before exporting the project or using one-click deploy. Otherwise, network communication of any kind will be blocked by Android.</p>\n"
            },
            "class_websocketpeer": {
                "url": "https://docs.godotengine.org/en/4.1/classes/class_websocketpeer.html",
                "title": "WebSocketPeer",
                "blurb": "<p><strong>Inherits:</strong> <a class=\"reference internal\" href=\"class_packetpeer.html#class-packetpeer\"><span class=\"std std-ref\">PacketPeer</span></a> <strong>&lt;</strong> <a class=\"reference internal\" href=\"class_refcounted.html#class-refcounted\"><span class=\"std std-ref\">RefCounted</span></a> <strong>&lt;</strong> <a class=\"reference internal\" href=\"class_object.html#class-object\"><span class=\"std std-ref\">Object</span></a></p><p>A WebSocket connection.</p>",
                "description": "\n\n<p>This class represents WebSocket connection, and can be used as a WebSocket client (RFC 6455-compliant) or as a remote peer of a WebSocket server.</p>\n<p>You can send WebSocket binary frames using <a class=\"reference internal\" href=\"class_packetpeer.html#class-packetpeer-method-put-packet\"><span class=\"std std-ref\">PacketPeer.put_packet</span></a>, and WebSocket text frames using <a class=\"reference internal\" href=\"#class-websocketpeer-method-send\"><span class=\"std std-ref\">send</span></a> (prefer text frames when interacting with text-based API). You can check the frame type of the last packet via <a class=\"reference internal\" href=\"#class-websocketpeer-method-was-string-packet\"><span class=\"std std-ref\">was_string_packet</span></a>.</p>\n<p>To start a WebSocket client, first call <a class=\"reference internal\" href=\"#class-websocketpeer-method-connect-to-url\"><span class=\"std std-ref\">connect_to_url</span></a>, then regularly call <a class=\"reference internal\" href=\"#class-websocketpeer-method-poll\"><span class=\"std std-ref\">poll</span></a> (e.g. during <a class=\"reference internal\" href=\"class_node.html#class-node\"><span class=\"std std-ref\">Node</span></a> process). You can query the socket state via <a class=\"reference internal\" href=\"#class-websocketpeer-method-get-ready-state\"><span class=\"std std-ref\">get_ready_state</span></a>, get the number of pending packets using <a class=\"reference internal\" href=\"class_packetpeer.html#class-packetpeer-method-get-available-packet-count\"><span class=\"std std-ref\">PacketPeer.get_available_packet_count</span></a>, and retrieve them via <a class=\"reference internal\" href=\"class_packetpeer.html#class-packetpeer-method-get-packet\"><span class=\"std std-ref\">PacketPeer.get_packet</span></a>.</p>\n<div class=\"sphinx-tabs docutils container\">\n<div aria-label=\"Tabbed content\" class=\"closeable\" role=\"tablist\"><button aria-controls=\"panel-0-R0RTY3JpcHQ=\" aria-selected=\"true\" class=\"sphinx-tabs-tab code-tab group-tab\" id=\"tab-0-R0RTY3JpcHQ=\" name=\"R0RTY3JpcHQ=\" role=\"tab\" tabindex=\"0\">GDScript</button></div><div aria-labelledby=\"tab-0-R0RTY3JpcHQ=\" class=\"sphinx-tabs-panel code-tab group-tab\" id=\"panel-0-R0RTY3JpcHQ=\" name=\"R0RTY3JpcHQ=\" role=\"tabpanel\" tabindex=\"0\"><div class=\"highlight-gdscript notranslate\"><div class=\"highlight\"><pre><span></span><span class=\"k\">extends</span> <span class=\"n\">Node</span>\n\n<span class=\"k\">var</span> <span class=\"n\">socket</span> <span class=\"o\">=</span> <span class=\"n\">WebSocketPeer</span><span class=\"o\">.</span><span class=\"n\">new</span><span class=\"p\">()</span>\n\n<span class=\"k\">func</span> <span class=\"n\">_ready</span><span class=\"p\">():</span>\n    <span class=\"n\">socket</span><span class=\"o\">.</span><span class=\"n\">connect_to_url</span><span class=\"p\">(</span><span class=\"s2\">\"wss://example.com\"</span><span class=\"p\">)</span>\n\n<span class=\"k\">func</span> <span class=\"n\">_process</span><span class=\"p\">(</span><span class=\"n\">delta</span><span class=\"p\">):</span>\n    <span class=\"n\">socket</span><span class=\"o\">.</span><span class=\"n\">poll</span><span class=\"p\">()</span>\n    <span class=\"k\">var</span> <span class=\"n\">state</span> <span class=\"o\">=</span> <span class=\"n\">socket</span><span class=\"o\">.</span><span class=\"n\">get_ready_state</span><span class=\"p\">()</span>\n    <span class=\"k k-ControlFlow\">if</span> <span class=\"n\">state</span> <span class=\"o\">==</span> <span class=\"n\">WebSocketPeer</span><span class=\"o\">.</span><span class=\"n\">STATE_OPEN</span><span class=\"p\">:</span>\n        <span class=\"k k-ControlFlow\">while</span> <span class=\"n\">socket</span><span class=\"o\">.</span><span class=\"n\">get_available_packet_count</span><span class=\"p\">():</span>\n            <span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"s2\">\"Packet: \"</span><span class=\"p\">,</span> <span class=\"n\">socket</span><span class=\"o\">.</span><span class=\"n\">get_packet</span><span class=\"p\">())</span>\n    <span class=\"k k-ControlFlow\">elif</span> <span class=\"n\">state</span> <span class=\"o\">==</span> <span class=\"n\">WebSocketPeer</span><span class=\"o\">.</span><span class=\"n\">STATE_CLOSING</span><span class=\"p\">:</span>\n        <span class=\"c1\"># Keep polling to achieve proper close.</span>\n        <span class=\"k k-ControlFlow\">pass</span>\n    <span class=\"k k-ControlFlow\">elif</span> <span class=\"n\">state</span> <span class=\"o\">==</span> <span class=\"n\">WebSocketPeer</span><span class=\"o\">.</span><span class=\"n\">STATE_CLOSED</span><span class=\"p\">:</span>\n        <span class=\"k\">var</span> <span class=\"n\">code</span> <span class=\"o\">=</span> <span class=\"n\">socket</span><span class=\"o\">.</span><span class=\"n\">get_close_code</span><span class=\"p\">()</span>\n        <span class=\"k\">var</span> <span class=\"n\">reason</span> <span class=\"o\">=</span> <span class=\"n\">socket</span><span class=\"o\">.</span><span class=\"n\">get_close_reason</span><span class=\"p\">()</span>\n        <span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"s2\">\"WebSocket closed with code: </span><span class=\"si\">%d</span><span class=\"s2\">, reason </span><span class=\"si\">%s</span><span class=\"s2\">. Clean: </span><span class=\"si\">%s</span><span class=\"s2\">\"</span> <span class=\"o\">%</span> <span class=\"p\">[</span><span class=\"n\">code</span><span class=\"p\">,</span> <span class=\"n\">reason</span><span class=\"p\">,</span> <span class=\"n\">code</span> <span class=\"o\">!=</span> <span class=\"o\">-</span><span class=\"mi\">1</span><span class=\"p\">])</span>\n        <span class=\"n\">set_process</span><span class=\"p\">(</span><span class=\"bp\">false</span><span class=\"p\">)</span> <span class=\"c1\"># Stop processing.</span>\n</pre></div>\n</div>\n</div></div>\n<p>To use the peer as part of a WebSocket server refer to <a class=\"reference internal\" href=\"#class-websocketpeer-method-accept-stream\"><span class=\"std std-ref\">accept_stream</span></a> and the online tutorial.</p>\n"
            },
            "class_webxrinterface": {
                "url": "https://docs.godotengine.org/en/4.1/classes/class_webxrinterface.html",
                "title": "WebXRInterface",
                "blurb": "<p><strong>Inherits:</strong> <a class=\"reference internal\" href=\"class_xrinterface.html#class-xrinterface\"><span class=\"std std-ref\">XRInterface</span></a> <strong>&lt;</strong> <a class=\"reference internal\" href=\"class_refcounted.html#class-refcounted\"><span class=\"std std-ref\">RefCounted</span></a> <strong>&lt;</strong> <a class=\"reference internal\" href=\"class_object.html#class-object\"><span class=\"std std-ref\">Object</span></a></p><p>XR interface using WebXR.</p>",
                "description": "\n\n<p>WebXR is an open standard that allows creating VR and AR applications that run in the web browser.</p>\n<p>As such, this interface is only available when running in Web exports.</p>\n<p>WebXR supports a wide range of devices, from the very capable (like Valve Index, HTC Vive, Oculus Rift and Quest) down to the much less capable (like Google Cardboard, Oculus Go, GearVR, or plain smartphones).</p>\n<p>Since WebXR is based on JavaScript, it makes extensive use of callbacks, which means that <strong>WebXRInterface</strong> is forced to use signals, where other XR interfaces would instead use functions that return a result immediately. This makes <strong>WebXRInterface</strong> quite a bit more complicated to initialize than other XR interfaces.</p>\n<p>Here's the minimum code required to start an immersive VR session:</p>\n<div class=\"highlight-gdscript notranslate\"><div class=\"highlight\"><pre><span></span><span class=\"k\">extends</span> <span class=\"n\">Node3D</span>\n\n<span class=\"k\">var</span> <span class=\"n\">webxr_interface</span>\n<span class=\"k\">var</span> <span class=\"n\">vr_supported</span> <span class=\"o\">=</span> <span class=\"bp\">false</span>\n\n<span class=\"k\">func</span> <span class=\"n\">_ready</span><span class=\"p\">():</span>\n    <span class=\"c1\"># We assume this node has a button as a child.</span>\n    <span class=\"c1\"># This button is for the user to consent to entering immersive VR mode.</span>\n    <span class=\"o\">$</span><span class=\"n\">Button</span><span class=\"o\">.</span><span class=\"n\">pressed</span><span class=\"o\">.</span><span class=\"n\">connect</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_on_button_pressed</span><span class=\"p\">)</span>\n\n    <span class=\"n\">webxr_interface</span> <span class=\"o\">=</span> <span class=\"n\">XRServer</span><span class=\"o\">.</span><span class=\"n\">find_interface</span><span class=\"p\">(</span><span class=\"s2\">\"WebXR\"</span><span class=\"p\">)</span>\n    <span class=\"k k-ControlFlow\">if</span> <span class=\"n\">webxr_interface</span><span class=\"p\">:</span>\n        <span class=\"c1\"># WebXR uses a lot of asynchronous callbacks, so we connect to various</span>\n        <span class=\"c1\"># signals in order to receive them.</span>\n        <span class=\"n\">webxr_interface</span><span class=\"o\">.</span><span class=\"n\">session_supported</span><span class=\"o\">.</span><span class=\"n\">connect</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_webxr_session_supported</span><span class=\"p\">)</span>\n        <span class=\"n\">webxr_interface</span><span class=\"o\">.</span><span class=\"n\">session_started</span><span class=\"o\">.</span><span class=\"n\">connect</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_webxr_session_started</span><span class=\"p\">)</span>\n        <span class=\"n\">webxr_interface</span><span class=\"o\">.</span><span class=\"n\">session_ended</span><span class=\"o\">.</span><span class=\"n\">connect</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_webxr_session_ended</span><span class=\"p\">)</span>\n        <span class=\"n\">webxr_interface</span><span class=\"o\">.</span><span class=\"n\">session_failed</span><span class=\"o\">.</span><span class=\"n\">connect</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_webxr_session_failed</span><span class=\"p\">)</span>\n\n        <span class=\"c1\"># This returns immediately - our _webxr_session_supported() method</span>\n        <span class=\"c1\"># (which we connected to the \"session_supported\" signal above) will</span>\n        <span class=\"c1\"># be called sometime later to let us know if it's supported or not.</span>\n        <span class=\"n\">webxr_interface</span><span class=\"o\">.</span><span class=\"n\">is_session_supported</span><span class=\"p\">(</span><span class=\"s2\">\"immersive-vr\"</span><span class=\"p\">)</span>\n\n<span class=\"k\">func</span> <span class=\"n\">_webxr_session_supported</span><span class=\"p\">(</span><span class=\"n\">session_mode</span><span class=\"p\">,</span> <span class=\"n\">supported</span><span class=\"p\">):</span>\n    <span class=\"k k-ControlFlow\">if</span> <span class=\"n\">session_mode</span> <span class=\"o\">==</span> <span class=\"s1\">'immersive-vr'</span><span class=\"p\">:</span>\n        <span class=\"n\">vr_supported</span> <span class=\"o\">=</span> <span class=\"n\">supported</span>\n\n<span class=\"k\">func</span> <span class=\"n\">_on_button_pressed</span><span class=\"p\">():</span>\n    <span class=\"k k-ControlFlow\">if</span> <span class=\"ow\">not</span> <span class=\"n\">vr_supported</span><span class=\"p\">:</span>\n        <span class=\"n\">OS</span><span class=\"o\">.</span><span class=\"n\">alert</span><span class=\"p\">(</span><span class=\"s2\">\"Your browser doesn't support VR\"</span><span class=\"p\">)</span>\n        <span class=\"k k-ControlFlow\">return</span>\n\n    <span class=\"c1\"># We want an immersive VR session, as opposed to AR ('immersive-ar') or a</span>\n    <span class=\"c1\"># simple 3DoF viewer ('viewer').</span>\n    <span class=\"n\">webxr_interface</span><span class=\"o\">.</span><span class=\"n\">session_mode</span> <span class=\"o\">=</span> <span class=\"s1\">'immersive-vr'</span>\n    <span class=\"c1\"># 'bounded-floor' is room scale, 'local-floor' is a standing or sitting</span>\n    <span class=\"c1\"># experience (it puts you 1.6m above the ground if you have 3DoF headset),</span>\n    <span class=\"c1\"># whereas as 'local' puts you down at the XROrigin.</span>\n    <span class=\"c1\"># This list means it'll first try to request 'bounded-floor', then</span>\n    <span class=\"c1\"># fallback on 'local-floor' and ultimately 'local', if nothing else is</span>\n    <span class=\"c1\"># supported.</span>\n    <span class=\"n\">webxr_interface</span><span class=\"o\">.</span><span class=\"n\">requested_reference_space_types</span> <span class=\"o\">=</span> <span class=\"s1\">'bounded-floor, local-floor, local'</span>\n    <span class=\"c1\"># In order to use 'local-floor' or 'bounded-floor' we must also</span>\n    <span class=\"c1\"># mark the features as required or optional.</span>\n    <span class=\"n\">webxr_interface</span><span class=\"o\">.</span><span class=\"n\">required_features</span> <span class=\"o\">=</span> <span class=\"s1\">'local-floor'</span>\n    <span class=\"n\">webxr_interface</span><span class=\"o\">.</span><span class=\"n\">optional_features</span> <span class=\"o\">=</span> <span class=\"s1\">'bounded-floor'</span>\n\n    <span class=\"c1\"># This will return false if we're unable to even request the session,</span>\n    <span class=\"c1\"># however, it can still fail asynchronously later in the process, so we</span>\n    <span class=\"c1\"># only know if it's really succeeded or failed when our</span>\n    <span class=\"c1\"># _webxr_session_started() or _webxr_session_failed() methods are called.</span>\n    <span class=\"k k-ControlFlow\">if</span> <span class=\"ow\">not</span> <span class=\"n\">webxr_interface</span><span class=\"o\">.</span><span class=\"n\">initialize</span><span class=\"p\">():</span>\n        <span class=\"n\">OS</span><span class=\"o\">.</span><span class=\"n\">alert</span><span class=\"p\">(</span><span class=\"s2\">\"Failed to initialize\"</span><span class=\"p\">)</span>\n        <span class=\"k k-ControlFlow\">return</span>\n\n<span class=\"k\">func</span> <span class=\"n\">_webxr_session_started</span><span class=\"p\">():</span>\n    <span class=\"o\">$</span><span class=\"n\">Button</span><span class=\"o\">.</span><span class=\"n\">visible</span> <span class=\"o\">=</span> <span class=\"bp\">false</span>\n    <span class=\"c1\"># This tells Godot to start rendering to the headset.</span>\n    <span class=\"n\">get_viewport</span><span class=\"p\">()</span><span class=\"o\">.</span><span class=\"n\">use_xr</span> <span class=\"o\">=</span> <span class=\"bp\">true</span>\n    <span class=\"c1\"># This will be the reference space type you ultimately got, out of the</span>\n    <span class=\"c1\"># types that you requested above. This is useful if you want the game to</span>\n    <span class=\"c1\"># work a little differently in 'bounded-floor' versus 'local-floor'.</span>\n    <span class=\"nb\">print</span> <span class=\"p\">(</span><span class=\"s2\">\"Reference space type: \"</span> <span class=\"o\">+</span> <span class=\"n\">webxr_interface</span><span class=\"o\">.</span><span class=\"n\">reference_space_type</span><span class=\"p\">)</span>\n\n<span class=\"k\">func</span> <span class=\"n\">_webxr_session_ended</span><span class=\"p\">():</span>\n    <span class=\"o\">$</span><span class=\"n\">Button</span><span class=\"o\">.</span><span class=\"n\">visible</span> <span class=\"o\">=</span> <span class=\"bp\">true</span>\n    <span class=\"c1\"># If the user exits immersive mode, then we tell Godot to render to the web</span>\n    <span class=\"c1\"># page again.</span>\n    <span class=\"n\">get_viewport</span><span class=\"p\">()</span><span class=\"o\">.</span><span class=\"n\">use_xr</span> <span class=\"o\">=</span> <span class=\"bp\">false</span>\n\n<span class=\"k\">func</span> <span class=\"n\">_webxr_session_failed</span><span class=\"p\">(</span><span class=\"n\">message</span><span class=\"p\">):</span>\n    <span class=\"n\">OS</span><span class=\"o\">.</span><span class=\"n\">alert</span><span class=\"p\">(</span><span class=\"s2\">\"Failed to initialize: \"</span> <span class=\"o\">+</span> <span class=\"n\">message</span><span class=\"p\">)</span>\n</pre></div>\n</div>\n<p>There are a couple ways to handle \"controller\" input:</p>\n<ul class=\"simple\">\n<li><p>Using <a class=\"reference internal\" href=\"class_xrcontroller3d.html#class-xrcontroller3d\"><span class=\"std std-ref\">XRController3D</span></a> nodes and their <a class=\"reference internal\" href=\"class_xrcontroller3d.html#class-xrcontroller3d-signal-button-pressed\"><span class=\"std std-ref\">XRController3D.button_pressed</span></a> and <a class=\"reference internal\" href=\"class_xrcontroller3d.html#class-xrcontroller3d-signal-button-released\"><span class=\"std std-ref\">XRController3D.button_released</span></a> signals. This is how controllers are typically handled in XR apps in Godot, however, this will only work with advanced VR controllers like the Oculus Touch or Index controllers, for example.</p></li>\n<li><p>Using the <a class=\"reference internal\" href=\"#class-webxrinterface-signal-select\"><span class=\"std std-ref\">select</span></a>, <a class=\"reference internal\" href=\"#class-webxrinterface-signal-squeeze\"><span class=\"std std-ref\">squeeze</span></a> and related signals. This method will work for both advanced VR controllers, and non-traditional input sources like a tap on the screen, a spoken voice command or a button press on the device itself.</p></li>\n</ul>\n<p>You can use both methods to allow your game or app to support a wider or narrower set of devices and input methods, or to allow more advanced interactions with more advanced devices.</p>\n"
            },
            "class_workerthreadpool": {
                "url": "https://docs.godotengine.org/en/4.1/classes/class_workerthreadpool.html",
                "title": "WorkerThreadPool",
                "blurb": "<p><strong>Inherits:</strong> <a class=\"reference internal\" href=\"class_object.html#class-object\"><span class=\"std std-ref\">Object</span></a></p><p>A singleton that allocates some <a class=\"reference internal\" href=\"class_thread.html#class-thread\"><span class=\"std std-ref\">Thread</span></a>s on startup, used to offload tasks to these threads.</p>",
                "description": "\n\n<p>The <strong>WorkerThreadPool</strong> singleton allocates a set of <a class=\"reference internal\" href=\"class_thread.html#class-thread\"><span class=\"std std-ref\">Thread</span></a>s (called worker threads) on project startup and provides methods for offloading tasks to them. This can be used for simple multithreading without having to create <a class=\"reference internal\" href=\"class_thread.html#class-thread\"><span class=\"std std-ref\">Thread</span></a>s.</p>\n<p>Tasks hold the <a class=\"reference internal\" href=\"class_callable.html#class-callable\"><span class=\"std std-ref\">Callable</span></a> to be run by the threads. <strong>WorkerThreadPool</strong> can be used to create regular tasks, which will be taken by one worker thread, or group tasks, which can be distributed between multiple worker threads. Group tasks execute the <a class=\"reference internal\" href=\"class_callable.html#class-callable\"><span class=\"std std-ref\">Callable</span></a> multiple times, which makes them useful for iterating over a lot of elements, such as the enemies in an arena.</p>\n<p>Here's a sample on how to offload an expensive function to worker threads:</p>\n<div class=\"sphinx-tabs docutils container\">\n<div aria-label=\"Tabbed content\" class=\"closeable\" role=\"tablist\"><button aria-controls=\"panel-0-R0RTY3JpcHQ=\" aria-selected=\"true\" class=\"sphinx-tabs-tab code-tab group-tab\" id=\"tab-0-R0RTY3JpcHQ=\" name=\"R0RTY3JpcHQ=\" role=\"tab\" tabindex=\"0\">GDScript</button><button aria-controls=\"panel-0-QyM=\" aria-selected=\"false\" class=\"sphinx-tabs-tab code-tab group-tab\" id=\"tab-0-QyM=\" name=\"QyM=\" role=\"tab\" tabindex=\"-1\">C#</button></div><div aria-labelledby=\"tab-0-R0RTY3JpcHQ=\" class=\"sphinx-tabs-panel code-tab group-tab\" id=\"panel-0-R0RTY3JpcHQ=\" name=\"R0RTY3JpcHQ=\" role=\"tabpanel\" tabindex=\"0\"><div class=\"highlight-gdscript notranslate\"><div class=\"highlight\"><pre><span></span><span class=\"k\">var</span> <span class=\"n\">enemies</span> <span class=\"o\">=</span> <span class=\"p\">[]</span> <span class=\"c1\"># An array to be filled with enemies.</span>\n\n<span class=\"k\">func</span> <span class=\"n\">process_enemy_ai</span><span class=\"p\">(</span><span class=\"n\">enemy_index</span><span class=\"p\">):</span>\n    <span class=\"k\">var</span> <span class=\"n\">processed_enemy</span> <span class=\"o\">=</span> <span class=\"n\">enemies</span><span class=\"p\">[</span><span class=\"n\">enemy_index</span><span class=\"p\">]</span>\n    <span class=\"c1\"># Expensive logic...</span>\n\n<span class=\"k\">func</span> <span class=\"n\">_process</span><span class=\"p\">(</span><span class=\"n\">delta</span><span class=\"p\">):</span>\n    <span class=\"k\">var</span> <span class=\"n\">task_id</span> <span class=\"o\">=</span> <span class=\"n\">WorkerThreadPool</span><span class=\"o\">.</span><span class=\"n\">add_group_task</span><span class=\"p\">(</span><span class=\"n\">process_enemy_ai</span><span class=\"p\">,</span> <span class=\"n\">enemies</span><span class=\"o\">.</span><span class=\"n\">size</span><span class=\"p\">())</span>\n    <span class=\"c1\"># Other code...</span>\n    <span class=\"n\">WorkerThreadPool</span><span class=\"o\">.</span><span class=\"n\">wait_for_group_task_completion</span><span class=\"p\">(</span><span class=\"n\">task_id</span><span class=\"p\">)</span>\n    <span class=\"c1\"># Other code that depends on the enemy AI already being processed.</span>\n</pre></div>\n</div>\n</div><div aria-labelledby=\"tab-0-QyM=\" class=\"sphinx-tabs-panel code-tab group-tab\" hidden=\"true\" id=\"panel-0-QyM=\" name=\"QyM=\" role=\"tabpanel\" tabindex=\"0\"><div class=\"highlight-csharp notranslate\"><div class=\"highlight\"><pre><span></span><span class=\"k\">private</span><span class=\"w\"> </span><span class=\"n\">List</span><span class=\"o\">&lt;</span><span class=\"n\">Node</span><span class=\"o\">&gt;</span><span class=\"w\"> </span><span class=\"n\">_enemies</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"k\">new</span><span class=\"w\"> </span><span class=\"n\">List</span><span class=\"o\">&lt;</span><span class=\"n\">Node</span><span class=\"o\">&gt;</span><span class=\"p\">();</span><span class=\"w\"> </span><span class=\"c1\">// A list to be filled with enemies.</span>\n\n<span class=\"k\">private</span><span class=\"w\"> </span><span class=\"k\">void</span><span class=\"w\"> </span><span class=\"nf\">ProcessEnemyAI</span><span class=\"p\">(</span><span class=\"kt\">int</span><span class=\"w\"> </span><span class=\"n\">enemyIndex</span><span class=\"p\">)</span>\n<span class=\"p\">{</span>\n<span class=\"w\">    </span><span class=\"n\">Node</span><span class=\"w\"> </span><span class=\"n\">processedEnemy</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"n\">_enemies</span><span class=\"p\">[</span><span class=\"n\">enemyIndex</span><span class=\"p\">];</span>\n<span class=\"w\">    </span><span class=\"c1\">// Expensive logic here.</span>\n<span class=\"p\">}</span>\n\n<span class=\"k\">public</span><span class=\"w\"> </span><span class=\"k\">override</span><span class=\"w\"> </span><span class=\"k\">void</span><span class=\"w\"> </span><span class=\"nf\">_Process</span><span class=\"p\">(</span><span class=\"kt\">double</span><span class=\"w\"> </span><span class=\"n\">delta</span><span class=\"p\">)</span>\n<span class=\"p\">{</span>\n<span class=\"w\">    </span><span class=\"kt\">long</span><span class=\"w\"> </span><span class=\"n\">taskId</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"n\">WorkerThreadPool</span><span class=\"p\">.</span><span class=\"n\">AddGroupTask</span><span class=\"p\">(</span><span class=\"n\">Callable</span><span class=\"p\">.</span><span class=\"n\">From</span><span class=\"o\">&lt;</span><span class=\"kt\">int</span><span class=\"o\">&gt;</span><span class=\"p\">(</span><span class=\"n\">ProcessEnemyAI</span><span class=\"p\">),</span><span class=\"w\"> </span><span class=\"n\">_enemies</span><span class=\"p\">.</span><span class=\"n\">Count</span><span class=\"p\">);</span>\n<span class=\"w\">    </span><span class=\"c1\">// Other code...</span>\n<span class=\"w\">    </span><span class=\"n\">WorkerThreadPool</span><span class=\"p\">.</span><span class=\"n\">WaitForGroupTaskCompletion</span><span class=\"p\">(</span><span class=\"n\">taskId</span><span class=\"p\">);</span>\n<span class=\"w\">    </span><span class=\"c1\">// Other code that depends on the enemy AI already being processed.</span>\n<span class=\"p\">}</span>\n</pre></div>\n</div>\n</div></div>\n<p>The above code relies on the number of elements in the <code class=\"docutils literal notranslate\"><span class=\"pre\">enemies</span></code> array remaining constant during the multithreaded part.</p>\n<p><strong>Note:</strong> Using this singleton could affect performance negatively if the task being distributed between threads is not computationally expensive.</p>\n"
            },
            "class_xmlparser": {
                "url": "https://docs.godotengine.org/en/4.1/classes/class_xmlparser.html",
                "title": "XMLParser",
                "blurb": "<p><strong>Inherits:</strong> <a class=\"reference internal\" href=\"class_refcounted.html#class-refcounted\"><span class=\"std std-ref\">RefCounted</span></a> <strong>&lt;</strong> <a class=\"reference internal\" href=\"class_object.html#class-object\"><span class=\"std std-ref\">Object</span></a></p><p>Provides a low-level interface for creating parsers for XML files.</p><p>Low-level class for creating parsers for <a class=\"reference external\" href=\"https://en.wikipedia.org/wiki/XML\">XML</a> files.</p>",
                "description": "\n\n<p>Provides a low-level interface for creating parsers for <a class=\"reference external\" href=\"https://en.wikipedia.org/wiki/XML\">XML</a> files. This class can serve as base to make custom XML parsers.</p>\n"
            },
            "class_xrinterface": {
                "url": "https://docs.godotengine.org/en/4.1/classes/class_xrinterface.html",
                "title": "XRInterface",
                "blurb": "<p><strong>Inherits:</strong> <a class=\"reference internal\" href=\"class_refcounted.html#class-refcounted\"><span class=\"std std-ref\">RefCounted</span></a> <strong>&lt;</strong> <a class=\"reference internal\" href=\"class_object.html#class-object\"><span class=\"std std-ref\">Object</span></a></p><p><strong>Inherited By:</strong> <a class=\"reference internal\" href=\"class_mobilevrinterface.html#class-mobilevrinterface\"><span class=\"std std-ref\">MobileVRInterface</span></a>, <a class=\"reference internal\" href=\"class_openxrinterface.html#class-openxrinterface\"><span class=\"std std-ref\">OpenXRInterface</span></a>, <a class=\"reference internal\" href=\"class_webxrinterface.html#class-webxrinterface\"><span class=\"std std-ref\">WebXRInterface</span></a>, <a class=\"reference internal\" href=\"class_xrinterfaceextension.html#class-xrinterfaceextension\"><span class=\"std std-ref\">XRInterfaceExtension</span></a></p><p>Base class for an XR interface implementation.</p>",
                "description": "\n\n<p>This class needs to be implemented to make an AR or VR platform available to Godot and these should be implemented as C++ modules or GDExtension modules. Part of the interface is exposed to GDScript so you can detect, enable and configure an AR or VR platform.</p>\n<p>Interfaces should be written in such a way that simply enabling them will give us a working setup. You can query the available interfaces through <a class=\"reference internal\" href=\"class_xrserver.html#class-xrserver\"><span class=\"std std-ref\">XRServer</span></a>.</p>\n"
            },
            "class_xrinterfaceextension": {
                "url": "https://docs.godotengine.org/en/4.1/classes/class_xrinterfaceextension.html",
                "title": "XRInterfaceExtension",
                "blurb": "<p><strong>Inherits:</strong> <a class=\"reference internal\" href=\"class_xrinterface.html#class-xrinterface\"><span class=\"std std-ref\">XRInterface</span></a> <strong>&lt;</strong> <a class=\"reference internal\" href=\"class_refcounted.html#class-refcounted\"><span class=\"std std-ref\">RefCounted</span></a> <strong>&lt;</strong> <a class=\"reference internal\" href=\"class_object.html#class-object\"><span class=\"std std-ref\">Object</span></a></p><p>Base class for XR interface extensions (plugins).</p>",
                "description": "\n\n<p>External XR interface plugins should inherit from this class.</p>\n"
            },
            "class_xrpose": {
                "url": "https://docs.godotengine.org/en/4.1/classes/class_xrpose.html",
                "title": "XRPose",
                "blurb": "<p><strong>Inherits:</strong> <a class=\"reference internal\" href=\"class_refcounted.html#class-refcounted\"><span class=\"std std-ref\">RefCounted</span></a> <strong>&lt;</strong> <a class=\"reference internal\" href=\"class_object.html#class-object\"><span class=\"std std-ref\">Object</span></a></p><p>This object contains all data related to a pose on a tracked object.</p>",
                "description": "\n\n<p>XR runtimes often identify multiple locations on devices such as controllers that are spatially tracked.</p>\n<p>Orientation, location, linear velocity and angular velocity are all provided for each pose by the XR runtime. This object contains this state of a pose.</p>\n"
            },
            "class_xrpositionaltracker": {
                "url": "https://docs.godotengine.org/en/4.1/classes/class_xrpositionaltracker.html",
                "title": "XRPositionalTracker",
                "blurb": "<p><strong>Inherits:</strong> <a class=\"reference internal\" href=\"class_refcounted.html#class-refcounted\"><span class=\"std std-ref\">RefCounted</span></a> <strong>&lt;</strong> <a class=\"reference internal\" href=\"class_object.html#class-object\"><span class=\"std std-ref\">Object</span></a></p><p>A tracked object.</p>",
                "description": "\n\n<p>An instance of this object represents a device that is tracked, such as a controller or anchor point. HMDs aren't represented here as they are handled internally.</p>\n<p>As controllers are turned on and the <a class=\"reference internal\" href=\"class_xrinterface.html#class-xrinterface\"><span class=\"std std-ref\">XRInterface</span></a> detects them, instances of this object are automatically added to this list of active tracking objects accessible through the <a class=\"reference internal\" href=\"class_xrserver.html#class-xrserver\"><span class=\"std std-ref\">XRServer</span></a>.</p>\n<p>The <a class=\"reference internal\" href=\"class_xrcontroller3d.html#class-xrcontroller3d\"><span class=\"std std-ref\">XRController3D</span></a> and <a class=\"reference internal\" href=\"class_xranchor3d.html#class-xranchor3d\"><span class=\"std std-ref\">XRAnchor3D</span></a> both consume objects of this type and should be used in your project. The positional trackers are just under-the-hood objects that make this all work. These are mostly exposed so that GDExtension-based interfaces can interact with them.</p>\n"
            },
            "class_xrserver": {
                "url": "https://docs.godotengine.org/en/4.1/classes/class_xrserver.html",
                "title": "XRServer",
                "blurb": "<p><strong>Inherits:</strong> <a class=\"reference internal\" href=\"class_object.html#class-object\"><span class=\"std std-ref\">Object</span></a></p><p>Server for AR and VR features.</p>",
                "description": "\n\n<p>The AR/VR server is the heart of our Advanced and Virtual Reality solution and handles all the processing.</p>\n"
            },
            "class_zippacker": {
                "url": "https://docs.godotengine.org/en/4.1/classes/class_zippacker.html",
                "title": "ZIPPacker",
                "blurb": "<p><strong>Inherits:</strong> <a class=\"reference internal\" href=\"class_refcounted.html#class-refcounted\"><span class=\"std std-ref\">RefCounted</span></a> <strong>&lt;</strong> <a class=\"reference internal\" href=\"class_object.html#class-object\"><span class=\"std std-ref\">Object</span></a></p><p>Allows the creation of zip files.</p>",
                "description": "\n\n<p>This class implements a writer that allows storing the multiple blobs in a zip archive.</p>\n<div class=\"highlight-gdscript notranslate\"><div class=\"highlight\"><pre><span></span><span class=\"k\">func</span> <span class=\"n\">write_zip_file</span><span class=\"p\">():</span>\n    <span class=\"k\">var</span> <span class=\"n\">writer</span> <span class=\"p\">:</span><span class=\"o\">=</span> <span class=\"n\">ZIPPacker</span><span class=\"o\">.</span><span class=\"n\">new</span><span class=\"p\">()</span>\n    <span class=\"k\">var</span> <span class=\"n\">err</span> <span class=\"p\">:</span><span class=\"o\">=</span> <span class=\"n\">writer</span><span class=\"o\">.</span><span class=\"n\">open</span><span class=\"p\">(</span><span class=\"s2\">\"user://archive.zip\"</span><span class=\"p\">)</span>\n    <span class=\"k k-ControlFlow\">if</span> <span class=\"n\">err</span> <span class=\"o\">!=</span> <span class=\"n\">OK</span><span class=\"p\">:</span>\n        <span class=\"k k-ControlFlow\">return</span> <span class=\"n\">err</span>\n    <span class=\"n\">writer</span><span class=\"o\">.</span><span class=\"n\">start_file</span><span class=\"p\">(</span><span class=\"s2\">\"hello.txt\"</span><span class=\"p\">)</span>\n    <span class=\"n\">writer</span><span class=\"o\">.</span><span class=\"n\">write_file</span><span class=\"p\">(</span><span class=\"s2\">\"Hello World\"</span><span class=\"o\">.</span><span class=\"n\">to_utf8_buffer</span><span class=\"p\">())</span>\n    <span class=\"n\">writer</span><span class=\"o\">.</span><span class=\"n\">close_file</span><span class=\"p\">()</span>\n\n    <span class=\"n\">writer</span><span class=\"o\">.</span><span class=\"n\">close</span><span class=\"p\">()</span>\n    <span class=\"k k-ControlFlow\">return</span> <span class=\"n\">OK</span>\n</pre></div>\n</div>\n"
            },
            "class_zipreader": {
                "url": "https://docs.godotengine.org/en/4.1/classes/class_zipreader.html",
                "title": "ZIPReader",
                "blurb": "<p><strong>Inherits:</strong> <a class=\"reference internal\" href=\"class_refcounted.html#class-refcounted\"><span class=\"std std-ref\">RefCounted</span></a> <strong>&lt;</strong> <a class=\"reference internal\" href=\"class_object.html#class-object\"><span class=\"std std-ref\">Object</span></a></p><p>Allows reading the content of a zip file.</p>",
                "description": "\n\n<p>This class implements a reader that can extract the content of individual files inside a zip archive.</p>\n<div class=\"highlight-gdscript notranslate\"><div class=\"highlight\"><pre><span></span><span class=\"k\">func</span> <span class=\"n\">read_zip_file</span><span class=\"p\">():</span>\n    <span class=\"k\">var</span> <span class=\"n\">reader</span> <span class=\"p\">:</span><span class=\"o\">=</span> <span class=\"n\">ZIPReader</span><span class=\"o\">.</span><span class=\"n\">new</span><span class=\"p\">()</span>\n    <span class=\"k\">var</span> <span class=\"n\">err</span> <span class=\"p\">:</span><span class=\"o\">=</span> <span class=\"n\">reader</span><span class=\"o\">.</span><span class=\"n\">open</span><span class=\"p\">(</span><span class=\"s2\">\"user://archive.zip\"</span><span class=\"p\">)</span>\n    <span class=\"k k-ControlFlow\">if</span> <span class=\"n\">err</span> <span class=\"o\">!=</span> <span class=\"n\">OK</span><span class=\"p\">:</span>\n        <span class=\"k k-ControlFlow\">return</span> <span class=\"nb nb-Type\">PackedByteArray</span><span class=\"p\">()</span>\n    <span class=\"k\">var</span> <span class=\"n\">res</span> <span class=\"p\">:</span><span class=\"o\">=</span> <span class=\"n\">reader</span><span class=\"o\">.</span><span class=\"n\">read_file</span><span class=\"p\">(</span><span class=\"s2\">\"hello.txt\"</span><span class=\"p\">)</span>\n    <span class=\"n\">reader</span><span class=\"o\">.</span><span class=\"n\">close</span><span class=\"p\">()</span>\n    <span class=\"k k-ControlFlow\">return</span> <span class=\"n\">res</span>\n</pre></div>\n</div>\n"
            },
            "class_variant": {
                "url": "https://docs.godotengine.org/en/4.1/classes/class_variant.html",
                "title": "Variant",
                "blurb": "<p>The most important data type in Godot.</p>",
                "description": "\n\n<p>In computer programming, a Variant class is a class that is designed to store a variety of other types. Dynamic programming languages like PHP, Lua, JavaScript and GDScript like to use them to store variables' data on the backend. With these Variants, properties are able to change value types freely.</p>\n<div class=\"sphinx-tabs docutils container\">\n<div aria-label=\"Tabbed content\" class=\"closeable\" role=\"tablist\"><button aria-controls=\"panel-0-R0RTY3JpcHQ=\" aria-selected=\"true\" class=\"sphinx-tabs-tab code-tab group-tab\" id=\"tab-0-R0RTY3JpcHQ=\" name=\"R0RTY3JpcHQ=\" role=\"tab\" tabindex=\"0\">GDScript</button><button aria-controls=\"panel-0-QyM=\" aria-selected=\"false\" class=\"sphinx-tabs-tab code-tab group-tab\" id=\"tab-0-QyM=\" name=\"QyM=\" role=\"tab\" tabindex=\"-1\">C#</button></div><div aria-labelledby=\"tab-0-R0RTY3JpcHQ=\" class=\"sphinx-tabs-panel code-tab group-tab\" id=\"panel-0-R0RTY3JpcHQ=\" name=\"R0RTY3JpcHQ=\" role=\"tabpanel\" tabindex=\"0\"><div class=\"highlight-gdscript notranslate\"><div class=\"highlight\"><pre><span></span><span class=\"k\">var</span> <span class=\"n\">foo</span> <span class=\"o\">=</span> <span class=\"mi\">2</span> <span class=\"c1\"># foo is dynamically an integer</span>\n<span class=\"n\">foo</span> <span class=\"o\">=</span> <span class=\"s2\">\"Now foo is a string!\"</span>\n<span class=\"n\">foo</span> <span class=\"o\">=</span> <span class=\"n\">RefCounted</span><span class=\"o\">.</span><span class=\"n\">new</span><span class=\"p\">()</span> <span class=\"c1\"># foo is an Object</span>\n<span class=\"k\">var</span> <span class=\"n\">bar</span><span class=\"p\">:</span> <span class=\"nb nb-Type\">int</span> <span class=\"o\">=</span> <span class=\"mi\">2</span> <span class=\"c1\"># bar is a statically typed integer.</span>\n<span class=\"c1\"># bar = \"Uh oh! I can't make static variables become a different type!\"</span>\n</pre></div>\n</div>\n</div><div aria-labelledby=\"tab-0-QyM=\" class=\"sphinx-tabs-panel code-tab group-tab\" hidden=\"true\" id=\"panel-0-QyM=\" name=\"QyM=\" role=\"tabpanel\" tabindex=\"0\"><div class=\"highlight-csharp notranslate\"><div class=\"highlight\"><pre><span></span><span class=\"c1\">// C# is statically typed. Once a variable has a type it cannot be changed. You can use the `var` keyword to let the compiler infer the type automatically.</span>\n<span class=\"kt\">var</span><span class=\"w\"> </span><span class=\"n\">foo</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"m\">2</span><span class=\"p\">;</span><span class=\"w\"> </span><span class=\"c1\">// Foo is a 32-bit integer (int). Be cautious, integers in GDScript are 64-bit and the direct C# equivalent is `long`.</span>\n<span class=\"c1\">// foo = \"foo was and will always be an integer. It cannot be turned into a string!\";</span>\n<span class=\"kt\">var</span><span class=\"w\"> </span><span class=\"n\">boo</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"s\">\"Boo is a string!\"</span><span class=\"p\">;</span>\n<span class=\"kt\">var</span><span class=\"w\"> </span><span class=\"k\">ref</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"k\">new</span><span class=\"w\"> </span><span class=\"n\">RefCounted</span><span class=\"p\">();</span><span class=\"w\"> </span><span class=\"c1\">// var is especially useful when used together with a constructor.</span>\n\n<span class=\"c1\">// Godot also provides a Variant type that works like a union of all the Variant-compatible types.</span>\n<span class=\"n\">Variant</span><span class=\"w\"> </span><span class=\"n\">fooVar</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"m\">2</span><span class=\"p\">;</span><span class=\"w\"> </span><span class=\"c1\">// fooVar is dynamically an integer (stored as a `long` in the Variant type).</span>\n<span class=\"n\">fooVar</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"s\">\"Now fooVar is a string!\"</span><span class=\"p\">;</span>\n<span class=\"n\">fooVar</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"k\">new</span><span class=\"w\"> </span><span class=\"n\">RefCounted</span><span class=\"p\">();</span><span class=\"w\"> </span><span class=\"c1\">// fooVar is a GodotObject.</span>\n</pre></div>\n</div>\n</div></div>\n<p>Godot tracks all scripting API variables within Variants. Without even realizing it, you use Variants all the time. When a particular language enforces its own rules for keeping data typed, then that language is applying its own custom logic over the base Variant scripting API.</p>\n<ul class=\"simple\">\n<li><p>GDScript automatically wrap values in them. It keeps all data in plain Variants by default and then optionally enforces custom static typing rules on variable types.</p></li>\n<li><p>C# is statically typed, but uses its own implementation of the <code class=\"docutils literal notranslate\"><span class=\"pre\">Variant</span></code> type in place of Godot's Variant class when it needs to represent a dynamic value. A <code class=\"docutils literal notranslate\"><span class=\"pre\">Variant</span></code> can be assigned any compatible type implicitly but converting requires an explicit cast.</p></li>\n</ul>\n<p>The global <a class=\"reference internal\" href=\"class_%40globalscope.html#class-globalscope-method-typeof\"><span class=\"std std-ref\">@GlobalScope.typeof</span></a> function returns the enumerated value of the Variant type stored in the current variable (see <a class=\"reference internal\" href=\"class_%40globalscope.html#enum-globalscope-variant-type\"><span class=\"std std-ref\">Variant.Type</span></a>).</p>\n<div class=\"sphinx-tabs docutils container\">\n<div aria-label=\"Tabbed content\" class=\"closeable\" role=\"tablist\"><button aria-controls=\"panel-1-R0RTY3JpcHQ=\" aria-selected=\"true\" class=\"sphinx-tabs-tab code-tab group-tab\" id=\"tab-1-R0RTY3JpcHQ=\" name=\"R0RTY3JpcHQ=\" role=\"tab\" tabindex=\"0\">GDScript</button><button aria-controls=\"panel-1-QyM=\" aria-selected=\"false\" class=\"sphinx-tabs-tab code-tab group-tab\" id=\"tab-1-QyM=\" name=\"QyM=\" role=\"tab\" tabindex=\"-1\">C#</button></div><div aria-labelledby=\"tab-1-R0RTY3JpcHQ=\" class=\"sphinx-tabs-panel code-tab group-tab\" id=\"panel-1-R0RTY3JpcHQ=\" name=\"R0RTY3JpcHQ=\" role=\"tabpanel\" tabindex=\"0\"><div class=\"highlight-gdscript notranslate\"><div class=\"highlight\"><pre><span></span><span class=\"k\">var</span> <span class=\"n\">foo</span> <span class=\"o\">=</span> <span class=\"mi\">2</span>\n<span class=\"k k-ControlFlow\">match</span> <span class=\"nb\">typeof</span><span class=\"p\">(</span><span class=\"n\">foo</span><span class=\"p\">):</span>\n    <span class=\"n\">TYPE_NIL</span><span class=\"p\">:</span>\n        <span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"s2\">\"foo is null\"</span><span class=\"p\">)</span>\n    <span class=\"n\">TYPE_INTEGER</span><span class=\"p\">:</span>\n        <span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"s2\">\"foo is an integer\"</span><span class=\"p\">)</span>\n    <span class=\"n\">TYPE_OBJECT</span><span class=\"p\">:</span>\n        <span class=\"c1\"># Note that Objects are their own special category.</span>\n        <span class=\"c1\"># To get the name of the underlying Object type, you need the `get_class()` method.</span>\n        <span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"s2\">\"foo is a(n) </span><span class=\"si\">%s</span><span class=\"s2\">\"</span> <span class=\"o\">%</span> <span class=\"n\">foo</span><span class=\"o\">.</span><span class=\"n\">get_class</span><span class=\"p\">())</span> <span class=\"c1\"># inject the class name into a formatted string.</span>\n        <span class=\"c1\"># Note also that there is not yet any way to get a script's `class_name` string easily.</span>\n        <span class=\"c1\"># To fetch that value, you can use ProjectSettings.get_global_class_list().</span>\n</pre></div>\n</div>\n</div><div aria-labelledby=\"tab-1-QyM=\" class=\"sphinx-tabs-panel code-tab group-tab\" hidden=\"true\" id=\"panel-1-QyM=\" name=\"QyM=\" role=\"tabpanel\" tabindex=\"0\"><div class=\"highlight-csharp notranslate\"><div class=\"highlight\"><pre><span></span><span class=\"n\">Variant</span><span class=\"w\"> </span><span class=\"n\">foo</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"m\">2</span><span class=\"p\">;</span>\n<span class=\"k\">switch</span><span class=\"w\"> </span><span class=\"p\">(</span><span class=\"n\">foo</span><span class=\"p\">.</span><span class=\"n\">VariantType</span><span class=\"p\">)</span>\n<span class=\"p\">{</span>\n<span class=\"w\">    </span><span class=\"k\">case</span><span class=\"w\"> </span><span class=\"n\">Variant</span><span class=\"p\">.</span><span class=\"n\">Type</span><span class=\"p\">.</span><span class=\"n\">Nil</span><span class=\"p\">:</span>\n<span class=\"w\">        </span><span class=\"n\">GD</span><span class=\"p\">.</span><span class=\"n\">Print</span><span class=\"p\">(</span><span class=\"s\">\"foo is null\"</span><span class=\"p\">);</span>\n<span class=\"w\">        </span><span class=\"k\">break</span><span class=\"p\">;</span>\n<span class=\"w\">    </span><span class=\"k\">case</span><span class=\"w\"> </span><span class=\"n\">Variant</span><span class=\"p\">.</span><span class=\"n\">Type</span><span class=\"p\">.</span><span class=\"n\">Int</span><span class=\"p\">:</span>\n<span class=\"w\">        </span><span class=\"n\">GD</span><span class=\"p\">.</span><span class=\"n\">Print</span><span class=\"p\">(</span><span class=\"s\">\"foo is an integer\"</span><span class=\"p\">);</span>\n<span class=\"w\">        </span><span class=\"k\">break</span><span class=\"p\">;</span>\n<span class=\"w\">    </span><span class=\"k\">case</span><span class=\"w\"> </span><span class=\"n\">Variant</span><span class=\"p\">.</span><span class=\"n\">Type</span><span class=\"p\">.</span><span class=\"n\">Object</span><span class=\"p\">:</span>\n<span class=\"w\">        </span><span class=\"c1\">// Note that Objects are their own special category.</span>\n<span class=\"w\">        </span><span class=\"c1\">// You can convert a Variant to a GodotObject and use reflection to get its name.</span>\n<span class=\"w\">        </span><span class=\"n\">GD</span><span class=\"p\">.</span><span class=\"n\">Print</span><span class=\"p\">(</span><span class=\"s\">$\"foo is a(n) {foo.AsGodotObject().GetType().Name}\"</span><span class=\"p\">);</span>\n<span class=\"w\">        </span><span class=\"k\">break</span><span class=\"p\">;</span>\n<span class=\"p\">}</span>\n</pre></div>\n</div>\n</div></div>\n<p>A Variant takes up only 20 bytes and can store almost any engine datatype inside of it. Variants are rarely used to hold information for long periods of time. Instead, they are used mainly for communication, editing, serialization and moving data around.</p>\n<p>Godot has specifically invested in making its Variant class as flexible as possible; so much so that it is used for a multitude of operations to facilitate communication between all of Godot's systems.</p>\n<p>A Variant:</p>\n<ul class=\"simple\">\n<li><p>Can store almost any datatype.</p></li>\n<li><p>Can perform operations between many variants. GDScript uses Variant as its atomic/native datatype.</p></li>\n<li><p>Can be hashed, so it can be compared quickly to other variants.</p></li>\n<li><p>Can be used to convert safely between datatypes.</p></li>\n<li><p>Can be used to abstract calling methods and their arguments. Godot exports all its functions through variants.</p></li>\n<li><p>Can be used to defer calls or move data between threads.</p></li>\n<li><p>Can be serialized as binary and stored to disk, or transferred via network.</p></li>\n<li><p>Can be serialized to text and use it for printing values and editable settings.</p></li>\n<li><p>Can work as an exported property, so the editor can edit it universally.</p></li>\n<li><p>Can be used for dictionaries, arrays, parsers, etc.</p></li>\n</ul>\n<p><strong>Containers (Array and Dictionary):</strong> Both are implemented using variants. A <a class=\"reference internal\" href=\"class_dictionary.html#class-dictionary\"><span class=\"std std-ref\">Dictionary</span></a> can match any datatype used as key to any other datatype. An <a class=\"reference internal\" href=\"class_array.html#class-array\"><span class=\"std std-ref\">Array</span></a> just holds an array of Variants. Of course, a Variant can also hold a <a class=\"reference internal\" href=\"class_dictionary.html#class-dictionary\"><span class=\"std std-ref\">Dictionary</span></a> and an <a class=\"reference internal\" href=\"class_array.html#class-array\"><span class=\"std std-ref\">Array</span></a> inside, making it even more flexible.</p>\n<p>Modifications to a container will modify all references to it. A <a class=\"reference internal\" href=\"class_mutex.html#class-mutex\"><span class=\"std std-ref\">Mutex</span></a> should be created to lock it if multi-threaded access is desired.</p>\n"
            },
            "class_aabb": {
                "url": "https://docs.godotengine.org/en/4.1/classes/class_aabb.html",
                "title": "AABB",
                "blurb": "<p>A 3D axis-aligned bounding box.</p>",
                "description": "\n\n<p><strong>AABB</strong> consists of a position, a size, and several utility functions. It is typically used for fast overlap tests.</p>\n<p>It uses floating-point coordinates. The 2D counterpart to <strong>AABB</strong> is <a class=\"reference internal\" href=\"class_rect2.html#class-rect2\"><span class=\"std std-ref\">Rect2</span></a>.</p>\n<p>Negative values for <a class=\"reference internal\" href=\"#class-aabb-property-size\"><span class=\"std std-ref\">size</span></a> are not supported and will not work for most methods. Use <a class=\"reference internal\" href=\"#class-aabb-method-abs\"><span class=\"std std-ref\">abs</span></a> to get an AABB with a positive size.</p>\n<p><strong>Note:</strong> Unlike <a class=\"reference internal\" href=\"class_rect2.html#class-rect2\"><span class=\"std std-ref\">Rect2</span></a>, <strong>AABB</strong> does not have a variant that uses integer coordinates.</p>\n"
            },
            "class_array": {
                "url": "https://docs.godotengine.org/en/4.1/classes/class_array.html",
                "title": "Array",
                "blurb": "<p>A built-in data structure that holds a sequence of elements.</p>",
                "description": "\n\n<p>An array data structure that can contain a sequence of elements of any type. Elements are accessed by a numerical index starting at 0. Negative indices are used to count from the back (-1 is the last element, -2 is the second to last, etc.).</p>\n<p><strong>Example:</strong></p>\n<div class=\"sphinx-tabs docutils container\">\n<div aria-label=\"Tabbed content\" class=\"closeable\" role=\"tablist\"><button aria-controls=\"panel-0-R0RTY3JpcHQ=\" aria-selected=\"true\" class=\"sphinx-tabs-tab code-tab group-tab\" id=\"tab-0-R0RTY3JpcHQ=\" name=\"R0RTY3JpcHQ=\" role=\"tab\" tabindex=\"0\">GDScript</button><button aria-controls=\"panel-0-QyM=\" aria-selected=\"false\" class=\"sphinx-tabs-tab code-tab group-tab\" id=\"tab-0-QyM=\" name=\"QyM=\" role=\"tab\" tabindex=\"-1\">C#</button></div><div aria-labelledby=\"tab-0-R0RTY3JpcHQ=\" class=\"sphinx-tabs-panel code-tab group-tab\" id=\"panel-0-R0RTY3JpcHQ=\" name=\"R0RTY3JpcHQ=\" role=\"tabpanel\" tabindex=\"0\"><div class=\"highlight-gdscript notranslate\"><div class=\"highlight\"><pre><span></span><span class=\"k\">var</span> <span class=\"n\">array</span> <span class=\"o\">=</span> <span class=\"p\">[</span><span class=\"s2\">\"One\"</span><span class=\"p\">,</span> <span class=\"mi\">2</span><span class=\"p\">,</span> <span class=\"mi\">3</span><span class=\"p\">,</span> <span class=\"s2\">\"Four\"</span><span class=\"p\">]</span>\n<span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"n\">array</span><span class=\"p\">[</span><span class=\"mi\">0</span><span class=\"p\">])</span> <span class=\"c1\"># One.</span>\n<span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"n\">array</span><span class=\"p\">[</span><span class=\"mi\">2</span><span class=\"p\">])</span> <span class=\"c1\"># 3.</span>\n<span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"n\">array</span><span class=\"p\">[</span><span class=\"o\">-</span><span class=\"mi\">1</span><span class=\"p\">])</span> <span class=\"c1\"># Four.</span>\n<span class=\"n\">array</span><span class=\"p\">[</span><span class=\"mi\">2</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"s2\">\"Three\"</span>\n<span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"n\">array</span><span class=\"p\">[</span><span class=\"o\">-</span><span class=\"mi\">2</span><span class=\"p\">])</span> <span class=\"c1\"># Three.</span>\n</pre></div>\n</div>\n</div><div aria-labelledby=\"tab-0-QyM=\" class=\"sphinx-tabs-panel code-tab group-tab\" hidden=\"true\" id=\"panel-0-QyM=\" name=\"QyM=\" role=\"tabpanel\" tabindex=\"0\"><div class=\"highlight-csharp notranslate\"><div class=\"highlight\"><pre><span></span><span class=\"kt\">var</span><span class=\"w\"> </span><span class=\"n\">array</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"k\">new</span><span class=\"w\"> </span><span class=\"n\">Godot</span><span class=\"p\">.</span><span class=\"n\">Collections</span><span class=\"p\">.</span><span class=\"n\">Array</span><span class=\"p\">{</span><span class=\"s\">\"One\"</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"m\">2</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"m\">3</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"s\">\"Four\"</span><span class=\"p\">};</span>\n<span class=\"n\">GD</span><span class=\"p\">.</span><span class=\"n\">Print</span><span class=\"p\">(</span><span class=\"n\">array</span><span class=\"p\">[</span><span class=\"m\">0</span><span class=\"p\">]);</span><span class=\"w\"> </span><span class=\"c1\">// One.</span>\n<span class=\"n\">GD</span><span class=\"p\">.</span><span class=\"n\">Print</span><span class=\"p\">(</span><span class=\"n\">array</span><span class=\"p\">[</span><span class=\"m\">2</span><span class=\"p\">]);</span><span class=\"w\"> </span><span class=\"c1\">// 3.</span>\n<span class=\"n\">GD</span><span class=\"p\">.</span><span class=\"n\">Print</span><span class=\"p\">(</span><span class=\"n\">array</span><span class=\"p\">[</span><span class=\"n\">array</span><span class=\"p\">.</span><span class=\"n\">Count</span><span class=\"w\"> </span><span class=\"o\">-</span><span class=\"w\"> </span><span class=\"m\">1</span><span class=\"p\">]);</span><span class=\"w\"> </span><span class=\"c1\">// Four.</span>\n<span class=\"n\">array</span><span class=\"p\">[</span><span class=\"m\">2</span><span class=\"p\">]</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"s\">\"Three\"</span><span class=\"p\">;</span>\n<span class=\"n\">GD</span><span class=\"p\">.</span><span class=\"n\">Print</span><span class=\"p\">(</span><span class=\"n\">array</span><span class=\"p\">[</span><span class=\"n\">array</span><span class=\"p\">.</span><span class=\"n\">Count</span><span class=\"w\"> </span><span class=\"o\">-</span><span class=\"w\"> </span><span class=\"m\">2</span><span class=\"p\">]);</span><span class=\"w\"> </span><span class=\"c1\">// Three.</span>\n</pre></div>\n</div>\n</div></div>\n<p>Arrays can be concatenated using the <code class=\"docutils literal notranslate\"><span class=\"pre\">+</span></code> operator:</p>\n<div class=\"sphinx-tabs docutils container\">\n<div aria-label=\"Tabbed content\" class=\"closeable\" role=\"tablist\"><button aria-controls=\"panel-1-R0RTY3JpcHQ=\" aria-selected=\"true\" class=\"sphinx-tabs-tab code-tab group-tab\" id=\"tab-1-R0RTY3JpcHQ=\" name=\"R0RTY3JpcHQ=\" role=\"tab\" tabindex=\"0\">GDScript</button><button aria-controls=\"panel-1-QyM=\" aria-selected=\"false\" class=\"sphinx-tabs-tab code-tab group-tab\" id=\"tab-1-QyM=\" name=\"QyM=\" role=\"tab\" tabindex=\"-1\">C#</button></div><div aria-labelledby=\"tab-1-R0RTY3JpcHQ=\" class=\"sphinx-tabs-panel code-tab group-tab\" id=\"panel-1-R0RTY3JpcHQ=\" name=\"R0RTY3JpcHQ=\" role=\"tabpanel\" tabindex=\"0\"><div class=\"highlight-gdscript notranslate\"><div class=\"highlight\"><pre><span></span><span class=\"k\">var</span> <span class=\"n\">array1</span> <span class=\"o\">=</span> <span class=\"p\">[</span><span class=\"s2\">\"One\"</span><span class=\"p\">,</span> <span class=\"mi\">2</span><span class=\"p\">]</span>\n<span class=\"k\">var</span> <span class=\"n\">array2</span> <span class=\"o\">=</span> <span class=\"p\">[</span><span class=\"mi\">3</span><span class=\"p\">,</span> <span class=\"s2\">\"Four\"</span><span class=\"p\">]</span>\n<span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"n\">array1</span> <span class=\"o\">+</span> <span class=\"n\">array2</span><span class=\"p\">)</span> <span class=\"c1\"># [\"One\", 2, 3, \"Four\"]</span>\n</pre></div>\n</div>\n</div><div aria-labelledby=\"tab-1-QyM=\" class=\"sphinx-tabs-panel code-tab group-tab\" hidden=\"true\" id=\"panel-1-QyM=\" name=\"QyM=\" role=\"tabpanel\" tabindex=\"0\"><div class=\"highlight-csharp notranslate\"><div class=\"highlight\"><pre><span></span><span class=\"c1\">// Array concatenation is not possible with C# arrays, but is with Godot.Collections.Array.</span>\n<span class=\"kt\">var</span><span class=\"w\"> </span><span class=\"n\">array1</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"k\">new</span><span class=\"w\"> </span><span class=\"n\">Godot</span><span class=\"p\">.</span><span class=\"n\">Collections</span><span class=\"p\">.</span><span class=\"n\">Array</span><span class=\"p\">{</span><span class=\"s\">\"One\"</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"m\">2</span><span class=\"p\">};</span>\n<span class=\"kt\">var</span><span class=\"w\"> </span><span class=\"n\">array2</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"k\">new</span><span class=\"w\"> </span><span class=\"n\">Godot</span><span class=\"p\">.</span><span class=\"n\">Collections</span><span class=\"p\">.</span><span class=\"n\">Array</span><span class=\"p\">{</span><span class=\"m\">3</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"s\">\"Four\"</span><span class=\"p\">};</span>\n<span class=\"n\">GD</span><span class=\"p\">.</span><span class=\"n\">Print</span><span class=\"p\">(</span><span class=\"n\">array1</span><span class=\"w\"> </span><span class=\"o\">+</span><span class=\"w\"> </span><span class=\"n\">array2</span><span class=\"p\">);</span><span class=\"w\"> </span><span class=\"c1\">// Prints [One, 2, 3, Four]</span>\n</pre></div>\n</div>\n</div></div>\n<p><strong>Note:</strong> Arrays are always passed by reference. To get a copy of an array that can be modified independently of the original array, use <a class=\"reference internal\" href=\"#class-array-method-duplicate\"><span class=\"std std-ref\">duplicate</span></a>.</p>\n<p><strong>Note:</strong> Erasing elements while iterating over arrays is <strong>not</strong> supported and will result in unpredictable behavior.</p>\n"
            },
            "class_basis": {
                "url": "https://docs.godotengine.org/en/4.1/classes/class_basis.html",
                "title": "Basis",
                "blurb": "<p>A 3×3 matrix for representing 3D rotation and scale.</p>",
                "description": "\n\n<p>A 3×3 matrix used for representing 3D rotation and scale. Usually used as an orthogonal basis for a <a class=\"reference internal\" href=\"class_transform3d.html#class-transform3d\"><span class=\"std std-ref\">Transform3D</span></a>.</p>\n<p>Contains 3 vector fields X, Y and Z as its columns, which are typically interpreted as the local basis vectors of a transformation. For such use, it is composed of a scaling and a rotation matrix, in that order (M = R.S).</p>\n<p>Basis can also be accessed as an array of 3D vectors. These vectors are usually orthogonal to each other, but are not necessarily normalized (due to scaling).</p>\n<p>For more information, read the \"Matrices and transforms\" documentation article.</p>\n"
            },
            "class_bool": {
                "url": "https://docs.godotengine.org/en/4.1/classes/class_bool.html",
                "title": "bool",
                "blurb": "<p>A built-in boolean type.</p>",
                "description": "\n\n<p>A <strong>bool</strong> is always one of two values: <code class=\"docutils literal notranslate\"><span class=\"pre\">true</span></code> or <code class=\"docutils literal notranslate\"><span class=\"pre\">false</span></code>, similar to a switch that is either on or off. Booleans are used in programming for logic in condition statements.</p>\n<p>Booleans can be directly used in <code class=\"docutils literal notranslate\"><span class=\"pre\">if</span></code> and <code class=\"docutils literal notranslate\"><span class=\"pre\">elif</span></code> statements. You don't need to add <code class=\"docutils literal notranslate\"><span class=\"pre\">==</span> <span class=\"pre\">true</span></code> or <code class=\"docutils literal notranslate\"><span class=\"pre\">==</span> <span class=\"pre\">false</span></code>:</p>\n<div class=\"sphinx-tabs docutils container\">\n<div aria-label=\"Tabbed content\" class=\"closeable\" role=\"tablist\"><button aria-controls=\"panel-0-R0RTY3JpcHQ=\" aria-selected=\"true\" class=\"sphinx-tabs-tab code-tab group-tab\" id=\"tab-0-R0RTY3JpcHQ=\" name=\"R0RTY3JpcHQ=\" role=\"tab\" tabindex=\"0\">GDScript</button><button aria-controls=\"panel-0-QyM=\" aria-selected=\"false\" class=\"sphinx-tabs-tab code-tab group-tab\" id=\"tab-0-QyM=\" name=\"QyM=\" role=\"tab\" tabindex=\"-1\">C#</button></div><div aria-labelledby=\"tab-0-R0RTY3JpcHQ=\" class=\"sphinx-tabs-panel code-tab group-tab\" id=\"panel-0-R0RTY3JpcHQ=\" name=\"R0RTY3JpcHQ=\" role=\"tabpanel\" tabindex=\"0\"><div class=\"highlight-gdscript notranslate\"><div class=\"highlight\"><pre><span></span><span class=\"k k-ControlFlow\">if</span> <span class=\"n\">can_shoot</span><span class=\"p\">:</span>\n    <span class=\"n\">launch_bullet</span><span class=\"p\">()</span>\n</pre></div>\n</div>\n</div><div aria-labelledby=\"tab-0-QyM=\" class=\"sphinx-tabs-panel code-tab group-tab\" hidden=\"true\" id=\"panel-0-QyM=\" name=\"QyM=\" role=\"tabpanel\" tabindex=\"0\"><div class=\"highlight-csharp notranslate\"><div class=\"highlight\"><pre><span></span><span class=\"k\">if</span><span class=\"w\"> </span><span class=\"p\">(</span><span class=\"n\">canShoot</span><span class=\"p\">)</span>\n<span class=\"p\">{</span>\n<span class=\"w\">    </span><span class=\"n\">launchBullet</span><span class=\"p\">();</span>\n<span class=\"p\">}</span>\n</pre></div>\n</div>\n</div></div>\n<p>Many common methods and operations return <strong>bool</strong>s, for example, <code class=\"docutils literal notranslate\"><span class=\"pre\">shooting_cooldown</span> <span class=\"pre\">&lt;=</span> <span class=\"pre\">0.0</span></code> may evaluate to <code class=\"docutils literal notranslate\"><span class=\"pre\">true</span></code> or <code class=\"docutils literal notranslate\"><span class=\"pre\">false</span></code> depending on the number's value.</p>\n<p><strong>bool</strong>s are usually used with the logical operators <code class=\"docutils literal notranslate\"><span class=\"pre\">and</span></code>, <code class=\"docutils literal notranslate\"><span class=\"pre\">or</span></code>, and <code class=\"docutils literal notranslate\"><span class=\"pre\">not</span></code> to create complex conditions:</p>\n<div class=\"sphinx-tabs docutils container\">\n<div aria-label=\"Tabbed content\" class=\"closeable\" role=\"tablist\"><button aria-controls=\"panel-1-R0RTY3JpcHQ=\" aria-selected=\"true\" class=\"sphinx-tabs-tab code-tab group-tab\" id=\"tab-1-R0RTY3JpcHQ=\" name=\"R0RTY3JpcHQ=\" role=\"tab\" tabindex=\"0\">GDScript</button><button aria-controls=\"panel-1-QyM=\" aria-selected=\"false\" class=\"sphinx-tabs-tab code-tab group-tab\" id=\"tab-1-QyM=\" name=\"QyM=\" role=\"tab\" tabindex=\"-1\">C#</button></div><div aria-labelledby=\"tab-1-R0RTY3JpcHQ=\" class=\"sphinx-tabs-panel code-tab group-tab\" id=\"panel-1-R0RTY3JpcHQ=\" name=\"R0RTY3JpcHQ=\" role=\"tabpanel\" tabindex=\"0\"><div class=\"highlight-gdscript notranslate\"><div class=\"highlight\"><pre><span></span><span class=\"k k-ControlFlow\">if</span> <span class=\"n\">bullets</span> <span class=\"o\">&gt;</span> <span class=\"mi\">0</span> <span class=\"ow\">and</span> <span class=\"ow\">not</span> <span class=\"n\">is_reloading</span><span class=\"p\">:</span>\n    <span class=\"n\">launch_bullet</span><span class=\"p\">()</span>\n\n<span class=\"k k-ControlFlow\">if</span> <span class=\"n\">bullets</span> <span class=\"o\">==</span> <span class=\"mi\">0</span> <span class=\"ow\">or</span> <span class=\"n\">is_reloading</span><span class=\"p\">:</span>\n    <span class=\"n\">play_clack_sound</span><span class=\"p\">()</span>\n</pre></div>\n</div>\n</div><div aria-labelledby=\"tab-1-QyM=\" class=\"sphinx-tabs-panel code-tab group-tab\" hidden=\"true\" id=\"panel-1-QyM=\" name=\"QyM=\" role=\"tabpanel\" tabindex=\"0\"><div class=\"highlight-csharp notranslate\"><div class=\"highlight\"><pre><span></span><span class=\"k\">if</span><span class=\"w\"> </span><span class=\"p\">(</span><span class=\"n\">bullets</span><span class=\"w\"> </span><span class=\"o\">&gt;</span><span class=\"w\"> </span><span class=\"m\">0</span><span class=\"w\"> </span><span class=\"o\">&amp;&amp;</span><span class=\"w\"> </span><span class=\"o\">!</span><span class=\"n\">isReloading</span><span class=\"p\">)</span>\n<span class=\"p\">{</span>\n<span class=\"w\">    </span><span class=\"n\">launchBullet</span><span class=\"p\">();</span>\n<span class=\"p\">}</span>\n\n<span class=\"k\">if</span><span class=\"w\"> </span><span class=\"p\">(</span><span class=\"n\">bullets</span><span class=\"w\"> </span><span class=\"o\">==</span><span class=\"w\"> </span><span class=\"m\">0</span><span class=\"w\"> </span><span class=\"o\">||</span><span class=\"w\"> </span><span class=\"n\">isReloading</span><span class=\"p\">)</span>\n<span class=\"p\">{</span>\n<span class=\"w\">    </span><span class=\"n\">playClackSound</span><span class=\"p\">();</span>\n<span class=\"p\">}</span>\n</pre></div>\n</div>\n</div></div>\n"
            },
            "class_callable": {
                "url": "https://docs.godotengine.org/en/4.1/classes/class_callable.html",
                "title": "Callable",
                "blurb": "<p>A built-in type representing a method or a standalone function.</p>",
                "description": "\n\n<p><strong>Callable</strong> is a built-in <a class=\"reference internal\" href=\"class_variant.html#class-variant\"><span class=\"std std-ref\">Variant</span></a> type that represents a function. It can either be a method within an <a class=\"reference internal\" href=\"class_object.html#class-object\"><span class=\"std std-ref\">Object</span></a> instance, or a standalone function not related to any object, like a lambda function. Like all <a class=\"reference internal\" href=\"class_variant.html#class-variant\"><span class=\"std std-ref\">Variant</span></a> types, it can be stored in variables and passed to other functions. It is most commonly used for signal callbacks.</p>\n<p><strong>Example:</strong></p>\n<div class=\"sphinx-tabs docutils container\">\n<div aria-label=\"Tabbed content\" class=\"closeable\" role=\"tablist\"><button aria-controls=\"panel-0-R0RTY3JpcHQ=\" aria-selected=\"true\" class=\"sphinx-tabs-tab code-tab group-tab\" id=\"tab-0-R0RTY3JpcHQ=\" name=\"R0RTY3JpcHQ=\" role=\"tab\" tabindex=\"0\">GDScript</button><button aria-controls=\"panel-0-QyM=\" aria-selected=\"false\" class=\"sphinx-tabs-tab code-tab group-tab\" id=\"tab-0-QyM=\" name=\"QyM=\" role=\"tab\" tabindex=\"-1\">C#</button></div><div aria-labelledby=\"tab-0-R0RTY3JpcHQ=\" class=\"sphinx-tabs-panel code-tab group-tab\" id=\"panel-0-R0RTY3JpcHQ=\" name=\"R0RTY3JpcHQ=\" role=\"tabpanel\" tabindex=\"0\"><div class=\"highlight-gdscript notranslate\"><div class=\"highlight\"><pre><span></span><span class=\"k\">func</span> <span class=\"n\">print_args</span><span class=\"p\">(</span><span class=\"n\">arg1</span><span class=\"p\">,</span> <span class=\"n\">arg2</span><span class=\"p\">,</span> <span class=\"n\">arg3</span> <span class=\"o\">=</span> <span class=\"s2\">\"\"</span><span class=\"p\">):</span>\n    <span class=\"nb\">prints</span><span class=\"p\">(</span><span class=\"n\">arg1</span><span class=\"p\">,</span> <span class=\"n\">arg2</span><span class=\"p\">,</span> <span class=\"n\">arg3</span><span class=\"p\">)</span>\n\n<span class=\"k\">func</span> <span class=\"n\">test</span><span class=\"p\">():</span>\n    <span class=\"k\">var</span> <span class=\"n\">callable</span> <span class=\"o\">=</span> <span class=\"n\">Callable</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span> <span class=\"s2\">\"print_args\"</span><span class=\"p\">)</span>\n    <span class=\"n\">callable</span><span class=\"o\">.</span><span class=\"n\">call</span><span class=\"p\">(</span><span class=\"s2\">\"hello\"</span><span class=\"p\">,</span> <span class=\"s2\">\"world\"</span><span class=\"p\">)</span>  <span class=\"c1\"># Prints \"hello world \".</span>\n    <span class=\"n\">callable</span><span class=\"o\">.</span><span class=\"n\">call</span><span class=\"p\">(</span><span class=\"nb nb-Type\">Vector2</span><span class=\"o\">.</span><span class=\"n\">UP</span><span class=\"p\">,</span> <span class=\"mi\">42</span><span class=\"p\">,</span> <span class=\"n\">callable</span><span class=\"p\">)</span>  <span class=\"c1\"># Prints \"(0, -1) 42 Node(node.gd)::print_args\".</span>\n    <span class=\"n\">callable</span><span class=\"o\">.</span><span class=\"n\">call</span><span class=\"p\">(</span><span class=\"s2\">\"invalid\"</span><span class=\"p\">)</span>  <span class=\"c1\"># Invalid call, should have at least 2 arguments.</span>\n</pre></div>\n</div>\n</div><div aria-labelledby=\"tab-0-QyM=\" class=\"sphinx-tabs-panel code-tab group-tab\" hidden=\"true\" id=\"panel-0-QyM=\" name=\"QyM=\" role=\"tabpanel\" tabindex=\"0\"><div class=\"highlight-csharp notranslate\"><div class=\"highlight\"><pre><span></span><span class=\"c1\">// Default parameter values are not supported.</span>\n<span class=\"k\">public</span><span class=\"w\"> </span><span class=\"k\">void</span><span class=\"w\"> </span><span class=\"nf\">PrintArgs</span><span class=\"p\">(</span><span class=\"n\">Variant</span><span class=\"w\"> </span><span class=\"n\">arg1</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">Variant</span><span class=\"w\"> </span><span class=\"n\">arg2</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">Variant</span><span class=\"w\"> </span><span class=\"n\">arg3</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"k\">default</span><span class=\"p\">)</span>\n<span class=\"p\">{</span>\n<span class=\"w\">    </span><span class=\"n\">GD</span><span class=\"p\">.</span><span class=\"n\">PrintS</span><span class=\"p\">(</span><span class=\"n\">arg1</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">arg2</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">arg3</span><span class=\"p\">);</span>\n<span class=\"p\">}</span>\n\n<span class=\"k\">public</span><span class=\"w\"> </span><span class=\"k\">void</span><span class=\"w\"> </span><span class=\"nf\">Test</span><span class=\"p\">()</span>\n<span class=\"p\">{</span>\n<span class=\"w\">    </span><span class=\"c1\">// Invalid calls fail silently.</span>\n<span class=\"w\">    </span><span class=\"n\">Callable</span><span class=\"w\"> </span><span class=\"n\">callable</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"k\">new</span><span class=\"w\"> </span><span class=\"n\">Callable</span><span class=\"p\">(</span><span class=\"k\">this</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">MethodName</span><span class=\"p\">.</span><span class=\"n\">PrintArgs</span><span class=\"p\">);</span>\n<span class=\"w\">    </span><span class=\"n\">callable</span><span class=\"p\">.</span><span class=\"n\">Call</span><span class=\"p\">(</span><span class=\"s\">\"hello\"</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"s\">\"world\"</span><span class=\"p\">);</span><span class=\"w\"> </span><span class=\"c1\">// Default parameter values are not supported, should have 3 arguments.</span>\n<span class=\"w\">    </span><span class=\"n\">callable</span><span class=\"p\">.</span><span class=\"n\">Call</span><span class=\"p\">(</span><span class=\"n\">Vector2</span><span class=\"p\">.</span><span class=\"n\">Up</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"m\">42</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">callable</span><span class=\"p\">);</span><span class=\"w\"> </span><span class=\"c1\">// Prints \"(0, -1) 42 Node(Node.cs)::PrintArgs\".</span>\n<span class=\"w\">    </span><span class=\"n\">callable</span><span class=\"p\">.</span><span class=\"n\">Call</span><span class=\"p\">(</span><span class=\"s\">\"invalid\"</span><span class=\"p\">);</span><span class=\"w\"> </span><span class=\"c1\">// Invalid call, should have 3 arguments.</span>\n<span class=\"p\">}</span>\n</pre></div>\n</div>\n</div></div>\n<p>In GDScript, it's possible to create lambda functions within a method. Lambda functions are custom callables that are not associated with an <a class=\"reference internal\" href=\"class_object.html#class-object\"><span class=\"std std-ref\">Object</span></a> instance. Optionally, lambda functions can also be named. The name will be displayed in the debugger, or when calling <a class=\"reference internal\" href=\"#class-callable-method-get-method\"><span class=\"std std-ref\">get_method</span></a>.</p>\n<div class=\"highlight-gdscript notranslate\"><div class=\"highlight\"><pre><span></span><span class=\"k\">func</span> <span class=\"n\">_init</span><span class=\"p\">():</span>\n    <span class=\"k\">var</span> <span class=\"n\">my_lambda</span> <span class=\"o\">=</span> <span class=\"k\">func</span> <span class=\"p\">(</span><span class=\"n\">message</span><span class=\"p\">):</span>\n        <span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"n\">message</span><span class=\"p\">)</span>\n\n    <span class=\"c1\"># Prints Hello everyone!</span>\n    <span class=\"n\">my_lambda</span><span class=\"o\">.</span><span class=\"n\">call</span><span class=\"p\">(</span><span class=\"s2\">\"Hello everyone!\"</span><span class=\"p\">)</span>\n\n    <span class=\"c1\"># Prints \"Attack!\", when the button_pressed signal is emitted.</span>\n    <span class=\"n\">button_pressed</span><span class=\"o\">.</span><span class=\"n\">connect</span><span class=\"p\">(</span><span class=\"k\">func</span><span class=\"p\">():</span> <span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"s2\">\"Attack!\"</span><span class=\"p\">))</span>\n</pre></div>\n</div>\n<p><strong>Note:</strong> Methods of native types such as <a class=\"reference internal\" href=\"class_signal.html#class-signal\"><span class=\"std std-ref\">Signal</span></a>, <a class=\"reference internal\" href=\"class_array.html#class-array\"><span class=\"std std-ref\">Array</span></a>, or <a class=\"reference internal\" href=\"class_dictionary.html#class-dictionary\"><span class=\"std std-ref\">Dictionary</span></a> are not of type <strong>Callable</strong> in order to avoid unnecessary overhead. If you need to pass those methods as <strong>Callable</strong>, use a lambda function as a wrapper.</p>\n<div class=\"highlight-gdscript notranslate\"><div class=\"highlight\"><pre><span></span><span class=\"k\">func</span> <span class=\"n\">_init</span><span class=\"p\">():</span>\n    <span class=\"k\">var</span> <span class=\"n\">my_dictionary</span> <span class=\"o\">=</span> <span class=\"p\">{</span> <span class=\"s2\">\"hello\"</span><span class=\"p\">:</span> <span class=\"s2\">\"world\"</span> <span class=\"p\">}</span>\n\n    <span class=\"c1\"># This will not work, `clear` is not a callable.</span>\n    <span class=\"n\">create_tween</span><span class=\"p\">()</span><span class=\"o\">.</span><span class=\"n\">tween_callback</span><span class=\"p\">(</span><span class=\"n\">my_dictionary</span><span class=\"o\">.</span><span class=\"n\">clear</span><span class=\"p\">)</span>\n\n    <span class=\"c1\"># This will work, as lambdas are custom callables.</span>\n    <span class=\"n\">create_tween</span><span class=\"p\">()</span><span class=\"o\">.</span><span class=\"n\">tween_callback</span><span class=\"p\">(</span><span class=\"k\">func</span><span class=\"p\">():</span> <span class=\"n\">my_dictionary</span><span class=\"o\">.</span><span class=\"n\">clear</span><span class=\"p\">())</span>\n</pre></div>\n</div>\n"
            },
            "class_color": {
                "url": "https://docs.godotengine.org/en/4.1/classes/class_color.html",
                "title": "Color",
                "blurb": "<p>A color represented in RGBA format.</p>",
                "description": "\n\n<p>A color represented in RGBA format by a red (<a class=\"reference internal\" href=\"#class-color-property-r\"><span class=\"std std-ref\">r</span></a>), green (<a class=\"reference internal\" href=\"#class-color-property-g\"><span class=\"std std-ref\">g</span></a>), blue (<a class=\"reference internal\" href=\"#class-color-property-b\"><span class=\"std std-ref\">b</span></a>), and alpha (<a class=\"reference internal\" href=\"#class-color-property-a\"><span class=\"std std-ref\">a</span></a>) component. Each component is a 16-bit floating-point value, usually ranging from <code class=\"docutils literal notranslate\"><span class=\"pre\">0.0</span></code> to <code class=\"docutils literal notranslate\"><span class=\"pre\">1.0</span></code>. Some properties (such as <a class=\"reference internal\" href=\"class_canvasitem.html#class-canvasitem-property-modulate\"><span class=\"std std-ref\">CanvasItem.modulate</span></a>) may support values greater than <code class=\"docutils literal notranslate\"><span class=\"pre\">1.0</span></code>, for overbright or HDR (High Dynamic Range) colors.</p>\n<p>Colors can be created in various ways: By the various <strong>Color</strong> constructors, by static methods such as <a class=\"reference internal\" href=\"#class-color-method-from-hsv\"><span class=\"std std-ref\">from_hsv</span></a>, and by using a name from the set of standardized colors based on <a class=\"reference external\" href=\"https://en.wikipedia.org/wiki/X11_color_names\">X11 color names</a> with the addition of <a class=\"reference internal\" href=\"#class-color-constant-transparent\"><span class=\"std std-ref\">TRANSPARENT</span></a>. GDScript also provides <a class=\"reference internal\" href=\"class_%40gdscript.html#class-gdscript-method-color8\"><span class=\"std std-ref\">@GDScript.Color8</span></a>, which uses integers from <code class=\"docutils literal notranslate\"><span class=\"pre\">0</span></code> to <code class=\"docutils literal notranslate\"><span class=\"pre\">255</span></code> and doesn't support overbright colors.</p>\n<p><strong>Note:</strong> In a boolean context, a Color will evaluate to <code class=\"docutils literal notranslate\"><span class=\"pre\">false</span></code> if it is equal to <code class=\"docutils literal notranslate\"><span class=\"pre\">Color(0,</span> <span class=\"pre\">0,</span> <span class=\"pre\">0,</span> <span class=\"pre\">1)</span></code> (opaque black). Otherwise, a Color will always evaluate to <code class=\"docutils literal notranslate\"><span class=\"pre\">true</span></code>.</p>\n<p><a class=\"reference external\" href=\"https://raw.githubusercontent.com/godotengine/godot-docs/master/img/color_constants.png\">Color constants cheatsheet</a></p>\n"
            },
            "class_dictionary": {
                "url": "https://docs.godotengine.org/en/4.1/classes/class_dictionary.html",
                "title": "Dictionary",
                "blurb": "<p>A built-in data structure that holds key-value pairs.</p>",
                "description": "\n\n<p>Dictionaries are associative containers that contain values referenced by unique keys. Dictionaries will preserve the insertion order when adding new entries. In other programming languages, this data structure is often referred to as a hash map or an associative array.</p>\n<p>You can define a dictionary by placing a comma-separated list of <code class=\"docutils literal notranslate\"><span class=\"pre\">key:</span> <span class=\"pre\">value</span></code> pairs inside curly braces <code class=\"docutils literal notranslate\"><span class=\"pre\">{}</span></code>.</p>\n<p>Creating a dictionary:</p>\n<div class=\"sphinx-tabs docutils container\">\n<div aria-label=\"Tabbed content\" class=\"closeable\" role=\"tablist\"><button aria-controls=\"panel-0-R0RTY3JpcHQ=\" aria-selected=\"true\" class=\"sphinx-tabs-tab code-tab group-tab\" id=\"tab-0-R0RTY3JpcHQ=\" name=\"R0RTY3JpcHQ=\" role=\"tab\" tabindex=\"0\">GDScript</button><button aria-controls=\"panel-0-QyM=\" aria-selected=\"false\" class=\"sphinx-tabs-tab code-tab group-tab\" id=\"tab-0-QyM=\" name=\"QyM=\" role=\"tab\" tabindex=\"-1\">C#</button></div><div aria-labelledby=\"tab-0-R0RTY3JpcHQ=\" class=\"sphinx-tabs-panel code-tab group-tab\" id=\"panel-0-R0RTY3JpcHQ=\" name=\"R0RTY3JpcHQ=\" role=\"tabpanel\" tabindex=\"0\"><div class=\"highlight-gdscript notranslate\"><div class=\"highlight\"><pre><span></span><span class=\"k\">var</span> <span class=\"n\">my_dict</span> <span class=\"o\">=</span> <span class=\"p\">{}</span> <span class=\"c1\"># Creates an empty dictionary.</span>\n\n<span class=\"k\">var</span> <span class=\"n\">dict_variable_key</span> <span class=\"o\">=</span> <span class=\"s2\">\"Another key name\"</span>\n<span class=\"k\">var</span> <span class=\"n\">dict_variable_value</span> <span class=\"o\">=</span> <span class=\"s2\">\"value2\"</span>\n<span class=\"k\">var</span> <span class=\"n\">another_dict</span> <span class=\"o\">=</span> <span class=\"p\">{</span>\n    <span class=\"s2\">\"Some key name\"</span><span class=\"p\">:</span> <span class=\"s2\">\"value1\"</span><span class=\"p\">,</span>\n    <span class=\"n\">dict_variable_key</span><span class=\"p\">:</span> <span class=\"n\">dict_variable_value</span><span class=\"p\">,</span>\n<span class=\"p\">}</span>\n\n<span class=\"k\">var</span> <span class=\"n\">points_dict</span> <span class=\"o\">=</span> <span class=\"p\">{</span><span class=\"s2\">\"White\"</span><span class=\"p\">:</span> <span class=\"mi\">50</span><span class=\"p\">,</span> <span class=\"s2\">\"Yellow\"</span><span class=\"p\">:</span> <span class=\"mi\">75</span><span class=\"p\">,</span> <span class=\"s2\">\"Orange\"</span><span class=\"p\">:</span> <span class=\"mi\">100</span><span class=\"p\">}</span>\n\n<span class=\"c1\"># Alternative Lua-style syntax.</span>\n<span class=\"c1\"># Doesn't require quotes around keys, but only string constants can be used as key names.</span>\n<span class=\"c1\"># Additionally, key names must start with a letter or an underscore.</span>\n<span class=\"c1\"># Here, `some_key` is a string literal, not a variable!</span>\n<span class=\"n\">another_dict</span> <span class=\"o\">=</span> <span class=\"p\">{</span>\n    <span class=\"n\">some_key</span> <span class=\"o\">=</span> <span class=\"mi\">42</span><span class=\"p\">,</span>\n<span class=\"p\">}</span>\n</pre></div>\n</div>\n</div><div aria-labelledby=\"tab-0-QyM=\" class=\"sphinx-tabs-panel code-tab group-tab\" hidden=\"true\" id=\"panel-0-QyM=\" name=\"QyM=\" role=\"tabpanel\" tabindex=\"0\"><div class=\"highlight-csharp notranslate\"><div class=\"highlight\"><pre><span></span><span class=\"kt\">var</span><span class=\"w\"> </span><span class=\"n\">myDict</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"k\">new</span><span class=\"w\"> </span><span class=\"n\">Godot</span><span class=\"p\">.</span><span class=\"n\">Collections</span><span class=\"p\">.</span><span class=\"n\">Dictionary</span><span class=\"p\">();</span><span class=\"w\"> </span><span class=\"c1\">// Creates an empty dictionary.</span>\n<span class=\"kt\">var</span><span class=\"w\"> </span><span class=\"n\">pointsDict</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"k\">new</span><span class=\"w\"> </span><span class=\"n\">Godot</span><span class=\"p\">.</span><span class=\"n\">Collections</span><span class=\"p\">.</span><span class=\"n\">Dictionary</span>\n<span class=\"p\">{</span>\n<span class=\"w\">    </span><span class=\"p\">{</span><span class=\"s\">\"White\"</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"m\">50</span><span class=\"p\">},</span>\n<span class=\"w\">    </span><span class=\"p\">{</span><span class=\"s\">\"Yellow\"</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"m\">75</span><span class=\"p\">},</span>\n<span class=\"w\">    </span><span class=\"p\">{</span><span class=\"s\">\"Orange\"</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"m\">100</span><span class=\"p\">}</span>\n<span class=\"p\">};</span>\n</pre></div>\n</div>\n</div></div>\n<p>You can access a dictionary's value by referencing its corresponding key. In the above example, <code class=\"docutils literal notranslate\"><span class=\"pre\">points_dict[\"White\"]</span></code> will return <code class=\"docutils literal notranslate\"><span class=\"pre\">50</span></code>. You can also write <code class=\"docutils literal notranslate\"><span class=\"pre\">points_dict.White</span></code>, which is equivalent. However, you'll have to use the bracket syntax if the key you're accessing the dictionary with isn't a fixed string (such as a number or variable).</p>\n<div class=\"sphinx-tabs docutils container\">\n<div aria-label=\"Tabbed content\" class=\"closeable\" role=\"tablist\"><button aria-controls=\"panel-1-R0RTY3JpcHQ=\" aria-selected=\"true\" class=\"sphinx-tabs-tab code-tab group-tab\" id=\"tab-1-R0RTY3JpcHQ=\" name=\"R0RTY3JpcHQ=\" role=\"tab\" tabindex=\"0\">GDScript</button><button aria-controls=\"panel-1-QyM=\" aria-selected=\"false\" class=\"sphinx-tabs-tab code-tab group-tab\" id=\"tab-1-QyM=\" name=\"QyM=\" role=\"tab\" tabindex=\"-1\">C#</button></div><div aria-labelledby=\"tab-1-R0RTY3JpcHQ=\" class=\"sphinx-tabs-panel code-tab group-tab\" id=\"panel-1-R0RTY3JpcHQ=\" name=\"R0RTY3JpcHQ=\" role=\"tabpanel\" tabindex=\"0\"><div class=\"highlight-gdscript notranslate\"><div class=\"highlight\"><pre><span></span><span class=\"nd\">@export_enum</span><span class=\"p\">(</span><span class=\"s2\">\"White\"</span><span class=\"p\">,</span> <span class=\"s2\">\"Yellow\"</span><span class=\"p\">,</span> <span class=\"s2\">\"Orange\"</span><span class=\"p\">)</span> <span class=\"k\">var</span> <span class=\"n\">my_color</span><span class=\"p\">:</span> <span class=\"nb nb-Type\">String</span>\n<span class=\"k\">var</span> <span class=\"n\">points_dict</span> <span class=\"o\">=</span> <span class=\"p\">{</span><span class=\"s2\">\"White\"</span><span class=\"p\">:</span> <span class=\"mi\">50</span><span class=\"p\">,</span> <span class=\"s2\">\"Yellow\"</span><span class=\"p\">:</span> <span class=\"mi\">75</span><span class=\"p\">,</span> <span class=\"s2\">\"Orange\"</span><span class=\"p\">:</span> <span class=\"mi\">100</span><span class=\"p\">}</span>\n<span class=\"k\">func</span> <span class=\"n\">_ready</span><span class=\"p\">():</span>\n    <span class=\"c1\"># We can't use dot syntax here as `my_color` is a variable.</span>\n    <span class=\"k\">var</span> <span class=\"n\">points</span> <span class=\"o\">=</span> <span class=\"n\">points_dict</span><span class=\"p\">[</span><span class=\"n\">my_color</span><span class=\"p\">]</span>\n</pre></div>\n</div>\n</div><div aria-labelledby=\"tab-1-QyM=\" class=\"sphinx-tabs-panel code-tab group-tab\" hidden=\"true\" id=\"panel-1-QyM=\" name=\"QyM=\" role=\"tabpanel\" tabindex=\"0\"><div class=\"highlight-csharp notranslate\"><div class=\"highlight\"><pre><span></span><span class=\"na\">[Export(PropertyHint.Enum, \"White,Yellow,Orange\")]</span>\n<span class=\"k\">public</span><span class=\"w\"> </span><span class=\"kt\">string</span><span class=\"w\"> </span><span class=\"n\">MyColor</span><span class=\"w\"> </span><span class=\"p\">{</span><span class=\"w\"> </span><span class=\"k\">get</span><span class=\"p\">;</span><span class=\"w\"> </span><span class=\"k\">set</span><span class=\"p\">;</span><span class=\"w\"> </span><span class=\"p\">}</span>\n<span class=\"k\">private</span><span class=\"w\"> </span><span class=\"n\">Godot</span><span class=\"p\">.</span><span class=\"n\">Collections</span><span class=\"p\">.</span><span class=\"n\">Dictionary</span><span class=\"w\"> </span><span class=\"n\">_pointsDict</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"k\">new</span><span class=\"w\"> </span><span class=\"n\">Godot</span><span class=\"p\">.</span><span class=\"n\">Collections</span><span class=\"p\">.</span><span class=\"n\">Dictionary</span>\n<span class=\"p\">{</span>\n<span class=\"w\">    </span><span class=\"p\">{</span><span class=\"s\">\"White\"</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"m\">50</span><span class=\"p\">},</span>\n<span class=\"w\">    </span><span class=\"p\">{</span><span class=\"s\">\"Yellow\"</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"m\">75</span><span class=\"p\">},</span>\n<span class=\"w\">    </span><span class=\"p\">{</span><span class=\"s\">\"Orange\"</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"m\">100</span><span class=\"p\">}</span>\n<span class=\"p\">};</span>\n\n<span class=\"k\">public</span><span class=\"w\"> </span><span class=\"k\">override</span><span class=\"w\"> </span><span class=\"k\">void</span><span class=\"w\"> </span><span class=\"nf\">_Ready</span><span class=\"p\">()</span>\n<span class=\"p\">{</span>\n<span class=\"w\">    </span><span class=\"kt\">int</span><span class=\"w\"> </span><span class=\"n\">points</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"p\">(</span><span class=\"kt\">int</span><span class=\"p\">)</span><span class=\"n\">_pointsDict</span><span class=\"p\">[</span><span class=\"n\">MyColor</span><span class=\"p\">];</span>\n<span class=\"p\">}</span>\n</pre></div>\n</div>\n</div></div>\n<p>In the above code, <code class=\"docutils literal notranslate\"><span class=\"pre\">points</span></code> will be assigned the value that is paired with the appropriate color selected in <code class=\"docutils literal notranslate\"><span class=\"pre\">my_color</span></code>.</p>\n<p>Dictionaries can contain more complex data:</p>\n<div class=\"sphinx-tabs docutils container\">\n<div aria-label=\"Tabbed content\" class=\"closeable\" role=\"tablist\"><button aria-controls=\"panel-2-R0RTY3JpcHQ=\" aria-selected=\"true\" class=\"sphinx-tabs-tab code-tab group-tab\" id=\"tab-2-R0RTY3JpcHQ=\" name=\"R0RTY3JpcHQ=\" role=\"tab\" tabindex=\"0\">GDScript</button><button aria-controls=\"panel-2-QyM=\" aria-selected=\"false\" class=\"sphinx-tabs-tab code-tab group-tab\" id=\"tab-2-QyM=\" name=\"QyM=\" role=\"tab\" tabindex=\"-1\">C#</button></div><div aria-labelledby=\"tab-2-R0RTY3JpcHQ=\" class=\"sphinx-tabs-panel code-tab group-tab\" id=\"panel-2-R0RTY3JpcHQ=\" name=\"R0RTY3JpcHQ=\" role=\"tabpanel\" tabindex=\"0\"><div class=\"highlight-gdscript notranslate\"><div class=\"highlight\"><pre><span></span><span class=\"k\">var</span> <span class=\"n\">my_dict</span> <span class=\"o\">=</span> <span class=\"p\">{</span>\n    <span class=\"s2\">\"First Array\"</span><span class=\"p\">:</span> <span class=\"p\">[</span><span class=\"mi\">1</span><span class=\"p\">,</span> <span class=\"mi\">2</span><span class=\"p\">,</span> <span class=\"mi\">3</span><span class=\"p\">,</span> <span class=\"mi\">4</span><span class=\"p\">]</span> <span class=\"c1\"># Assigns an Array to a String key.</span>\n<span class=\"p\">}</span>\n</pre></div>\n</div>\n</div><div aria-labelledby=\"tab-2-QyM=\" class=\"sphinx-tabs-panel code-tab group-tab\" hidden=\"true\" id=\"panel-2-QyM=\" name=\"QyM=\" role=\"tabpanel\" tabindex=\"0\"><div class=\"highlight-csharp notranslate\"><div class=\"highlight\"><pre><span></span><span class=\"kt\">var</span><span class=\"w\"> </span><span class=\"n\">myDict</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"k\">new</span><span class=\"w\"> </span><span class=\"n\">Godot</span><span class=\"p\">.</span><span class=\"n\">Collections</span><span class=\"p\">.</span><span class=\"n\">Dictionary</span>\n<span class=\"p\">{</span>\n<span class=\"w\">    </span><span class=\"p\">{</span><span class=\"s\">\"First Array\"</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"k\">new</span><span class=\"w\"> </span><span class=\"n\">Godot</span><span class=\"p\">.</span><span class=\"n\">Collections</span><span class=\"p\">.</span><span class=\"n\">Array</span><span class=\"p\">{</span><span class=\"m\">1</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"m\">2</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"m\">3</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"m\">4</span><span class=\"p\">}}</span>\n<span class=\"p\">};</span>\n</pre></div>\n</div>\n</div></div>\n<p>To add a key to an existing dictionary, access it like an existing key and assign to it:</p>\n<div class=\"sphinx-tabs docutils container\">\n<div aria-label=\"Tabbed content\" class=\"closeable\" role=\"tablist\"><button aria-controls=\"panel-3-R0RTY3JpcHQ=\" aria-selected=\"true\" class=\"sphinx-tabs-tab code-tab group-tab\" id=\"tab-3-R0RTY3JpcHQ=\" name=\"R0RTY3JpcHQ=\" role=\"tab\" tabindex=\"0\">GDScript</button><button aria-controls=\"panel-3-QyM=\" aria-selected=\"false\" class=\"sphinx-tabs-tab code-tab group-tab\" id=\"tab-3-QyM=\" name=\"QyM=\" role=\"tab\" tabindex=\"-1\">C#</button></div><div aria-labelledby=\"tab-3-R0RTY3JpcHQ=\" class=\"sphinx-tabs-panel code-tab group-tab\" id=\"panel-3-R0RTY3JpcHQ=\" name=\"R0RTY3JpcHQ=\" role=\"tabpanel\" tabindex=\"0\"><div class=\"highlight-gdscript notranslate\"><div class=\"highlight\"><pre><span></span><span class=\"k\">var</span> <span class=\"n\">points_dict</span> <span class=\"o\">=</span> <span class=\"p\">{</span><span class=\"s2\">\"White\"</span><span class=\"p\">:</span> <span class=\"mi\">50</span><span class=\"p\">,</span> <span class=\"s2\">\"Yellow\"</span><span class=\"p\">:</span> <span class=\"mi\">75</span><span class=\"p\">,</span> <span class=\"s2\">\"Orange\"</span><span class=\"p\">:</span> <span class=\"mi\">100</span><span class=\"p\">}</span>\n<span class=\"n\">points_dict</span><span class=\"p\">[</span><span class=\"s2\">\"Blue\"</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"mi\">150</span> <span class=\"c1\"># Add \"Blue\" as a key and assign 150 as its value.</span>\n</pre></div>\n</div>\n</div><div aria-labelledby=\"tab-3-QyM=\" class=\"sphinx-tabs-panel code-tab group-tab\" hidden=\"true\" id=\"panel-3-QyM=\" name=\"QyM=\" role=\"tabpanel\" tabindex=\"0\"><div class=\"highlight-csharp notranslate\"><div class=\"highlight\"><pre><span></span><span class=\"kt\">var</span><span class=\"w\"> </span><span class=\"n\">pointsDict</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"k\">new</span><span class=\"w\"> </span><span class=\"n\">Godot</span><span class=\"p\">.</span><span class=\"n\">Collections</span><span class=\"p\">.</span><span class=\"n\">Dictionary</span>\n<span class=\"p\">{</span>\n<span class=\"w\">    </span><span class=\"p\">{</span><span class=\"s\">\"White\"</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"m\">50</span><span class=\"p\">},</span>\n<span class=\"w\">    </span><span class=\"p\">{</span><span class=\"s\">\"Yellow\"</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"m\">75</span><span class=\"p\">},</span>\n<span class=\"w\">    </span><span class=\"p\">{</span><span class=\"s\">\"Orange\"</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"m\">100</span><span class=\"p\">}</span>\n<span class=\"p\">};</span>\n<span class=\"n\">pointsDict</span><span class=\"p\">[</span><span class=\"s\">\"Blue\"</span><span class=\"p\">]</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"m\">150</span><span class=\"p\">;</span><span class=\"w\"> </span><span class=\"c1\">// Add \"Blue\" as a key and assign 150 as its value.</span>\n</pre></div>\n</div>\n</div></div>\n<p>Finally, dictionaries can contain different types of keys and values in the same dictionary:</p>\n<div class=\"sphinx-tabs docutils container\">\n<div aria-label=\"Tabbed content\" class=\"closeable\" role=\"tablist\"><button aria-controls=\"panel-4-R0RTY3JpcHQ=\" aria-selected=\"true\" class=\"sphinx-tabs-tab code-tab group-tab\" id=\"tab-4-R0RTY3JpcHQ=\" name=\"R0RTY3JpcHQ=\" role=\"tab\" tabindex=\"0\">GDScript</button><button aria-controls=\"panel-4-QyM=\" aria-selected=\"false\" class=\"sphinx-tabs-tab code-tab group-tab\" id=\"tab-4-QyM=\" name=\"QyM=\" role=\"tab\" tabindex=\"-1\">C#</button></div><div aria-labelledby=\"tab-4-R0RTY3JpcHQ=\" class=\"sphinx-tabs-panel code-tab group-tab\" id=\"panel-4-R0RTY3JpcHQ=\" name=\"R0RTY3JpcHQ=\" role=\"tabpanel\" tabindex=\"0\"><div class=\"highlight-gdscript notranslate\"><div class=\"highlight\"><pre><span></span><span class=\"c1\"># This is a valid dictionary.</span>\n<span class=\"c1\"># To access the string \"Nested value\" below, use `my_dict.sub_dict.sub_key` or `my_dict[\"sub_dict\"][\"sub_key\"]`.</span>\n<span class=\"c1\"># Indexing styles can be mixed and matched depending on your needs.</span>\n<span class=\"k\">var</span> <span class=\"n\">my_dict</span> <span class=\"o\">=</span> <span class=\"p\">{</span>\n    <span class=\"s2\">\"String Key\"</span><span class=\"p\">:</span> <span class=\"mi\">5</span><span class=\"p\">,</span>\n    <span class=\"mi\">4</span><span class=\"p\">:</span> <span class=\"p\">[</span><span class=\"mi\">1</span><span class=\"p\">,</span> <span class=\"mi\">2</span><span class=\"p\">,</span> <span class=\"mi\">3</span><span class=\"p\">],</span>\n    <span class=\"mi\">7</span><span class=\"p\">:</span> <span class=\"s2\">\"Hello\"</span><span class=\"p\">,</span>\n    <span class=\"s2\">\"sub_dict\"</span><span class=\"p\">:</span> <span class=\"p\">{</span><span class=\"s2\">\"sub_key\"</span><span class=\"p\">:</span> <span class=\"s2\">\"Nested value\"</span><span class=\"p\">},</span>\n<span class=\"p\">}</span>\n</pre></div>\n</div>\n</div><div aria-labelledby=\"tab-4-QyM=\" class=\"sphinx-tabs-panel code-tab group-tab\" hidden=\"true\" id=\"panel-4-QyM=\" name=\"QyM=\" role=\"tabpanel\" tabindex=\"0\"><div class=\"highlight-csharp notranslate\"><div class=\"highlight\"><pre><span></span><span class=\"c1\">// This is a valid dictionary.</span>\n<span class=\"c1\">// To access the string \"Nested value\" below, use `((Godot.Collections.Dictionary)myDict[\"sub_dict\"])[\"sub_key\"]`.</span>\n<span class=\"kt\">var</span><span class=\"w\"> </span><span class=\"n\">myDict</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"k\">new</span><span class=\"w\"> </span><span class=\"n\">Godot</span><span class=\"p\">.</span><span class=\"n\">Collections</span><span class=\"p\">.</span><span class=\"n\">Dictionary</span><span class=\"w\"> </span><span class=\"p\">{</span>\n<span class=\"w\">    </span><span class=\"p\">{</span><span class=\"s\">\"String Key\"</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"m\">5</span><span class=\"p\">},</span>\n<span class=\"w\">    </span><span class=\"p\">{</span><span class=\"m\">4</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"k\">new</span><span class=\"w\"> </span><span class=\"n\">Godot</span><span class=\"p\">.</span><span class=\"n\">Collections</span><span class=\"p\">.</span><span class=\"n\">Array</span><span class=\"p\">{</span><span class=\"m\">1</span><span class=\"p\">,</span><span class=\"m\">2</span><span class=\"p\">,</span><span class=\"m\">3</span><span class=\"p\">}},</span>\n<span class=\"w\">    </span><span class=\"p\">{</span><span class=\"m\">7</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"s\">\"Hello\"</span><span class=\"p\">},</span>\n<span class=\"w\">    </span><span class=\"p\">{</span><span class=\"s\">\"sub_dict\"</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"k\">new</span><span class=\"w\"> </span><span class=\"n\">Godot</span><span class=\"p\">.</span><span class=\"n\">Collections</span><span class=\"p\">.</span><span class=\"n\">Dictionary</span><span class=\"p\">{{</span><span class=\"s\">\"sub_key\"</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"s\">\"Nested value\"</span><span class=\"p\">}}}</span>\n<span class=\"p\">};</span>\n</pre></div>\n</div>\n</div></div>\n<p>The keys of a dictionary can be iterated with the <code class=\"docutils literal notranslate\"><span class=\"pre\">for</span></code> keyword:</p>\n<div class=\"sphinx-tabs docutils container\">\n<div aria-label=\"Tabbed content\" class=\"closeable\" role=\"tablist\"><button aria-controls=\"panel-5-R0RTY3JpcHQ=\" aria-selected=\"true\" class=\"sphinx-tabs-tab code-tab group-tab\" id=\"tab-5-R0RTY3JpcHQ=\" name=\"R0RTY3JpcHQ=\" role=\"tab\" tabindex=\"0\">GDScript</button><button aria-controls=\"panel-5-QyM=\" aria-selected=\"false\" class=\"sphinx-tabs-tab code-tab group-tab\" id=\"tab-5-QyM=\" name=\"QyM=\" role=\"tab\" tabindex=\"-1\">C#</button></div><div aria-labelledby=\"tab-5-R0RTY3JpcHQ=\" class=\"sphinx-tabs-panel code-tab group-tab\" id=\"panel-5-R0RTY3JpcHQ=\" name=\"R0RTY3JpcHQ=\" role=\"tabpanel\" tabindex=\"0\"><div class=\"highlight-gdscript notranslate\"><div class=\"highlight\"><pre><span></span><span class=\"k\">var</span> <span class=\"n\">groceries</span> <span class=\"o\">=</span> <span class=\"p\">{</span><span class=\"s2\">\"Orange\"</span><span class=\"p\">:</span> <span class=\"mi\">20</span><span class=\"p\">,</span> <span class=\"s2\">\"Apple\"</span><span class=\"p\">:</span> <span class=\"mi\">2</span><span class=\"p\">,</span> <span class=\"s2\">\"Banana\"</span><span class=\"p\">:</span> <span class=\"mi\">4</span><span class=\"p\">}</span>\n<span class=\"k k-ControlFlow\">for</span> <span class=\"n\">fruit</span> <span class=\"ow\">in</span> <span class=\"n\">groceries</span><span class=\"p\">:</span>\n    <span class=\"k\">var</span> <span class=\"n\">amount</span> <span class=\"o\">=</span> <span class=\"n\">groceries</span><span class=\"p\">[</span><span class=\"n\">fruit</span><span class=\"p\">]</span>\n</pre></div>\n</div>\n</div><div aria-labelledby=\"tab-5-QyM=\" class=\"sphinx-tabs-panel code-tab group-tab\" hidden=\"true\" id=\"panel-5-QyM=\" name=\"QyM=\" role=\"tabpanel\" tabindex=\"0\"><div class=\"highlight-csharp notranslate\"><div class=\"highlight\"><pre><span></span><span class=\"kt\">var</span><span class=\"w\"> </span><span class=\"n\">groceries</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"k\">new</span><span class=\"w\"> </span><span class=\"n\">Godot</span><span class=\"p\">.</span><span class=\"n\">Collections</span><span class=\"p\">.</span><span class=\"n\">Dictionary</span><span class=\"p\">{{</span><span class=\"s\">\"Orange\"</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"m\">20</span><span class=\"p\">},</span><span class=\"w\"> </span><span class=\"p\">{</span><span class=\"s\">\"Apple\"</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"m\">2</span><span class=\"p\">},</span><span class=\"w\"> </span><span class=\"p\">{</span><span class=\"s\">\"Banana\"</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"m\">4</span><span class=\"p\">}};</span>\n<span class=\"k\">foreach</span><span class=\"w\"> </span><span class=\"p\">(</span><span class=\"kt\">var</span><span class=\"w\"> </span><span class=\"p\">(</span><span class=\"n\">fruit</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">amount</span><span class=\"p\">)</span><span class=\"w\"> </span><span class=\"k\">in</span><span class=\"w\"> </span><span class=\"n\">groceries</span><span class=\"p\">)</span>\n<span class=\"p\">{</span>\n<span class=\"w\">    </span><span class=\"c1\">// `fruit` is the key, `amount` is the value.</span>\n<span class=\"p\">}</span>\n</pre></div>\n</div>\n</div></div>\n<p><strong>Note:</strong> Dictionaries are always passed by reference. To get a copy of a dictionary which can be modified independently of the original dictionary, use <a class=\"reference internal\" href=\"#class-dictionary-method-duplicate\"><span class=\"std std-ref\">duplicate</span></a>.</p>\n<p><strong>Note:</strong> Erasing elements while iterating over dictionaries is <strong>not</strong> supported and will result in unpredictable behavior.</p>\n"
            },
            "class_float": {
                "url": "https://docs.godotengine.org/en/4.1/classes/class_float.html",
                "title": "float",
                "blurb": "<p>A built-in type for floating point numbers.</p>",
                "description": "\n\n<p>The <strong>float</strong> built-in type is a 64-bit double-precision floating-point number, equivalent to <code class=\"docutils literal notranslate\"><span class=\"pre\">double</span></code> in C++. This type has 14 reliable decimal digits of precision. The maximum value of <strong>float</strong> is approximately <code class=\"docutils literal notranslate\"><span class=\"pre\">1.79769e308</span></code>, and the minimum is approximately <code class=\"docutils literal notranslate\"><span class=\"pre\">-1.79769e308</span></code>.</p>\n<p>Many methods and properties in the engine use 32-bit single-precision floating-point numbers instead, equivalent to <code class=\"docutils literal notranslate\"><span class=\"pre\">float</span></code> in C++, which have 6 reliable decimal digits of precision. For data structures such as <a class=\"reference internal\" href=\"class_vector2.html#class-vector2\"><span class=\"std std-ref\">Vector2</span></a> and <a class=\"reference internal\" href=\"class_vector3.html#class-vector3\"><span class=\"std std-ref\">Vector3</span></a>, Godot uses 32-bit floating-point numbers by default, but it can be changed to use 64-bit doubles if Godot is compiled with the <code class=\"docutils literal notranslate\"><span class=\"pre\">precision=double</span></code> option.</p>\n<p>Math done using the <strong>float</strong> type is not guaranteed to be exact and will often result in small errors. You should usually use the <a class=\"reference internal\" href=\"class_%40globalscope.html#class-globalscope-method-is-equal-approx\"><span class=\"std std-ref\">@GlobalScope.is_equal_approx</span></a> and <a class=\"reference internal\" href=\"class_%40globalscope.html#class-globalscope-method-is-zero-approx\"><span class=\"std std-ref\">@GlobalScope.is_zero_approx</span></a> methods instead of <code class=\"docutils literal notranslate\"><span class=\"pre\">==</span></code> to compare <strong>float</strong> values for equality.</p>\n"
            },
            "class_int": {
                "url": "https://docs.godotengine.org/en/4.1/classes/class_int.html",
                "title": "int",
                "blurb": "<p>A built-in type for integers.</p>",
                "description": "\n\n<p>Signed 64-bit integer type. This means that it can take values from <code class=\"docutils literal notranslate\"><span class=\"pre\">-2^63</span></code> to <code class=\"docutils literal notranslate\"><span class=\"pre\">2^63</span> <span class=\"pre\">-</span> <span class=\"pre\">1</span></code>, i.e. from <code class=\"docutils literal notranslate\"><span class=\"pre\">-9223372036854775808</span></code> to <code class=\"docutils literal notranslate\"><span class=\"pre\">9223372036854775807</span></code>. When it exceeds these bounds, it will wrap around.</p>\n<p><strong>int</strong>s can be automatically converted to <a class=\"reference internal\" href=\"class_float.html#class-float\"><span class=\"std std-ref\">float</span></a>s when necessary, for example when passing them as arguments in functions. The <a class=\"reference internal\" href=\"class_float.html#class-float\"><span class=\"std std-ref\">float</span></a> will be as close to the original integer as possible.</p>\n<p>Likewise, <a class=\"reference internal\" href=\"class_float.html#class-float\"><span class=\"std std-ref\">float</span></a>s can be automatically converted into <strong>int</strong>s. This will truncate the <a class=\"reference internal\" href=\"class_float.html#class-float\"><span class=\"std std-ref\">float</span></a>, discarding anything after the floating point.</p>\n<p><strong>Note:</strong> In a boolean context, an <strong>int</strong> will evaluate to <code class=\"docutils literal notranslate\"><span class=\"pre\">false</span></code> if it equals <code class=\"docutils literal notranslate\"><span class=\"pre\">0</span></code>, and to <code class=\"docutils literal notranslate\"><span class=\"pre\">true</span></code> otherwise.</p>\n<div class=\"sphinx-tabs docutils container\">\n<div aria-label=\"Tabbed content\" class=\"closeable\" role=\"tablist\"><button aria-controls=\"panel-0-R0RTY3JpcHQ=\" aria-selected=\"true\" class=\"sphinx-tabs-tab code-tab group-tab\" id=\"tab-0-R0RTY3JpcHQ=\" name=\"R0RTY3JpcHQ=\" role=\"tab\" tabindex=\"0\">GDScript</button><button aria-controls=\"panel-0-QyM=\" aria-selected=\"false\" class=\"sphinx-tabs-tab code-tab group-tab\" id=\"tab-0-QyM=\" name=\"QyM=\" role=\"tab\" tabindex=\"-1\">C#</button></div><div aria-labelledby=\"tab-0-R0RTY3JpcHQ=\" class=\"sphinx-tabs-panel code-tab group-tab\" id=\"panel-0-R0RTY3JpcHQ=\" name=\"R0RTY3JpcHQ=\" role=\"tabpanel\" tabindex=\"0\"><div class=\"highlight-gdscript notranslate\"><div class=\"highlight\"><pre><span></span><span class=\"k\">var</span> <span class=\"n\">x</span><span class=\"p\">:</span> <span class=\"nb nb-Type\">int</span> <span class=\"o\">=</span> <span class=\"mi\">1</span> <span class=\"c1\"># x is 1</span>\n<span class=\"n\">x</span> <span class=\"o\">=</span> <span class=\"mf\">4.2</span> <span class=\"c1\"># x is 4, because 4.2 gets truncated</span>\n<span class=\"k\">var</span> <span class=\"n\">max_int</span> <span class=\"o\">=</span> <span class=\"mi\">9223372036854775807</span> <span class=\"c1\"># Biggest value an int can store</span>\n<span class=\"n\">max_int</span> <span class=\"o\">+=</span> <span class=\"mi\">1</span> <span class=\"c1\"># max_int is -9223372036854775808, because it wrapped around</span>\n</pre></div>\n</div>\n</div><div aria-labelledby=\"tab-0-QyM=\" class=\"sphinx-tabs-panel code-tab group-tab\" hidden=\"true\" id=\"panel-0-QyM=\" name=\"QyM=\" role=\"tabpanel\" tabindex=\"0\"><div class=\"highlight-csharp notranslate\"><div class=\"highlight\"><pre><span></span><span class=\"kt\">int</span><span class=\"w\"> </span><span class=\"n\">x</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"m\">1</span><span class=\"p\">;</span><span class=\"w\"> </span><span class=\"c1\">// x is 1</span>\n<span class=\"n\">x</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"m\">4.2</span><span class=\"p\">;</span><span class=\"w\"> </span><span class=\"c1\">// x is 4, because 4.2 gets truncated</span>\n<span class=\"c1\">// We use long below, because GDScript's int is 64-bit while C#'s int is 32-bit.</span>\n<span class=\"kt\">long</span><span class=\"w\"> </span><span class=\"n\">maxLong</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"m\">9223372036854775807</span><span class=\"p\">;</span><span class=\"w\"> </span><span class=\"c1\">// Biggest value a long can store</span>\n<span class=\"n\">maxLong</span><span class=\"o\">++</span><span class=\"p\">;</span><span class=\"w\"> </span><span class=\"c1\">// maxLong is now -9223372036854775808, because it wrapped around.</span>\n\n<span class=\"c1\">// Alternatively with C#'s 32-bit int type, which has a smaller maximum value.</span>\n<span class=\"kt\">int</span><span class=\"w\"> </span><span class=\"n\">maxInt</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"m\">2147483647</span><span class=\"p\">;</span><span class=\"w\"> </span><span class=\"c1\">// Biggest value an int can store</span>\n<span class=\"n\">maxInt</span><span class=\"o\">++</span><span class=\"p\">;</span><span class=\"w\"> </span><span class=\"c1\">// maxInt is now -2147483648, because it wrapped around</span>\n</pre></div>\n</div>\n</div></div>\n<p>In GDScript, you can use the <code class=\"docutils literal notranslate\"><span class=\"pre\">0b</span></code> literal for binary representation, the <code class=\"docutils literal notranslate\"><span class=\"pre\">0x</span></code> literal for hexadecimal representation, and the <code class=\"docutils literal notranslate\"><span class=\"pre\">_</span></code> symbol to separate long numbers and improve readability.</p>\n<div class=\"highlight-gdscript notranslate\"><div class=\"highlight\"><pre><span></span><span class=\"k\">var</span> <span class=\"n\">x</span> <span class=\"o\">=</span> <span class=\"mb\">0b1001</span> <span class=\"c1\"># x is 9</span>\n<span class=\"k\">var</span> <span class=\"n\">y</span> <span class=\"o\">=</span> <span class=\"mh\">0xF5</span> <span class=\"c1\"># y is 245</span>\n<span class=\"k\">var</span> <span class=\"n\">z</span> <span class=\"o\">=</span> <span class=\"mi\">10</span><span class=\"n\">_000_000</span> <span class=\"c1\"># z is 10000000</span>\n</pre></div>\n</div>\n"
            },
            "class_nodepath": {
                "url": "https://docs.godotengine.org/en/4.1/classes/class_nodepath.html",
                "title": "NodePath",
                "blurb": "<p>A pre-parsed scene tree path.</p>",
                "description": "\n\n<p>A pre-parsed relative or absolute path in a scene tree, for use with <a class=\"reference internal\" href=\"class_node.html#class-node-method-get-node\"><span class=\"std std-ref\">Node.get_node</span></a> and similar functions. It can reference a node, a resource within a node, or a property of a node or resource. For example, <code class=\"docutils literal notranslate\"><span class=\"pre\">\"Path2D/PathFollow2D/Sprite2D:texture:size\"</span></code> would refer to the <code class=\"docutils literal notranslate\"><span class=\"pre\">size</span></code> property of the <code class=\"docutils literal notranslate\"><span class=\"pre\">texture</span></code> resource on the node named <code class=\"docutils literal notranslate\"><span class=\"pre\">\"Sprite2D\"</span></code> which is a child of the other named nodes in the path.</p>\n<p>You will usually just pass a string to <a class=\"reference internal\" href=\"class_node.html#class-node-method-get-node\"><span class=\"std std-ref\">Node.get_node</span></a> and it will be automatically converted, but you may occasionally want to parse a path ahead of time with <strong>NodePath</strong> or the literal syntax <code class=\"docutils literal notranslate\"><span class=\"pre\">^\"path\"</span></code>. Exporting a <strong>NodePath</strong> variable will give you a node selection widget in the properties panel of the editor, which can often be useful.</p>\n<p>A <strong>NodePath</strong> is composed of a list of slash-separated node names (like a filesystem path) and an optional colon-separated list of \"subnames\" which can be resources or properties.</p>\n<p>Some examples of NodePaths include the following:</p>\n<div class=\"highlight-gdscript notranslate\"><div class=\"highlight\"><pre><span></span><span class=\"c1\"># No leading slash means it is relative to the current node.</span>\n<span class=\"o\">^</span><span class=\"s2\">\"A\"</span> <span class=\"c1\"># Immediate child A</span>\n<span class=\"o\">^</span><span class=\"s2\">\"A/B\"</span> <span class=\"c1\"># A's child B</span>\n<span class=\"o\">^</span><span class=\"s2\">\".\"</span> <span class=\"c1\"># The current node.</span>\n<span class=\"o\">^</span><span class=\"s2\">\"..\"</span> <span class=\"c1\"># The parent node.</span>\n<span class=\"o\">^</span><span class=\"s2\">\"../C\"</span> <span class=\"c1\"># A sibling node C.</span>\n<span class=\"o\">^</span><span class=\"s2\">\"../..\"</span> <span class=\"c1\"># The grandparent node.</span>\n<span class=\"c1\"># A leading slash means it is absolute from the SceneTree.</span>\n<span class=\"o\">^</span><span class=\"s2\">\"/root\"</span> <span class=\"c1\"># Equivalent to get_tree().get_root().</span>\n<span class=\"o\">^</span><span class=\"s2\">\"/root/Main\"</span> <span class=\"c1\"># If your main scene's root node were named \"Main\".</span>\n<span class=\"o\">^</span><span class=\"s2\">\"/root/MyAutoload\"</span> <span class=\"c1\"># If you have an autoloaded node or scene.</span>\n</pre></div>\n</div>\n<p>See also <a class=\"reference internal\" href=\"class_stringname.html#class-stringname\"><span class=\"std std-ref\">StringName</span></a>, which is a similar concept for general-purpose string interning.</p>\n<p><strong>Note:</strong> In the editor, <strong>NodePath</strong> properties are automatically updated when moving, renaming or deleting a node in the scene tree, but they are never updated at runtime.</p>\n<p><strong>Note:</strong> In a boolean context, a <strong>NodePath</strong> will evaluate to <code class=\"docutils literal notranslate\"><span class=\"pre\">false</span></code> if it is empty (<code class=\"docutils literal notranslate\"><span class=\"pre\">NodePath(\"\")</span></code>). Otherwise, a <strong>NodePath</strong> will always evaluate to <code class=\"docutils literal notranslate\"><span class=\"pre\">true</span></code>.</p>\n"
            },
            "class_packedbytearray": {
                "url": "https://docs.godotengine.org/en/4.1/classes/class_packedbytearray.html",
                "title": "PackedByteArray",
                "blurb": "<p>A packed array of bytes.</p>",
                "description": "\n\n<p>An array specifically designed to hold bytes. Packs data tightly, so it saves memory for large array sizes.</p>\n<p><strong>PackedByteArray</strong> also provides methods to encode/decode various types to/from bytes. The way values are encoded is an implementation detail and shouldn't be relied upon when interacting with external apps.</p>\n"
            },
            "class_packedcolorarray": {
                "url": "https://docs.godotengine.org/en/4.1/classes/class_packedcolorarray.html",
                "title": "PackedColorArray",
                "blurb": "<p>A packed array of <a class=\"reference internal\" href=\"class_color.html#class-color\"><span class=\"std std-ref\">Color</span></a>s.</p>",
                "description": "\n\n<p>An array specifically designed to hold <a class=\"reference internal\" href=\"class_color.html#class-color\"><span class=\"std std-ref\">Color</span></a>. Packs data tightly, so it saves memory for large array sizes.</p>\n"
            },
            "class_packedfloat32array": {
                "url": "https://docs.godotengine.org/en/4.1/classes/class_packedfloat32array.html",
                "title": "PackedFloat32Array",
                "blurb": "<p>A packed array of 32-bit floating-point values.</p>",
                "description": "\n\n<p>An array specifically designed to hold 32-bit floating-point values (float). Packs data tightly, so it saves memory for large array sizes.</p>\n<p>If you need to pack 64-bit floats tightly, see <a class=\"reference internal\" href=\"class_packedfloat64array.html#class-packedfloat64array\"><span class=\"std std-ref\">PackedFloat64Array</span></a>.</p>\n"
            },
            "class_packedfloat64array": {
                "url": "https://docs.godotengine.org/en/4.1/classes/class_packedfloat64array.html",
                "title": "PackedFloat64Array",
                "blurb": "<p>A packed array of 64-bit floating-point values.</p>",
                "description": "\n\n<p>An array specifically designed to hold 64-bit floating-point values (double). Packs data tightly, so it saves memory for large array sizes.</p>\n<p>If you only need to pack 32-bit floats tightly, see <a class=\"reference internal\" href=\"class_packedfloat32array.html#class-packedfloat32array\"><span class=\"std std-ref\">PackedFloat32Array</span></a> for a more memory-friendly alternative.</p>\n"
            },
            "class_packedint32array": {
                "url": "https://docs.godotengine.org/en/4.1/classes/class_packedint32array.html",
                "title": "PackedInt32Array",
                "blurb": "<p>A packed array of 32-bit integers.</p>",
                "description": "\n\n<p>An array specifically designed to hold 32-bit integer values. Packs data tightly, so it saves memory for large array sizes.</p>\n<p><strong>Note:</strong> This type stores signed 32-bit integers, which means it can take values in the interval <code class=\"docutils literal notranslate\"><span class=\"pre\">[-2^31,</span> <span class=\"pre\">2^31</span> <span class=\"pre\">-</span> <span class=\"pre\">1]</span></code>, i.e. <code class=\"docutils literal notranslate\"><span class=\"pre\">[-2147483648,</span> <span class=\"pre\">2147483647]</span></code>. Exceeding those bounds will wrap around. In comparison, <a class=\"reference internal\" href=\"class_int.html#class-int\"><span class=\"std std-ref\">int</span></a> uses signed 64-bit integers which can hold much larger values. If you need to pack 64-bit integers tightly, see <a class=\"reference internal\" href=\"class_packedint64array.html#class-packedint64array\"><span class=\"std std-ref\">PackedInt64Array</span></a>.</p>\n"
            },
            "class_packedint64array": {
                "url": "https://docs.godotengine.org/en/4.1/classes/class_packedint64array.html",
                "title": "PackedInt64Array",
                "blurb": "<p>A packed array of 64-bit integers.</p>",
                "description": "\n\n<p>An array specifically designed to hold 64-bit integer values. Packs data tightly, so it saves memory for large array sizes.</p>\n<p><strong>Note:</strong> This type stores signed 64-bit integers, which means it can take values in the interval <code class=\"docutils literal notranslate\"><span class=\"pre\">[-2^63,</span> <span class=\"pre\">2^63</span> <span class=\"pre\">-</span> <span class=\"pre\">1]</span></code>, i.e. <code class=\"docutils literal notranslate\"><span class=\"pre\">[-9223372036854775808,</span> <span class=\"pre\">9223372036854775807]</span></code>. Exceeding those bounds will wrap around. If you only need to pack 32-bit integers tightly, see <a class=\"reference internal\" href=\"class_packedint32array.html#class-packedint32array\"><span class=\"std std-ref\">PackedInt32Array</span></a> for a more memory-friendly alternative.</p>\n"
            },
            "class_packedstringarray": {
                "url": "https://docs.godotengine.org/en/4.1/classes/class_packedstringarray.html",
                "title": "PackedStringArray",
                "blurb": "<p>A packed array of <a class=\"reference internal\" href=\"class_string.html#class-string\"><span class=\"std std-ref\">String</span></a>s.</p>",
                "description": "\n\n<p>An array specifically designed to hold <a class=\"reference internal\" href=\"class_string.html#class-string\"><span class=\"std std-ref\">String</span></a>s. Packs data tightly, so it saves memory for large array sizes.</p>\n<p>If you want to join the strings in the array, use <a class=\"reference internal\" href=\"class_string.html#class-string-method-join\"><span class=\"std std-ref\">String.join</span></a>.</p>\n<div class=\"highlight-gdscript notranslate\"><div class=\"highlight\"><pre><span></span><span class=\"k\">var</span> <span class=\"n\">string_array</span> <span class=\"o\">=</span> <span class=\"nb nb-Type\">PackedStringArray</span><span class=\"p\">([</span><span class=\"s2\">\"hello\"</span><span class=\"p\">,</span> <span class=\"s2\">\"world\"</span><span class=\"p\">])</span>\n<span class=\"k\">var</span> <span class=\"n\">string</span> <span class=\"o\">=</span> <span class=\"s2\">\" \"</span><span class=\"o\">.</span><span class=\"n\">join</span><span class=\"p\">(</span><span class=\"n\">string_array</span><span class=\"p\">)</span>\n<span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"n\">string</span><span class=\"p\">)</span> <span class=\"c1\"># \"hello world\"</span>\n</pre></div>\n</div>\n"
            },
            "class_packedvector2array": {
                "url": "https://docs.godotengine.org/en/4.1/classes/class_packedvector2array.html",
                "title": "PackedVector2Array",
                "blurb": "<p>A packed array of <a class=\"reference internal\" href=\"class_vector2.html#class-vector2\"><span class=\"std std-ref\">Vector2</span></a>s.</p>",
                "description": "\n\n<p>An array specifically designed to hold <a class=\"reference internal\" href=\"class_vector2.html#class-vector2\"><span class=\"std std-ref\">Vector2</span></a>. Packs data tightly, so it saves memory for large array sizes.</p>\n"
            },
            "class_packedvector3array": {
                "url": "https://docs.godotengine.org/en/4.1/classes/class_packedvector3array.html",
                "title": "PackedVector3Array",
                "blurb": "<p>A packed array of <a class=\"reference internal\" href=\"class_vector3.html#class-vector3\"><span class=\"std std-ref\">Vector3</span></a>s.</p>",
                "description": "\n\n<p>An array specifically designed to hold <a class=\"reference internal\" href=\"class_vector3.html#class-vector3\"><span class=\"std std-ref\">Vector3</span></a>. Packs data tightly, so it saves memory for large array sizes.</p>\n"
            },
            "class_plane": {
                "url": "https://docs.godotengine.org/en/4.1/classes/class_plane.html",
                "title": "Plane",
                "blurb": "<p>A plane in Hessian normal form.</p>",
                "description": "\n\n<p>Represents a normalized plane equation. <a class=\"reference internal\" href=\"#class-plane-property-normal\"><span class=\"std std-ref\">normal</span></a> is the normal of the plane (a, b, c normalized), and <a class=\"reference internal\" href=\"#class-plane-property-d\"><span class=\"std std-ref\">d</span></a> is the distance from the origin to the plane (in the direction of \"normal\"). \"Over\" or \"Above\" the plane is considered the side of the plane towards where the normal is pointing.</p>\n"
            },
            "class_projection": {
                "url": "https://docs.godotengine.org/en/4.1/classes/class_projection.html",
                "title": "Projection",
                "blurb": "<p>A 4×4 matrix for 3D projective transformations.</p>",
                "description": "\n\n<p>A 4x4 matrix used for 3D projective transformations. It can represent transformations such as translation, rotation, scaling, shearing, and perspective division. It consists of four <a class=\"reference internal\" href=\"class_vector4.html#class-vector4\"><span class=\"std std-ref\">Vector4</span></a> columns.</p>\n<p>For purely linear transformations (translation, rotation, and scale), it is recommended to use <a class=\"reference internal\" href=\"class_transform3d.html#class-transform3d\"><span class=\"std std-ref\">Transform3D</span></a>, as it is more performant and requires less memory.</p>\n<p>Used internally as <a class=\"reference internal\" href=\"class_camera3d.html#class-camera3d\"><span class=\"std std-ref\">Camera3D</span></a>'s projection matrix.</p>\n"
            },
            "class_quaternion": {
                "url": "https://docs.godotengine.org/en/4.1/classes/class_quaternion.html",
                "title": "Quaternion",
                "blurb": "<p>A unit quaternion used for representing 3D rotations.</p>",
                "description": "\n\n<p>Quaternions are similar to <a class=\"reference internal\" href=\"class_basis.html#class-basis\"><span class=\"std std-ref\">Basis</span></a>, which implements the matrix representation of rotations. Unlike <a class=\"reference internal\" href=\"class_basis.html#class-basis\"><span class=\"std std-ref\">Basis</span></a>, which stores rotation, scale, and shearing, quaternions only store rotation.</p>\n<p>Quaternions can be parametrized using both an axis-angle pair or Euler angles. Due to their compactness and the way they are stored in memory, certain operations (obtaining axis-angle and performing SLERP, in particular) are more efficient and robust against floating-point errors.</p>\n<p><strong>Note:</strong> Quaternions need to be normalized before being used for rotation.</p>\n"
            },
            "class_rect2": {
                "url": "https://docs.godotengine.org/en/4.1/classes/class_rect2.html",
                "title": "Rect2",
                "blurb": "<p>A 2D axis-aligned bounding box using floating-point coordinates.</p>",
                "description": "\n\n<p><strong>Rect2</strong> consists of a position, a size, and several utility functions. It is typically used for fast overlap tests.</p>\n<p>It uses floating-point coordinates. If you need integer coordinates, use <a class=\"reference internal\" href=\"class_rect2i.html#class-rect2i\"><span class=\"std std-ref\">Rect2i</span></a> instead.</p>\n<p>The 3D counterpart to <strong>Rect2</strong> is <a class=\"reference internal\" href=\"class_aabb.html#class-aabb\"><span class=\"std std-ref\">AABB</span></a>.</p>\n<p>Negative values for <a class=\"reference internal\" href=\"#class-rect2-property-size\"><span class=\"std std-ref\">size</span></a> are not supported and will not work for most methods. Use <a class=\"reference internal\" href=\"#class-rect2-method-abs\"><span class=\"std std-ref\">abs</span></a> to get a Rect2 with a positive size.</p>\n"
            },
            "class_rect2i": {
                "url": "https://docs.godotengine.org/en/4.1/classes/class_rect2i.html",
                "title": "Rect2i",
                "blurb": "<p>A 2D axis-aligned bounding box using integer coordinates.</p>",
                "description": "\n\n<p><strong>Rect2i</strong> consists of a position, a size, and several utility functions. It is typically used for fast overlap tests.</p>\n<p>It uses integer coordinates. If you need floating-point coordinates, use <a class=\"reference internal\" href=\"class_rect2.html#class-rect2\"><span class=\"std std-ref\">Rect2</span></a> instead.</p>\n<p>Negative values for <a class=\"reference internal\" href=\"#class-rect2i-property-size\"><span class=\"std std-ref\">size</span></a> are not supported and will not work for most methods. Use <a class=\"reference internal\" href=\"#class-rect2i-method-abs\"><span class=\"std std-ref\">abs</span></a> to get a Rect2i with a positive size.</p>\n"
            },
            "class_rid": {
                "url": "https://docs.godotengine.org/en/4.1/classes/class_rid.html",
                "title": "RID",
                "blurb": "<p>A handle for a <a class=\"reference internal\" href=\"class_resource.html#class-resource\"><span class=\"std std-ref\">Resource</span></a>'s unique identifier.</p>",
                "description": "\n\n<p>The RID <a class=\"reference internal\" href=\"class_variant.html#class-variant\"><span class=\"std std-ref\">Variant</span></a> type is used to access a low-level resource by its unique ID. RIDs are opaque, which means they do not grant access to the resource by themselves. They are used by the low-level server classes, such as <a class=\"reference internal\" href=\"class_displayserver.html#class-displayserver\"><span class=\"std std-ref\">DisplayServer</span></a>, <a class=\"reference internal\" href=\"class_renderingserver.html#class-renderingserver\"><span class=\"std std-ref\">RenderingServer</span></a>, <a class=\"reference internal\" href=\"class_textserver.html#class-textserver\"><span class=\"std std-ref\">TextServer</span></a>, etc.</p>\n<p>A low-level resource may correspond to a high-level <a class=\"reference internal\" href=\"class_resource.html#class-resource\"><span class=\"std std-ref\">Resource</span></a>, such as <a class=\"reference internal\" href=\"class_texture.html#class-texture\"><span class=\"std std-ref\">Texture</span></a> or <a class=\"reference internal\" href=\"class_mesh.html#class-mesh\"><span class=\"std std-ref\">Mesh</span></a>.</p>\n"
            },
            "class_signal": {
                "url": "https://docs.godotengine.org/en/4.1/classes/class_signal.html",
                "title": "Signal",
                "blurb": "<p>A built-in type representing a signal of an <a class=\"reference internal\" href=\"class_object.html#class-object\"><span class=\"std std-ref\">Object</span></a>.</p>",
                "description": "\n\n<p><strong>Signal</strong> is a built-in <a class=\"reference internal\" href=\"class_variant.html#class-variant\"><span class=\"std std-ref\">Variant</span></a> type that represents a signal of an <a class=\"reference internal\" href=\"class_object.html#class-object\"><span class=\"std std-ref\">Object</span></a> instance. Like all <a class=\"reference internal\" href=\"class_variant.html#class-variant\"><span class=\"std std-ref\">Variant</span></a> types, it can be stored in variables and passed to functions. Signals allow all connected <a class=\"reference internal\" href=\"class_callable.html#class-callable\"><span class=\"std std-ref\">Callable</span></a>s (and by extension their respective objects) to listen and react to events, without directly referencing one another. This keeps the code flexible and easier to manage.</p>\n<p>In GDScript, signals can be declared with the <code class=\"docutils literal notranslate\"><span class=\"pre\">signal</span></code> keyword. In C#, you may use the <code class=\"docutils literal notranslate\"><span class=\"pre\">[Signal]</span></code> attribute on a delegate.</p>\n<div class=\"sphinx-tabs docutils container\">\n<div aria-label=\"Tabbed content\" class=\"closeable\" role=\"tablist\"><button aria-controls=\"panel-0-R0RTY3JpcHQ=\" aria-selected=\"true\" class=\"sphinx-tabs-tab code-tab group-tab\" id=\"tab-0-R0RTY3JpcHQ=\" name=\"R0RTY3JpcHQ=\" role=\"tab\" tabindex=\"0\">GDScript</button><button aria-controls=\"panel-0-QyM=\" aria-selected=\"false\" class=\"sphinx-tabs-tab code-tab group-tab\" id=\"tab-0-QyM=\" name=\"QyM=\" role=\"tab\" tabindex=\"-1\">C#</button></div><div aria-labelledby=\"tab-0-R0RTY3JpcHQ=\" class=\"sphinx-tabs-panel code-tab group-tab\" id=\"panel-0-R0RTY3JpcHQ=\" name=\"R0RTY3JpcHQ=\" role=\"tabpanel\" tabindex=\"0\"><div class=\"highlight-gdscript notranslate\"><div class=\"highlight\"><pre><span></span><span class=\"k\">signal</span> <span class=\"n\">attacked</span>\n\n<span class=\"c1\"># Additional arguments may be declared.</span>\n<span class=\"c1\"># These arguments must be passed when the signal is emitted.</span>\n<span class=\"k\">signal</span> <span class=\"n\">item_dropped</span><span class=\"p\">(</span><span class=\"n\">item_name</span><span class=\"p\">,</span> <span class=\"n\">amount</span><span class=\"p\">)</span>\n</pre></div>\n</div>\n</div><div aria-labelledby=\"tab-0-QyM=\" class=\"sphinx-tabs-panel code-tab group-tab\" hidden=\"true\" id=\"panel-0-QyM=\" name=\"QyM=\" role=\"tabpanel\" tabindex=\"0\"><div class=\"highlight-csharp notranslate\"><div class=\"highlight\"><pre><span></span><span class=\"na\">[Signal]</span>\n<span class=\"k\">delegate</span><span class=\"w\"> </span><span class=\"k\">void</span><span class=\"w\"> </span><span class=\"nf\">AttackedEventHandler</span><span class=\"p\">();</span>\n\n<span class=\"c1\">// Additional arguments may be declared.</span>\n<span class=\"c1\">// These arguments must be passed when the signal is emitted.</span>\n<span class=\"na\">[Signal]</span>\n<span class=\"k\">delegate</span><span class=\"w\"> </span><span class=\"k\">void</span><span class=\"w\"> </span><span class=\"nf\">ItemDroppedEventHandler</span><span class=\"p\">(</span><span class=\"kt\">string</span><span class=\"w\"> </span><span class=\"n\">itemName</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"kt\">int</span><span class=\"w\"> </span><span class=\"n\">amount</span><span class=\"p\">);</span>\n</pre></div>\n</div>\n</div></div>\n"
            },
            "class_string": {
                "url": "https://docs.godotengine.org/en/4.1/classes/class_string.html",
                "title": "String",
                "blurb": "<p>A built-in type for strings.</p>",
                "description": "\n\n<p>This is the built-in string Variant type (and the one used by GDScript). Strings may contain any number of Unicode characters, and expose methods useful for manipulating and generating strings. Strings are reference-counted and use a copy-on-write approach (every modification to a string returns a new <strong>String</strong>), so passing them around is cheap in resources.</p>\n<p>Some string methods have corresponding variations. Variations suffixed with <code class=\"docutils literal notranslate\"><span class=\"pre\">n</span></code> (<a class=\"reference internal\" href=\"#class-string-method-countn\"><span class=\"std std-ref\">countn</span></a>, <a class=\"reference internal\" href=\"#class-string-method-findn\"><span class=\"std std-ref\">findn</span></a>, <a class=\"reference internal\" href=\"#class-string-method-replacen\"><span class=\"std std-ref\">replacen</span></a>, etc.) are <strong>case-insensitive</strong> (they make no distinction between uppercase and lowercase letters). Method variations prefixed with <code class=\"docutils literal notranslate\"><span class=\"pre\">r</span></code> (<a class=\"reference internal\" href=\"#class-string-method-rfind\"><span class=\"std std-ref\">rfind</span></a>, <a class=\"reference internal\" href=\"#class-string-method-rsplit\"><span class=\"std std-ref\">rsplit</span></a>, etc.) are reversed, and start from the end of the string, instead of the beginning.</p>\n<p><strong>Note:</strong> In a boolean context, a string will evaluate to <code class=\"docutils literal notranslate\"><span class=\"pre\">false</span></code> if it is empty (<code class=\"docutils literal notranslate\"><span class=\"pre\">\"\"</span></code>). Otherwise, a string will always evaluate to <code class=\"docutils literal notranslate\"><span class=\"pre\">true</span></code>. The <code class=\"docutils literal notranslate\"><span class=\"pre\">not</span></code> operator cannot be used. Instead, <a class=\"reference internal\" href=\"#class-string-method-is-empty\"><span class=\"std std-ref\">is_empty</span></a> should be used to check for empty strings.</p>\n"
            },
            "class_stringname": {
                "url": "https://docs.godotengine.org/en/4.1/classes/class_stringname.html",
                "title": "StringName",
                "blurb": "<p>A built-in type for unique strings.</p>",
                "description": "\n\n<p><strong>StringName</strong>s are immutable strings designed for general-purpose representation of unique names (also called \"string interning\"). Two <strong>StringName</strong>s with the same value are the same object. Comparing them is extremely fast compared to regular <a class=\"reference internal\" href=\"class_string.html#class-string\"><span class=\"std std-ref\">String</span></a>s.</p>\n<p>You will usually just pass a <a class=\"reference internal\" href=\"class_string.html#class-string\"><span class=\"std std-ref\">String</span></a> to methods expecting a <strong>StringName</strong> and it will be automatically converted, but you may occasionally want to construct a <strong>StringName</strong> ahead of time with the <strong>StringName</strong> constructor or, in GDScript, the literal syntax <code class=\"docutils literal notranslate\"><span class=\"pre\">&amp;\"example\"</span></code>.</p>\n<p>See also <a class=\"reference internal\" href=\"class_nodepath.html#class-nodepath\"><span class=\"std std-ref\">NodePath</span></a>, which is a similar concept specifically designed to store pre-parsed scene tree paths.</p>\n<p>All of <a class=\"reference internal\" href=\"class_string.html#class-string\"><span class=\"std std-ref\">String</span></a>'s methods are available in this class too. They convert the <strong>StringName</strong> into a string, and they also return a string. This is highly inefficient and should only be used if the string is desired.</p>\n<p><strong>Note:</strong> In a boolean context, a <strong>StringName</strong> will evaluate to <code class=\"docutils literal notranslate\"><span class=\"pre\">false</span></code> if it is empty (<code class=\"docutils literal notranslate\"><span class=\"pre\">StringName(\"\")</span></code>). Otherwise, a <strong>StringName</strong> will always evaluate to <code class=\"docutils literal notranslate\"><span class=\"pre\">true</span></code>. The <code class=\"docutils literal notranslate\"><span class=\"pre\">not</span></code> operator cannot be used. Instead, <a class=\"reference internal\" href=\"#class-stringname-method-is-empty\"><span class=\"std std-ref\">is_empty</span></a> should be used to check for empty <strong>StringName</strong>s.</p>\n"
            },
            "class_transform2d": {
                "url": "https://docs.godotengine.org/en/4.1/classes/class_transform2d.html",
                "title": "Transform2D",
                "blurb": "<p>A 2×3 matrix representing a 2D transformation.</p>",
                "description": "\n\n<p>A 2×3 matrix (2 rows, 3 columns) used for 2D linear transformations. It can represent transformations such as translation, rotation, and scaling. It consists of three <a class=\"reference internal\" href=\"class_vector2.html#class-vector2\"><span class=\"std std-ref\">Vector2</span></a> values: <a class=\"reference internal\" href=\"#class-transform2d-property-x\"><span class=\"std std-ref\">x</span></a>, <a class=\"reference internal\" href=\"#class-transform2d-property-y\"><span class=\"std std-ref\">y</span></a>, and the <a class=\"reference internal\" href=\"#class-transform2d-property-origin\"><span class=\"std std-ref\">origin</span></a>.</p>\n<p>For more information, read the \"Matrices and transforms\" documentation article.</p>\n"
            },
            "class_transform3d": {
                "url": "https://docs.godotengine.org/en/4.1/classes/class_transform3d.html",
                "title": "Transform3D",
                "blurb": "<p>A 3×4 matrix representing a 3D transformation.</p>",
                "description": "\n\n<p>A 3×4 matrix (3 rows, 4 columns) used for 3D linear transformations. It can represent transformations such as translation, rotation, and scaling. It consists of a <a class=\"reference internal\" href=\"#class-transform3d-property-basis\"><span class=\"std std-ref\">basis</span></a> (first 3 columns) and a <a class=\"reference internal\" href=\"class_vector3.html#class-vector3\"><span class=\"std std-ref\">Vector3</span></a> for the <a class=\"reference internal\" href=\"#class-transform3d-property-origin\"><span class=\"std std-ref\">origin</span></a> (last column).</p>\n<p>For more information, read the \"Matrices and transforms\" documentation article.</p>\n"
            },
            "class_vector2": {
                "url": "https://docs.godotengine.org/en/4.1/classes/class_vector2.html",
                "title": "Vector2",
                "blurb": "<p>A 2D vector using floating point coordinates.</p>",
                "description": "\n\n<p>A 2-element structure that can be used to represent 2D coordinates or any other pair of numeric values.</p>\n<p>It uses floating-point coordinates. By default, these floating-point values use 32-bit precision, unlike <a class=\"reference internal\" href=\"class_float.html#class-float\"><span class=\"std std-ref\">float</span></a> which is always 64-bit. If double precision is needed, compile the engine with the option <code class=\"docutils literal notranslate\"><span class=\"pre\">precision=double</span></code>.</p>\n<p>See <a class=\"reference internal\" href=\"class_vector2i.html#class-vector2i\"><span class=\"std std-ref\">Vector2i</span></a> for its integer counterpart.</p>\n<p><strong>Note:</strong> In a boolean context, a Vector2 will evaluate to <code class=\"docutils literal notranslate\"><span class=\"pre\">false</span></code> if it's equal to <code class=\"docutils literal notranslate\"><span class=\"pre\">Vector2(0,</span> <span class=\"pre\">0)</span></code>. Otherwise, a Vector2 will always evaluate to <code class=\"docutils literal notranslate\"><span class=\"pre\">true</span></code>.</p>\n"
            },
            "class_vector2i": {
                "url": "https://docs.godotengine.org/en/4.1/classes/class_vector2i.html",
                "title": "Vector2i",
                "blurb": "<p>A 2D vector using integer coordinates.</p>",
                "description": "\n\n<p>A 2-element structure that can be used to represent 2D grid coordinates or any other pair of integers.</p>\n<p>It uses integer coordinates and is therefore preferable to <a class=\"reference internal\" href=\"class_vector2.html#class-vector2\"><span class=\"std std-ref\">Vector2</span></a> when exact precision is required. Note that the values are limited to 32 bits, and unlike <a class=\"reference internal\" href=\"class_vector2.html#class-vector2\"><span class=\"std std-ref\">Vector2</span></a> this cannot be configured with an engine build option. Use <a class=\"reference internal\" href=\"class_int.html#class-int\"><span class=\"std std-ref\">int</span></a> or <a class=\"reference internal\" href=\"class_packedint64array.html#class-packedint64array\"><span class=\"std std-ref\">PackedInt64Array</span></a> if 64-bit values are needed.</p>\n<p><strong>Note:</strong> In a boolean context, a Vector2i will evaluate to <code class=\"docutils literal notranslate\"><span class=\"pre\">false</span></code> if it's equal to <code class=\"docutils literal notranslate\"><span class=\"pre\">Vector2i(0,</span> <span class=\"pre\">0)</span></code>. Otherwise, a Vector2i will always evaluate to <code class=\"docutils literal notranslate\"><span class=\"pre\">true</span></code>.</p>\n"
            },
            "class_vector3": {
                "url": "https://docs.godotengine.org/en/4.1/classes/class_vector3.html",
                "title": "Vector3",
                "blurb": "<p>A 3D vector using floating point coordinates.</p>",
                "description": "\n\n<p>A 3-element structure that can be used to represent 3D coordinates or any other triplet of numeric values.</p>\n<p>It uses floating-point coordinates. By default, these floating-point values use 32-bit precision, unlike <a class=\"reference internal\" href=\"class_float.html#class-float\"><span class=\"std std-ref\">float</span></a> which is always 64-bit. If double precision is needed, compile the engine with the option <code class=\"docutils literal notranslate\"><span class=\"pre\">precision=double</span></code>.</p>\n<p>See <a class=\"reference internal\" href=\"class_vector3i.html#class-vector3i\"><span class=\"std std-ref\">Vector3i</span></a> for its integer counterpart.</p>\n<p><strong>Note:</strong> In a boolean context, a Vector3 will evaluate to <code class=\"docutils literal notranslate\"><span class=\"pre\">false</span></code> if it's equal to <code class=\"docutils literal notranslate\"><span class=\"pre\">Vector3(0,</span> <span class=\"pre\">0,</span> <span class=\"pre\">0)</span></code>. Otherwise, a Vector3 will always evaluate to <code class=\"docutils literal notranslate\"><span class=\"pre\">true</span></code>.</p>\n"
            },
            "class_vector3i": {
                "url": "https://docs.godotengine.org/en/4.1/classes/class_vector3i.html",
                "title": "Vector3i",
                "blurb": "<p>A 3D vector using integer coordinates.</p>",
                "description": "\n\n<p>A 3-element structure that can be used to represent 3D grid coordinates or any other triplet of integers.</p>\n<p>It uses integer coordinates and is therefore preferable to <a class=\"reference internal\" href=\"class_vector3.html#class-vector3\"><span class=\"std std-ref\">Vector3</span></a> when exact precision is required. Note that the values are limited to 32 bits, and unlike <a class=\"reference internal\" href=\"class_vector3.html#class-vector3\"><span class=\"std std-ref\">Vector3</span></a> this cannot be configured with an engine build option. Use <a class=\"reference internal\" href=\"class_int.html#class-int\"><span class=\"std std-ref\">int</span></a> or <a class=\"reference internal\" href=\"class_packedint64array.html#class-packedint64array\"><span class=\"std std-ref\">PackedInt64Array</span></a> if 64-bit values are needed.</p>\n<p><strong>Note:</strong> In a boolean context, a Vector3i will evaluate to <code class=\"docutils literal notranslate\"><span class=\"pre\">false</span></code> if it's equal to <code class=\"docutils literal notranslate\"><span class=\"pre\">Vector3i(0,</span> <span class=\"pre\">0,</span> <span class=\"pre\">0)</span></code>. Otherwise, a Vector3i will always evaluate to <code class=\"docutils literal notranslate\"><span class=\"pre\">true</span></code>.</p>\n"
            },
            "class_vector4": {
                "url": "https://docs.godotengine.org/en/4.1/classes/class_vector4.html",
                "title": "Vector4",
                "blurb": "<p>A 4D vector using floating point coordinates.</p>",
                "description": "\n\n<p>A 4-element structure that can be used to represent 4D coordinates or any other quadruplet of numeric values.</p>\n<p>It uses floating-point coordinates. By default, these floating-point values use 32-bit precision, unlike <a class=\"reference internal\" href=\"class_float.html#class-float\"><span class=\"std std-ref\">float</span></a> which is always 64-bit. If double precision is needed, compile the engine with the option <code class=\"docutils literal notranslate\"><span class=\"pre\">precision=double</span></code>.</p>\n<p>See <a class=\"reference internal\" href=\"class_vector4i.html#class-vector4i\"><span class=\"std std-ref\">Vector4i</span></a> for its integer counterpart.</p>\n<p><strong>Note:</strong> In a boolean context, a Vector4 will evaluate to <code class=\"docutils literal notranslate\"><span class=\"pre\">false</span></code> if it's equal to <code class=\"docutils literal notranslate\"><span class=\"pre\">Vector4(0,</span> <span class=\"pre\">0,</span> <span class=\"pre\">0,</span> <span class=\"pre\">0)</span></code>. Otherwise, a Vector4 will always evaluate to <code class=\"docutils literal notranslate\"><span class=\"pre\">true</span></code>.</p>\n"
            },
            "class_vector4i": {
                "url": "https://docs.godotengine.org/en/4.1/classes/class_vector4i.html",
                "title": "Vector4i",
                "blurb": "<p>A 4D vector using integer coordinates.</p>",
                "description": "\n\n<p>A 4-element structure that can be used to represent 4D grid coordinates or any other quadruplet of integers.</p>\n<p>It uses integer coordinates and is therefore preferable to <a class=\"reference internal\" href=\"class_vector4.html#class-vector4\"><span class=\"std std-ref\">Vector4</span></a> when exact precision is required. Note that the values are limited to 32 bits, and unlike <a class=\"reference internal\" href=\"class_vector4.html#class-vector4\"><span class=\"std std-ref\">Vector4</span></a> this cannot be configured with an engine build option. Use <a class=\"reference internal\" href=\"class_int.html#class-int\"><span class=\"std std-ref\">int</span></a> or <a class=\"reference internal\" href=\"class_packedint64array.html#class-packedint64array\"><span class=\"std std-ref\">PackedInt64Array</span></a> if 64-bit values are needed.</p>\n<p><strong>Note:</strong> In a boolean context, a Vector4i will evaluate to <code class=\"docutils literal notranslate\"><span class=\"pre\">false</span></code> if it's equal to <code class=\"docutils literal notranslate\"><span class=\"pre\">Vector4i(0,</span> <span class=\"pre\">0,</span> <span class=\"pre\">0,</span> <span class=\"pre\">0)</span></code>. Otherwise, a Vector3i will always evaluate to <code class=\"docutils literal notranslate\"><span class=\"pre\">true</span></code>.</p>\n"
            }
        }
    }
}